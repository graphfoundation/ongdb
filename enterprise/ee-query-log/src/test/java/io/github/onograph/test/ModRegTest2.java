package io.github.onograph.test;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class ModRegTest2 {

  public static boolean debug = false;

  @Test
  public void test1001() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1001");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.strForEx(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.sucsForEx(executingQuery21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.strForEx(executingQuery23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService0.faleForExTh(executingQuery25, throwable26);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1002() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1002");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.strForEx(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.faleForExTh(executingQuery21, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService0.faleForExTh(executingQuery24, "");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1003() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1003");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.faleForExTh(executingQuery11, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.strForEx(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1004() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1004");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService8.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService8.sucsForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery22);
    java.lang.String str25 = queryLoggingServiceExtensionFactory3.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService26 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService26.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService26.faleForExTh(executingQuery29, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    java.lang.Throwable throwable33 = null;
    queryLoggingService26.faleForExTh(executingQuery32, throwable33);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction35 = null;
    queryLoggingService26.strForEx(kernelTransaction35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService26.strForEx(executingQuery37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService26.sucsForEx(executingQuery39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    queryLoggingService26.sucsForEx(executingQuery41);
    boolean boolean43 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery41);
    java.lang.String str44 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str45 = queryLoggingServiceExtensionFactory3.toString();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertEquals(
        "'" + str25 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str25, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService26);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertEquals(
        "'" + str44 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str44, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str45 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str45, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1005() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1005");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15, throwable16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.comForKe(kernelTransaction21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.faleForExTh(executingQuery23, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    queryLoggingService0.strForEx(kernelTransaction26);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1006() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1006");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.sucsForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.sucsForEx(executingQuery17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.faleForExTh(executingQuery19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22);
    java.lang.Class<?> wildcardClass24 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass24);
  }

  @Test
  public void test1007() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1007");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18);
    java.lang.Class<?> wildcardClass20 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass20);
  }

  @Test
  public void test1008() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1008");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.faleForExTh(executingQuery13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.comForKe(kernelTransaction19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1009() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1009");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1010() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1010");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.strForEx(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.sucsForEx(executingQuery21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.sucsForEx(executingQuery23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService0.strForEx(kernelTransaction25);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1011() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1011");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 1);
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService4 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    queryLoggingService4.strForEx(executingQuery5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService4.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService4.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService4.faleForExTh(executingQuery13, "hi!");
    boolean boolean16 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) "hi!");
    java.lang.String str17 = queryLoggingServiceExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext18 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies19 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle20 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext18, queryLoggingServiceDependencies19);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str3, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService4);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "query-logging" + "'", str17,
        "query-logging");
  }

  @Test
  public void test1012() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1012");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.comForKe(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.strForEx(kernelTransaction21);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1013() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1013");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.faleForExTh(executingQuery12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.comForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.comForKe(kernelTransaction23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService0.strForEx(kernelTransaction25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService0.rolcForKe(kernelTransaction27);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1014() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1014");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService0.strForEx(kernelTransaction8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.sucsForEx(executingQuery10);
    java.lang.Class<?> wildcardClass12 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass12);
  }

  @Test
  public void test1015() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1015");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService2 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService2.strForEx(executingQuery3);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    java.lang.Throwable throwable6 = null;
    queryLoggingService2.faleForExTh(executingQuery5, throwable6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService2.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService2.sucsForEx(executingQuery10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService2.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService2.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService2.strForEx(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService2.strForEx(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService2.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService2.rolcForKe(kernelTransaction24, throwable25);
    boolean boolean27 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction24);
    java.lang.Object obj28 = null;
    boolean boolean29 = queryLoggingServiceExtensionFactory0.equals(obj28);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext30 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies31 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle32 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext30, queryLoggingServiceDependencies31);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService2);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
  }

  @Test
  public void test1016() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1016");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str11 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str12 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str13 = queryLoggingServiceExtensionFactory3.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext14 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies15 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle16 = queryLoggingServiceExtensionFactory3.newInstance(
          extensionContext14, queryLoggingServiceDependencies15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "query-logging" + "'", str10,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "query-logging" + "'", str11,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "query-logging" + "'", str12,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "query-logging" + "'", str13,
        "query-logging");
  }

  @Test
  public void test1017() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1017");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService2 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService2.rolcForKe(kernelTransaction3, throwable4);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable4);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService10 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService10.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService10.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService10.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService10.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService10.strForEx(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService10.rolcForKe(kernelTransaction22, throwable23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService10.rolcForKe(kernelTransaction25, throwable26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService10.rolcForKe(kernelTransaction28);
    boolean boolean30 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction28);
    java.lang.Class<?> wildcardClass31 = queryLoggingServiceExtensionFactory0.getClass();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService2);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService10);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    org.junit.Assert.assertNotNull(wildcardClass31);
  }

  @Test
  public void test1018() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1018");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.strForEx(executingQuery17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService0.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService0.strForEx(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService0.faleForExTh(executingQuery29, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService0.faleForExTh(executingQuery32, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService0.faleForExTh(executingQuery35,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1019() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1019");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService2 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService2.rolcForKe(kernelTransaction3, throwable4);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable4);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl9 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction10 = null;
    org.neo4j.configuration.Config config12 = null;
    java.nio.file.Path path13 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl9.init(fileSystemAbstraction10, "hi!", config12,
        path13);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction15 = null;
    org.neo4j.configuration.Config config17 = null;
    java.nio.file.Path path18 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl9.init(fileSystemAbstraction15,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config17, path18);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.configuration.Config config22 = null;
    java.nio.file.Path path23 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl9.init(fileSystemAbstraction20,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config22, path23);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction25 = null;
    org.neo4j.configuration.Config config27 = null;
    java.nio.file.Path path28 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl9.init(fileSystemAbstraction25, "query-logging",
        config27, path28);
    boolean boolean30 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) fileSystemAbstraction25);
    boolean boolean32 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0.0f);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService33 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    queryLoggingService33.strForEx(executingQuery34);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService33.faleForExTh(executingQuery36, throwable37);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction39 = null;
    java.lang.Throwable throwable40 = null;
    queryLoggingService33.rolcForKe(kernelTransaction39, throwable40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    queryLoggingService33.faleForExTh(executingQuery42, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery45 = null;
    queryLoggingService33.sucsForEx(executingQuery45);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    java.lang.Throwable throwable48 = null;
    queryLoggingService33.faleForExTh(executingQuery47, throwable48);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery50 = null;
    queryLoggingService33.strForEx(executingQuery50);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction52 = null;
    java.lang.Throwable throwable53 = null;
    queryLoggingService33.rolcForKe(kernelTransaction52, throwable53);
    boolean boolean55 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable53);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService56 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction57 = null;
    java.lang.Throwable throwable58 = null;
    queryLoggingService56.rolcForKe(kernelTransaction57, throwable58);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction60 = null;
    queryLoggingService56.comForKe(kernelTransaction60);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery62 = null;
    java.lang.Throwable throwable63 = null;
    queryLoggingService56.faleForExTh(executingQuery62, throwable63);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery65 = null;
    queryLoggingService56.sucsForEx(executingQuery65);
    boolean boolean67 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery65);
    java.lang.String str68 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService69 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction70 = null;
    queryLoggingService69.rolcForKe(kernelTransaction70);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery72 = null;
    queryLoggingService69.faleForExTh(executingQuery72, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery75 = null;
    java.lang.Throwable throwable76 = null;
    queryLoggingService69.faleForExTh(executingQuery75, throwable76);
    boolean boolean78 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService69);
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService2);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertNotNull(queryLoggingService33);
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    org.junit.Assert.assertNotNull(queryLoggingService56);
    org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    org.junit.Assert.assertEquals(
        "'" + str68 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str68, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService69);
    org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
  }

  @Test
  public void test1020() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1020");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.Object obj10 = null;
    boolean boolean11 = queryLoggingServiceExtensionFactory3.equals(obj10);
    java.lang.String str12 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str13 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str14 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str15 = queryLoggingServiceExtensionFactory3.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext16 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies17 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle18 = queryLoggingServiceExtensionFactory3.newInstance(
          extensionContext16, queryLoggingServiceDependencies17);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertEquals(
        "'" + str12 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str12, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "query-logging" + "'", str13,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str14 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str14, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str15 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str15, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1021() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1021");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str10 = queryLoggingServiceExtensionFactory3.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext11 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies12 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle13 = queryLoggingServiceExtensionFactory3.newInstance(
          extensionContext11, queryLoggingServiceDependencies12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str9, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str10, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1022() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1022");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.strForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.strForEx(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.faleForExTh(executingQuery20, throwable21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.comForKe(kernelTransaction23);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1023() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1023");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService3 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService3.rolcForKe(kernelTransaction4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService3.rolcForKe(kernelTransaction6, throwable7);
    boolean boolean9 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService3);
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str11 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str12 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str13 = queryLoggingServiceExtensionFactory0.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext14 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies15 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle16 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext14, queryLoggingServiceDependencies15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(queryLoggingService3);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str10, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "query-logging" + "'", str11,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "query-logging" + "'", str12,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str13 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str13, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1024() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1024");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "hi!", config13,
        path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "", config23,
        path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "hi!", config28,
        path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config33, path34);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction36 = null;
    org.neo4j.configuration.Config config38 = null;
    java.nio.file.Path path39 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction36, "", config38,
        path39);
  }

  @Test
  public void test1025() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1025");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService5.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService5.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService5.faleForExTh(executingQuery17,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    boolean boolean20 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    java.lang.String str21 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str22 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str23 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertEquals(
        "'" + str21 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str21, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str22 + "' != '" + "query-logging" + "'", str22,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "query-logging" + "'", str23,
        "query-logging");
  }

  @Test
  public void test1026() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1026");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.comForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1027() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1027");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.rolcForKe(kernelTransaction4, throwable5);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.rolcForKe(kernelTransaction7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.comForKe(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1028() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1028");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16, throwable17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.strForEx(executingQuery19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.faleForExTh(executingQuery23,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService0.faleForExTh(executingQuery26, "hi!");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1029() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1029");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6, "query-logging",
        config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "query-logging",
        config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "query-logging",
        config18, path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "", config23,
        path24);
  }

  @Test
  public void test1030() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1030");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.comForKe(kernelTransaction10);
    java.lang.Class<?> wildcardClass12 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass12);
  }

  @Test
  public void test1031() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1031");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.strForEx(kernelTransaction21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.faleForExTh(executingQuery23, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    java.lang.Throwable throwable27 = null;
    queryLoggingService0.rolcForKe(kernelTransaction26, throwable27);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1032() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1032");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService10 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService10.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService10.comForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService10.faleForExTh(executingQuery16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService10.comForKe(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService10.strForEx(executingQuery21);
    boolean boolean23 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService10);
    java.lang.String str24 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService25 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    java.lang.Throwable throwable27 = null;
    queryLoggingService25.rolcForKe(kernelTransaction26, throwable27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService25.faleForExTh(executingQuery29, throwable30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    java.lang.Throwable throwable33 = null;
    queryLoggingService25.faleForExTh(executingQuery32, throwable33);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction35 = null;
    java.lang.Throwable throwable36 = null;
    queryLoggingService25.rolcForKe(kernelTransaction35, throwable36);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction38 = null;
    queryLoggingService25.strForEx(kernelTransaction38);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery40 = null;
    queryLoggingService25.faleForExTh(executingQuery40, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService25.strForEx(executingQuery43);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery45 = null;
    queryLoggingService25.strForEx(executingQuery45);
    boolean boolean47 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery45);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService10);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "query-logging" + "'", str24,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService25);
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
  }

  @Test
  public void test1033() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1033");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1034() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1034");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1035() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1035");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22, throwable23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService0.strForEx(kernelTransaction25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    java.lang.Throwable throwable28 = null;
    queryLoggingService0.rolcForKe(kernelTransaction27, throwable28);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1036() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1036");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str7 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext10 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies11 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle12 = queryLoggingServiceExtensionFactory3.newInstance(
          extensionContext10, queryLoggingServiceDependencies11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str6, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str9, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1037() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1037");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj9 = new java.lang.Object();
    java.lang.Class<?> wildcardClass10 = obj9.getClass();
    boolean boolean11 = queryLoggingServiceExtensionFactory0.equals(obj9);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory12 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean14 = queryLoggingServiceExtensionFactory12.equals((java.lang.Object) (short) 1);
    java.lang.String str15 = queryLoggingServiceExtensionFactory12.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService16 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService16.strForEx(executingQuery17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService16.faleForExTh(executingQuery19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService16.rolcForKe(kernelTransaction22, throwable23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService16.comForKe(kernelTransaction25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService16.strForEx(executingQuery27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService16.strForEx(executingQuery29);
    boolean boolean31 = queryLoggingServiceExtensionFactory12.equals(
        (java.lang.Object) executingQuery29);
    boolean boolean32 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery29);
    java.lang.String str33 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str34 = queryLoggingServiceExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext35 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies36 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle37 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext35, queryLoggingServiceDependencies36);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "query-logging" + "'", str15,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService16);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertEquals(
        "'" + str33 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str33, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str34 + "' != '" + "query-logging" + "'", str34,
        "query-logging");
  }

  @Test
  public void test1038() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1038");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "", config23,
        path24);
    java.lang.Class<?> wildcardClass26 = diagnosticsOfflineReportProviderQueryLoggingImpl0.getClass();
    org.junit.Assert.assertNotNull(wildcardClass26);
  }

  @Test
  public void test1039() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1039");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.sucsForEx(executingQuery22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService0.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService0.faleForExTh(executingQuery27, "");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1040() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1040");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 1);
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService4 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    queryLoggingService4.strForEx(executingQuery5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService4.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService4.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService4.faleForExTh(executingQuery13, "hi!");
    boolean boolean16 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) "hi!");
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory17 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory18 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean20 = queryLoggingServiceExtensionFactory18.equals((java.lang.Object) (-1L));
    boolean boolean21 = queryLoggingServiceExtensionFactory17.equals((java.lang.Object) boolean20);
    java.lang.Object obj22 = new java.lang.Object();
    boolean boolean23 = queryLoggingServiceExtensionFactory17.equals(obj22);
    java.lang.String str24 = queryLoggingServiceExtensionFactory17.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService25 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService25.strForEx(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService25.faleForExTh(executingQuery28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    java.lang.Throwable throwable32 = null;
    queryLoggingService25.rolcForKe(kernelTransaction31, throwable32);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction34 = null;
    queryLoggingService25.comForKe(kernelTransaction34);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery36 = null;
    queryLoggingService25.strForEx(executingQuery36);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction38 = null;
    java.lang.Throwable throwable39 = null;
    queryLoggingService25.rolcForKe(kernelTransaction38, throwable39);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction41 = null;
    queryLoggingService25.comForKe(kernelTransaction41);
    boolean boolean43 = queryLoggingServiceExtensionFactory17.equals(
        (java.lang.Object) queryLoggingService25);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService44 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    java.lang.Throwable throwable46 = null;
    queryLoggingService44.rolcForKe(kernelTransaction45, throwable46);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery48 = null;
    queryLoggingService44.sucsForEx(executingQuery48);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction50 = null;
    queryLoggingService44.comForKe(kernelTransaction50);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery52 = null;
    queryLoggingService44.faleForExTh(executingQuery52, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    queryLoggingService44.strForEx(kernelTransaction55);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction57 = null;
    java.lang.Throwable throwable58 = null;
    queryLoggingService44.rolcForKe(kernelTransaction57, throwable58);
    boolean boolean60 = queryLoggingServiceExtensionFactory17.equals(
        (java.lang.Object) kernelTransaction57);
    java.lang.String str61 = queryLoggingServiceExtensionFactory17.getName();
    boolean boolean62 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory17);
    java.lang.String str63 = queryLoggingServiceExtensionFactory17.toString();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str3, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService4);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "query-logging" + "'", str24,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService25);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertNotNull(queryLoggingService44);
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    org.junit.Assert.assertEquals("'" + str61 + "' != '" + "query-logging" + "'", str61,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    org.junit.Assert.assertEquals(
        "'" + str63 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str63, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1041() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1041");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.comForKe(kernelTransaction20);
    java.lang.Class<?> wildcardClass22 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass22);
  }

  @Test
  public void test1042() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1042");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str2 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService3 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService3.faleForExTh(executingQuery4,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    queryLoggingService3.faleForExTh(executingQuery7,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService3.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService3.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService3.faleForExTh(executingQuery14,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory18 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean20 = queryLoggingServiceExtensionFactory18.equals((java.lang.Object) (short) 1);
    java.lang.String str21 = queryLoggingServiceExtensionFactory18.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService22 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService22.strForEx(executingQuery23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService22.faleForExTh(executingQuery25, throwable26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService22.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService22.comForKe(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService22.strForEx(executingQuery33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService22.strForEx(executingQuery35);
    boolean boolean37 = queryLoggingServiceExtensionFactory18.equals(
        (java.lang.Object) executingQuery35);
    java.lang.Class<?> wildcardClass38 = queryLoggingServiceExtensionFactory18.getClass();
    boolean boolean39 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) wildcardClass38);
    java.lang.String str40 = queryLoggingServiceExtensionFactory0.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext41 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies42 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle43 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext41, queryLoggingServiceDependencies42);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str2, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService3);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertEquals("'" + str21 + "' != '" + "query-logging" + "'", str21,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService22);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertNotNull(wildcardClass38);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertEquals(
        "'" + str40 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str40, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1043() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1043");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    boolean boolean8 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str10, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1044() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1044");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction21);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1045() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1045");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str7 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext10 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies11 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle12 = queryLoggingServiceExtensionFactory3.newInstance(
          extensionContext10, queryLoggingServiceDependencies11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str6, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
  }

  @Test
  public void test1046() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1046");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.sucsForEx(executingQuery22);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1047() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1047");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService7 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService7.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService7.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService7.rolcForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService7.sucsForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService7.faleForExTh(executingQuery17, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService7.strForEx(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService7.rolcForKe(kernelTransaction22);
    boolean boolean24 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService7);
    java.lang.String str25 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str26 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str27 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str28 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl29 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction30 = null;
    org.neo4j.configuration.Config config32 = null;
    java.nio.file.Path path33 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl29.init(fileSystemAbstraction30, "hi!",
        config32, path33);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction35 = null;
    org.neo4j.configuration.Config config37 = null;
    java.nio.file.Path path38 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl29.init(fileSystemAbstraction35,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config37, path38);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction40 = null;
    org.neo4j.configuration.Config config42 = null;
    java.nio.file.Path path43 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl29.init(fileSystemAbstraction40, "", config42,
        path43);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction45 = null;
    org.neo4j.configuration.Config config47 = null;
    java.nio.file.Path path48 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl29.init(fileSystemAbstraction45, "", config47,
        path48);
    boolean boolean50 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) fileSystemAbstraction45);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService7);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertEquals("'" + str25 + "' != '" + "query-logging" + "'", str25,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str26 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str26, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "query-logging" + "'", str27,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str28 + "' != '" + "query-logging" + "'", str28,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
  }

  @Test
  public void test1048() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1048");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.strForEx(executingQuery17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService0.faleForExTh(executingQuery22, throwable23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService0.strForEx(executingQuery25);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1049() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1049");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.strForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.strForEx(kernelTransaction17);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1050() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1050");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.strForEx(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService0.faleForExTh(executingQuery22, throwable23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService0.comForKe(kernelTransaction25);
    java.lang.Class<?> wildcardClass27 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass27);
  }

  @Test
  public void test1051() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1051");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1.0d));
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str4 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str3, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "query-logging" + "'", str4,
        "query-logging");
  }

  @Test
  public void test1052() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1052");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory8 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory9 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean11 = queryLoggingServiceExtensionFactory9.equals((java.lang.Object) (-1L));
    boolean boolean12 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) boolean11);
    java.lang.String str13 = queryLoggingServiceExtensionFactory8.toString();
    java.lang.String str14 = queryLoggingServiceExtensionFactory8.getName();
    boolean boolean16 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) 0L);
    java.lang.String str17 = queryLoggingServiceExtensionFactory8.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService18 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService18.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService18.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService18.rolcForKe(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService18.sucsForEx(executingQuery26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService18.strForEx(kernelTransaction28);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    java.lang.Throwable throwable31 = null;
    queryLoggingService18.rolcForKe(kernelTransaction30, throwable31);
    boolean boolean33 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) throwable31);
    boolean boolean34 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) boolean33);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext35 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies36 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle37 = queryLoggingServiceExtensionFactory3.newInstance(
          extensionContext35, queryLoggingServiceDependencies36);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    org.junit.Assert.assertEquals(
        "'" + str13 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str13, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "query-logging" + "'", str14,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    org.junit.Assert.assertEquals(
        "'" + str17 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str17, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService18);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
  }

  @Test
  public void test1053() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1053");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService8.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService8.sucsForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery22);
    java.lang.String str25 = queryLoggingServiceExtensionFactory3.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService26 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService26.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService26.faleForExTh(executingQuery29, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    java.lang.Throwable throwable33 = null;
    queryLoggingService26.faleForExTh(executingQuery32, throwable33);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction35 = null;
    queryLoggingService26.strForEx(kernelTransaction35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService26.strForEx(executingQuery37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService26.sucsForEx(executingQuery39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    queryLoggingService26.sucsForEx(executingQuery41);
    boolean boolean43 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery41);
    java.lang.String str44 = queryLoggingServiceExtensionFactory3.getName();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertEquals(
        "'" + str25 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str25, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService26);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertEquals("'" + str44 + "' != '" + "query-logging" + "'", str44,
        "query-logging");
  }

  @Test
  public void test1054() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1054");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1055() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1055");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.sucsForEx(executingQuery22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService0.strForEx(executingQuery24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1056() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1056");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.faleForExTh(executingQuery23, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    queryLoggingService0.comForKe(kernelTransaction26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService0.strForEx(executingQuery28);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1057() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1057");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.sucsForEx(executingQuery11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.sucsForEx(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.sucsForEx(executingQuery21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23, throwable24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService0.sucsForEx(executingQuery26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService0.strForEx(kernelTransaction28);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1058() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1058");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1059() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1059");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService5.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService5.strForEx(executingQuery15);
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery15);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService18 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService18.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService18.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService18.faleForExTh(executingQuery24, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService18.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService18.faleForExTh(executingQuery29, throwable30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService18.sucsForEx(executingQuery32);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService18);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService35 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService35.rolcForKe(kernelTransaction36, throwable37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService35.sucsForEx(executingQuery39);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction41 = null;
    queryLoggingService35.comForKe(kernelTransaction41);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService35.faleForExTh(executingQuery43, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction46 = null;
    queryLoggingService35.strForEx(kernelTransaction46);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction48 = null;
    queryLoggingService35.comForKe(kernelTransaction48);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery50 = null;
    queryLoggingService35.strForEx(executingQuery50);
    boolean boolean52 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService35);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService53 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction54 = null;
    queryLoggingService53.rolcForKe(kernelTransaction54);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery56 = null;
    queryLoggingService53.faleForExTh(executingQuery56, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery59 = null;
    java.lang.Throwable throwable60 = null;
    queryLoggingService53.faleForExTh(executingQuery59, throwable60);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery62 = null;
    java.lang.Throwable throwable63 = null;
    queryLoggingService53.faleForExTh(executingQuery62, throwable63);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction65 = null;
    queryLoggingService53.strForEx(kernelTransaction65);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery67 = null;
    queryLoggingService53.faleForExTh(executingQuery67, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction70 = null;
    queryLoggingService53.rolcForKe(kernelTransaction70);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction72 = null;
    queryLoggingService53.rolcForKe(kernelTransaction72);
    boolean boolean74 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService53);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction75 = null;
    queryLoggingService53.rolcForKe(kernelTransaction75);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction77 = null;
    queryLoggingService53.rolcForKe(kernelTransaction77);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(queryLoggingService18);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertNotNull(queryLoggingService35);
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    org.junit.Assert.assertNotNull(queryLoggingService53);
    org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
  }

  @Test
  public void test1060() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1060");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.strForEx(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20, throwable21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1061() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1061");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.strForEx(executingQuery16);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1062() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1062");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext11 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies12 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle13 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext11, queryLoggingServiceDependencies12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str10, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1063() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1063");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.comForKe(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.comForKe(kernelTransaction23);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1064() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1064");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    java.lang.Class<?> wildcardClass18 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass18);
  }

  @Test
  public void test1065() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1065");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.faleForExTh(executingQuery17, "");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1066() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1066");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.strForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.sucsForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.faleForExTh(executingQuery17, throwable18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1067() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1067");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6, "query-logging",
        config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config18, path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "query-logging",
        config23, path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "query-logging",
        config28, path29);
    java.lang.Class<?> wildcardClass31 = diagnosticsOfflineReportProviderQueryLoggingImpl0.getClass();
    org.junit.Assert.assertNotNull(wildcardClass31);
  }

  @Test
  public void test1068() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1068");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService5.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService5.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService5.faleForExTh(executingQuery17,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    boolean boolean20 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService21 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService21.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService21.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService21.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService21.sucsForEx(executingQuery29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService21.strForEx(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService21.faleForExTh(executingQuery33,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService21.rolcForKe(kernelTransaction36, throwable37);
    boolean boolean39 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService21);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory40 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory41 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean43 = queryLoggingServiceExtensionFactory41.equals((java.lang.Object) (-1L));
    boolean boolean44 = queryLoggingServiceExtensionFactory40.equals((java.lang.Object) boolean43);
    boolean boolean46 = queryLoggingServiceExtensionFactory40.equals((java.lang.Object) 0L);
    java.lang.String str47 = queryLoggingServiceExtensionFactory40.toString();
    java.lang.String str48 = queryLoggingServiceExtensionFactory40.getName();
    boolean boolean49 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) str48);
    java.lang.String str50 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str51 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService52 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction53 = null;
    queryLoggingService52.rolcForKe(kernelTransaction53);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    java.lang.Throwable throwable56 = null;
    queryLoggingService52.rolcForKe(kernelTransaction55, throwable56);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction58 = null;
    queryLoggingService52.rolcForKe(kernelTransaction58);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery60 = null;
    queryLoggingService52.sucsForEx(executingQuery60);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction62 = null;
    queryLoggingService52.strForEx(kernelTransaction62);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery64 = null;
    queryLoggingService52.faleForExTh(executingQuery64,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery67 = null;
    queryLoggingService52.faleForExTh(executingQuery67, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction70 = null;
    queryLoggingService52.rolcForKe(kernelTransaction70);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction72 = null;
    queryLoggingService52.rolcForKe(kernelTransaction72);
    boolean boolean74 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService52);
    java.lang.String str75 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str76 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str77 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertNotNull(queryLoggingService21);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    org.junit.Assert.assertEquals(
        "'" + str47 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str47, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str48 + "' != '" + "query-logging" + "'", str48,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertEquals("'" + str50 + "' != '" + "query-logging" + "'", str50,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str51 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str51, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService52);
    org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    org.junit.Assert.assertEquals(
        "'" + str75 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str75, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str76 + "' != '" + "query-logging" + "'", str76,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str77 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str77, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1069() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1069");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.strForEx(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15, throwable16);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1070() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1070");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6, "hi!", config8,
        path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "hi!", config13,
        path14);
  }

  @Test
  public void test1071() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1071");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.faleForExTh(executingQuery16, throwable17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.faleForExTh(executingQuery19, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService0.faleForExTh(executingQuery24, "");
    java.lang.Class<?> wildcardClass27 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass27);
  }

  @Test
  public void test1072() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1072");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1.0d));
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService3 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService3.rolcForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService3.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService3.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService3.faleForExTh(executingQuery12, throwable13);
    boolean boolean15 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery12);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory16 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean18 = queryLoggingServiceExtensionFactory16.equals((java.lang.Object) (short) 1);
    java.lang.String str19 = queryLoggingServiceExtensionFactory16.getName();
    boolean boolean20 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory16);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService21 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService21.strForEx(executingQuery22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService21.faleForExTh(executingQuery24, throwable25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService21.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService21.sucsForEx(executingQuery29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryLoggingService21.strForEx(executingQuery31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService21.sucsForEx(executingQuery33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService21.sucsForEx(executingQuery35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService21.sucsForEx(executingQuery37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService21.strForEx(executingQuery39);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction41 = null;
    java.lang.Throwable throwable42 = null;
    queryLoggingService21.rolcForKe(kernelTransaction41, throwable42);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    java.lang.Throwable throwable45 = null;
    queryLoggingService21.rolcForKe(kernelTransaction44, throwable45);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction47 = null;
    java.lang.Throwable throwable48 = null;
    queryLoggingService21.rolcForKe(kernelTransaction47, throwable48);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction50 = null;
    queryLoggingService21.comForKe(kernelTransaction50);
    boolean boolean52 = queryLoggingServiceExtensionFactory16.equals(
        (java.lang.Object) queryLoggingService21);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(queryLoggingService3);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "query-logging" + "'", str19,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    org.junit.Assert.assertNotNull(queryLoggingService21);
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
  }

  @Test
  public void test1073() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1073");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService10 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService10.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService10.comForKe(kernelTransaction14);
    boolean boolean16 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService10.faleForExTh(executingQuery17,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService10.rolcForKe(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService10.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService10.sucsForEx(executingQuery24);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str9, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService10);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
  }

  @Test
  public void test1074() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1074");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.Object obj5 = new java.lang.Object();
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals(obj5);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService8.comForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService8.strForEx(executingQuery19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService8.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService8.comForKe(kernelTransaction24);
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService8);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory27 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean29 = queryLoggingServiceExtensionFactory27.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory30 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str31 = queryLoggingServiceExtensionFactory30.toString();
    boolean boolean32 = queryLoggingServiceExtensionFactory27.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory30);
    java.lang.String str33 = queryLoggingServiceExtensionFactory27.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory34 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory35 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean37 = queryLoggingServiceExtensionFactory35.equals((java.lang.Object) (-1L));
    boolean boolean38 = queryLoggingServiceExtensionFactory34.equals((java.lang.Object) boolean37);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService39 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery40 = null;
    queryLoggingService39.strForEx(executingQuery40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    java.lang.Throwable throwable43 = null;
    queryLoggingService39.faleForExTh(executingQuery42, throwable43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    queryLoggingService39.rolcForKe(kernelTransaction45);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    queryLoggingService39.sucsForEx(executingQuery47);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery49 = null;
    queryLoggingService39.strForEx(executingQuery49);
    boolean boolean51 = queryLoggingServiceExtensionFactory34.equals(
        (java.lang.Object) executingQuery49);
    boolean boolean52 = queryLoggingServiceExtensionFactory27.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory34);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory53 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean55 = queryLoggingServiceExtensionFactory53.equals((java.lang.Object) (short) 1);
    java.lang.String str56 = queryLoggingServiceExtensionFactory53.toString();
    boolean boolean57 = queryLoggingServiceExtensionFactory27.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory53);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService58 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction59 = null;
    java.lang.Throwable throwable60 = null;
    queryLoggingService58.rolcForKe(kernelTransaction59, throwable60);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction62 = null;
    queryLoggingService58.comForKe(kernelTransaction62);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery64 = null;
    queryLoggingService58.strForEx(executingQuery64);
    boolean boolean66 = queryLoggingServiceExtensionFactory53.equals(
        (java.lang.Object) queryLoggingService58);
    boolean boolean67 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService58);
    java.lang.String str68 = queryLoggingServiceExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext69 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies70 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle71 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext69, queryLoggingServiceDependencies70);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertEquals(
        "'" + str31 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str31, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    org.junit.Assert.assertEquals("'" + str33 + "' != '" + "query-logging" + "'", str33,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    org.junit.Assert.assertNotNull(queryLoggingService39);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    org.junit.Assert.assertEquals(
        "'" + str56 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str56, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    org.junit.Assert.assertNotNull(queryLoggingService58);
    org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    org.junit.Assert.assertEquals("'" + str68 + "' != '" + "query-logging" + "'", str68,
        "query-logging");
  }

  @Test
  public void test1075() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1075");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "query-logging",
        config3, path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
  }

  @Test
  public void test1076() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1076");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17, throwable18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.sucsForEx(executingQuery22);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1077() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1077");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.comForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.sucsForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.comForKe(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.strForEx(kernelTransaction17);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1078() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1078");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20, throwable21);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1079() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1079");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    java.lang.Class<?> wildcardClass13 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass13);
  }

  @Test
  public void test1080() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1080");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.sucsForEx(executingQuery21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.faleForExTh(executingQuery23, "hi!");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1081() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1081");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService2 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService2.strForEx(executingQuery3);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    java.lang.Throwable throwable6 = null;
    queryLoggingService2.faleForExTh(executingQuery5, throwable6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService2.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService2.sucsForEx(executingQuery10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService2.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService2.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService2.strForEx(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService2.strForEx(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService2.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService2.rolcForKe(kernelTransaction24, throwable25);
    boolean boolean27 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction24);
    java.lang.Object obj28 = null;
    boolean boolean29 = queryLoggingServiceExtensionFactory0.equals(obj28);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory30 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory31 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean33 = queryLoggingServiceExtensionFactory31.equals((java.lang.Object) (-1L));
    boolean boolean34 = queryLoggingServiceExtensionFactory30.equals((java.lang.Object) boolean33);
    java.lang.String str35 = queryLoggingServiceExtensionFactory30.toString();
    java.lang.String str36 = queryLoggingServiceExtensionFactory30.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory37 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean39 = queryLoggingServiceExtensionFactory37.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory40 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str41 = queryLoggingServiceExtensionFactory40.toString();
    boolean boolean42 = queryLoggingServiceExtensionFactory37.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory40);
    boolean boolean43 = queryLoggingServiceExtensionFactory30.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory37);
    java.lang.Object obj44 = null;
    boolean boolean45 = queryLoggingServiceExtensionFactory30.equals(obj44);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory46 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory47 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean49 = queryLoggingServiceExtensionFactory47.equals((java.lang.Object) (-1L));
    boolean boolean50 = queryLoggingServiceExtensionFactory46.equals((java.lang.Object) boolean49);
    boolean boolean52 = queryLoggingServiceExtensionFactory46.equals((java.lang.Object) 0L);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory53 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory54 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean56 = queryLoggingServiceExtensionFactory54.equals((java.lang.Object) (-1L));
    boolean boolean57 = queryLoggingServiceExtensionFactory53.equals((java.lang.Object) boolean56);
    java.lang.Object obj58 = new java.lang.Object();
    boolean boolean59 = queryLoggingServiceExtensionFactory53.equals(obj58);
    java.lang.String str60 = queryLoggingServiceExtensionFactory53.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService61 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery62 = null;
    queryLoggingService61.strForEx(executingQuery62);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery64 = null;
    java.lang.Throwable throwable65 = null;
    queryLoggingService61.faleForExTh(executingQuery64, throwable65);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction67 = null;
    java.lang.Throwable throwable68 = null;
    queryLoggingService61.rolcForKe(kernelTransaction67, throwable68);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction70 = null;
    queryLoggingService61.comForKe(kernelTransaction70);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery72 = null;
    queryLoggingService61.strForEx(executingQuery72);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction74 = null;
    java.lang.Throwable throwable75 = null;
    queryLoggingService61.rolcForKe(kernelTransaction74, throwable75);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction77 = null;
    queryLoggingService61.comForKe(kernelTransaction77);
    boolean boolean79 = queryLoggingServiceExtensionFactory53.equals(
        (java.lang.Object) queryLoggingService61);
    boolean boolean80 = queryLoggingServiceExtensionFactory46.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory53);
    boolean boolean81 = queryLoggingServiceExtensionFactory30.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory53);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService82 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction83 = null;
    java.lang.Throwable throwable84 = null;
    queryLoggingService82.rolcForKe(kernelTransaction83, throwable84);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction86 = null;
    queryLoggingService82.comForKe(kernelTransaction86);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery88 = null;
    queryLoggingService82.sucsForEx(executingQuery88);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction90 = null;
    java.lang.Throwable throwable91 = null;
    queryLoggingService82.rolcForKe(kernelTransaction90, throwable91);
    boolean boolean93 = queryLoggingServiceExtensionFactory30.equals(
        (java.lang.Object) queryLoggingService82);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery94 = null;
    queryLoggingService82.sucsForEx(executingQuery94);
    boolean boolean96 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService82);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery97 = null;
    queryLoggingService82.sucsForEx(executingQuery97);
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService2);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertEquals(
        "'" + str35 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str35, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str36 + "' != '" + "query-logging" + "'", str36,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertEquals(
        "'" + str41 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str41, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    org.junit.Assert.assertEquals("'" + str60 + "' != '" + "query-logging" + "'", str60,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService61);
    org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    org.junit.Assert.assertNotNull(queryLoggingService82);
    org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
  }

  @Test
  public void test1082() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1082");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.comForKe(kernelTransaction14);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1083() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1083");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService4 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction5 = null;
    queryLoggingService4.rolcForKe(kernelTransaction5);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction7 = null;
    queryLoggingService4.strForEx(kernelTransaction7);
    java.lang.Class<?> wildcardClass9 = queryLoggingService4.getClass();
    boolean boolean10 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService4);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory11 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean13 = queryLoggingServiceExtensionFactory11.equals((java.lang.Object) (short) 1);
    java.lang.String str14 = queryLoggingServiceExtensionFactory11.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService15 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService15.strForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService15.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService15.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService15.comForKe(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService15.strForEx(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService15.strForEx(executingQuery28);
    boolean boolean30 = queryLoggingServiceExtensionFactory11.equals(
        (java.lang.Object) executingQuery28);
    java.lang.String str31 = queryLoggingServiceExtensionFactory11.getName();
    java.lang.String str32 = queryLoggingServiceExtensionFactory11.toString();
    java.lang.String str33 = queryLoggingServiceExtensionFactory11.toString();
    java.lang.String str34 = queryLoggingServiceExtensionFactory11.getName();
    java.lang.String str35 = queryLoggingServiceExtensionFactory11.getName();
    java.lang.String str36 = queryLoggingServiceExtensionFactory11.toString();
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl37 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction38 = null;
    org.neo4j.configuration.Config config40 = null;
    java.nio.file.Path path41 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl37.init(fileSystemAbstraction38, "hi!",
        config40, path41);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction43 = null;
    org.neo4j.configuration.Config config45 = null;
    java.nio.file.Path path46 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl37.init(fileSystemAbstraction43,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config45, path46);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction48 = null;
    org.neo4j.configuration.Config config50 = null;
    java.nio.file.Path path51 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl37.init(fileSystemAbstraction48, "", config50,
        path51);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction53 = null;
    org.neo4j.configuration.Config config55 = null;
    java.nio.file.Path path56 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl37.init(fileSystemAbstraction53, "hi!",
        config55, path56);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction58 = null;
    org.neo4j.configuration.Config config60 = null;
    java.nio.file.Path path61 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl37.init(fileSystemAbstraction58, "", config60,
        path61);
    boolean boolean63 = queryLoggingServiceExtensionFactory11.equals((java.lang.Object) "");
    java.lang.String str64 = queryLoggingServiceExtensionFactory11.toString();
    boolean boolean65 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory11);
    java.lang.Class<?> wildcardClass66 = queryLoggingServiceExtensionFactory11.getClass();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str3, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService4);
    org.junit.Assert.assertNotNull(wildcardClass9);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "query-logging" + "'", str14,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService15);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    org.junit.Assert.assertEquals("'" + str31 + "' != '" + "query-logging" + "'", str31,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str32 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str32, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str33 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str33, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str34 + "' != '" + "query-logging" + "'", str34,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str35 + "' != '" + "query-logging" + "'", str35,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str36 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str36, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    org.junit.Assert.assertEquals(
        "'" + str64 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str64, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    org.junit.Assert.assertNotNull(wildcardClass66);
  }

  @Test
  public void test1084() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1084");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1085() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1085");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 1);
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService4 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    queryLoggingService4.strForEx(executingQuery5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService4.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService4.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService4.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService4.strForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService4.strForEx(executingQuery17);
    boolean boolean19 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery17);
    java.lang.String str20 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService21 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService21.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService21.faleForExTh(executingQuery24, "");
    java.lang.Class<?> wildcardClass27 = queryLoggingService21.getClass();
    boolean boolean28 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService21);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory29 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory30 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean32 = queryLoggingServiceExtensionFactory30.equals((java.lang.Object) (-1L));
    boolean boolean33 = queryLoggingServiceExtensionFactory29.equals((java.lang.Object) boolean32);
    java.lang.String str34 = queryLoggingServiceExtensionFactory29.toString();
    java.lang.String str35 = queryLoggingServiceExtensionFactory29.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory36 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean38 = queryLoggingServiceExtensionFactory36.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory39 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str40 = queryLoggingServiceExtensionFactory39.toString();
    boolean boolean41 = queryLoggingServiceExtensionFactory36.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory39);
    boolean boolean42 = queryLoggingServiceExtensionFactory29.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory36);
    java.lang.String str43 = queryLoggingServiceExtensionFactory29.getName();
    boolean boolean44 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory29);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext45 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies46 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle47 = queryLoggingServiceExtensionFactory29.newInstance(
          extensionContext45, queryLoggingServiceDependencies46);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "query-logging" + "'", str3,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService4);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "query-logging" + "'", str20,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService21);
    org.junit.Assert.assertNotNull(wildcardClass27);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertEquals(
        "'" + str34 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str34, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str35 + "' != '" + "query-logging" + "'", str35,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    org.junit.Assert.assertEquals(
        "'" + str40 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str40, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    org.junit.Assert.assertEquals("'" + str43 + "' != '" + "query-logging" + "'", str43,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
  }

  @Test
  public void test1086() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1086");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1.0f));
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService9 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService9.rolcForKe(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService9.strForEx(kernelTransaction12);
    java.lang.Class<?> wildcardClass14 = queryLoggingService9.getClass();
    boolean boolean15 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService9);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService16 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService16.faleForExTh(executingQuery17,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService16.rolcForKe(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService16.rolcForKe(kernelTransaction22, throwable23);
    java.lang.Class<?> wildcardClass25 = queryLoggingService16.getClass();
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) wildcardClass25);
    java.lang.String str27 = queryLoggingServiceExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext28 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies29 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle30 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext28, queryLoggingServiceDependencies29);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService9);
    org.junit.Assert.assertNotNull(wildcardClass14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertNotNull(queryLoggingService16);
    org.junit.Assert.assertNotNull(wildcardClass25);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "query-logging" + "'", str27,
        "query-logging");
  }

  @Test
  public void test1087() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1087");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.strForEx(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.comForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService0.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService0.sucsForEx(executingQuery27);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1088() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1088");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.strForEx(executingQuery3);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    queryLoggingService0.sucsForEx(executingQuery5);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction7 = null;
    queryLoggingService0.strForEx(kernelTransaction7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1089() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1089");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.strForEx(executingQuery21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.sucsForEx(executingQuery23);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1090() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1090");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.comForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.strForEx(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    java.lang.Throwable throwable27 = null;
    queryLoggingService0.faleForExTh(executingQuery26, throwable27);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    queryLoggingService0.rolcForKe(kernelTransaction29);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1091() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1091");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.rolcForKe(kernelTransaction4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    queryLoggingService0.faleForExTh(executingQuery7, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.sucsForEx(executingQuery15);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1092() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1092");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16, throwable17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.strForEx(executingQuery19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.faleForExTh(executingQuery23,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    java.lang.Throwable throwable27 = null;
    queryLoggingService0.faleForExTh(executingQuery26, throwable27);
    java.lang.Class<?> wildcardClass29 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass29);
  }

  @Test
  public void test1093() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1093");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22, throwable23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService0.rolcForKe(kernelTransaction25, throwable26);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1094() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1094");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService5.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService5.strForEx(executingQuery15);
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery15);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService18 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService18.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService18.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService18.faleForExTh(executingQuery24, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService18.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService18.faleForExTh(executingQuery29, throwable30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService18.sucsForEx(executingQuery32);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService18);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService35 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService35.rolcForKe(kernelTransaction36, throwable37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService35.sucsForEx(executingQuery39);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction41 = null;
    queryLoggingService35.comForKe(kernelTransaction41);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService35.faleForExTh(executingQuery43, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction46 = null;
    queryLoggingService35.strForEx(kernelTransaction46);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction48 = null;
    queryLoggingService35.comForKe(kernelTransaction48);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery50 = null;
    queryLoggingService35.strForEx(executingQuery50);
    boolean boolean52 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService35);
    java.lang.Class<?> wildcardClass53 = queryLoggingService35.getClass();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(queryLoggingService18);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertNotNull(queryLoggingService35);
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    org.junit.Assert.assertNotNull(wildcardClass53);
  }

  @Test
  public void test1095() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1095");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService5.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService5.strForEx(executingQuery15);
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery15);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService18 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService18.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService18.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService18.faleForExTh(executingQuery24, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService18.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService18.faleForExTh(executingQuery29, throwable30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService18.sucsForEx(executingQuery32);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService18.strForEx(executingQuery35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    java.lang.Throwable throwable38 = null;
    queryLoggingService18.faleForExTh(executingQuery37, throwable38);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery40 = null;
    queryLoggingService18.sucsForEx(executingQuery40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    queryLoggingService18.faleForExTh(executingQuery42, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    java.lang.Throwable throwable46 = null;
    queryLoggingService18.rolcForKe(kernelTransaction45, throwable46);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(queryLoggingService18);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
  }

  @Test
  public void test1096() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1096");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.Object obj10 = null;
    boolean boolean11 = queryLoggingServiceExtensionFactory3.equals(obj10);
    java.lang.String str12 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str13 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str14 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str15 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str16 = queryLoggingServiceExtensionFactory3.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService17 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService17.faleForExTh(executingQuery18,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService17.faleForExTh(executingQuery21,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService17.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService17.faleForExTh(executingQuery27, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryLoggingService17.strForEx(executingQuery30);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction32 = null;
    queryLoggingService17.rolcForKe(kernelTransaction32);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    queryLoggingService17.sucsForEx(executingQuery34);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery36 = null;
    queryLoggingService17.faleForExTh(executingQuery36, "");
    boolean boolean39 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery36);
    java.lang.String str40 = queryLoggingServiceExtensionFactory3.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext41 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies42 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle43 = queryLoggingServiceExtensionFactory3.newInstance(
          extensionContext41, queryLoggingServiceDependencies42);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertEquals(
        "'" + str12 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str12, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "query-logging" + "'", str13,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str14 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str14, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str15 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str15, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str16 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str16, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService17);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertEquals("'" + str40 + "' != '" + "query-logging" + "'", str40,
        "query-logging");
  }

  @Test
  public void test1097() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1097");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.strForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    java.lang.Class<?> wildcardClass21 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass21);
  }

  @Test
  public void test1098() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1098");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 1);
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService4 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    queryLoggingService4.strForEx(executingQuery5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService4.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService4.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService4.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService4.strForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService4.strForEx(executingQuery17);
    boolean boolean19 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery17);
    java.lang.String str20 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService21 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService21.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService21.faleForExTh(executingQuery24, "");
    java.lang.Class<?> wildcardClass27 = queryLoggingService21.getClass();
    boolean boolean28 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService21);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService29 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    queryLoggingService29.rolcForKe(kernelTransaction30);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction32 = null;
    java.lang.Throwable throwable33 = null;
    queryLoggingService29.rolcForKe(kernelTransaction32, throwable33);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction35 = null;
    queryLoggingService29.rolcForKe(kernelTransaction35);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction37 = null;
    java.lang.Throwable throwable38 = null;
    queryLoggingService29.rolcForKe(kernelTransaction37, throwable38);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    queryLoggingService29.rolcForKe(kernelTransaction40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    queryLoggingService29.strForEx(executingQuery42);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery44 = null;
    queryLoggingService29.faleForExTh(executingQuery44,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    boolean boolean47 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService29);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext48 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies49 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle50 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext48, queryLoggingServiceDependencies49);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "query-logging" + "'", str3,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService4);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "query-logging" + "'", str20,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService21);
    org.junit.Assert.assertNotNull(wildcardClass27);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertNotNull(queryLoggingService29);
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
  }

  @Test
  public void test1099() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1099");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.faleForExTh(executingQuery12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.strForEx(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.sucsForEx(executingQuery22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService0.strForEx(executingQuery24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1100() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1100");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService4 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction5 = null;
    queryLoggingService4.rolcForKe(kernelTransaction5);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction7 = null;
    queryLoggingService4.strForEx(kernelTransaction7);
    java.lang.Class<?> wildcardClass9 = queryLoggingService4.getClass();
    boolean boolean10 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService4);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory11 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean13 = queryLoggingServiceExtensionFactory11.equals((java.lang.Object) (short) 1);
    java.lang.String str14 = queryLoggingServiceExtensionFactory11.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService15 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService15.strForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService15.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService15.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService15.comForKe(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService15.strForEx(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService15.strForEx(executingQuery28);
    boolean boolean30 = queryLoggingServiceExtensionFactory11.equals(
        (java.lang.Object) executingQuery28);
    java.lang.String str31 = queryLoggingServiceExtensionFactory11.getName();
    java.lang.String str32 = queryLoggingServiceExtensionFactory11.toString();
    java.lang.String str33 = queryLoggingServiceExtensionFactory11.toString();
    java.lang.String str34 = queryLoggingServiceExtensionFactory11.getName();
    java.lang.String str35 = queryLoggingServiceExtensionFactory11.getName();
    java.lang.String str36 = queryLoggingServiceExtensionFactory11.toString();
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl37 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction38 = null;
    org.neo4j.configuration.Config config40 = null;
    java.nio.file.Path path41 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl37.init(fileSystemAbstraction38, "hi!",
        config40, path41);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction43 = null;
    org.neo4j.configuration.Config config45 = null;
    java.nio.file.Path path46 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl37.init(fileSystemAbstraction43,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config45, path46);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction48 = null;
    org.neo4j.configuration.Config config50 = null;
    java.nio.file.Path path51 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl37.init(fileSystemAbstraction48, "", config50,
        path51);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction53 = null;
    org.neo4j.configuration.Config config55 = null;
    java.nio.file.Path path56 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl37.init(fileSystemAbstraction53, "hi!",
        config55, path56);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction58 = null;
    org.neo4j.configuration.Config config60 = null;
    java.nio.file.Path path61 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl37.init(fileSystemAbstraction58, "", config60,
        path61);
    boolean boolean63 = queryLoggingServiceExtensionFactory11.equals((java.lang.Object) "");
    java.lang.String str64 = queryLoggingServiceExtensionFactory11.toString();
    boolean boolean65 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory11);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService66 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction67 = null;
    java.lang.Throwable throwable68 = null;
    queryLoggingService66.rolcForKe(kernelTransaction67, throwable68);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery70 = null;
    queryLoggingService66.sucsForEx(executingQuery70);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction72 = null;
    queryLoggingService66.rolcForKe(kernelTransaction72);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery74 = null;
    queryLoggingService66.sucsForEx(executingQuery74);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery76 = null;
    queryLoggingService66.faleForExTh(executingQuery76, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction79 = null;
    java.lang.Throwable throwable80 = null;
    queryLoggingService66.rolcForKe(kernelTransaction79, throwable80);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction82 = null;
    queryLoggingService66.comForKe(kernelTransaction82);
    boolean boolean84 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction82);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str3, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService4);
    org.junit.Assert.assertNotNull(wildcardClass9);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "query-logging" + "'", str14,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService15);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    org.junit.Assert.assertEquals("'" + str31 + "' != '" + "query-logging" + "'", str31,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str32 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str32, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str33 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str33, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str34 + "' != '" + "query-logging" + "'", str34,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str35 + "' != '" + "query-logging" + "'", str35,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str36 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str36, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    org.junit.Assert.assertEquals(
        "'" + str64 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str64, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    org.junit.Assert.assertNotNull(queryLoggingService66);
    org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
  }

  @Test
  public void test1101() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1101");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.strForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.comForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.strForEx(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.strForEx(kernelTransaction23);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1102() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1102");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService5.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService5.strForEx(executingQuery15);
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery15);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService18 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService18.strForEx(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService18.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService18.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService18.comForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService18.faleForExTh(executingQuery29, "");
    boolean boolean32 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) "");
    java.lang.Object obj33 = null;
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(obj33);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService35 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService35.rolcForKe(kernelTransaction36, throwable37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    java.lang.Throwable throwable40 = null;
    queryLoggingService35.faleForExTh(executingQuery39, throwable40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    java.lang.Throwable throwable43 = null;
    queryLoggingService35.faleForExTh(executingQuery42, throwable43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    queryLoggingService35.strForEx(kernelTransaction45);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    java.lang.Throwable throwable48 = null;
    queryLoggingService35.faleForExTh(executingQuery47, throwable48);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction50 = null;
    queryLoggingService35.rolcForKe(kernelTransaction50);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction52 = null;
    queryLoggingService35.comForKe(kernelTransaction52);
    boolean boolean54 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService35);
    java.lang.String str55 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Class<?> wildcardClass56 = queryLoggingServiceExtensionFactory0.getClass();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(queryLoggingService18);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertNotNull(queryLoggingService35);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    org.junit.Assert.assertEquals("'" + str55 + "' != '" + "query-logging" + "'", str55,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass56);
  }

  @Test
  public void test1103() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1103");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.comForKe(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.strForEx(kernelTransaction18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1104() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1104");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.strForEx(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.faleForExTh(executingQuery16, throwable17);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1105() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1105");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.strForEx(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.sucsForEx(executingQuery15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17, throwable18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.strForEx(executingQuery20);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1106() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1106");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.faleForExTh(executingQuery1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1107() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1107");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.faleForExTh(executingQuery1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1108() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1108");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.Object obj5 = new java.lang.Object();
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals(obj5);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory8 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean10 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) (-1L));
    boolean boolean11 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) boolean10);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService12 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService12.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService12.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService12.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService12.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService12.strForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) executingQuery22);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService25 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    queryLoggingService25.rolcForKe(kernelTransaction26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService25.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryLoggingService25.faleForExTh(executingQuery31, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction34 = null;
    queryLoggingService25.rolcForKe(kernelTransaction34);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService25.faleForExTh(executingQuery36, throwable37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService25.sucsForEx(executingQuery39);
    boolean boolean41 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingService25);
    boolean boolean42 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean41);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService43 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery44 = null;
    queryLoggingService43.strForEx(executingQuery44);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery46 = null;
    java.lang.Throwable throwable47 = null;
    queryLoggingService43.faleForExTh(executingQuery46, throwable47);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction49 = null;
    queryLoggingService43.rolcForKe(kernelTransaction49);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery51 = null;
    queryLoggingService43.sucsForEx(executingQuery51);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery53 = null;
    queryLoggingService43.strForEx(executingQuery53);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery55 = null;
    queryLoggingService43.sucsForEx(executingQuery55);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery57 = null;
    queryLoggingService43.sucsForEx(executingQuery57);
    boolean boolean59 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery57);
    java.lang.Class<?> wildcardClass60 = queryLoggingServiceExtensionFactory0.getClass();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(queryLoggingService12);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(queryLoggingService25);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertNotNull(queryLoggingService43);
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    org.junit.Assert.assertNotNull(wildcardClass60);
  }

  @Test
  public void test1109() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1109");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 1);
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService4 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    queryLoggingService4.strForEx(executingQuery5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService4.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService4.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService4.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService4.strForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService4.strForEx(executingQuery17);
    boolean boolean19 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery17);
    java.lang.String str20 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService21 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService21.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService21.faleForExTh(executingQuery24, "");
    java.lang.Class<?> wildcardClass27 = queryLoggingService21.getClass();
    boolean boolean28 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService21);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory29 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory30 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean32 = queryLoggingServiceExtensionFactory30.equals((java.lang.Object) (-1L));
    boolean boolean33 = queryLoggingServiceExtensionFactory29.equals((java.lang.Object) boolean32);
    java.lang.String str34 = queryLoggingServiceExtensionFactory29.toString();
    java.lang.String str35 = queryLoggingServiceExtensionFactory29.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory36 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean38 = queryLoggingServiceExtensionFactory36.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory39 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str40 = queryLoggingServiceExtensionFactory39.toString();
    boolean boolean41 = queryLoggingServiceExtensionFactory36.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory39);
    boolean boolean42 = queryLoggingServiceExtensionFactory29.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory36);
    java.lang.String str43 = queryLoggingServiceExtensionFactory29.getName();
    boolean boolean44 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory29);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory45 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean47 = queryLoggingServiceExtensionFactory45.equals((java.lang.Object) (short) 1);
    boolean boolean48 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory45);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext49 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies50 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle51 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext49, queryLoggingServiceDependencies50);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "query-logging" + "'", str3,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService4);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "query-logging" + "'", str20,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService21);
    org.junit.Assert.assertNotNull(wildcardClass27);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertEquals(
        "'" + str34 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str34, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str35 + "' != '" + "query-logging" + "'", str35,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    org.junit.Assert.assertEquals(
        "'" + str40 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str40, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    org.junit.Assert.assertEquals("'" + str43 + "' != '" + "query-logging" + "'", str43,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
  }

  @Test
  public void test1110() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1110");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj9 = new java.lang.Object();
    java.lang.Class<?> wildcardClass10 = obj9.getClass();
    boolean boolean11 = queryLoggingServiceExtensionFactory0.equals(obj9);
    java.lang.String str12 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj13 = null;
    boolean boolean14 = queryLoggingServiceExtensionFactory0.equals(obj13);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService15 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService15.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService15.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService15.rolcForKe(kernelTransaction21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService15.sucsForEx(executingQuery23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService15.strForEx(kernelTransaction25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    java.lang.Throwable throwable28 = null;
    queryLoggingService15.rolcForKe(kernelTransaction27, throwable28);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    queryLoggingService15.strForEx(kernelTransaction30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService15.sucsForEx(executingQuery32);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery32);
    java.lang.String str35 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory36 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str37 = queryLoggingServiceExtensionFactory36.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService38 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction39 = null;
    java.lang.Throwable throwable40 = null;
    queryLoggingService38.rolcForKe(kernelTransaction39, throwable40);
    boolean boolean42 = queryLoggingServiceExtensionFactory36.equals(
        (java.lang.Object) throwable40);
    java.lang.String str43 = queryLoggingServiceExtensionFactory36.toString();
    java.lang.String str44 = queryLoggingServiceExtensionFactory36.toString();
    java.lang.String str45 = queryLoggingServiceExtensionFactory36.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService46 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction47 = null;
    queryLoggingService46.rolcForKe(kernelTransaction47);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction49 = null;
    java.lang.Throwable throwable50 = null;
    queryLoggingService46.rolcForKe(kernelTransaction49, throwable50);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction52 = null;
    queryLoggingService46.rolcForKe(kernelTransaction52);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery54 = null;
    queryLoggingService46.sucsForEx(executingQuery54);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction56 = null;
    queryLoggingService46.strForEx(kernelTransaction56);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction58 = null;
    java.lang.Throwable throwable59 = null;
    queryLoggingService46.rolcForKe(kernelTransaction58, throwable59);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction61 = null;
    java.lang.Throwable throwable62 = null;
    queryLoggingService46.rolcForKe(kernelTransaction61, throwable62);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction64 = null;
    queryLoggingService46.rolcForKe(kernelTransaction64);
    boolean boolean66 = queryLoggingServiceExtensionFactory36.equals(
        (java.lang.Object) kernelTransaction64);
    boolean boolean67 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean66);
    java.lang.String str68 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService69 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery70 = null;
    queryLoggingService69.strForEx(executingQuery70);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery72 = null;
    java.lang.Throwable throwable73 = null;
    queryLoggingService69.faleForExTh(executingQuery72, throwable73);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction75 = null;
    java.lang.Throwable throwable76 = null;
    queryLoggingService69.rolcForKe(kernelTransaction75, throwable76);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery78 = null;
    queryLoggingService69.faleForExTh(executingQuery78, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery81 = null;
    queryLoggingService69.sucsForEx(executingQuery81);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery83 = null;
    java.lang.Throwable throwable84 = null;
    queryLoggingService69.faleForExTh(executingQuery83, throwable84);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery86 = null;
    queryLoggingService69.strForEx(executingQuery86);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery88 = null;
    java.lang.Throwable throwable89 = null;
    queryLoggingService69.faleForExTh(executingQuery88, throwable89);
    boolean boolean91 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable89);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "query-logging" + "'", str12,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertNotNull(queryLoggingService15);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertEquals("'" + str35 + "' != '" + "query-logging" + "'", str35,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str37 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str37, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService38);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertEquals(
        "'" + str43 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str43, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str44 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str44, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str45 + "' != '" + "query-logging" + "'", str45,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService46);
    org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    org.junit.Assert.assertEquals("'" + str68 + "' != '" + "query-logging" + "'", str68,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService69);
    org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
  }

  @Test
  public void test1111() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1111");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService5.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService5.strForEx(executingQuery15);
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery15);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService18 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService18.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService18.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService18.faleForExTh(executingQuery24, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService18.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService18.faleForExTh(executingQuery29, throwable30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService18.sucsForEx(executingQuery32);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService18);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService35 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService35.rolcForKe(kernelTransaction36, throwable37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    java.lang.Throwable throwable40 = null;
    queryLoggingService35.faleForExTh(executingQuery39, throwable40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    java.lang.Throwable throwable43 = null;
    queryLoggingService35.faleForExTh(executingQuery42, throwable43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    queryLoggingService35.strForEx(kernelTransaction45);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    java.lang.Throwable throwable48 = null;
    queryLoggingService35.faleForExTh(executingQuery47, throwable48);
    java.lang.Class<?> wildcardClass50 = queryLoggingService35.getClass();
    boolean boolean51 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) wildcardClass50);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService52 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction53 = null;
    queryLoggingService52.rolcForKe(kernelTransaction53);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery55 = null;
    queryLoggingService52.faleForExTh(executingQuery55, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction58 = null;
    java.lang.Throwable throwable59 = null;
    queryLoggingService52.rolcForKe(kernelTransaction58, throwable59);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction61 = null;
    queryLoggingService52.strForEx(kernelTransaction61);
    boolean boolean63 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService52);
    java.lang.String str64 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str65 = queryLoggingServiceExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext66 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies67 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle68 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext66, queryLoggingServiceDependencies67);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(queryLoggingService18);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertNotNull(queryLoggingService35);
    org.junit.Assert.assertNotNull(wildcardClass50);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    org.junit.Assert.assertNotNull(queryLoggingService52);
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    org.junit.Assert.assertEquals(
        "'" + str64 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str64, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str65 + "' != '" + "query-logging" + "'", str65,
        "query-logging");
  }

  @Test
  public void test1112() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1112");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.strForEx(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.faleForExTh(executingQuery11, throwable12);
    java.lang.Class<?> wildcardClass14 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass14);
  }

  @Test
  public void test1113() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1113");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.faleForExTh(executingQuery17,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1114() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1114");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1115() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1115");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService2 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService2.rolcForKe(kernelTransaction3, throwable4);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable4);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl9 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction10 = null;
    org.neo4j.configuration.Config config12 = null;
    java.nio.file.Path path13 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl9.init(fileSystemAbstraction10, "hi!", config12,
        path13);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction15 = null;
    org.neo4j.configuration.Config config17 = null;
    java.nio.file.Path path18 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl9.init(fileSystemAbstraction15, "query-logging",
        config17, path18);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.configuration.Config config22 = null;
    java.nio.file.Path path23 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl9.init(fileSystemAbstraction20,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config22, path23);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction25 = null;
    org.neo4j.configuration.Config config27 = null;
    java.nio.file.Path path28 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl9.init(fileSystemAbstraction25, "", config27,
        path28);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction30 = null;
    org.neo4j.configuration.Config config32 = null;
    java.nio.file.Path path33 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl9.init(fileSystemAbstraction30, "hi!", config32,
        path33);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction35 = null;
    org.neo4j.configuration.Config config37 = null;
    java.nio.file.Path path38 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl9.init(fileSystemAbstraction35, "hi!", config37,
        path38);
    boolean boolean40 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) config37);
    java.lang.String str41 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str42 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str43 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService44 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery45 = null;
    queryLoggingService44.strForEx(executingQuery45);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    java.lang.Throwable throwable48 = null;
    queryLoggingService44.faleForExTh(executingQuery47, throwable48);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction50 = null;
    queryLoggingService44.rolcForKe(kernelTransaction50);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery52 = null;
    queryLoggingService44.sucsForEx(executingQuery52);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery54 = null;
    queryLoggingService44.strForEx(executingQuery54);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery56 = null;
    queryLoggingService44.sucsForEx(executingQuery56);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery58 = null;
    queryLoggingService44.sucsForEx(executingQuery58);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery60 = null;
    queryLoggingService44.sucsForEx(executingQuery60);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery62 = null;
    queryLoggingService44.strForEx(executingQuery62);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction64 = null;
    java.lang.Throwable throwable65 = null;
    queryLoggingService44.rolcForKe(kernelTransaction64, throwable65);
    boolean boolean67 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction64);
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService2);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    org.junit.Assert.assertEquals(
        "'" + str41 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str41, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str42 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str42, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str43 + "' != '" + "query-logging" + "'", str43,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService44);
    org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
  }

  @Test
  public void test1116() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1116");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1.0f));
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService9 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService9.rolcForKe(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService9.strForEx(kernelTransaction12);
    java.lang.Class<?> wildcardClass14 = queryLoggingService9.getClass();
    boolean boolean15 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService9);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService16 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService16.faleForExTh(executingQuery17,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService16.rolcForKe(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService16.rolcForKe(kernelTransaction22, throwable23);
    java.lang.Class<?> wildcardClass25 = queryLoggingService16.getClass();
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) wildcardClass25);
    java.lang.String str27 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService9);
    org.junit.Assert.assertNotNull(wildcardClass14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertNotNull(queryLoggingService16);
    org.junit.Assert.assertNotNull(wildcardClass25);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertEquals(
        "'" + str27 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str27, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1117() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1117");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "", config13,
        path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config18, path19);
  }

  @Test
  public void test1118() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1118");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService8.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService8.sucsForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery22);
    java.lang.String str25 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str26 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str27 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str28 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str29 = queryLoggingServiceExtensionFactory3.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService30 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    java.lang.Throwable throwable32 = null;
    queryLoggingService30.rolcForKe(kernelTransaction31, throwable32);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    queryLoggingService30.sucsForEx(executingQuery34);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery36 = null;
    queryLoggingService30.strForEx(executingQuery36);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery38 = null;
    queryLoggingService30.strForEx(executingQuery38);
    java.lang.Class<?> wildcardClass40 = queryLoggingService30.getClass();
    boolean boolean41 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService30);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertEquals(
        "'" + str25 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str25, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "query-logging" + "'", str26,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "query-logging" + "'", str27,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str28 + "' != '" + "query-logging" + "'", str28,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str29 + "' != '" + "query-logging" + "'", str29,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService30);
    org.junit.Assert.assertNotNull(wildcardClass40);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
  }

  @Test
  public void test1119() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1119");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.Object obj5 = new java.lang.Object();
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals(obj5);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService8.comForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService8.strForEx(executingQuery19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService8.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService8.comForKe(kernelTransaction24);
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService8.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    queryLoggingService8.rolcForKe(kernelTransaction29);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
  }

  @Test
  public void test1120() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1120");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.rolcForKe(kernelTransaction4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    queryLoggingService0.strForEx(executingQuery7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1121() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1121");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.strForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.faleForExTh(executingQuery22, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService0.strForEx(kernelTransaction25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService0.strForEx(executingQuery27);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    queryLoggingService0.comForKe(kernelTransaction29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    java.lang.Throwable throwable32 = null;
    queryLoggingService0.rolcForKe(kernelTransaction31, throwable32);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    queryLoggingService0.sucsForEx(executingQuery34);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1122() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1122");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1.0d));
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl4 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction5 = null;
    org.neo4j.configuration.Config config7 = null;
    java.nio.file.Path path8 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl4.init(fileSystemAbstraction5, "", config7,
        path8);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction10 = null;
    org.neo4j.configuration.Config config12 = null;
    java.nio.file.Path path13 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl4.init(fileSystemAbstraction10, "hi!", config12,
        path13);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction15 = null;
    org.neo4j.configuration.Config config17 = null;
    java.nio.file.Path path18 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl4.init(fileSystemAbstraction15, "query-logging",
        config17, path18);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.configuration.Config config22 = null;
    java.nio.file.Path path23 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl4.init(fileSystemAbstraction20, "", config22,
        path23);
    boolean boolean25 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) fileSystemAbstraction20);
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl26 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction27 = null;
    org.neo4j.configuration.Config config29 = null;
    java.nio.file.Path path30 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl26.init(fileSystemAbstraction27, "hi!",
        config29, path30);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction32 = null;
    org.neo4j.configuration.Config config34 = null;
    java.nio.file.Path path35 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl26.init(fileSystemAbstraction32,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config34, path35);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction37 = null;
    org.neo4j.configuration.Config config39 = null;
    java.nio.file.Path path40 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl26.init(fileSystemAbstraction37, "", config39,
        path40);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction42 = null;
    org.neo4j.configuration.Config config44 = null;
    java.nio.file.Path path45 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl26.init(fileSystemAbstraction42, "hi!",
        config44, path45);
    boolean boolean47 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) path45);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "query-logging" + "'", str3,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
  }

  @Test
  public void test1123() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1123");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.Object obj10 = null;
    boolean boolean11 = queryLoggingServiceExtensionFactory3.equals(obj10);
    java.lang.String str12 = queryLoggingServiceExtensionFactory3.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService13 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService13.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService13.faleForExTh(executingQuery17, throwable18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService13.faleForExTh(executingQuery20, throwable21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService13.rolcForKe(kernelTransaction23, throwable24);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    queryLoggingService13.strForEx(kernelTransaction26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService13.faleForExTh(executingQuery28, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryLoggingService13.strForEx(executingQuery31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService13.sucsForEx(executingQuery33);
    boolean boolean35 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery33);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "query-logging" + "'", str12,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService13);
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
  }

  @Test
  public void test1124() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1124");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService8.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService8.sucsForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery22);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService25 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService25.strForEx(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService25.faleForExTh(executingQuery28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService25.rolcForKe(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService25.sucsForEx(executingQuery33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService25.strForEx(executingQuery35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService25.sucsForEx(executingQuery37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService25.sucsForEx(executingQuery39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    queryLoggingService25.sucsForEx(executingQuery41);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService25.strForEx(executingQuery43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    java.lang.Throwable throwable46 = null;
    queryLoggingService25.rolcForKe(kernelTransaction45, throwable46);
    boolean boolean48 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction49 = null;
    queryLoggingService25.comForKe(kernelTransaction49);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction51 = null;
    queryLoggingService25.comForKe(kernelTransaction51);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction53 = null;
    queryLoggingService25.comForKe(kernelTransaction53);
    java.lang.Class<?> wildcardClass55 = queryLoggingService25.getClass();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(queryLoggingService25);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    org.junit.Assert.assertNotNull(wildcardClass55);
  }

  @Test
  public void test1125() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1125");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.comForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.comForKe(kernelTransaction24);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    queryLoggingService0.rolcForKe(kernelTransaction26);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1126() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1126");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService8.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService8.sucsForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery22);
    java.lang.String str25 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str26 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str27 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str28 = queryLoggingServiceExtensionFactory3.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService29 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    queryLoggingService29.rolcForKe(kernelTransaction30);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction32 = null;
    java.lang.Throwable throwable33 = null;
    queryLoggingService29.rolcForKe(kernelTransaction32, throwable33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService29.faleForExTh(executingQuery35, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction38 = null;
    java.lang.Throwable throwable39 = null;
    queryLoggingService29.rolcForKe(kernelTransaction38, throwable39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    queryLoggingService29.strForEx(executingQuery41);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction43 = null;
    queryLoggingService29.comForKe(kernelTransaction43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    queryLoggingService29.strForEx(kernelTransaction45);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    queryLoggingService29.strForEx(executingQuery47);
    boolean boolean49 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService29);
    java.lang.Class<?> wildcardClass50 = queryLoggingService29.getClass();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertEquals(
        "'" + str25 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str25, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "query-logging" + "'", str26,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str27 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str27, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str28 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str28, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService29);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertNotNull(wildcardClass50);
  }

  @Test
  public void test1127() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1127");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.faleForExTh(executingQuery16, throwable17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.faleForExTh(executingQuery19, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.comForKe(kernelTransaction22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService0.faleForExTh(executingQuery24,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService0.strForEx(executingQuery27);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1128() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1128");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    boolean boolean10 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 100);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService11 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService11.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService11.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService11.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService11.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService11.sucsForEx(executingQuery22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService11.comForKe(kernelTransaction24);
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction24);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService27 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService27.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    java.lang.Throwable throwable32 = null;
    queryLoggingService27.rolcForKe(kernelTransaction31, throwable32);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction34 = null;
    queryLoggingService27.rolcForKe(kernelTransaction34);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService27.rolcForKe(kernelTransaction36, throwable37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService27.strForEx(executingQuery39);
    boolean boolean41 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService27);
    java.lang.String str42 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService43 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    queryLoggingService43.rolcForKe(kernelTransaction44);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery46 = null;
    queryLoggingService43.faleForExTh(executingQuery46, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery49 = null;
    java.lang.Throwable throwable50 = null;
    queryLoggingService43.faleForExTh(executingQuery49, throwable50);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery52 = null;
    java.lang.Throwable throwable53 = null;
    queryLoggingService43.faleForExTh(executingQuery52, throwable53);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    queryLoggingService43.strForEx(kernelTransaction55);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction57 = null;
    queryLoggingService43.rolcForKe(kernelTransaction57);
    boolean boolean59 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction57);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertNotNull(queryLoggingService11);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertNotNull(queryLoggingService27);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    org.junit.Assert.assertEquals(
        "'" + str42 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str42, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService43);
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
  }

  @Test
  public void test1129() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1129");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    java.lang.Class<?> wildcardClass12 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass12);
  }

  @Test
  public void test1130() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1130");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.strForEx(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12, "");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1131() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1131");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.strForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1132() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1132");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1133() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1133");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService8.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService8.sucsForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery22);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService25 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService25.strForEx(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService25.faleForExTh(executingQuery28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService25.rolcForKe(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService25.sucsForEx(executingQuery33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService25.strForEx(executingQuery35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService25.sucsForEx(executingQuery37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService25.sucsForEx(executingQuery39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    queryLoggingService25.sucsForEx(executingQuery41);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService25.strForEx(executingQuery43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    java.lang.Throwable throwable46 = null;
    queryLoggingService25.rolcForKe(kernelTransaction45, throwable46);
    boolean boolean48 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService25);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService49 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery50 = null;
    queryLoggingService49.strForEx(executingQuery50);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery52 = null;
    java.lang.Throwable throwable53 = null;
    queryLoggingService49.faleForExTh(executingQuery52, throwable53);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    java.lang.Throwable throwable56 = null;
    queryLoggingService49.rolcForKe(kernelTransaction55, throwable56);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery58 = null;
    queryLoggingService49.faleForExTh(executingQuery58, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction61 = null;
    java.lang.Throwable throwable62 = null;
    queryLoggingService49.rolcForKe(kernelTransaction61, throwable62);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction64 = null;
    queryLoggingService49.comForKe(kernelTransaction64);
    boolean boolean66 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) kernelTransaction64);
    java.lang.String str67 = queryLoggingServiceExtensionFactory3.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext68 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies69 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle70 = queryLoggingServiceExtensionFactory3.newInstance(
          extensionContext68, queryLoggingServiceDependencies69);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(queryLoggingService25);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    org.junit.Assert.assertNotNull(queryLoggingService49);
    org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    org.junit.Assert.assertEquals(
        "'" + str67 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str67, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1134() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1134");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.comForKe(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1135() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1135");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.strForEx(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.strForEx(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20, "hi!");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1136() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1136");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService5.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService5.strForEx(executingQuery15);
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery15);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService18 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService18.strForEx(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService18.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService18.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService18.comForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService18.faleForExTh(executingQuery29, "");
    boolean boolean32 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) "");
    java.lang.Object obj33 = null;
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(obj33);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext35 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies36 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle37 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext35, queryLoggingServiceDependencies36);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(queryLoggingService18);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
  }

  @Test
  public void test1137() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1137");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.strForEx(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.faleForExTh(executingQuery16,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.faleForExTh(executingQuery19, throwable20);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1138() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1138");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj9 = new java.lang.Object();
    java.lang.Class<?> wildcardClass10 = obj9.getClass();
    boolean boolean11 = queryLoggingServiceExtensionFactory0.equals(obj9);
    java.lang.String str12 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj13 = null;
    boolean boolean14 = queryLoggingServiceExtensionFactory0.equals(obj13);
    java.lang.String str15 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory16 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean18 = queryLoggingServiceExtensionFactory16.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService19 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService19.rolcForKe(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService19.rolcForKe(kernelTransaction22, throwable23);
    boolean boolean25 = queryLoggingServiceExtensionFactory16.equals(
        (java.lang.Object) queryLoggingService19);
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory16);
    java.lang.String str27 = queryLoggingServiceExtensionFactory16.toString();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "query-logging" + "'", str12,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertEquals(
        "'" + str15 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str15, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    org.junit.Assert.assertNotNull(queryLoggingService19);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    org.junit.Assert.assertEquals(
        "'" + str27 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str27, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1139() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1139");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str11 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str12 = queryLoggingServiceExtensionFactory3.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory13 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory14 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean16 = queryLoggingServiceExtensionFactory14.equals((java.lang.Object) (-1L));
    boolean boolean17 = queryLoggingServiceExtensionFactory13.equals((java.lang.Object) boolean16);
    java.lang.String str18 = queryLoggingServiceExtensionFactory13.toString();
    java.lang.String str19 = queryLoggingServiceExtensionFactory13.getName();
    java.lang.String str20 = queryLoggingServiceExtensionFactory13.getName();
    boolean boolean21 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory13);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext22 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies23 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle24 = queryLoggingServiceExtensionFactory3.newInstance(
          extensionContext22, queryLoggingServiceDependencies23);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "query-logging" + "'", str10,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "query-logging" + "'", str11,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "query-logging" + "'", str12,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertEquals(
        "'" + str18 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str18, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "query-logging" + "'", str19,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "query-logging" + "'", str20,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
  }

  @Test
  public void test1140() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1140");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory8 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean10 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) (-1L));
    boolean boolean11 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) boolean10);
    java.lang.Object obj12 = new java.lang.Object();
    boolean boolean13 = queryLoggingServiceExtensionFactory7.equals(obj12);
    java.lang.String str14 = queryLoggingServiceExtensionFactory7.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService15 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService15.strForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService15.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService15.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService15.comForKe(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService15.strForEx(executingQuery26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService15.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService15.comForKe(kernelTransaction31);
    boolean boolean33 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingService15);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService35 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService35.rolcForKe(kernelTransaction36, throwable37);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction39 = null;
    queryLoggingService35.comForKe(kernelTransaction39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    java.lang.Throwable throwable42 = null;
    queryLoggingService35.faleForExTh(executingQuery41, throwable42);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    queryLoggingService35.rolcForKe(kernelTransaction44);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction46 = null;
    queryLoggingService35.comForKe(kernelTransaction46);
    boolean boolean48 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingService35);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction49 = null;
    queryLoggingService35.strForEx(kernelTransaction49);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery51 = null;
    java.lang.Throwable throwable52 = null;
    queryLoggingService35.faleForExTh(executingQuery51, throwable52);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "query-logging" + "'", str14,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService15);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    org.junit.Assert.assertNotNull(queryLoggingService35);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
  }

  @Test
  public void test1141() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1141");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService5.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService5.strForEx(executingQuery15);
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery15);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService18 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService18.strForEx(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService18.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService18.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService18.comForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService18.faleForExTh(executingQuery29, "");
    boolean boolean32 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) "");
    java.lang.Object obj33 = null;
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(obj33);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService35 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService35.rolcForKe(kernelTransaction36, throwable37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    java.lang.Throwable throwable40 = null;
    queryLoggingService35.faleForExTh(executingQuery39, throwable40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    java.lang.Throwable throwable43 = null;
    queryLoggingService35.faleForExTh(executingQuery42, throwable43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    queryLoggingService35.strForEx(kernelTransaction45);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    java.lang.Throwable throwable48 = null;
    queryLoggingService35.faleForExTh(executingQuery47, throwable48);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction50 = null;
    queryLoggingService35.rolcForKe(kernelTransaction50);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction52 = null;
    queryLoggingService35.comForKe(kernelTransaction52);
    boolean boolean54 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService35);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    queryLoggingService35.comForKe(kernelTransaction55);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery57 = null;
    queryLoggingService35.sucsForEx(executingQuery57);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(queryLoggingService18);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertNotNull(queryLoggingService35);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
  }

  @Test
  public void test1142() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1142");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory11 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory12 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean14 = queryLoggingServiceExtensionFactory12.equals((java.lang.Object) (-1L));
    boolean boolean15 = queryLoggingServiceExtensionFactory11.equals((java.lang.Object) boolean14);
    boolean boolean17 = queryLoggingServiceExtensionFactory11.equals((java.lang.Object) 0L);
    java.lang.String str18 = queryLoggingServiceExtensionFactory11.toString();
    java.lang.String str19 = queryLoggingServiceExtensionFactory11.getName();
    java.lang.Object obj20 = new java.lang.Object();
    java.lang.Class<?> wildcardClass21 = obj20.getClass();
    boolean boolean22 = queryLoggingServiceExtensionFactory11.equals(obj20);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory23 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean25 = queryLoggingServiceExtensionFactory23.equals((java.lang.Object) (short) 1);
    java.lang.String str26 = queryLoggingServiceExtensionFactory23.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService27 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService27.strForEx(executingQuery28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    java.lang.Throwable throwable31 = null;
    queryLoggingService27.faleForExTh(executingQuery30, throwable31);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    java.lang.Throwable throwable34 = null;
    queryLoggingService27.rolcForKe(kernelTransaction33, throwable34);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    queryLoggingService27.comForKe(kernelTransaction36);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery38 = null;
    queryLoggingService27.strForEx(executingQuery38);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery40 = null;
    queryLoggingService27.strForEx(executingQuery40);
    boolean boolean42 = queryLoggingServiceExtensionFactory23.equals(
        (java.lang.Object) executingQuery40);
    boolean boolean43 = queryLoggingServiceExtensionFactory11.equals(
        (java.lang.Object) executingQuery40);
    java.lang.String str44 = queryLoggingServiceExtensionFactory11.toString();
    boolean boolean45 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory11);
    java.lang.String str46 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService47 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery48 = null;
    queryLoggingService47.faleForExTh(executingQuery48,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction51 = null;
    queryLoggingService47.rolcForKe(kernelTransaction51);
    boolean boolean53 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction51);
    java.lang.String str54 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str55 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str10, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertEquals(
        "'" + str18 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str18, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "query-logging" + "'", str19,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "query-logging" + "'", str26,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService27);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertEquals(
        "'" + str44 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str44, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    org.junit.Assert.assertEquals(
        "'" + str46 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str46, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService47);
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    org.junit.Assert.assertEquals(
        "'" + str54 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str54, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str55 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str55, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1143() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1143");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    boolean boolean10 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 100);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService11 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService11.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService11.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService11.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService11.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService11.sucsForEx(executingQuery22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService11.comForKe(kernelTransaction24);
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction24);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService27 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService27.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    java.lang.Throwable throwable32 = null;
    queryLoggingService27.rolcForKe(kernelTransaction31, throwable32);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction34 = null;
    queryLoggingService27.rolcForKe(kernelTransaction34);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService27.rolcForKe(kernelTransaction36, throwable37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService27.strForEx(executingQuery39);
    boolean boolean41 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService27);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext42 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies43 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle44 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext42, queryLoggingServiceDependencies43);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertNotNull(queryLoggingService11);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertNotNull(queryLoggingService27);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
  }

  @Test
  public void test1144() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1144");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory11 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory12 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean14 = queryLoggingServiceExtensionFactory12.equals((java.lang.Object) (-1L));
    boolean boolean15 = queryLoggingServiceExtensionFactory11.equals((java.lang.Object) boolean14);
    boolean boolean17 = queryLoggingServiceExtensionFactory11.equals((java.lang.Object) 0L);
    java.lang.String str18 = queryLoggingServiceExtensionFactory11.toString();
    java.lang.String str19 = queryLoggingServiceExtensionFactory11.getName();
    java.lang.Object obj20 = new java.lang.Object();
    java.lang.Class<?> wildcardClass21 = obj20.getClass();
    boolean boolean22 = queryLoggingServiceExtensionFactory11.equals(obj20);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory23 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean25 = queryLoggingServiceExtensionFactory23.equals((java.lang.Object) (short) 1);
    java.lang.String str26 = queryLoggingServiceExtensionFactory23.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService27 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService27.strForEx(executingQuery28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    java.lang.Throwable throwable31 = null;
    queryLoggingService27.faleForExTh(executingQuery30, throwable31);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    java.lang.Throwable throwable34 = null;
    queryLoggingService27.rolcForKe(kernelTransaction33, throwable34);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    queryLoggingService27.comForKe(kernelTransaction36);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery38 = null;
    queryLoggingService27.strForEx(executingQuery38);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery40 = null;
    queryLoggingService27.strForEx(executingQuery40);
    boolean boolean42 = queryLoggingServiceExtensionFactory23.equals(
        (java.lang.Object) executingQuery40);
    boolean boolean43 = queryLoggingServiceExtensionFactory11.equals(
        (java.lang.Object) executingQuery40);
    java.lang.String str44 = queryLoggingServiceExtensionFactory11.toString();
    boolean boolean45 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory11);
    java.lang.String str46 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService47 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery48 = null;
    queryLoggingService47.faleForExTh(executingQuery48,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction51 = null;
    queryLoggingService47.rolcForKe(kernelTransaction51);
    boolean boolean53 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction51);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService54 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    java.lang.Throwable throwable56 = null;
    queryLoggingService54.rolcForKe(kernelTransaction55, throwable56);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery58 = null;
    java.lang.Throwable throwable59 = null;
    queryLoggingService54.faleForExTh(executingQuery58, throwable59);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery61 = null;
    java.lang.Throwable throwable62 = null;
    queryLoggingService54.faleForExTh(executingQuery61, throwable62);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction64 = null;
    java.lang.Throwable throwable65 = null;
    queryLoggingService54.rolcForKe(kernelTransaction64, throwable65);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction67 = null;
    queryLoggingService54.strForEx(kernelTransaction67);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery69 = null;
    queryLoggingService54.faleForExTh(executingQuery69, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery72 = null;
    queryLoggingService54.strForEx(executingQuery72);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery74 = null;
    queryLoggingService54.faleForExTh(executingQuery74, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery77 = null;
    java.lang.Throwable throwable78 = null;
    queryLoggingService54.faleForExTh(executingQuery77, throwable78);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction80 = null;
    java.lang.Throwable throwable81 = null;
    queryLoggingService54.rolcForKe(kernelTransaction80, throwable81);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction83 = null;
    queryLoggingService54.strForEx(kernelTransaction83);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction85 = null;
    java.lang.Throwable throwable86 = null;
    queryLoggingService54.rolcForKe(kernelTransaction85, throwable86);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery88 = null;
    queryLoggingService54.strForEx(executingQuery88);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery90 = null;
    java.lang.Throwable throwable91 = null;
    queryLoggingService54.faleForExTh(executingQuery90, throwable91);
    boolean boolean93 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable91);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str10, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertEquals(
        "'" + str18 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str18, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "query-logging" + "'", str19,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "query-logging" + "'", str26,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService27);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertEquals(
        "'" + str44 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str44, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    org.junit.Assert.assertEquals(
        "'" + str46 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str46, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService47);
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    org.junit.Assert.assertNotNull(queryLoggingService54);
    org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
  }

  @Test
  public void test1145() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1145");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.comForKe(kernelTransaction21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.faleForExTh(executingQuery23, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    queryLoggingService0.rolcForKe(kernelTransaction26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService0.rolcForKe(kernelTransaction28);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1146() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1146");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.Object obj5 = new java.lang.Object();
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals(obj5);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory8 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean10 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) (-1L));
    boolean boolean11 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) boolean10);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService12 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService12.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService12.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService12.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService12.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService12.strForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) executingQuery22);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService25 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    queryLoggingService25.rolcForKe(kernelTransaction26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService25.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryLoggingService25.faleForExTh(executingQuery31, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction34 = null;
    queryLoggingService25.rolcForKe(kernelTransaction34);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService25.faleForExTh(executingQuery36, throwable37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService25.sucsForEx(executingQuery39);
    boolean boolean41 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingService25);
    boolean boolean42 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean41);
    java.lang.String str43 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService44 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    queryLoggingService44.rolcForKe(kernelTransaction45);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction47 = null;
    java.lang.Throwable throwable48 = null;
    queryLoggingService44.rolcForKe(kernelTransaction47, throwable48);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction50 = null;
    queryLoggingService44.rolcForKe(kernelTransaction50);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction52 = null;
    java.lang.Throwable throwable53 = null;
    queryLoggingService44.rolcForKe(kernelTransaction52, throwable53);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery55 = null;
    queryLoggingService44.sucsForEx(executingQuery55);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction57 = null;
    queryLoggingService44.comForKe(kernelTransaction57);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction59 = null;
    queryLoggingService44.rolcForKe(kernelTransaction59);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction61 = null;
    queryLoggingService44.rolcForKe(kernelTransaction61);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery63 = null;
    queryLoggingService44.sucsForEx(executingQuery63);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery65 = null;
    queryLoggingService44.sucsForEx(executingQuery65);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction67 = null;
    java.lang.Throwable throwable68 = null;
    queryLoggingService44.rolcForKe(kernelTransaction67, throwable68);
    boolean boolean70 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable68);
    java.lang.String str71 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(queryLoggingService12);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(queryLoggingService25);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertEquals("'" + str43 + "' != '" + "query-logging" + "'", str43,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService44);
    org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    org.junit.Assert.assertEquals("'" + str71 + "' != '" + "query-logging" + "'", str71,
        "query-logging");
  }

  @Test
  public void test1147() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1147");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.comForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.faleForExTh(executingQuery21, throwable22);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1148() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1148");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1.0d));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory4 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean6 = queryLoggingServiceExtensionFactory4.equals((java.lang.Object) (-1L));
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) boolean6);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    boolean boolean20 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery18);
    java.lang.String str21 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean22 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext23 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies24 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle25 = queryLoggingServiceExtensionFactory3.newInstance(
          extensionContext23, queryLoggingServiceDependencies24);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertEquals(
        "'" + str21 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str21, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
  }

  @Test
  public void test1149() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1149");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.strForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.faleForExTh(executingQuery22, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService0.comForKe(kernelTransaction25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService0.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService0.faleForExTh(executingQuery29, "");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1150() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1150");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.strForEx(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService0.rolcForKe(kernelTransaction24, throwable25);
    java.lang.Class<?> wildcardClass27 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass27);
  }

  @Test
  public void test1151() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1151");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService5.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService5.strForEx(executingQuery15);
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery15);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService18 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService18.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService18.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService18.faleForExTh(executingQuery24, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService18.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService18.faleForExTh(executingQuery29, throwable30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService18.sucsForEx(executingQuery32);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService18);
    java.lang.String str35 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str36 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService37 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction38 = null;
    queryLoggingService37.rolcForKe(kernelTransaction38);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery40 = null;
    queryLoggingService37.faleForExTh(executingQuery40, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    java.lang.Throwable throwable44 = null;
    queryLoggingService37.faleForExTh(executingQuery43, throwable44);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction46 = null;
    queryLoggingService37.strForEx(kernelTransaction46);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery48 = null;
    queryLoggingService37.faleForExTh(executingQuery48, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction51 = null;
    java.lang.Throwable throwable52 = null;
    queryLoggingService37.rolcForKe(kernelTransaction51, throwable52);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction54 = null;
    queryLoggingService37.comForKe(kernelTransaction54);
    boolean boolean56 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService37);
    java.lang.String str57 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(queryLoggingService18);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertEquals(
        "'" + str35 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str35, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str36 + "' != '" + "query-logging" + "'", str36,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService37);
    org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    org.junit.Assert.assertEquals(
        "'" + str57 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str57, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1152() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1152");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService7 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService7.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService7.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService7.rolcForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService7.sucsForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService7.faleForExTh(executingQuery17, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService7.strForEx(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService7.rolcForKe(kernelTransaction22);
    boolean boolean24 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService7);
    java.lang.String str25 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str26 = queryLoggingServiceExtensionFactory0.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext27 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies28 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle29 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext27, queryLoggingServiceDependencies28);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService7);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertEquals("'" + str25 + "' != '" + "query-logging" + "'", str25,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str26 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str26, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1153() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1153");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj9 = new java.lang.Object();
    java.lang.Class<?> wildcardClass10 = obj9.getClass();
    boolean boolean11 = queryLoggingServiceExtensionFactory0.equals(obj9);
    java.lang.String str12 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj13 = null;
    boolean boolean14 = queryLoggingServiceExtensionFactory0.equals(obj13);
    java.lang.String str15 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory16 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean18 = queryLoggingServiceExtensionFactory16.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService19 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService19.rolcForKe(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService19.rolcForKe(kernelTransaction22, throwable23);
    boolean boolean25 = queryLoggingServiceExtensionFactory16.equals(
        (java.lang.Object) queryLoggingService19);
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory16);
    java.lang.String str27 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory28 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory29 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean31 = queryLoggingServiceExtensionFactory29.equals((java.lang.Object) (-1L));
    boolean boolean32 = queryLoggingServiceExtensionFactory28.equals((java.lang.Object) boolean31);
    java.lang.Object obj33 = new java.lang.Object();
    boolean boolean34 = queryLoggingServiceExtensionFactory28.equals(obj33);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService35 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    queryLoggingService35.rolcForKe(kernelTransaction36);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction38 = null;
    java.lang.Throwable throwable39 = null;
    queryLoggingService35.rolcForKe(kernelTransaction38, throwable39);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction41 = null;
    queryLoggingService35.rolcForKe(kernelTransaction41);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService35.sucsForEx(executingQuery43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    queryLoggingService35.strForEx(kernelTransaction45);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    queryLoggingService35.faleForExTh(executingQuery47,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction50 = null;
    java.lang.Throwable throwable51 = null;
    queryLoggingService35.rolcForKe(kernelTransaction50, throwable51);
    boolean boolean53 = queryLoggingServiceExtensionFactory28.equals(
        (java.lang.Object) kernelTransaction50);
    boolean boolean55 = queryLoggingServiceExtensionFactory28.equals((java.lang.Object) '#');
    java.lang.String str56 = queryLoggingServiceExtensionFactory28.toString();
    boolean boolean57 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) str56);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService58 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction59 = null;
    java.lang.Throwable throwable60 = null;
    queryLoggingService58.rolcForKe(kernelTransaction59, throwable60);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery62 = null;
    java.lang.Throwable throwable63 = null;
    queryLoggingService58.faleForExTh(executingQuery62, throwable63);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery65 = null;
    java.lang.Throwable throwable66 = null;
    queryLoggingService58.faleForExTh(executingQuery65, throwable66);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction68 = null;
    queryLoggingService58.strForEx(kernelTransaction68);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery70 = null;
    java.lang.Throwable throwable71 = null;
    queryLoggingService58.faleForExTh(executingQuery70, throwable71);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction73 = null;
    queryLoggingService58.rolcForKe(kernelTransaction73);
    boolean boolean75 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction73);
    java.lang.String str76 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "query-logging" + "'", str12,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertEquals(
        "'" + str15 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str15, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    org.junit.Assert.assertNotNull(queryLoggingService19);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "query-logging" + "'", str27,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertNotNull(queryLoggingService35);
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    org.junit.Assert.assertEquals(
        "'" + str56 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str56, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    org.junit.Assert.assertNotNull(queryLoggingService58);
    org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    org.junit.Assert.assertEquals("'" + str76 + "' != '" + "query-logging" + "'", str76,
        "query-logging");
  }

  @Test
  public void test1154() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1154");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService2 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService2.rolcForKe(kernelTransaction3, throwable4);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable4);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory11 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean13 = queryLoggingServiceExtensionFactory11.equals((java.lang.Object) (short) 1);
    java.lang.String str14 = queryLoggingServiceExtensionFactory11.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService15 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService15.strForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService15.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService15.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService15.comForKe(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService15.strForEx(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService15.strForEx(executingQuery28);
    boolean boolean30 = queryLoggingServiceExtensionFactory11.equals(
        (java.lang.Object) executingQuery28);
    java.lang.String str31 = queryLoggingServiceExtensionFactory11.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService32 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    queryLoggingService32.rolcForKe(kernelTransaction33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService32.faleForExTh(executingQuery35, "");
    java.lang.Class<?> wildcardClass38 = queryLoggingService32.getClass();
    boolean boolean39 = queryLoggingServiceExtensionFactory11.equals(
        (java.lang.Object) queryLoggingService32);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory40 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory41 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean43 = queryLoggingServiceExtensionFactory41.equals((java.lang.Object) (-1L));
    boolean boolean44 = queryLoggingServiceExtensionFactory40.equals((java.lang.Object) boolean43);
    java.lang.String str45 = queryLoggingServiceExtensionFactory40.toString();
    java.lang.String str46 = queryLoggingServiceExtensionFactory40.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory47 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean49 = queryLoggingServiceExtensionFactory47.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory50 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str51 = queryLoggingServiceExtensionFactory50.toString();
    boolean boolean52 = queryLoggingServiceExtensionFactory47.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory50);
    boolean boolean53 = queryLoggingServiceExtensionFactory40.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory47);
    java.lang.String str54 = queryLoggingServiceExtensionFactory40.getName();
    boolean boolean55 = queryLoggingServiceExtensionFactory11.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory40);
    boolean boolean56 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory11);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService57 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery58 = null;
    queryLoggingService57.strForEx(executingQuery58);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery60 = null;
    java.lang.Throwable throwable61 = null;
    queryLoggingService57.faleForExTh(executingQuery60, throwable61);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction63 = null;
    java.lang.Throwable throwable64 = null;
    queryLoggingService57.rolcForKe(kernelTransaction63, throwable64);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery66 = null;
    queryLoggingService57.faleForExTh(executingQuery66, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery69 = null;
    queryLoggingService57.sucsForEx(executingQuery69);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery71 = null;
    java.lang.Throwable throwable72 = null;
    queryLoggingService57.faleForExTh(executingQuery71, throwable72);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery74 = null;
    queryLoggingService57.strForEx(executingQuery74);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery76 = null;
    java.lang.Throwable throwable77 = null;
    queryLoggingService57.faleForExTh(executingQuery76, throwable77);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery79 = null;
    java.lang.Throwable throwable80 = null;
    queryLoggingService57.faleForExTh(executingQuery79, throwable80);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction82 = null;
    queryLoggingService57.strForEx(kernelTransaction82);
    boolean boolean84 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction82);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext85 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies86 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle87 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext85, queryLoggingServiceDependencies86);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService2);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str10, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "query-logging" + "'", str14,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService15);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    org.junit.Assert.assertEquals("'" + str31 + "' != '" + "query-logging" + "'", str31,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService32);
    org.junit.Assert.assertNotNull(wildcardClass38);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    org.junit.Assert.assertEquals(
        "'" + str45 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str45, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str46 + "' != '" + "query-logging" + "'", str46,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertEquals(
        "'" + str51 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str51, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    org.junit.Assert.assertEquals("'" + str54 + "' != '" + "query-logging" + "'", str54,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    org.junit.Assert.assertNotNull(queryLoggingService57);
    org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
  }

  @Test
  public void test1155() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1155");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj9 = new java.lang.Object();
    java.lang.Class<?> wildcardClass10 = obj9.getClass();
    boolean boolean11 = queryLoggingServiceExtensionFactory0.equals(obj9);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory12 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean14 = queryLoggingServiceExtensionFactory12.equals((java.lang.Object) (short) 1);
    java.lang.String str15 = queryLoggingServiceExtensionFactory12.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService16 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService16.strForEx(executingQuery17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService16.faleForExTh(executingQuery19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService16.rolcForKe(kernelTransaction22, throwable23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService16.comForKe(kernelTransaction25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService16.strForEx(executingQuery27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService16.strForEx(executingQuery29);
    boolean boolean31 = queryLoggingServiceExtensionFactory12.equals(
        (java.lang.Object) executingQuery29);
    boolean boolean32 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery29);
    java.lang.String str33 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str34 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str35 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory36 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str37 = queryLoggingServiceExtensionFactory36.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService38 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction39 = null;
    java.lang.Throwable throwable40 = null;
    queryLoggingService38.rolcForKe(kernelTransaction39, throwable40);
    boolean boolean42 = queryLoggingServiceExtensionFactory36.equals(
        (java.lang.Object) throwable40);
    java.lang.String str43 = queryLoggingServiceExtensionFactory36.toString();
    java.lang.String str44 = queryLoggingServiceExtensionFactory36.toString();
    java.lang.String str45 = queryLoggingServiceExtensionFactory36.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService46 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction47 = null;
    queryLoggingService46.rolcForKe(kernelTransaction47);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction49 = null;
    java.lang.Throwable throwable50 = null;
    queryLoggingService46.rolcForKe(kernelTransaction49, throwable50);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction52 = null;
    queryLoggingService46.rolcForKe(kernelTransaction52);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery54 = null;
    queryLoggingService46.sucsForEx(executingQuery54);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction56 = null;
    queryLoggingService46.strForEx(kernelTransaction56);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction58 = null;
    java.lang.Throwable throwable59 = null;
    queryLoggingService46.rolcForKe(kernelTransaction58, throwable59);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction61 = null;
    java.lang.Throwable throwable62 = null;
    queryLoggingService46.rolcForKe(kernelTransaction61, throwable62);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction64 = null;
    queryLoggingService46.rolcForKe(kernelTransaction64);
    boolean boolean66 = queryLoggingServiceExtensionFactory36.equals(
        (java.lang.Object) kernelTransaction64);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory67 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory68 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean70 = queryLoggingServiceExtensionFactory68.equals((java.lang.Object) (-1L));
    boolean boolean71 = queryLoggingServiceExtensionFactory67.equals((java.lang.Object) boolean70);
    java.lang.Object obj72 = new java.lang.Object();
    boolean boolean73 = queryLoggingServiceExtensionFactory67.equals(obj72);
    java.lang.String str74 = queryLoggingServiceExtensionFactory67.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService75 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery76 = null;
    queryLoggingService75.strForEx(executingQuery76);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery78 = null;
    java.lang.Throwable throwable79 = null;
    queryLoggingService75.faleForExTh(executingQuery78, throwable79);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction81 = null;
    java.lang.Throwable throwable82 = null;
    queryLoggingService75.rolcForKe(kernelTransaction81, throwable82);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction84 = null;
    queryLoggingService75.comForKe(kernelTransaction84);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery86 = null;
    queryLoggingService75.strForEx(executingQuery86);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction88 = null;
    java.lang.Throwable throwable89 = null;
    queryLoggingService75.rolcForKe(kernelTransaction88, throwable89);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction91 = null;
    queryLoggingService75.comForKe(kernelTransaction91);
    boolean boolean93 = queryLoggingServiceExtensionFactory67.equals(
        (java.lang.Object) queryLoggingService75);
    java.lang.Class<?> wildcardClass94 = queryLoggingService75.getClass();
    boolean boolean95 = queryLoggingServiceExtensionFactory36.equals(
        (java.lang.Object) wildcardClass94);
    boolean boolean96 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean95);
    java.lang.String str97 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str98 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "query-logging" + "'", str15,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService16);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertEquals("'" + str33 + "' != '" + "query-logging" + "'", str33,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str34 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str34, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str35 + "' != '" + "query-logging" + "'", str35,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str37 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str37, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService38);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertEquals(
        "'" + str43 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str43, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str44 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str44, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str45 + "' != '" + "query-logging" + "'", str45,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService46);
    org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    org.junit.Assert.assertEquals("'" + str74 + "' != '" + "query-logging" + "'", str74,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService75);
    org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    org.junit.Assert.assertNotNull(wildcardClass94);
    org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    org.junit.Assert.assertEquals("'" + str97 + "' != '" + "query-logging" + "'", str97,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str98 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str98, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1156() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1156");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.comForKe(kernelTransaction11);
    java.lang.Class<?> wildcardClass13 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass13);
  }

  @Test
  public void test1157() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1157");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.sucsForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.comForKe(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.faleForExTh(executingQuery17, throwable18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1158() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1158");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.sucsForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.sucsForEx(executingQuery17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.faleForExTh(executingQuery19, throwable20);
    java.lang.Class<?> wildcardClass22 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass22);
  }

  @Test
  public void test1159() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1159");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 1);
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService4 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    queryLoggingService4.strForEx(executingQuery5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService4.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService4.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService4.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService4.strForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService4.strForEx(executingQuery17);
    boolean boolean19 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery17);
    java.lang.String str20 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str21 = queryLoggingServiceExtensionFactory0.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext22 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies23 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle24 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext22, queryLoggingServiceDependencies23);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "query-logging" + "'", str3,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService4);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "query-logging" + "'", str20,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str21 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str21, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1160() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1160");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6, "query-logging",
        config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "query-logging",
        config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "", config23,
        path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config28, path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31, "query-logging",
        config33, path34);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction36 = null;
    org.neo4j.configuration.Config config38 = null;
    java.nio.file.Path path39 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction36, "", config38,
        path39);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction41 = null;
    org.neo4j.configuration.Config config43 = null;
    java.nio.file.Path path44 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction41, "", config43,
        path44);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction46 = null;
    org.neo4j.configuration.Config config48 = null;
    java.nio.file.Path path49 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction46, "", config48,
        path49);
  }

  @Test
  public void test1161() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1161");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str2 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService3 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService3.faleForExTh(executingQuery4,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    queryLoggingService3.faleForExTh(executingQuery7,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService3.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService3.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService3.faleForExTh(executingQuery14,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    java.lang.String str18 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str19 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory20 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory21 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean23 = queryLoggingServiceExtensionFactory21.equals((java.lang.Object) (-1L));
    boolean boolean24 = queryLoggingServiceExtensionFactory20.equals((java.lang.Object) boolean23);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService25 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService25.strForEx(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService25.faleForExTh(executingQuery28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService25.rolcForKe(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService25.sucsForEx(executingQuery33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService25.strForEx(executingQuery35);
    boolean boolean37 = queryLoggingServiceExtensionFactory20.equals(
        (java.lang.Object) executingQuery35);
    java.lang.String str38 = queryLoggingServiceExtensionFactory20.getName();
    boolean boolean39 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory20);
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str2, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService3);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "query-logging" + "'", str18,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "query-logging" + "'", str19,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(queryLoggingService25);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertEquals("'" + str38 + "' != '" + "query-logging" + "'", str38,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
  }

  @Test
  public void test1162() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1162");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.strForEx(executingQuery21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.strForEx(executingQuery23);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1163() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1163");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str2 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService3 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService3.rolcForKe(kernelTransaction4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService3.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService3.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService3.sucsForEx(executingQuery11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService3.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService3.rolcForKe(kernelTransaction15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService3.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService3.rolcForKe(kernelTransaction21);
    boolean boolean23 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction21);
    java.lang.String str24 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService25 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    java.lang.Throwable throwable27 = null;
    queryLoggingService25.rolcForKe(kernelTransaction26, throwable27);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    queryLoggingService25.comForKe(kernelTransaction29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    java.lang.Throwable throwable32 = null;
    queryLoggingService25.faleForExTh(executingQuery31, throwable32);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction34 = null;
    queryLoggingService25.comForKe(kernelTransaction34);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery36 = null;
    queryLoggingService25.sucsForEx(executingQuery36);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery38 = null;
    queryLoggingService25.strForEx(executingQuery38);
    boolean boolean40 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery38);
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str2, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService3);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertEquals(
        "'" + str24 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str24, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService25);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
  }

  @Test
  public void test1164() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1164");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.faleForExTh(executingQuery17, throwable18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.faleForExTh(executingQuery20, throwable21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.faleForExTh(executingQuery23, throwable24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService0.sucsForEx(executingQuery26);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1165() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1165");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.strForEx(kernelTransaction11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.comForKe(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.sucsForEx(executingQuery17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1166() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1166");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.strForEx(kernelTransaction18);
    java.lang.Class<?> wildcardClass20 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass20);
  }

  @Test
  public void test1167() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1167");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "query-logging",
        config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "hi!", config23,
        path24);
  }

  @Test
  public void test1168() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1168");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.strForEx(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.faleForExTh(executingQuery13, throwable14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.faleForExTh(executingQuery16, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.strForEx(executingQuery19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.strForEx(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1169() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1169");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.sucsForEx(executingQuery17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService0.faleForExTh(executingQuery26, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService0.strForEx(executingQuery29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryLoggingService0.sucsForEx(executingQuery31);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1170() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1170");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18, "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1171() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1171");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.comForKe(kernelTransaction17);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1172() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1172");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService10 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService10.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService10.comForKe(kernelTransaction14);
    boolean boolean16 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService10.faleForExTh(executingQuery17,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService10.strForEx(executingQuery20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService10.rolcForKe(kernelTransaction22, throwable23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService10.rolcForKe(kernelTransaction25);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str9, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService10);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
  }

  @Test
  public void test1173() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1173");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.faleForExTh(executingQuery21,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService0.faleForExTh(executingQuery24, throwable25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService0.faleForExTh(executingQuery27, "hi!");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1174() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1174");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.faleForExTh(executingQuery12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.faleForExTh(executingQuery19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22, throwable23);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1175() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1175");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService3 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService3.rolcForKe(kernelTransaction4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService3.rolcForKe(kernelTransaction6, throwable7);
    boolean boolean9 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService3);
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str11 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str12 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(queryLoggingService3);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str10, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "query-logging" + "'", str12,
        "query-logging");
  }

  @Test
  public void test1176() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1176");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.strForEx(executingQuery17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.sucsForEx(executingQuery19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1177() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1177");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    java.lang.Class<?> wildcardClass18 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass18);
  }

  @Test
  public void test1178() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1178");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6, "", config8,
        path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "query-logging",
        config23, path24);
  }

  @Test
  public void test1179() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1179");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1.0d));
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService3 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService3.rolcForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService3.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService3.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService3.faleForExTh(executingQuery12, throwable13);
    boolean boolean15 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery12);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory16 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean18 = queryLoggingServiceExtensionFactory16.equals((java.lang.Object) (short) 1);
    java.lang.String str19 = queryLoggingServiceExtensionFactory16.getName();
    boolean boolean20 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory16);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory21 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean23 = queryLoggingServiceExtensionFactory21.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory24 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str25 = queryLoggingServiceExtensionFactory24.toString();
    boolean boolean26 = queryLoggingServiceExtensionFactory21.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory24);
    boolean boolean28 = queryLoggingServiceExtensionFactory21.equals((java.lang.Object) (-1.0f));
    boolean boolean29 = queryLoggingServiceExtensionFactory16.equals((java.lang.Object) (-1.0f));
    java.lang.String str30 = queryLoggingServiceExtensionFactory16.getName();
    java.lang.String str31 = queryLoggingServiceExtensionFactory16.toString();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(queryLoggingService3);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "query-logging" + "'", str19,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertEquals(
        "'" + str25 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str25, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertEquals("'" + str30 + "' != '" + "query-logging" + "'", str30,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str31 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str31, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1180() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1180");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.strForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.comForKe(kernelTransaction14);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1181() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1181");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.faleForExTh(executingQuery17, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.faleForExTh(executingQuery20, throwable21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23, throwable24);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    queryLoggingService0.comForKe(kernelTransaction26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService0.sucsForEx(executingQuery28);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1182() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1182");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.sucsForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.sucsForEx(executingQuery17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.faleForExTh(executingQuery19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.strForEx(kernelTransaction24);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    queryLoggingService0.comForKe(kernelTransaction26);
    java.lang.Class<?> wildcardClass28 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass28);
  }

  @Test
  public void test1183() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1183");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.strForEx(executingQuery3);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    queryLoggingService0.sucsForEx(executingQuery5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    queryLoggingService0.faleForExTh(executingQuery7, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.faleForExTh(executingQuery10, throwable11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.sucsForEx(executingQuery15);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1184() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1184");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 1);
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService4 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    queryLoggingService4.strForEx(executingQuery5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService4.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService4.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService4.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService4.strForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService4.strForEx(executingQuery17);
    boolean boolean19 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery17);
    java.lang.String str20 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService21 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService21.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService21.faleForExTh(executingQuery24, "");
    java.lang.Class<?> wildcardClass27 = queryLoggingService21.getClass();
    boolean boolean28 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService21);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory29 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory30 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean32 = queryLoggingServiceExtensionFactory30.equals((java.lang.Object) (-1L));
    boolean boolean33 = queryLoggingServiceExtensionFactory29.equals((java.lang.Object) boolean32);
    java.lang.String str34 = queryLoggingServiceExtensionFactory29.toString();
    java.lang.String str35 = queryLoggingServiceExtensionFactory29.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory36 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean38 = queryLoggingServiceExtensionFactory36.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory39 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str40 = queryLoggingServiceExtensionFactory39.toString();
    boolean boolean41 = queryLoggingServiceExtensionFactory36.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory39);
    boolean boolean42 = queryLoggingServiceExtensionFactory29.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory36);
    java.lang.String str43 = queryLoggingServiceExtensionFactory29.getName();
    boolean boolean44 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory29);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory45 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean47 = queryLoggingServiceExtensionFactory45.equals((java.lang.Object) (short) 1);
    boolean boolean48 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory45);
    java.lang.String str49 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory50 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str51 = queryLoggingServiceExtensionFactory50.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory52 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean54 = queryLoggingServiceExtensionFactory52.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory55 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str56 = queryLoggingServiceExtensionFactory55.toString();
    boolean boolean57 = queryLoggingServiceExtensionFactory52.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory55);
    java.lang.String str58 = queryLoggingServiceExtensionFactory52.getName();
    java.lang.String str59 = queryLoggingServiceExtensionFactory52.getName();
    boolean boolean60 = queryLoggingServiceExtensionFactory50.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory52);
    java.lang.String str61 = queryLoggingServiceExtensionFactory52.toString();
    boolean boolean62 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory52);
    java.lang.String str63 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "query-logging" + "'", str3,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService4);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "query-logging" + "'", str20,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService21);
    org.junit.Assert.assertNotNull(wildcardClass27);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertEquals(
        "'" + str34 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str34, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str35 + "' != '" + "query-logging" + "'", str35,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    org.junit.Assert.assertEquals(
        "'" + str40 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str40, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    org.junit.Assert.assertEquals("'" + str43 + "' != '" + "query-logging" + "'", str43,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    org.junit.Assert.assertEquals(
        "'" + str49 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str49, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str51 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str51, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    org.junit.Assert.assertEquals(
        "'" + str56 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str56, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    org.junit.Assert.assertEquals("'" + str58 + "' != '" + "query-logging" + "'", str58,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str59 + "' != '" + "query-logging" + "'", str59,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    org.junit.Assert.assertEquals(
        "'" + str61 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str61, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    org.junit.Assert.assertEquals(
        "'" + str63 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str63, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1185() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1185");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService7 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService7.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService7.sucsForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService7.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService7.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService7.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService7.sucsForEx(executingQuery21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService7.rolcForKe(kernelTransaction23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService7.rolcForKe(kernelTransaction25, throwable26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService7.comForKe(kernelTransaction28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryLoggingService7.sucsForEx(executingQuery30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService7.strForEx(executingQuery32);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    java.lang.Throwable throwable36 = null;
    queryLoggingService7.faleForExTh(executingQuery35, throwable36);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery38 = null;
    queryLoggingService7.faleForExTh(executingQuery38, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    java.lang.Throwable throwable42 = null;
    queryLoggingService7.faleForExTh(executingQuery41, throwable42);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    queryLoggingService7.strForEx(kernelTransaction44);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService7);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
  }

  @Test
  public void test1186() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1186");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 1);
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService4 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    queryLoggingService4.strForEx(executingQuery5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService4.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService4.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService4.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService4.strForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService4.strForEx(executingQuery17);
    boolean boolean19 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery17);
    java.lang.String str20 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService21 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService21.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService21.faleForExTh(executingQuery24, "");
    java.lang.Class<?> wildcardClass27 = queryLoggingService21.getClass();
    boolean boolean28 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService21);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory29 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory30 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean32 = queryLoggingServiceExtensionFactory30.equals((java.lang.Object) (-1L));
    boolean boolean33 = queryLoggingServiceExtensionFactory29.equals((java.lang.Object) boolean32);
    java.lang.String str34 = queryLoggingServiceExtensionFactory29.toString();
    java.lang.String str35 = queryLoggingServiceExtensionFactory29.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory36 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean38 = queryLoggingServiceExtensionFactory36.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory39 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str40 = queryLoggingServiceExtensionFactory39.toString();
    boolean boolean41 = queryLoggingServiceExtensionFactory36.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory39);
    boolean boolean42 = queryLoggingServiceExtensionFactory29.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory36);
    java.lang.String str43 = queryLoggingServiceExtensionFactory29.getName();
    boolean boolean44 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory29);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory45 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean47 = queryLoggingServiceExtensionFactory45.equals((java.lang.Object) (short) 1);
    boolean boolean48 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory45);
    java.lang.String str49 = queryLoggingServiceExtensionFactory45.getName();
    java.lang.Class<?> wildcardClass50 = queryLoggingServiceExtensionFactory45.getClass();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "query-logging" + "'", str3,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService4);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "query-logging" + "'", str20,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService21);
    org.junit.Assert.assertNotNull(wildcardClass27);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertEquals(
        "'" + str34 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str34, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str35 + "' != '" + "query-logging" + "'", str35,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    org.junit.Assert.assertEquals(
        "'" + str40 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str40, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    org.junit.Assert.assertEquals("'" + str43 + "' != '" + "query-logging" + "'", str43,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    org.junit.Assert.assertEquals("'" + str49 + "' != '" + "query-logging" + "'", str49,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass50);
  }

  @Test
  public void test1187() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1187");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.strForEx(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16, throwable17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.faleForExTh(executingQuery19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.strForEx(kernelTransaction22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService0.sucsForEx(executingQuery24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1188() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1188");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.strForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18, throwable19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1189() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1189");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.faleForExTh(executingQuery23, throwable24);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    java.lang.Throwable throwable27 = null;
    queryLoggingService0.rolcForKe(kernelTransaction26, throwable27);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    queryLoggingService0.strForEx(kernelTransaction29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    java.lang.Throwable throwable32 = null;
    queryLoggingService0.rolcForKe(kernelTransaction31, throwable32);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    queryLoggingService0.faleForExTh(executingQuery34,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService0.sucsForEx(executingQuery37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService0.faleForExTh(executingQuery39, "");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1190() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1190");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.faleForExTh(executingQuery6, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.sucsForEx(executingQuery11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.comForKe(kernelTransaction13);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1191() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1191");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.faleForExTh(executingQuery6, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1192() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1192");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.comForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.sucsForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.faleForExTh(executingQuery13, throwable14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.faleForExTh(executingQuery16, throwable17);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1193() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1193");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.sucsForEx(executingQuery10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1194() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1194");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1195() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1195");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.strForEx(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.strForEx(executingQuery20);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1196() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1196");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj9 = new java.lang.Object();
    java.lang.Class<?> wildcardClass10 = obj9.getClass();
    boolean boolean11 = queryLoggingServiceExtensionFactory0.equals(obj9);
    java.lang.String str12 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str13 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Class<?> wildcardClass14 = queryLoggingServiceExtensionFactory0.getClass();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "query-logging" + "'", str12,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "query-logging" + "'", str13,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass14);
  }

  @Test
  public void test1197() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1197");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.strForEx(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.faleForExTh(executingQuery13,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.strForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1198() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1198");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory2 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean4 = queryLoggingServiceExtensionFactory2.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory5 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str6 = queryLoggingServiceExtensionFactory5.toString();
    boolean boolean7 = queryLoggingServiceExtensionFactory2.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory5);
    java.lang.String str8 = queryLoggingServiceExtensionFactory2.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory2.getName();
    boolean boolean10 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory2);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService11 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService11.strForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService11.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService11.rolcForKe(kernelTransaction17, throwable18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService11.strForEx(executingQuery20);
    boolean boolean22 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService11);
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl23 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction24 = null;
    org.neo4j.configuration.Config config26 = null;
    java.nio.file.Path path27 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl23.init(fileSystemAbstraction24,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config26, path27);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction29 = null;
    org.neo4j.configuration.Config config31 = null;
    java.nio.file.Path path32 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl23.init(fileSystemAbstraction29,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config31, path32);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction34 = null;
    org.neo4j.configuration.Config config36 = null;
    java.nio.file.Path path37 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl23.init(fileSystemAbstraction34,
        "query-logging", config36, path37);
    boolean boolean39 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) fileSystemAbstraction34);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService40 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction41 = null;
    java.lang.Throwable throwable42 = null;
    queryLoggingService40.rolcForKe(kernelTransaction41, throwable42);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery44 = null;
    queryLoggingService40.sucsForEx(executingQuery44);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery46 = null;
    queryLoggingService40.strForEx(executingQuery46);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery48 = null;
    queryLoggingService40.faleForExTh(executingQuery48, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction51 = null;
    java.lang.Throwable throwable52 = null;
    queryLoggingService40.rolcForKe(kernelTransaction51, throwable52);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction54 = null;
    queryLoggingService40.strForEx(kernelTransaction54);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery56 = null;
    queryLoggingService40.faleForExTh(executingQuery56,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction59 = null;
    queryLoggingService40.strForEx(kernelTransaction59);
    boolean boolean61 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction59);
    java.lang.String str62 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str6, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertNotNull(queryLoggingService11);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertNotNull(queryLoggingService40);
    org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    org.junit.Assert.assertEquals("'" + str62 + "' != '" + "query-logging" + "'", str62,
        "query-logging");
  }

  @Test
  public void test1199() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1199");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService5.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService5.strForEx(executingQuery15);
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery15);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService18 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService18.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService18.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService18.faleForExTh(executingQuery24, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService18.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService18.faleForExTh(executingQuery29, throwable30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService18.sucsForEx(executingQuery32);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService18);
    java.lang.String str35 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str36 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService37 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction38 = null;
    queryLoggingService37.rolcForKe(kernelTransaction38);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery40 = null;
    queryLoggingService37.faleForExTh(executingQuery40, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    java.lang.Throwable throwable44 = null;
    queryLoggingService37.faleForExTh(executingQuery43, throwable44);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction46 = null;
    queryLoggingService37.strForEx(kernelTransaction46);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery48 = null;
    queryLoggingService37.faleForExTh(executingQuery48, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction51 = null;
    java.lang.Throwable throwable52 = null;
    queryLoggingService37.rolcForKe(kernelTransaction51, throwable52);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction54 = null;
    queryLoggingService37.comForKe(kernelTransaction54);
    boolean boolean56 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery57 = null;
    queryLoggingService37.faleForExTh(executingQuery57, "hi!");
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(queryLoggingService18);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertEquals(
        "'" + str35 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str35, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str36 + "' != '" + "query-logging" + "'", str36,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService37);
    org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
  }

  @Test
  public void test1200() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1200");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.faleForExTh(executingQuery17, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.faleForExTh(executingQuery20, throwable21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.strForEx(executingQuery23);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1201() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1201");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "hi!", config13,
        path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "hi!", config23,
        path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "hi!", config28,
        path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31, "", config33,
        path34);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction36 = null;
    org.neo4j.configuration.Config config38 = null;
    java.nio.file.Path path39 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction36,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config38, path39);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction41 = null;
    org.neo4j.configuration.Config config43 = null;
    java.nio.file.Path path44 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction41, "", config43,
        path44);
  }

  @Test
  public void test1202() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1202");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService5.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService5.strForEx(executingQuery15);
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery15);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService18 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService18.strForEx(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService18.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService18.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService18.comForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService18.faleForExTh(executingQuery29, "");
    boolean boolean32 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) "");
    java.lang.String str33 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str34 = queryLoggingServiceExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext35 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies36 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle37 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext35, queryLoggingServiceDependencies36);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(queryLoggingService18);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertEquals(
        "'" + str33 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str33, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str34 + "' != '" + "query-logging" + "'", str34,
        "query-logging");
  }

  @Test
  public void test1203() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1203");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory2 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean5 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) (-1L));
    boolean boolean6 = queryLoggingServiceExtensionFactory2.equals((java.lang.Object) boolean5);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService7 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService7.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService7.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService7.rolcForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService7.sucsForEx(executingQuery15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService7.strForEx(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService7.faleForExTh(executingQuery19,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    boolean boolean22 = queryLoggingServiceExtensionFactory2.equals(
        (java.lang.Object) "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService23 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService23.faleForExTh(executingQuery24,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService23.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService23.rolcForKe(kernelTransaction29, throwable30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService23.strForEx(executingQuery32);
    boolean boolean34 = queryLoggingServiceExtensionFactory2.equals(
        (java.lang.Object) queryLoggingService23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction35 = null;
    queryLoggingService23.comForKe(kernelTransaction35);
    boolean boolean37 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService23);
    java.lang.String str38 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNotNull(queryLoggingService7);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertNotNull(queryLoggingService23);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertEquals("'" + str38 + "' != '" + "query-logging" + "'", str38,
        "query-logging");
  }

  @Test
  public void test1204() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1204");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService5.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService5.strForEx(executingQuery15);
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery15);
    java.lang.String str18 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str19 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str20 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertEquals(
        "'" + str18 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str18, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str19 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str19, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "query-logging" + "'", str20,
        "query-logging");
  }

  @Test
  public void test1205() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1205");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.strForEx(executingQuery12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.comForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.faleForExTh(executingQuery16, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.strForEx(kernelTransaction19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1206() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1206");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.sucsForEx(executingQuery17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19, throwable20);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1207() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1207");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.faleForExTh(executingQuery12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.comForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.comForKe(kernelTransaction23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService0.faleForExTh(executingQuery25,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService0.comForKe(kernelTransaction28);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1208() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1208");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1.0d));
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl4 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction5 = null;
    org.neo4j.configuration.Config config7 = null;
    java.nio.file.Path path8 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl4.init(fileSystemAbstraction5, "", config7,
        path8);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction10 = null;
    org.neo4j.configuration.Config config12 = null;
    java.nio.file.Path path13 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl4.init(fileSystemAbstraction10, "hi!", config12,
        path13);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction15 = null;
    org.neo4j.configuration.Config config17 = null;
    java.nio.file.Path path18 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl4.init(fileSystemAbstraction15, "query-logging",
        config17, path18);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.configuration.Config config22 = null;
    java.nio.file.Path path23 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl4.init(fileSystemAbstraction20, "", config22,
        path23);
    boolean boolean25 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) fileSystemAbstraction20);
    java.lang.String str26 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str27 = queryLoggingServiceExtensionFactory0.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext28 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies29 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle30 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext28, queryLoggingServiceDependencies29);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "query-logging" + "'", str3,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertEquals(
        "'" + str26 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str26, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str27 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str27, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1209() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1209");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.Object obj5 = new java.lang.Object();
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals(obj5);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService8.comForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService8.strForEx(executingQuery19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService8.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService8.comForKe(kernelTransaction24);
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    java.lang.Throwable throwable28 = null;
    queryLoggingService8.rolcForKe(kernelTransaction27, throwable28);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    queryLoggingService8.strForEx(kernelTransaction30);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
  }

  @Test
  public void test1210() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1210");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.faleForExTh(executingQuery16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19, throwable20);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1211() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1211");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.faleForExTh(executingQuery13, throwable14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.strForEx(executingQuery16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.comForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.strForEx(executingQuery20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.strForEx(kernelTransaction22);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1212() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1212");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.strForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.faleForExTh(executingQuery22, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService0.strForEx(executingQuery25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService0.faleForExTh(executingQuery27, "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1213() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1213");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.strForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1214() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1214");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.rolcForKe(kernelTransaction4, throwable5);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction7 = null;
    queryLoggingService0.comForKe(kernelTransaction7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.sucsForEx(executingQuery9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.comForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.comForKe(kernelTransaction18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1215() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1215");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.strForEx(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.faleForExTh(executingQuery13, throwable14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.faleForExTh(executingQuery16, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.strForEx(executingQuery19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService0.sucsForEx(executingQuery24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1216() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1216");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.strForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.faleForExTh(executingQuery22, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService0.rolcForKe(kernelTransaction25);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1217() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1217");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService5.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService5.sucsForEx(executingQuery9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.comForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.faleForExTh(executingQuery13, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService5.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService5.faleForExTh(executingQuery18, "query-logging");
    boolean boolean21 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) "query-logging");
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory22 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory23 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean25 = queryLoggingServiceExtensionFactory23.equals((java.lang.Object) (-1L));
    boolean boolean26 = queryLoggingServiceExtensionFactory22.equals((java.lang.Object) boolean25);
    boolean boolean28 = queryLoggingServiceExtensionFactory22.equals((java.lang.Object) 0L);
    java.lang.String str29 = queryLoggingServiceExtensionFactory22.toString();
    java.lang.String str30 = queryLoggingServiceExtensionFactory22.getName();
    java.lang.String str31 = queryLoggingServiceExtensionFactory22.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService32 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    java.lang.Throwable throwable34 = null;
    queryLoggingService32.rolcForKe(kernelTransaction33, throwable34);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    queryLoggingService32.comForKe(kernelTransaction36);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery38 = null;
    java.lang.Throwable throwable39 = null;
    queryLoggingService32.faleForExTh(executingQuery38, throwable39);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction41 = null;
    queryLoggingService32.comForKe(kernelTransaction41);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService32.strForEx(executingQuery43);
    boolean boolean45 = queryLoggingServiceExtensionFactory22.equals(
        (java.lang.Object) queryLoggingService32);
    java.lang.String str46 = queryLoggingServiceExtensionFactory22.toString();
    boolean boolean47 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) str46);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertEquals(
        "'" + str29 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str29, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str30 + "' != '" + "query-logging" + "'", str30,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str31 + "' != '" + "query-logging" + "'", str31,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService32);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    org.junit.Assert.assertEquals(
        "'" + str46 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str46, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
  }

  @Test
  public void test1218() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1218");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.comForKe(kernelTransaction15);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1219() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1219");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.sucsForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18, "");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1220() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1220");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.comForKe(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.comForKe(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1221() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1221");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    boolean boolean8 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService10 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService10.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService10.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService10.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService10.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService10.strForEx(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService10.rolcForKe(kernelTransaction22, throwable23);
    boolean boolean25 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable23);
    java.lang.String str26 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService27 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService27.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    java.lang.Throwable throwable32 = null;
    queryLoggingService27.faleForExTh(executingQuery31, throwable32);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    java.lang.Throwable throwable35 = null;
    queryLoggingService27.faleForExTh(executingQuery34, throwable35);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction37 = null;
    java.lang.Throwable throwable38 = null;
    queryLoggingService27.rolcForKe(kernelTransaction37, throwable38);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    queryLoggingService27.strForEx(kernelTransaction40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    queryLoggingService27.faleForExTh(executingQuery42, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery45 = null;
    queryLoggingService27.strForEx(executingQuery45);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction47 = null;
    java.lang.Throwable throwable48 = null;
    queryLoggingService27.rolcForKe(kernelTransaction47, throwable48);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction50 = null;
    queryLoggingService27.comForKe(kernelTransaction50);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction52 = null;
    queryLoggingService27.comForKe(kernelTransaction52);
    boolean boolean54 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery55 = null;
    queryLoggingService27.sucsForEx(executingQuery55);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str9, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService10);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertEquals(
        "'" + str26 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str26, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService27);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
  }

  @Test
  public void test1222() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1222");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.comForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1223() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1223");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "", config13,
        path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "hi!", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "", config23,
        path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "", config28,
        path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31, "hi!", config33,
        path34);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction36 = null;
    org.neo4j.configuration.Config config38 = null;
    java.nio.file.Path path39 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction36, "query-logging",
        config38, path39);
  }

  @Test
  public void test1224() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1224");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory8 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean10 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) (-1L));
    boolean boolean11 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) boolean10);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService12 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService12.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService12.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService12.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService12.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService12.strForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) executingQuery22);
    boolean boolean25 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    java.lang.String str26 = queryLoggingServiceExtensionFactory7.getName();
    java.lang.String str27 = queryLoggingServiceExtensionFactory7.getName();
    java.lang.String str28 = queryLoggingServiceExtensionFactory7.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext29 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies30 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle31 = queryLoggingServiceExtensionFactory7.newInstance(
          extensionContext29, queryLoggingServiceDependencies30);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(queryLoggingService12);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "query-logging" + "'", str26,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "query-logging" + "'", str27,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str28 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str28, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1225() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1225");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1226() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1226");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.sucsForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1227() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1227");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService10 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService10.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService10.comForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService10.faleForExTh(executingQuery16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService10.comForKe(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService10.strForEx(executingQuery21);
    boolean boolean23 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService10);
    java.lang.String str24 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService25 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    java.lang.Throwable throwable27 = null;
    queryLoggingService25.rolcForKe(kernelTransaction26, throwable27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService25.sucsForEx(executingQuery29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService25.rolcForKe(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService25.sucsForEx(executingQuery33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService25.faleForExTh(executingQuery35, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery38 = null;
    queryLoggingService25.strForEx(executingQuery38);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery40 = null;
    queryLoggingService25.faleForExTh(executingQuery40, "query-logging");
    boolean boolean43 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery40);
    java.lang.String str44 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService10);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "query-logging" + "'", str24,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService25);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertEquals("'" + str44 + "' != '" + "query-logging" + "'", str44,
        "query-logging");
  }

  @Test
  public void test1228() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1228");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "hi!", config13,
        path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "hi!", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config23, path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config28, path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config33, path34);
  }

  @Test
  public void test1229() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1229");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.faleForExTh(executingQuery12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17, throwable18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20, throwable21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23, throwable24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1230() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1230");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService5.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService5.strForEx(executingQuery15);
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery15);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService18 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService18.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService18.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService18.faleForExTh(executingQuery24, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService18.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService18.faleForExTh(executingQuery29, throwable30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService18.sucsForEx(executingQuery32);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService18);
    java.lang.String str35 = queryLoggingServiceExtensionFactory0.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext36 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies37 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle38 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext36, queryLoggingServiceDependencies37);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(queryLoggingService18);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertEquals(
        "'" + str35 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str35, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1231() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1231");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.comForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.strForEx(kernelTransaction11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.comForKe(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.strForEx(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19);
    java.lang.Class<?> wildcardClass21 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass21);
  }

  @Test
  public void test1232() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1232");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.rolcForKe(kernelTransaction4, throwable5);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1233() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1233");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.strForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1234() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1234");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.strForEx(executingQuery3);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    queryLoggingService0.sucsForEx(executingQuery5);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction7 = null;
    queryLoggingService0.strForEx(kernelTransaction7);
    java.lang.Class<?> wildcardClass9 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass9);
  }

  @Test
  public void test1235() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1235");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.faleForExTh(executingQuery20, throwable21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.strForEx(kernelTransaction23);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1236() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1236");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.Object obj10 = null;
    boolean boolean11 = queryLoggingServiceExtensionFactory3.equals(obj10);
    java.lang.String str12 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str13 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str14 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str15 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str16 = queryLoggingServiceExtensionFactory3.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService17 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService17.faleForExTh(executingQuery18,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService17.faleForExTh(executingQuery21,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService17.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService17.faleForExTh(executingQuery27, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryLoggingService17.strForEx(executingQuery30);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction32 = null;
    queryLoggingService17.rolcForKe(kernelTransaction32);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    queryLoggingService17.sucsForEx(executingQuery34);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery36 = null;
    queryLoggingService17.faleForExTh(executingQuery36, "");
    boolean boolean39 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery36);
    java.lang.String str40 = queryLoggingServiceExtensionFactory3.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext41 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies42 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle43 = queryLoggingServiceExtensionFactory3.newInstance(
          extensionContext41, queryLoggingServiceDependencies42);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertEquals(
        "'" + str12 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str12, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "query-logging" + "'", str13,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str14 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str14, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str15 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str15, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str16 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str16, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService17);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertEquals(
        "'" + str40 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str40, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1237() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1237");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config3, path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "hi!", config23,
        path24);
  }

  @Test
  public void test1238() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1238");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.comForKe(kernelTransaction11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.strForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1239() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1239");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean9 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory10 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str11 = queryLoggingServiceExtensionFactory10.toString();
    boolean boolean12 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory10);
    boolean boolean13 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    java.lang.Object obj14 = null;
    boolean boolean15 = queryLoggingServiceExtensionFactory0.equals(obj14);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory16 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory17 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean19 = queryLoggingServiceExtensionFactory17.equals((java.lang.Object) (-1L));
    boolean boolean20 = queryLoggingServiceExtensionFactory16.equals((java.lang.Object) boolean19);
    boolean boolean22 = queryLoggingServiceExtensionFactory16.equals((java.lang.Object) 0L);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory23 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory24 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean26 = queryLoggingServiceExtensionFactory24.equals((java.lang.Object) (-1L));
    boolean boolean27 = queryLoggingServiceExtensionFactory23.equals((java.lang.Object) boolean26);
    java.lang.Object obj28 = new java.lang.Object();
    boolean boolean29 = queryLoggingServiceExtensionFactory23.equals(obj28);
    java.lang.String str30 = queryLoggingServiceExtensionFactory23.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService31 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService31.strForEx(executingQuery32);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    java.lang.Throwable throwable35 = null;
    queryLoggingService31.faleForExTh(executingQuery34, throwable35);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction37 = null;
    java.lang.Throwable throwable38 = null;
    queryLoggingService31.rolcForKe(kernelTransaction37, throwable38);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    queryLoggingService31.comForKe(kernelTransaction40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    queryLoggingService31.strForEx(executingQuery42);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    java.lang.Throwable throwable45 = null;
    queryLoggingService31.rolcForKe(kernelTransaction44, throwable45);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction47 = null;
    queryLoggingService31.comForKe(kernelTransaction47);
    boolean boolean49 = queryLoggingServiceExtensionFactory23.equals(
        (java.lang.Object) queryLoggingService31);
    boolean boolean50 = queryLoggingServiceExtensionFactory16.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory23);
    boolean boolean51 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory23);
    java.lang.String str52 = queryLoggingServiceExtensionFactory23.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService53 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction54 = null;
    queryLoggingService53.rolcForKe(kernelTransaction54);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction56 = null;
    java.lang.Throwable throwable57 = null;
    queryLoggingService53.rolcForKe(kernelTransaction56, throwable57);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery59 = null;
    queryLoggingService53.faleForExTh(executingQuery59, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction62 = null;
    queryLoggingService53.rolcForKe(kernelTransaction62);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery64 = null;
    java.lang.Throwable throwable65 = null;
    queryLoggingService53.faleForExTh(executingQuery64, throwable65);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery67 = null;
    queryLoggingService53.sucsForEx(executingQuery67);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction69 = null;
    queryLoggingService53.comForKe(kernelTransaction69);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction71 = null;
    queryLoggingService53.rolcForKe(kernelTransaction71);
    boolean boolean73 = queryLoggingServiceExtensionFactory23.equals(
        (java.lang.Object) queryLoggingService53);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery74 = null;
    queryLoggingService53.sucsForEx(executingQuery74);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertEquals("'" + str30 + "' != '" + "query-logging" + "'", str30,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService31);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    org.junit.Assert.assertEquals(
        "'" + str52 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str52, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService53);
    org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
  }

  @Test
  public void test1240() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1240");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.strForEx(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.sucsForEx(executingQuery21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.faleForExTh(executingQuery23, "hi!");
    java.lang.Class<?> wildcardClass26 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass26);
  }

  @Test
  public void test1241() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1241");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.strForEx(executingQuery12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14, throwable15);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1242() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1242");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.strForEx(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.strForEx(executingQuery16);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1243() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1243");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20, throwable21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23, throwable24);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    queryLoggingService0.comForKe(kernelTransaction26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService0.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    java.lang.Throwable throwable32 = null;
    queryLoggingService0.faleForExTh(executingQuery31, throwable32);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1244() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1244");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "", config13,
        path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "hi!", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "", config23,
        path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "", config28,
        path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31, "hi!", config33,
        path34);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction36 = null;
    org.neo4j.configuration.Config config38 = null;
    java.nio.file.Path path39 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction36, "hi!", config38,
        path39);
  }

  @Test
  public void test1245() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1245");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.strForEx(executingQuery21);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1246() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1246");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.Object obj5 = new java.lang.Object();
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals(obj5);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService7 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService7.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService7.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService7.rolcForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService7.sucsForEx(executingQuery15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService7.strForEx(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService7.faleForExTh(executingQuery19,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService7.rolcForKe(kernelTransaction22, throwable23);
    boolean boolean25 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction22);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory26 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str27 = queryLoggingServiceExtensionFactory26.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory28 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean30 = queryLoggingServiceExtensionFactory28.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory31 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str32 = queryLoggingServiceExtensionFactory31.toString();
    boolean boolean33 = queryLoggingServiceExtensionFactory28.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory31);
    java.lang.String str34 = queryLoggingServiceExtensionFactory28.getName();
    java.lang.String str35 = queryLoggingServiceExtensionFactory28.getName();
    boolean boolean36 = queryLoggingServiceExtensionFactory26.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory28);
    java.lang.String str37 = queryLoggingServiceExtensionFactory28.toString();
    java.lang.String str38 = queryLoggingServiceExtensionFactory28.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService39 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    queryLoggingService39.rolcForKe(kernelTransaction40);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction42 = null;
    java.lang.Throwable throwable43 = null;
    queryLoggingService39.rolcForKe(kernelTransaction42, throwable43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    java.lang.Throwable throwable46 = null;
    queryLoggingService39.rolcForKe(kernelTransaction45, throwable46);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction48 = null;
    java.lang.Throwable throwable49 = null;
    queryLoggingService39.rolcForKe(kernelTransaction48, throwable49);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction51 = null;
    queryLoggingService39.rolcForKe(kernelTransaction51);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction53 = null;
    queryLoggingService39.rolcForKe(kernelTransaction53);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    java.lang.Throwable throwable56 = null;
    queryLoggingService39.rolcForKe(kernelTransaction55, throwable56);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction58 = null;
    java.lang.Throwable throwable59 = null;
    queryLoggingService39.rolcForKe(kernelTransaction58, throwable59);
    boolean boolean61 = queryLoggingServiceExtensionFactory28.equals(
        (java.lang.Object) queryLoggingService39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery62 = null;
    queryLoggingService39.faleForExTh(executingQuery62, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery65 = null;
    queryLoggingService39.strForEx(executingQuery65);
    boolean boolean67 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery68 = null;
    queryLoggingService39.sucsForEx(executingQuery68);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNotNull(queryLoggingService7);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertEquals(
        "'" + str27 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str27, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    org.junit.Assert.assertEquals(
        "'" + str32 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str32, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    org.junit.Assert.assertEquals("'" + str34 + "' != '" + "query-logging" + "'", str34,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str35 + "' != '" + "query-logging" + "'", str35,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    org.junit.Assert.assertEquals(
        "'" + str37 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str37, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str38 + "' != '" + "query-logging" + "'", str38,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService39);
    org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
  }

  @Test
  public void test1247() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1247");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.faleForExTh(executingQuery6, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.comForKe(kernelTransaction11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1248() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1248");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23, throwable24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1249() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1249");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.faleForExTh(executingQuery21, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService0.faleForExTh(executingQuery24, throwable25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService0.strForEx(executingQuery27);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1250() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1250");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16, throwable17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.sucsForEx(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService0.faleForExTh(executingQuery24, throwable25);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1251() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1251");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.strForEx(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.strForEx(executingQuery16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.comForKe(kernelTransaction18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20, throwable21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.faleForExTh(executingQuery23, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    java.lang.Throwable throwable27 = null;
    queryLoggingService0.faleForExTh(executingQuery26, throwable27);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1252() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1252");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 1);
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService4 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    queryLoggingService4.strForEx(executingQuery5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService4.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService4.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService4.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService4.strForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService4.strForEx(executingQuery17);
    boolean boolean19 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery17);
    java.lang.String str20 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str21 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str22 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl23 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction24 = null;
    org.neo4j.configuration.Config config26 = null;
    java.nio.file.Path path27 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl23.init(fileSystemAbstraction24, "hi!",
        config26, path27);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction29 = null;
    org.neo4j.configuration.Config config31 = null;
    java.nio.file.Path path32 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl23.init(fileSystemAbstraction29,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config31, path32);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction34 = null;
    org.neo4j.configuration.Config config36 = null;
    java.nio.file.Path path37 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl23.init(fileSystemAbstraction34,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config36, path37);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction39 = null;
    org.neo4j.configuration.Config config41 = null;
    java.nio.file.Path path42 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl23.init(fileSystemAbstraction39,
        "query-logging", config41, path42);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction44 = null;
    org.neo4j.configuration.Config config46 = null;
    java.nio.file.Path path47 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl23.init(fileSystemAbstraction44,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config46, path47);
    boolean boolean49 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "query-logging" + "'", str3,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService4);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "query-logging" + "'", str20,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str21 + "' != '" + "query-logging" + "'", str21,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str22 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str22, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
  }

  @Test
  public void test1253() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1253");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService2 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService2.rolcForKe(kernelTransaction3, throwable4);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable4);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str11 = queryLoggingServiceExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext12 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies13 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle14 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext12, queryLoggingServiceDependencies13);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService2);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str9, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "query-logging" + "'", str10,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "query-logging" + "'", str11,
        "query-logging");
  }

  @Test
  public void test1254() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1254");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.faleForExTh(executingQuery16,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.sucsForEx(executingQuery19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1255() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1255");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str2 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService4 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction5 = null;
    java.lang.Throwable throwable6 = null;
    queryLoggingService4.rolcForKe(kernelTransaction5, throwable6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService4.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService4.sucsForEx(executingQuery10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService4.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService4.comForKe(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService4.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService4.rolcForKe(kernelTransaction18);
    boolean boolean20 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService4);
    java.lang.String str21 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "query-logging" + "'", str2,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str3, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService4);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertEquals(
        "'" + str21 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str21, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1256() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1256");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.faleForExTh(executingQuery12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1257() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1257");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.faleForExTh(executingQuery16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.strForEx(executingQuery21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23, throwable24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1258() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1258");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.rolcForKe(kernelTransaction4, throwable5);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction7 = null;
    queryLoggingService0.comForKe(kernelTransaction7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.sucsForEx(executingQuery9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.comForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1259() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1259");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str11 = queryLoggingServiceExtensionFactory3.getName();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str10, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "query-logging" + "'", str11,
        "query-logging");
  }

  @Test
  public void test1260() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1260");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.Object obj5 = new java.lang.Object();
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals(obj5);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService8.comForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService8.strForEx(executingQuery19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService8.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService8.comForKe(kernelTransaction24);
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService8);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService27 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService27.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryLoggingService27.sucsForEx(executingQuery31);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    queryLoggingService27.comForKe(kernelTransaction33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService27.faleForExTh(executingQuery35, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction38 = null;
    queryLoggingService27.strForEx(kernelTransaction38);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    java.lang.Throwable throwable41 = null;
    queryLoggingService27.rolcForKe(kernelTransaction40, throwable41);
    boolean boolean43 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction40);
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl44 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction45 = null;
    org.neo4j.configuration.Config config47 = null;
    java.nio.file.Path path48 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl44.init(fileSystemAbstraction45,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config47, path48);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction50 = null;
    org.neo4j.configuration.Config config52 = null;
    java.nio.file.Path path53 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl44.init(fileSystemAbstraction50,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config52, path53);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction55 = null;
    org.neo4j.configuration.Config config57 = null;
    java.nio.file.Path path58 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl44.init(fileSystemAbstraction55, "", config57,
        path58);
    boolean boolean60 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) diagnosticsOfflineReportProviderQueryLoggingImpl44);
    java.lang.String str61 = queryLoggingServiceExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext62 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies63 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle64 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext62, queryLoggingServiceDependencies63);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertNotNull(queryLoggingService27);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    org.junit.Assert.assertEquals("'" + str61 + "' != '" + "query-logging" + "'", str61,
        "query-logging");
  }

  @Test
  public void test1261() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1261");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory2 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean4 = queryLoggingServiceExtensionFactory2.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory5 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str6 = queryLoggingServiceExtensionFactory5.toString();
    boolean boolean7 = queryLoggingServiceExtensionFactory2.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory5);
    java.lang.String str8 = queryLoggingServiceExtensionFactory2.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory2.getName();
    boolean boolean10 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory2);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService11 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService11.strForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService11.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService11.rolcForKe(kernelTransaction17, throwable18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService11.strForEx(executingQuery20);
    boolean boolean22 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService11);
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl23 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction24 = null;
    org.neo4j.configuration.Config config26 = null;
    java.nio.file.Path path27 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl23.init(fileSystemAbstraction24,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config26, path27);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction29 = null;
    org.neo4j.configuration.Config config31 = null;
    java.nio.file.Path path32 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl23.init(fileSystemAbstraction29,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config31, path32);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction34 = null;
    org.neo4j.configuration.Config config36 = null;
    java.nio.file.Path path37 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl23.init(fileSystemAbstraction34,
        "query-logging", config36, path37);
    boolean boolean39 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) fileSystemAbstraction34);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService40 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction41 = null;
    java.lang.Throwable throwable42 = null;
    queryLoggingService40.rolcForKe(kernelTransaction41, throwable42);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery44 = null;
    java.lang.Throwable throwable45 = null;
    queryLoggingService40.faleForExTh(executingQuery44, throwable45);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    java.lang.Throwable throwable48 = null;
    queryLoggingService40.faleForExTh(executingQuery47, throwable48);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction50 = null;
    java.lang.Throwable throwable51 = null;
    queryLoggingService40.rolcForKe(kernelTransaction50, throwable51);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction53 = null;
    queryLoggingService40.strForEx(kernelTransaction53);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    queryLoggingService40.strForEx(kernelTransaction55);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction57 = null;
    java.lang.Throwable throwable58 = null;
    queryLoggingService40.rolcForKe(kernelTransaction57, throwable58);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery60 = null;
    queryLoggingService40.sucsForEx(executingQuery60);
    boolean boolean62 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery60);
    java.lang.String str63 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str6, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertNotNull(queryLoggingService11);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertNotNull(queryLoggingService40);
    org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    org.junit.Assert.assertEquals(
        "'" + str63 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str63, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1262() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1262");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService8.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService8.sucsForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery22);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService25 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService25.strForEx(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService25.faleForExTh(executingQuery28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService25.rolcForKe(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService25.sucsForEx(executingQuery33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService25.strForEx(executingQuery35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService25.sucsForEx(executingQuery37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService25.sucsForEx(executingQuery39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    queryLoggingService25.sucsForEx(executingQuery41);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService25.strForEx(executingQuery43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    java.lang.Throwable throwable46 = null;
    queryLoggingService25.rolcForKe(kernelTransaction45, throwable46);
    boolean boolean48 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery49 = null;
    java.lang.Throwable throwable50 = null;
    queryLoggingService25.faleForExTh(executingQuery49, throwable50);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction52 = null;
    java.lang.Throwable throwable53 = null;
    queryLoggingService25.rolcForKe(kernelTransaction52, throwable53);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    java.lang.Throwable throwable56 = null;
    queryLoggingService25.rolcForKe(kernelTransaction55, throwable56);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction58 = null;
    queryLoggingService25.rolcForKe(kernelTransaction58);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(queryLoggingService25);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
  }

  @Test
  public void test1263() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1263");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18, throwable19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1264() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1264");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean9 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory10 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str11 = queryLoggingServiceExtensionFactory10.toString();
    boolean boolean12 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory10);
    boolean boolean13 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    java.lang.String str14 = queryLoggingServiceExtensionFactory7.getName();
    java.lang.String str15 = queryLoggingServiceExtensionFactory7.toString();
    java.lang.String str16 = queryLoggingServiceExtensionFactory7.toString();
    java.lang.String str17 = queryLoggingServiceExtensionFactory7.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService18 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService18.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService18.faleForExTh(executingQuery21, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService18.sucsForEx(executingQuery24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    java.lang.Throwable throwable27 = null;
    queryLoggingService18.faleForExTh(executingQuery26, throwable27);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    queryLoggingService18.strForEx(kernelTransaction29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryLoggingService18.strForEx(executingQuery31);
    boolean boolean33 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) executingQuery31);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "query-logging" + "'", str14,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str15 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str15, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str16 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str16, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str17 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str17, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService18);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
  }

  @Test
  public void test1265() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1265");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService10 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService10.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService10.comForKe(kernelTransaction14);
    boolean boolean16 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService10.faleForExTh(executingQuery17,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService10.rolcForKe(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService10.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService10.strForEx(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService10.sucsForEx(executingQuery26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService10.comForKe(kernelTransaction28);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str9, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService10);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
  }

  @Test
  public void test1266() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1266");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 1);
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService4 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    queryLoggingService4.strForEx(executingQuery5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService4.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService4.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService4.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService4.strForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService4.strForEx(executingQuery17);
    boolean boolean19 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery17);
    java.lang.String str20 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService21 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService21.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService21.faleForExTh(executingQuery24, "");
    java.lang.Class<?> wildcardClass27 = queryLoggingService21.getClass();
    boolean boolean28 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService21);
    java.lang.String str29 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory30 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str31 = queryLoggingServiceExtensionFactory30.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService32 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    java.lang.Throwable throwable34 = null;
    queryLoggingService32.rolcForKe(kernelTransaction33, throwable34);
    boolean boolean36 = queryLoggingServiceExtensionFactory30.equals(
        (java.lang.Object) throwable34);
    java.lang.String str37 = queryLoggingServiceExtensionFactory30.toString();
    java.lang.String str38 = queryLoggingServiceExtensionFactory30.toString();
    java.lang.String str39 = queryLoggingServiceExtensionFactory30.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService40 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction41 = null;
    queryLoggingService40.rolcForKe(kernelTransaction41);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction43 = null;
    java.lang.Throwable throwable44 = null;
    queryLoggingService40.rolcForKe(kernelTransaction43, throwable44);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction46 = null;
    queryLoggingService40.rolcForKe(kernelTransaction46);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery48 = null;
    queryLoggingService40.sucsForEx(executingQuery48);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction50 = null;
    queryLoggingService40.strForEx(kernelTransaction50);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction52 = null;
    java.lang.Throwable throwable53 = null;
    queryLoggingService40.rolcForKe(kernelTransaction52, throwable53);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    java.lang.Throwable throwable56 = null;
    queryLoggingService40.rolcForKe(kernelTransaction55, throwable56);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction58 = null;
    queryLoggingService40.rolcForKe(kernelTransaction58);
    boolean boolean60 = queryLoggingServiceExtensionFactory30.equals(
        (java.lang.Object) kernelTransaction58);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory61 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory62 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean64 = queryLoggingServiceExtensionFactory62.equals((java.lang.Object) (-1L));
    boolean boolean65 = queryLoggingServiceExtensionFactory61.equals((java.lang.Object) boolean64);
    java.lang.Object obj66 = new java.lang.Object();
    boolean boolean67 = queryLoggingServiceExtensionFactory61.equals(obj66);
    java.lang.String str68 = queryLoggingServiceExtensionFactory61.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService69 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery70 = null;
    queryLoggingService69.strForEx(executingQuery70);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery72 = null;
    java.lang.Throwable throwable73 = null;
    queryLoggingService69.faleForExTh(executingQuery72, throwable73);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction75 = null;
    java.lang.Throwable throwable76 = null;
    queryLoggingService69.rolcForKe(kernelTransaction75, throwable76);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction78 = null;
    queryLoggingService69.comForKe(kernelTransaction78);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery80 = null;
    queryLoggingService69.strForEx(executingQuery80);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction82 = null;
    java.lang.Throwable throwable83 = null;
    queryLoggingService69.rolcForKe(kernelTransaction82, throwable83);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction85 = null;
    queryLoggingService69.comForKe(kernelTransaction85);
    boolean boolean87 = queryLoggingServiceExtensionFactory61.equals(
        (java.lang.Object) queryLoggingService69);
    java.lang.Class<?> wildcardClass88 = queryLoggingService69.getClass();
    boolean boolean89 = queryLoggingServiceExtensionFactory30.equals(
        (java.lang.Object) wildcardClass88);
    boolean boolean90 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) wildcardClass88);
    java.lang.String str91 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "query-logging" + "'", str3,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService4);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "query-logging" + "'", str20,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService21);
    org.junit.Assert.assertNotNull(wildcardClass27);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertEquals(
        "'" + str29 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str29, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str31 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str31, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService32);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertEquals(
        "'" + str37 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str37, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str38 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str38, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str39 + "' != '" + "query-logging" + "'", str39,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService40);
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    org.junit.Assert.assertEquals("'" + str68 + "' != '" + "query-logging" + "'", str68,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService69);
    org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    org.junit.Assert.assertNotNull(wildcardClass88);
    org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    org.junit.Assert.assertEquals("'" + str91 + "' != '" + "query-logging" + "'", str91,
        "query-logging");
  }

  @Test
  public void test1267() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1267");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.rolcForKe(kernelTransaction4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    queryLoggingService0.strForEx(executingQuery7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1268() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1268");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService7 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService7.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService7.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService7.rolcForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService7.sucsForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService7.faleForExTh(executingQuery17, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService7.strForEx(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService7.rolcForKe(kernelTransaction22);
    boolean boolean24 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService7);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService25 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    java.lang.Throwable throwable27 = null;
    queryLoggingService25.rolcForKe(kernelTransaction26, throwable27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService25.sucsForEx(executingQuery29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryLoggingService25.strForEx(executingQuery31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService25.strForEx(executingQuery33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService25.strForEx(executingQuery35);
    boolean boolean37 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery35);
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl38 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction39 = null;
    org.neo4j.configuration.Config config41 = null;
    java.nio.file.Path path42 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl38.init(fileSystemAbstraction39, "hi!",
        config41, path42);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction44 = null;
    org.neo4j.configuration.Config config46 = null;
    java.nio.file.Path path47 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl38.init(fileSystemAbstraction44, "", config46,
        path47);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction49 = null;
    org.neo4j.configuration.Config config51 = null;
    java.nio.file.Path path52 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl38.init(fileSystemAbstraction49, "hi!",
        config51, path52);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction54 = null;
    org.neo4j.configuration.Config config56 = null;
    java.nio.file.Path path57 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl38.init(fileSystemAbstraction54, "", config56,
        path57);
    boolean boolean59 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) "");
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService7);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(queryLoggingService25);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
  }

  @Test
  public void test1269() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1269");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory8 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean10 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) (-1L));
    boolean boolean11 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) boolean10);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService12 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService12.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService12.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService12.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService12.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService12.strForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) executingQuery22);
    boolean boolean25 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    java.lang.String str26 = queryLoggingServiceExtensionFactory7.getName();
    java.lang.String str27 = queryLoggingServiceExtensionFactory7.getName();
    java.lang.String str28 = queryLoggingServiceExtensionFactory7.toString();
    java.lang.String str29 = queryLoggingServiceExtensionFactory7.toString();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(queryLoggingService12);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "query-logging" + "'", str26,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "query-logging" + "'", str27,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str28 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str28, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str29 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str29, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1270() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1270");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.comForKe(kernelTransaction19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1271() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1271");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.faleForExTh(executingQuery1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.faleForExTh(executingQuery4,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.rolcForKe(kernelTransaction7, throwable8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.sucsForEx(executingQuery17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.faleForExTh(executingQuery19, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService0.faleForExTh(executingQuery22, throwable23);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1272() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1272");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.faleForExTh(executingQuery11,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.comForKe(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16, throwable17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.faleForExTh(executingQuery19, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.strForEx(executingQuery22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService0.rolcForKe(kernelTransaction24, throwable25);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1273() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1273");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService7 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService7.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService7.faleForExTh(executingQuery10, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService7.sucsForEx(executingQuery13);
    boolean boolean15 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService7.faleForExTh(executingQuery16, throwable17);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService7);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
  }

  @Test
  public void test1274() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1274");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.faleForExTh(executingQuery1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.faleForExTh(executingQuery4,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.rolcForKe(kernelTransaction7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12, throwable13);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1275() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1275");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService8.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService8.sucsForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery22);
    java.lang.String str25 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str26 = queryLoggingServiceExtensionFactory3.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory27 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str28 = queryLoggingServiceExtensionFactory27.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService29 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    java.lang.Throwable throwable31 = null;
    queryLoggingService29.rolcForKe(kernelTransaction30, throwable31);
    boolean boolean33 = queryLoggingServiceExtensionFactory27.equals(
        (java.lang.Object) throwable31);
    java.lang.String str34 = queryLoggingServiceExtensionFactory27.getName();
    java.lang.String str35 = queryLoggingServiceExtensionFactory27.toString();
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl36 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction37 = null;
    org.neo4j.configuration.Config config39 = null;
    java.nio.file.Path path40 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl36.init(fileSystemAbstraction37, "hi!",
        config39, path40);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction42 = null;
    org.neo4j.configuration.Config config44 = null;
    java.nio.file.Path path45 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl36.init(fileSystemAbstraction42,
        "query-logging", config44, path45);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction47 = null;
    org.neo4j.configuration.Config config49 = null;
    java.nio.file.Path path50 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl36.init(fileSystemAbstraction47,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config49, path50);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction52 = null;
    org.neo4j.configuration.Config config54 = null;
    java.nio.file.Path path55 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl36.init(fileSystemAbstraction52, "", config54,
        path55);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction57 = null;
    org.neo4j.configuration.Config config59 = null;
    java.nio.file.Path path60 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl36.init(fileSystemAbstraction57, "hi!",
        config59, path60);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction62 = null;
    org.neo4j.configuration.Config config64 = null;
    java.nio.file.Path path65 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl36.init(fileSystemAbstraction62, "hi!",
        config64, path65);
    boolean boolean67 = queryLoggingServiceExtensionFactory27.equals((java.lang.Object) config64);
    boolean boolean68 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory27);
    java.lang.String str69 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str70 = queryLoggingServiceExtensionFactory3.toString();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertEquals(
        "'" + str25 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str25, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "query-logging" + "'", str26,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str28 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str28, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService29);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertEquals("'" + str34 + "' != '" + "query-logging" + "'", str34,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str35 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str35, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    org.junit.Assert.assertEquals(
        "'" + str69 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str69, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str70 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str70, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1276() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1276");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20, "");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1277() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1277");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService8.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService8.sucsForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery22);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService25 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService25.strForEx(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService25.faleForExTh(executingQuery28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService25.rolcForKe(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService25.sucsForEx(executingQuery33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService25.strForEx(executingQuery35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService25.sucsForEx(executingQuery37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService25.sucsForEx(executingQuery39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    queryLoggingService25.sucsForEx(executingQuery41);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService25.strForEx(executingQuery43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    java.lang.Throwable throwable46 = null;
    queryLoggingService25.rolcForKe(kernelTransaction45, throwable46);
    boolean boolean48 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService25);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService49 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery50 = null;
    queryLoggingService49.strForEx(executingQuery50);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery52 = null;
    java.lang.Throwable throwable53 = null;
    queryLoggingService49.faleForExTh(executingQuery52, throwable53);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    java.lang.Throwable throwable56 = null;
    queryLoggingService49.rolcForKe(kernelTransaction55, throwable56);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery58 = null;
    queryLoggingService49.faleForExTh(executingQuery58, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction61 = null;
    java.lang.Throwable throwable62 = null;
    queryLoggingService49.rolcForKe(kernelTransaction61, throwable62);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction64 = null;
    queryLoggingService49.comForKe(kernelTransaction64);
    boolean boolean66 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) kernelTransaction64);
    java.lang.String str67 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str68 = queryLoggingServiceExtensionFactory3.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext69 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies70 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle71 = queryLoggingServiceExtensionFactory3.newInstance(
          extensionContext69, queryLoggingServiceDependencies70);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(queryLoggingService25);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    org.junit.Assert.assertNotNull(queryLoggingService49);
    org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    org.junit.Assert.assertEquals("'" + str67 + "' != '" + "query-logging" + "'", str67,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str68 + "' != '" + "query-logging" + "'", str68,
        "query-logging");
  }

  @Test
  public void test1278() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1278");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean9 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory10 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str11 = queryLoggingServiceExtensionFactory10.toString();
    boolean boolean12 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory10);
    boolean boolean13 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    java.lang.Object obj14 = null;
    boolean boolean15 = queryLoggingServiceExtensionFactory0.equals(obj14);
    java.lang.String str16 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory17 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean19 = queryLoggingServiceExtensionFactory17.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService20 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService20.rolcForKe(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService20.rolcForKe(kernelTransaction23, throwable24);
    boolean boolean26 = queryLoggingServiceExtensionFactory17.equals(
        (java.lang.Object) queryLoggingService20);
    java.lang.String str27 = queryLoggingServiceExtensionFactory17.getName();
    boolean boolean28 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) str27);
    java.lang.String str29 = queryLoggingServiceExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext30 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies31 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle32 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext30, queryLoggingServiceDependencies31);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "query-logging" + "'", str16,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertNotNull(queryLoggingService20);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "query-logging" + "'", str27,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertEquals("'" + str29 + "' != '" + "query-logging" + "'", str29,
        "query-logging");
  }

  @Test
  public void test1279() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1279");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15, throwable16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.comForKe(kernelTransaction21);
    java.lang.Class<?> wildcardClass23 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass23);
  }

  @Test
  public void test1280() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1280");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.sucsForEx(executingQuery17);
    java.lang.Class<?> wildcardClass19 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass19);
  }

  @Test
  public void test1281() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1281");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.strForEx(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.faleForExTh(executingQuery13, throwable14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.faleForExTh(executingQuery16, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.strForEx(executingQuery19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.strForEx(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.strForEx(kernelTransaction23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService0.rolcForKe(kernelTransaction25);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1282() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1282");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "", config23,
        path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config28, path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config33, path34);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction36 = null;
    org.neo4j.configuration.Config config38 = null;
    java.nio.file.Path path39 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction36,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config38, path39);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction41 = null;
    org.neo4j.configuration.Config config43 = null;
    java.nio.file.Path path44 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction41, "", config43,
        path44);
  }

  @Test
  public void test1283() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1283");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.strForEx(executingQuery22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService0.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService0.strForEx(executingQuery27);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1284() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1284");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config3, path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "", config13,
        path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "hi!", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "hi!", config23,
        path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "query-logging",
        config28, path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31, "", config33,
        path34);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction36 = null;
    org.neo4j.configuration.Config config38 = null;
    java.nio.file.Path path39 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction36,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config38, path39);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction41 = null;
    org.neo4j.configuration.Config config43 = null;
    java.nio.file.Path path44 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction41,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config43, path44);
  }

  @Test
  public void test1285() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1285");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.strForEx(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    java.lang.Class<?> wildcardClass15 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass15);
  }

  @Test
  public void test1286() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1286");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.strForEx(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.faleForExTh(executingQuery16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1287() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1287");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.comForKe(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17, throwable18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1288() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1288");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.strForEx(executingQuery15);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1289() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1289");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.Object obj5 = new java.lang.Object();
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals(obj5);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService7 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService7.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService7.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService7.rolcForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService7.sucsForEx(executingQuery15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService7.strForEx(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService7.faleForExTh(executingQuery19,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService7.rolcForKe(kernelTransaction22, throwable23);
    boolean boolean25 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction22);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory26 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str27 = queryLoggingServiceExtensionFactory26.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory28 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean30 = queryLoggingServiceExtensionFactory28.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory31 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str32 = queryLoggingServiceExtensionFactory31.toString();
    boolean boolean33 = queryLoggingServiceExtensionFactory28.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory31);
    java.lang.String str34 = queryLoggingServiceExtensionFactory28.getName();
    java.lang.String str35 = queryLoggingServiceExtensionFactory28.getName();
    boolean boolean36 = queryLoggingServiceExtensionFactory26.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory28);
    java.lang.String str37 = queryLoggingServiceExtensionFactory28.toString();
    java.lang.String str38 = queryLoggingServiceExtensionFactory28.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService39 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    queryLoggingService39.rolcForKe(kernelTransaction40);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction42 = null;
    java.lang.Throwable throwable43 = null;
    queryLoggingService39.rolcForKe(kernelTransaction42, throwable43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    java.lang.Throwable throwable46 = null;
    queryLoggingService39.rolcForKe(kernelTransaction45, throwable46);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction48 = null;
    java.lang.Throwable throwable49 = null;
    queryLoggingService39.rolcForKe(kernelTransaction48, throwable49);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction51 = null;
    queryLoggingService39.rolcForKe(kernelTransaction51);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction53 = null;
    queryLoggingService39.rolcForKe(kernelTransaction53);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    java.lang.Throwable throwable56 = null;
    queryLoggingService39.rolcForKe(kernelTransaction55, throwable56);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction58 = null;
    java.lang.Throwable throwable59 = null;
    queryLoggingService39.rolcForKe(kernelTransaction58, throwable59);
    boolean boolean61 = queryLoggingServiceExtensionFactory28.equals(
        (java.lang.Object) queryLoggingService39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery62 = null;
    queryLoggingService39.faleForExTh(executingQuery62, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery65 = null;
    queryLoggingService39.strForEx(executingQuery65);
    boolean boolean67 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery68 = null;
    queryLoggingService39.strForEx(executingQuery68);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNotNull(queryLoggingService7);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertEquals(
        "'" + str27 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str27, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    org.junit.Assert.assertEquals(
        "'" + str32 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str32, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    org.junit.Assert.assertEquals("'" + str34 + "' != '" + "query-logging" + "'", str34,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str35 + "' != '" + "query-logging" + "'", str35,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    org.junit.Assert.assertEquals(
        "'" + str37 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str37, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str38 + "' != '" + "query-logging" + "'", str38,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService39);
    org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
  }

  @Test
  public void test1290() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1290");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.strForEx(executingQuery12);
    java.lang.Class<?> wildcardClass14 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass14);
  }

  @Test
  public void test1291() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1291");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory8 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean10 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) (-1L));
    boolean boolean11 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) boolean10);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService12 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService12.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService12.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService12.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService12.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService12.strForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) executingQuery22);
    boolean boolean25 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory26 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean28 = queryLoggingServiceExtensionFactory26.equals((java.lang.Object) (short) 1);
    java.lang.String str29 = queryLoggingServiceExtensionFactory26.toString();
    boolean boolean30 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory26);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService31 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction32 = null;
    java.lang.Throwable throwable33 = null;
    queryLoggingService31.rolcForKe(kernelTransaction32, throwable33);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction35 = null;
    queryLoggingService31.comForKe(kernelTransaction35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService31.strForEx(executingQuery37);
    boolean boolean39 = queryLoggingServiceExtensionFactory26.equals(
        (java.lang.Object) queryLoggingService31);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    queryLoggingService31.rolcForKe(kernelTransaction40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    queryLoggingService31.sucsForEx(executingQuery42);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    java.lang.Throwable throwable45 = null;
    queryLoggingService31.rolcForKe(kernelTransaction44, throwable45);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction47 = null;
    java.lang.Throwable throwable48 = null;
    queryLoggingService31.rolcForKe(kernelTransaction47, throwable48);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(queryLoggingService12);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertEquals(
        "'" + str29 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str29, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    org.junit.Assert.assertNotNull(queryLoggingService31);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
  }

  @Test
  public void test1292() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1292");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService3 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService3.rolcForKe(kernelTransaction4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService3.rolcForKe(kernelTransaction6, throwable7);
    boolean boolean9 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService3);
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str11 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str12 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str13 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str14 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str15 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(queryLoggingService3);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str10, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "query-logging" + "'", str11,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "query-logging" + "'", str12,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str13 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str13, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str14 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str14, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str15 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str15, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1293() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1293");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.faleForExTh(executingQuery23, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    java.lang.Throwable throwable27 = null;
    queryLoggingService0.rolcForKe(kernelTransaction26, throwable27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService0.strForEx(executingQuery29);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1294() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1294");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService5.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService5.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService5.faleForExTh(executingQuery17,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    boolean boolean20 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService21 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService21.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService21.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService21.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService21.sucsForEx(executingQuery29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService21.strForEx(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService21.faleForExTh(executingQuery33,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService21.rolcForKe(kernelTransaction36, throwable37);
    boolean boolean39 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService21);
    java.lang.String str40 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Class<?> wildcardClass41 = queryLoggingServiceExtensionFactory0.getClass();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertNotNull(queryLoggingService21);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertEquals("'" + str40 + "' != '" + "query-logging" + "'", str40,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass41);
  }

  @Test
  public void test1295() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1295");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "", config23,
        path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "", config28,
        path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31, "hi!", config33,
        path34);
  }

  @Test
  public void test1296() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1296");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService0.strForEx(kernelTransaction8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.faleForExTh(executingQuery10, throwable11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.faleForExTh(executingQuery13, throwable14);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1297() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1297");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService5.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService5.strForEx(executingQuery15);
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery15);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService18 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService18.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService18.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService18.faleForExTh(executingQuery24, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService18.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService18.faleForExTh(executingQuery29, throwable30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService18.sucsForEx(executingQuery32);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService18);
    java.lang.String str35 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str36 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str37 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.Class<?> wildcardClass38 = queryLoggingServiceExtensionFactory0.getClass();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(queryLoggingService18);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertEquals(
        "'" + str35 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str35, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str36 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str36, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str37 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str37, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(wildcardClass38);
  }

  @Test
  public void test1298() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1298");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService2 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService2.rolcForKe(kernelTransaction3, throwable4);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable4);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService9 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService9.rolcForKe(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService9.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService9.rolcForKe(kernelTransaction15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService9.comForKe(kernelTransaction18);
    boolean boolean20 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService9);
    java.lang.String str21 = queryLoggingServiceExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext22 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies23 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle24 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext22, queryLoggingServiceDependencies23);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService2);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService9);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertEquals("'" + str21 + "' != '" + "query-logging" + "'", str21,
        "query-logging");
  }

  @Test
  public void test1299() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1299");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.faleForExTh(executingQuery1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.faleForExTh(executingQuery4,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction7 = null;
    queryLoggingService0.strForEx(kernelTransaction7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15, throwable16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.faleForExTh(executingQuery23, "hi!");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1300() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1300");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj9 = new java.lang.Object();
    java.lang.Class<?> wildcardClass10 = obj9.getClass();
    boolean boolean11 = queryLoggingServiceExtensionFactory0.equals(obj9);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory12 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean14 = queryLoggingServiceExtensionFactory12.equals((java.lang.Object) (short) 1);
    java.lang.String str15 = queryLoggingServiceExtensionFactory12.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService16 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService16.strForEx(executingQuery17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService16.faleForExTh(executingQuery19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService16.rolcForKe(kernelTransaction22, throwable23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService16.comForKe(kernelTransaction25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService16.strForEx(executingQuery27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService16.strForEx(executingQuery29);
    boolean boolean31 = queryLoggingServiceExtensionFactory12.equals(
        (java.lang.Object) executingQuery29);
    boolean boolean32 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery29);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext33 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies34 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle35 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext33, queryLoggingServiceDependencies34);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "query-logging" + "'", str15,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService16);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
  }

  @Test
  public void test1301() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1301");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.comForKe(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23, throwable24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService0.sucsForEx(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService0.sucsForEx(executingQuery28);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    java.lang.Throwable throwable31 = null;
    queryLoggingService0.rolcForKe(kernelTransaction30, throwable31);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1302() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1302");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.faleForExTh(executingQuery21,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService0.sucsForEx(executingQuery26);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1303() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1303");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.strForEx(kernelTransaction21);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1304() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1304");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str2 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService3 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService3.rolcForKe(kernelTransaction4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    queryLoggingService3.sucsForEx(executingQuery7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService3.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService3.faleForExTh(executingQuery11, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService3.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService3.sucsForEx(executingQuery17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService3.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService3.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService3.comForKe(kernelTransaction24);
    java.lang.Class<?> wildcardClass26 = queryLoggingService3.getClass();
    boolean boolean27 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) wildcardClass26);
    java.lang.String str28 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService29 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    java.lang.Throwable throwable31 = null;
    queryLoggingService29.rolcForKe(kernelTransaction30, throwable31);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    queryLoggingService29.comForKe(kernelTransaction33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService29.strForEx(executingQuery35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService29.faleForExTh(executingQuery37,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery40 = null;
    queryLoggingService29.strForEx(executingQuery40);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction42 = null;
    java.lang.Throwable throwable43 = null;
    queryLoggingService29.rolcForKe(kernelTransaction42, throwable43);
    boolean boolean45 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction42);
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str2, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService3);
    org.junit.Assert.assertNotNull(wildcardClass26);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertEquals(
        "'" + str28 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str28, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService29);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
  }

  @Test
  public void test1305() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1305");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.comForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.comForKe(kernelTransaction23);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1306() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1306");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.strForEx(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.faleForExTh(executingQuery13,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.strForEx(executingQuery16);
    java.lang.Class<?> wildcardClass18 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass18);
  }

  @Test
  public void test1307() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1307");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20, throwable21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService0.strForEx(executingQuery25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    java.lang.Throwable throwable28 = null;
    queryLoggingService0.rolcForKe(kernelTransaction27, throwable28);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1308() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1308");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.faleForExTh(executingQuery12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17, throwable18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.strForEx(kernelTransaction20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.faleForExTh(executingQuery22, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService0.faleForExTh(executingQuery25, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService0.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService0.comForKe(kernelTransaction31);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1309() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1309");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str11 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str12 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory13 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean15 = queryLoggingServiceExtensionFactory13.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory16 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str17 = queryLoggingServiceExtensionFactory16.toString();
    boolean boolean18 = queryLoggingServiceExtensionFactory13.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory16);
    boolean boolean20 = queryLoggingServiceExtensionFactory16.equals((java.lang.Object) 100.0d);
    boolean boolean21 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 100.0d);
    java.lang.String str22 = queryLoggingServiceExtensionFactory0.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext23 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies24 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle25 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext23, queryLoggingServiceDependencies24);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str10, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "query-logging" + "'", str11,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "query-logging" + "'", str12,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertEquals(
        "'" + str17 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str17, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    org.junit.Assert.assertEquals(
        "'" + str22 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str22, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1310() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1310");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService5.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService5.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService5.faleForExTh(executingQuery17,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    boolean boolean20 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService21 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService21.faleForExTh(executingQuery22,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService21.rolcForKe(kernelTransaction25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    java.lang.Throwable throwable28 = null;
    queryLoggingService21.rolcForKe(kernelTransaction27, throwable28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryLoggingService21.strForEx(executingQuery30);
    boolean boolean32 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    queryLoggingService21.comForKe(kernelTransaction33);
    java.lang.Class<?> wildcardClass35 = queryLoggingService21.getClass();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertNotNull(queryLoggingService21);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertNotNull(wildcardClass35);
  }

  @Test
  public void test1311() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1311");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService2 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService2.strForEx(executingQuery3);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    java.lang.Throwable throwable6 = null;
    queryLoggingService2.faleForExTh(executingQuery5, throwable6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService2.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService2.sucsForEx(executingQuery10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService2.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService2.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService2.strForEx(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService2.strForEx(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService2.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService2.rolcForKe(kernelTransaction24, throwable25);
    boolean boolean27 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction24);
    java.lang.Object obj28 = null;
    boolean boolean29 = queryLoggingServiceExtensionFactory0.equals(obj28);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory30 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory31 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean33 = queryLoggingServiceExtensionFactory31.equals((java.lang.Object) (-1L));
    boolean boolean34 = queryLoggingServiceExtensionFactory30.equals((java.lang.Object) boolean33);
    java.lang.String str35 = queryLoggingServiceExtensionFactory30.toString();
    java.lang.String str36 = queryLoggingServiceExtensionFactory30.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory37 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean39 = queryLoggingServiceExtensionFactory37.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory40 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str41 = queryLoggingServiceExtensionFactory40.toString();
    boolean boolean42 = queryLoggingServiceExtensionFactory37.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory40);
    boolean boolean43 = queryLoggingServiceExtensionFactory30.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory37);
    java.lang.Object obj44 = null;
    boolean boolean45 = queryLoggingServiceExtensionFactory30.equals(obj44);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory46 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory47 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean49 = queryLoggingServiceExtensionFactory47.equals((java.lang.Object) (-1L));
    boolean boolean50 = queryLoggingServiceExtensionFactory46.equals((java.lang.Object) boolean49);
    boolean boolean52 = queryLoggingServiceExtensionFactory46.equals((java.lang.Object) 0L);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory53 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory54 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean56 = queryLoggingServiceExtensionFactory54.equals((java.lang.Object) (-1L));
    boolean boolean57 = queryLoggingServiceExtensionFactory53.equals((java.lang.Object) boolean56);
    java.lang.Object obj58 = new java.lang.Object();
    boolean boolean59 = queryLoggingServiceExtensionFactory53.equals(obj58);
    java.lang.String str60 = queryLoggingServiceExtensionFactory53.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService61 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery62 = null;
    queryLoggingService61.strForEx(executingQuery62);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery64 = null;
    java.lang.Throwable throwable65 = null;
    queryLoggingService61.faleForExTh(executingQuery64, throwable65);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction67 = null;
    java.lang.Throwable throwable68 = null;
    queryLoggingService61.rolcForKe(kernelTransaction67, throwable68);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction70 = null;
    queryLoggingService61.comForKe(kernelTransaction70);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery72 = null;
    queryLoggingService61.strForEx(executingQuery72);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction74 = null;
    java.lang.Throwable throwable75 = null;
    queryLoggingService61.rolcForKe(kernelTransaction74, throwable75);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction77 = null;
    queryLoggingService61.comForKe(kernelTransaction77);
    boolean boolean79 = queryLoggingServiceExtensionFactory53.equals(
        (java.lang.Object) queryLoggingService61);
    boolean boolean80 = queryLoggingServiceExtensionFactory46.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory53);
    boolean boolean81 = queryLoggingServiceExtensionFactory30.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory53);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService82 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction83 = null;
    java.lang.Throwable throwable84 = null;
    queryLoggingService82.rolcForKe(kernelTransaction83, throwable84);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction86 = null;
    queryLoggingService82.comForKe(kernelTransaction86);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery88 = null;
    queryLoggingService82.sucsForEx(executingQuery88);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction90 = null;
    java.lang.Throwable throwable91 = null;
    queryLoggingService82.rolcForKe(kernelTransaction90, throwable91);
    boolean boolean93 = queryLoggingServiceExtensionFactory30.equals(
        (java.lang.Object) queryLoggingService82);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery94 = null;
    queryLoggingService82.sucsForEx(executingQuery94);
    boolean boolean96 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService82);
    java.lang.Class<?> wildcardClass97 = queryLoggingService82.getClass();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService2);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertEquals(
        "'" + str35 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str35, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str36 + "' != '" + "query-logging" + "'", str36,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertEquals(
        "'" + str41 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str41, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    org.junit.Assert.assertEquals("'" + str60 + "' != '" + "query-logging" + "'", str60,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService61);
    org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    org.junit.Assert.assertNotNull(queryLoggingService82);
    org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    org.junit.Assert.assertNotNull(wildcardClass97);
  }

  @Test
  public void test1312() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1312");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.comForKe(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.comForKe(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.strForEx(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19, throwable20);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1313() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1313");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory11 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean13 = queryLoggingServiceExtensionFactory11.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService14 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService14.rolcForKe(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService14.rolcForKe(kernelTransaction17, throwable18);
    boolean boolean20 = queryLoggingServiceExtensionFactory11.equals(
        (java.lang.Object) queryLoggingService14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService14.rolcForKe(kernelTransaction21, throwable22);
    java.lang.Class<?> wildcardClass24 = queryLoggingService14.getClass();
    boolean boolean25 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService14);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str10, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertNotNull(queryLoggingService14);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertNotNull(wildcardClass24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
  }

  @Test
  public void test1314() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1314");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.strForEx(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.strForEx(kernelTransaction18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1315() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1315");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6, "query-logging",
        config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "query-logging",
        config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "", config23,
        path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config28, path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31, "query-logging",
        config33, path34);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction36 = null;
    org.neo4j.configuration.Config config38 = null;
    java.nio.file.Path path39 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction36, "", config38,
        path39);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction41 = null;
    org.neo4j.configuration.Config config43 = null;
    java.nio.file.Path path44 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction41, "", config43,
        path44);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction46 = null;
    org.neo4j.configuration.Config config48 = null;
    java.nio.file.Path path49 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction46,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config48, path49);
  }

  @Test
  public void test1316() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1316");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.strForEx(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.faleForExTh(executingQuery11, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.faleForExTh(executingQuery17, throwable18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20, "");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1317() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1317");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.faleForExTh(executingQuery1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.faleForExTh(executingQuery4,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    queryLoggingService0.faleForExTh(executingQuery7, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.comForKe(kernelTransaction10);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1318() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1318");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.strForEx(executingQuery17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.strForEx(kernelTransaction19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1319() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1319");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.sucsForEx(executingQuery15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.strForEx(kernelTransaction17);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1320() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1320");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config3, path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "", config13,
        path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "hi!", config23,
        path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "hi!", config28,
        path29);
  }

  @Test
  public void test1321() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1321");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.comForKe(kernelTransaction14);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1322() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1322");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.faleForExTh(executingQuery12, throwable13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.strForEx(kernelTransaction21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.faleForExTh(executingQuery23,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    queryLoggingService0.strForEx(kernelTransaction26);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1323() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1323");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.comForKe(kernelTransaction11);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1324() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1324");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1325() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1325");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService3 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService3.rolcForKe(kernelTransaction4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService3.rolcForKe(kernelTransaction6, throwable7);
    boolean boolean9 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService3);
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str11 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str12 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str13 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService14 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService14.strForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService14.faleForExTh(executingQuery17, throwable18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService14.rolcForKe(kernelTransaction20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService14.sucsForEx(executingQuery22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService14.faleForExTh(executingQuery24, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService14.faleForExTh(executingQuery27, "");
    boolean boolean30 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService14);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(queryLoggingService3);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "query-logging" + "'", str10,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "query-logging" + "'", str11,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str12 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str12, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str13 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str13, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService14);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
  }

  @Test
  public void test1326() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1326");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.sucsForEx(executingQuery11);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1327() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1327");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.faleForExTh(executingQuery15, throwable16);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1328() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1328");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.comForKe(kernelTransaction21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.faleForExTh(executingQuery23, throwable24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService0.strForEx(executingQuery26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService0.comForKe(kernelTransaction28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryLoggingService0.sucsForEx(executingQuery30);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1329() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1329");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.faleForExTh(executingQuery21, "");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1330() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1330");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService7 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService7.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService7.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService7.rolcForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService7.sucsForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService7.faleForExTh(executingQuery17, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService7.strForEx(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService7.rolcForKe(kernelTransaction22);
    boolean boolean24 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService7);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService25 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    java.lang.Throwable throwable27 = null;
    queryLoggingService25.rolcForKe(kernelTransaction26, throwable27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService25.sucsForEx(executingQuery29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryLoggingService25.strForEx(executingQuery31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService25.strForEx(executingQuery33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService25.strForEx(executingQuery35);
    boolean boolean37 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery35);
    java.lang.String str38 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str39 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str40 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory41 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory42 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean44 = queryLoggingServiceExtensionFactory42.equals((java.lang.Object) (-1L));
    boolean boolean45 = queryLoggingServiceExtensionFactory41.equals((java.lang.Object) boolean44);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService46 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    queryLoggingService46.strForEx(executingQuery47);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery49 = null;
    java.lang.Throwable throwable50 = null;
    queryLoggingService46.faleForExTh(executingQuery49, throwable50);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction52 = null;
    queryLoggingService46.rolcForKe(kernelTransaction52);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery54 = null;
    queryLoggingService46.sucsForEx(executingQuery54);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery56 = null;
    queryLoggingService46.strForEx(executingQuery56);
    boolean boolean58 = queryLoggingServiceExtensionFactory41.equals(
        (java.lang.Object) executingQuery56);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService59 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction60 = null;
    queryLoggingService59.rolcForKe(kernelTransaction60);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction62 = null;
    java.lang.Throwable throwable63 = null;
    queryLoggingService59.rolcForKe(kernelTransaction62, throwable63);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery65 = null;
    queryLoggingService59.faleForExTh(executingQuery65, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction68 = null;
    queryLoggingService59.rolcForKe(kernelTransaction68);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery70 = null;
    java.lang.Throwable throwable71 = null;
    queryLoggingService59.faleForExTh(executingQuery70, throwable71);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery73 = null;
    queryLoggingService59.sucsForEx(executingQuery73);
    boolean boolean75 = queryLoggingServiceExtensionFactory41.equals(
        (java.lang.Object) queryLoggingService59);
    java.lang.String str76 = queryLoggingServiceExtensionFactory41.toString();
    java.lang.String str77 = queryLoggingServiceExtensionFactory41.getName();
    boolean boolean78 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) str77);
    java.lang.Class<?> wildcardClass79 = queryLoggingServiceExtensionFactory0.getClass();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService7);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(queryLoggingService25);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertEquals("'" + str38 + "' != '" + "query-logging" + "'", str38,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str39 + "' != '" + "query-logging" + "'", str39,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str40 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str40, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    org.junit.Assert.assertNotNull(queryLoggingService46);
    org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    org.junit.Assert.assertNotNull(queryLoggingService59);
    org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    org.junit.Assert.assertEquals(
        "'" + str76 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str76, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str77 + "' != '" + "query-logging" + "'", str77,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    org.junit.Assert.assertNotNull(wildcardClass79);
  }

  @Test
  public void test1331() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1331");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.strForEx(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService0.rolcForKe(kernelTransaction24, throwable25);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1332() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1332");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj9 = new java.lang.Object();
    java.lang.Class<?> wildcardClass10 = obj9.getClass();
    boolean boolean11 = queryLoggingServiceExtensionFactory0.equals(obj9);
    java.lang.String str12 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj13 = null;
    boolean boolean14 = queryLoggingServiceExtensionFactory0.equals(obj13);
    java.lang.String str15 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory16 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean18 = queryLoggingServiceExtensionFactory16.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService19 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService19.rolcForKe(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService19.rolcForKe(kernelTransaction22, throwable23);
    boolean boolean25 = queryLoggingServiceExtensionFactory16.equals(
        (java.lang.Object) queryLoggingService19);
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory16);
    java.lang.String str27 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory28 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory29 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean31 = queryLoggingServiceExtensionFactory29.equals((java.lang.Object) (-1L));
    boolean boolean32 = queryLoggingServiceExtensionFactory28.equals((java.lang.Object) boolean31);
    java.lang.Object obj33 = new java.lang.Object();
    boolean boolean34 = queryLoggingServiceExtensionFactory28.equals(obj33);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService35 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    queryLoggingService35.rolcForKe(kernelTransaction36);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction38 = null;
    java.lang.Throwable throwable39 = null;
    queryLoggingService35.rolcForKe(kernelTransaction38, throwable39);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction41 = null;
    queryLoggingService35.rolcForKe(kernelTransaction41);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService35.sucsForEx(executingQuery43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    queryLoggingService35.strForEx(kernelTransaction45);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    queryLoggingService35.faleForExTh(executingQuery47,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction50 = null;
    java.lang.Throwable throwable51 = null;
    queryLoggingService35.rolcForKe(kernelTransaction50, throwable51);
    boolean boolean53 = queryLoggingServiceExtensionFactory28.equals(
        (java.lang.Object) kernelTransaction50);
    boolean boolean55 = queryLoggingServiceExtensionFactory28.equals((java.lang.Object) '#');
    java.lang.String str56 = queryLoggingServiceExtensionFactory28.toString();
    boolean boolean57 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) str56);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext58 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies59 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle60 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext58, queryLoggingServiceDependencies59);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "query-logging" + "'", str12,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertEquals(
        "'" + str15 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str15, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    org.junit.Assert.assertNotNull(queryLoggingService19);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "query-logging" + "'", str27,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertNotNull(queryLoggingService35);
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    org.junit.Assert.assertEquals(
        "'" + str56 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str56, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
  }

  @Test
  public void test1333() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1333");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService8.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService8.faleForExTh(executingQuery14, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService8.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService8.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService8.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService8.comForKe(kernelTransaction24);
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    java.lang.Throwable throwable28 = null;
    queryLoggingService8.faleForExTh(executingQuery27, throwable28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryLoggingService8.sucsForEx(executingQuery30);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
  }

  @Test
  public void test1334() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1334");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.Object obj5 = new java.lang.Object();
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals(obj5);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory8 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean10 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) (-1L));
    boolean boolean11 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) boolean10);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService12 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService12.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService12.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService12.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService12.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService12.strForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) executingQuery22);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService25 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    queryLoggingService25.rolcForKe(kernelTransaction26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService25.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryLoggingService25.faleForExTh(executingQuery31, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction34 = null;
    queryLoggingService25.rolcForKe(kernelTransaction34);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService25.faleForExTh(executingQuery36, throwable37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService25.sucsForEx(executingQuery39);
    boolean boolean41 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingService25);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService42 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction43 = null;
    java.lang.Throwable throwable44 = null;
    queryLoggingService42.rolcForKe(kernelTransaction43, throwable44);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery46 = null;
    queryLoggingService42.sucsForEx(executingQuery46);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction48 = null;
    queryLoggingService42.comForKe(kernelTransaction48);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery50 = null;
    queryLoggingService42.faleForExTh(executingQuery50, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction53 = null;
    queryLoggingService42.strForEx(kernelTransaction53);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    queryLoggingService42.comForKe(kernelTransaction55);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery57 = null;
    queryLoggingService42.strForEx(executingQuery57);
    boolean boolean59 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingService42);
    boolean boolean60 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean59);
    java.lang.String str61 = queryLoggingServiceExtensionFactory0.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext62 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies63 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle64 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext62, queryLoggingServiceDependencies63);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(queryLoggingService12);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(queryLoggingService25);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    org.junit.Assert.assertNotNull(queryLoggingService42);
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    org.junit.Assert.assertEquals(
        "'" + str61 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str61, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1335() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1335");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.strForEx(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.faleForExTh(executingQuery13, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.strForEx(kernelTransaction18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.strForEx(kernelTransaction20);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1336() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1336");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str7 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory3.toString();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str6, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str10, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1337() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1337");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.faleForExTh(executingQuery16, throwable17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.faleForExTh(executingQuery19, throwable20);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1338() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1338");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.sucsForEx(executingQuery17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService0.faleForExTh(executingQuery26, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    queryLoggingService0.rolcForKe(kernelTransaction29);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1339() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1339");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "hi!", config13,
        path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "hi!", config23,
        path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "", config28,
        path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31, "query-logging",
        config33, path34);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction36 = null;
    org.neo4j.configuration.Config config38 = null;
    java.nio.file.Path path39 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction36,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config38, path39);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction41 = null;
    org.neo4j.configuration.Config config43 = null;
    java.nio.file.Path path44 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction41, "query-logging",
        config43, path44);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction46 = null;
    org.neo4j.configuration.Config config48 = null;
    java.nio.file.Path path49 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction46, "query-logging",
        config48, path49);
  }

  @Test
  public void test1340() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1340");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.strForEx(kernelTransaction11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.comForKe(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.comForKe(kernelTransaction17);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1341() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1341");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.faleForExTh(executingQuery20, throwable21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23, throwable24);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    queryLoggingService0.comForKe(kernelTransaction26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService0.faleForExTh(executingQuery28, "hi!");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1342() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1342");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.sucsForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.sucsForEx(executingQuery17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.faleForExTh(executingQuery19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.strForEx(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService0.faleForExTh(executingQuery26,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1343() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1343");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory2 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean4 = queryLoggingServiceExtensionFactory2.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory5 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str6 = queryLoggingServiceExtensionFactory5.toString();
    boolean boolean7 = queryLoggingServiceExtensionFactory2.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory5);
    java.lang.String str8 = queryLoggingServiceExtensionFactory2.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory2.getName();
    boolean boolean10 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory2);
    java.lang.String str11 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str12 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str6, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "query-logging" + "'", str11,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str12 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str12, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1344() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1344");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1.0d));
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService3 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService3.rolcForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService3.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService3.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService3.faleForExTh(executingQuery12, throwable13);
    boolean boolean15 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery12);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService16 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService16.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService16.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService16.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService16.sucsForEx(executingQuery24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService16.faleForExTh(executingQuery26, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    queryLoggingService16.strForEx(kernelTransaction29);
    boolean boolean31 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction29);
    java.lang.String str32 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(queryLoggingService3);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertNotNull(queryLoggingService16);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertEquals(
        "'" + str32 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str32, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1345() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1345");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService8.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService8.sucsForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery22);
    java.lang.String str25 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str26 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str27 = queryLoggingServiceExtensionFactory3.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService28 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService28.strForEx(executingQuery29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    java.lang.Throwable throwable32 = null;
    queryLoggingService28.faleForExTh(executingQuery31, throwable32);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction34 = null;
    queryLoggingService28.rolcForKe(kernelTransaction34);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery36 = null;
    queryLoggingService28.faleForExTh(executingQuery36, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction39 = null;
    queryLoggingService28.strForEx(kernelTransaction39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    java.lang.Throwable throwable42 = null;
    queryLoggingService28.faleForExTh(executingQuery41, throwable42);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery44 = null;
    queryLoggingService28.faleForExTh(executingQuery44, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    queryLoggingService28.strForEx(executingQuery47);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction49 = null;
    queryLoggingService28.strForEx(kernelTransaction49);
    boolean boolean51 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery52 = null;
    queryLoggingService28.sucsForEx(executingQuery52);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery54 = null;
    java.lang.Throwable throwable55 = null;
    queryLoggingService28.faleForExTh(executingQuery54, throwable55);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertEquals(
        "'" + str25 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str25, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "query-logging" + "'", str26,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "query-logging" + "'", str27,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService28);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
  }

  @Test
  public void test1346() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1346");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean9 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory10 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str11 = queryLoggingServiceExtensionFactory10.toString();
    boolean boolean12 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory10);
    boolean boolean13 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    java.lang.Object obj14 = null;
    boolean boolean15 = queryLoggingServiceExtensionFactory0.equals(obj14);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory16 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory17 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean19 = queryLoggingServiceExtensionFactory17.equals((java.lang.Object) (-1L));
    boolean boolean20 = queryLoggingServiceExtensionFactory16.equals((java.lang.Object) boolean19);
    boolean boolean22 = queryLoggingServiceExtensionFactory16.equals((java.lang.Object) 0L);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory23 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory24 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean26 = queryLoggingServiceExtensionFactory24.equals((java.lang.Object) (-1L));
    boolean boolean27 = queryLoggingServiceExtensionFactory23.equals((java.lang.Object) boolean26);
    java.lang.Object obj28 = new java.lang.Object();
    boolean boolean29 = queryLoggingServiceExtensionFactory23.equals(obj28);
    java.lang.String str30 = queryLoggingServiceExtensionFactory23.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService31 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService31.strForEx(executingQuery32);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    java.lang.Throwable throwable35 = null;
    queryLoggingService31.faleForExTh(executingQuery34, throwable35);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction37 = null;
    java.lang.Throwable throwable38 = null;
    queryLoggingService31.rolcForKe(kernelTransaction37, throwable38);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    queryLoggingService31.comForKe(kernelTransaction40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    queryLoggingService31.strForEx(executingQuery42);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    java.lang.Throwable throwable45 = null;
    queryLoggingService31.rolcForKe(kernelTransaction44, throwable45);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction47 = null;
    queryLoggingService31.comForKe(kernelTransaction47);
    boolean boolean49 = queryLoggingServiceExtensionFactory23.equals(
        (java.lang.Object) queryLoggingService31);
    boolean boolean50 = queryLoggingServiceExtensionFactory16.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory23);
    boolean boolean51 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory23);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService52 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction53 = null;
    java.lang.Throwable throwable54 = null;
    queryLoggingService52.rolcForKe(kernelTransaction53, throwable54);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction56 = null;
    queryLoggingService52.comForKe(kernelTransaction56);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery58 = null;
    queryLoggingService52.sucsForEx(executingQuery58);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction60 = null;
    java.lang.Throwable throwable61 = null;
    queryLoggingService52.rolcForKe(kernelTransaction60, throwable61);
    boolean boolean63 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService52);
    java.lang.String str64 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str65 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertEquals("'" + str30 + "' != '" + "query-logging" + "'", str30,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService31);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    org.junit.Assert.assertNotNull(queryLoggingService52);
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    org.junit.Assert.assertEquals("'" + str64 + "' != '" + "query-logging" + "'", str64,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str65 + "' != '" + "query-logging" + "'", str65,
        "query-logging");
  }

  @Test
  public void test1347() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1347");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.faleForExTh(executingQuery17,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1348() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1348");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.faleForExTh(executingQuery12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17, throwable18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.strForEx(kernelTransaction20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.sucsForEx(executingQuery22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService0.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService0.faleForExTh(executingQuery27, "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1349() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1349");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.faleForExTh(executingQuery20, throwable21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.comForKe(kernelTransaction23);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1350() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1350");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService5.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService5.strForEx(executingQuery15);
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery15);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService18 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService18.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService18.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService18.faleForExTh(executingQuery24, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService18.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService18.faleForExTh(executingQuery29, throwable30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService18.sucsForEx(executingQuery32);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService18);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService35 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService35.rolcForKe(kernelTransaction36, throwable37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    java.lang.Throwable throwable40 = null;
    queryLoggingService35.faleForExTh(executingQuery39, throwable40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    java.lang.Throwable throwable43 = null;
    queryLoggingService35.faleForExTh(executingQuery42, throwable43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    queryLoggingService35.strForEx(kernelTransaction45);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    java.lang.Throwable throwable48 = null;
    queryLoggingService35.faleForExTh(executingQuery47, throwable48);
    java.lang.Class<?> wildcardClass50 = queryLoggingService35.getClass();
    boolean boolean51 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) wildcardClass50);
    java.lang.String str52 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str53 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str54 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService55 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction56 = null;
    java.lang.Throwable throwable57 = null;
    queryLoggingService55.rolcForKe(kernelTransaction56, throwable57);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery59 = null;
    queryLoggingService55.sucsForEx(executingQuery59);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction61 = null;
    queryLoggingService55.rolcForKe(kernelTransaction61);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction63 = null;
    queryLoggingService55.strForEx(kernelTransaction63);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery65 = null;
    java.lang.Throwable throwable66 = null;
    queryLoggingService55.faleForExTh(executingQuery65, throwable66);
    java.lang.Class<?> wildcardClass68 = queryLoggingService55.getClass();
    boolean boolean69 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) wildcardClass68);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(queryLoggingService18);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertNotNull(queryLoggingService35);
    org.junit.Assert.assertNotNull(wildcardClass50);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    org.junit.Assert.assertEquals(
        "'" + str52 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str52, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str53 + "' != '" + "query-logging" + "'", str53,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str54 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str54, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService55);
    org.junit.Assert.assertNotNull(wildcardClass68);
    org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
  }

  @Test
  public void test1351() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1351");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18, throwable19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1352() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1352");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.strForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.strForEx(executingQuery22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService0.strForEx(executingQuery24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1353() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1353");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.comForKe(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.faleForExTh(executingQuery17, "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1354() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1354");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.rolcForKe(kernelTransaction4, throwable5);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.comForKe(kernelTransaction18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.strForEx(kernelTransaction20);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1355() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1355");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService7 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService7.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService7.sucsForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService7.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService7.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService7.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService7.sucsForEx(executingQuery21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService7.rolcForKe(kernelTransaction23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService7.rolcForKe(kernelTransaction25, throwable26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService7.comForKe(kernelTransaction28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryLoggingService7.sucsForEx(executingQuery30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService7.strForEx(executingQuery32);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    java.lang.Throwable throwable36 = null;
    queryLoggingService7.faleForExTh(executingQuery35, throwable36);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction38 = null;
    java.lang.Throwable throwable39 = null;
    queryLoggingService7.rolcForKe(kernelTransaction38, throwable39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    queryLoggingService7.strForEx(executingQuery41);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService7.strForEx(executingQuery43);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService7);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
  }

  @Test
  public void test1356() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1356");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    boolean boolean8 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService10 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService10.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService10.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService10.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService10.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService10.strForEx(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService10.rolcForKe(kernelTransaction22, throwable23);
    boolean boolean25 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable23);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService26 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    java.lang.Throwable throwable28 = null;
    queryLoggingService26.rolcForKe(kernelTransaction27, throwable28);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    queryLoggingService26.comForKe(kernelTransaction30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService26.strForEx(executingQuery32);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService26);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext35 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies36 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle37 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext35, queryLoggingServiceDependencies36);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str9, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService10);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertNotNull(queryLoggingService26);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
  }

  @Test
  public void test1357() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1357");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.strForEx(executingQuery15);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1358() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1358");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean9 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory10 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str11 = queryLoggingServiceExtensionFactory10.toString();
    boolean boolean12 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory10);
    boolean boolean13 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    java.lang.Object obj14 = null;
    boolean boolean15 = queryLoggingServiceExtensionFactory0.equals(obj14);
    java.lang.String str16 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory17 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean19 = queryLoggingServiceExtensionFactory17.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService20 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService20.rolcForKe(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService20.rolcForKe(kernelTransaction23, throwable24);
    boolean boolean26 = queryLoggingServiceExtensionFactory17.equals(
        (java.lang.Object) queryLoggingService20);
    java.lang.String str27 = queryLoggingServiceExtensionFactory17.getName();
    boolean boolean28 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) str27);
    java.lang.String str29 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService30 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    java.lang.Throwable throwable32 = null;
    queryLoggingService30.rolcForKe(kernelTransaction31, throwable32);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    queryLoggingService30.sucsForEx(executingQuery34);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    queryLoggingService30.comForKe(kernelTransaction36);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery38 = null;
    queryLoggingService30.faleForExTh(executingQuery38, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction41 = null;
    queryLoggingService30.strForEx(kernelTransaction41);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction43 = null;
    queryLoggingService30.comForKe(kernelTransaction43);
    boolean boolean45 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction43);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "query-logging" + "'", str16,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertNotNull(queryLoggingService20);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "query-logging" + "'", str27,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertEquals("'" + str29 + "' != '" + "query-logging" + "'", str29,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService30);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
  }

  @Test
  public void test1359() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1359");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.faleForExTh(executingQuery1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.faleForExTh(executingQuery4,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction7 = null;
    queryLoggingService0.strForEx(kernelTransaction7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.faleForExTh(executingQuery11,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17, throwable18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.strForEx(executingQuery22);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1360() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1360");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.comForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.strForEx(kernelTransaction11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.faleForExTh(executingQuery15, throwable16);
    java.lang.Class<?> wildcardClass18 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass18);
  }

  @Test
  public void test1361() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1361");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.comForKe(kernelTransaction11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.strForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1362() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1362");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.Object obj10 = null;
    boolean boolean11 = queryLoggingServiceExtensionFactory3.equals(obj10);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService12 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService12.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService12.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService12.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService12.comForKe(kernelTransaction20);
    boolean boolean22 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService12);
    java.lang.String str23 = queryLoggingServiceExtensionFactory3.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService24 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService24.strForEx(executingQuery25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    java.lang.Throwable throwable28 = null;
    queryLoggingService24.faleForExTh(executingQuery27, throwable28);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    queryLoggingService24.rolcForKe(kernelTransaction30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService24.faleForExTh(executingQuery32, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    java.lang.Throwable throwable36 = null;
    queryLoggingService24.faleForExTh(executingQuery35, throwable36);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery38 = null;
    queryLoggingService24.faleForExTh(executingQuery38, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction41 = null;
    queryLoggingService24.strForEx(kernelTransaction41);
    boolean boolean43 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService24);
    java.lang.String str44 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.Object obj45 = null;
    boolean boolean46 = queryLoggingServiceExtensionFactory3.equals(obj45);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(queryLoggingService12);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertEquals(
        "'" + str23 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str23, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService24);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertEquals(
        "'" + str44 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str44, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
  }

  @Test
  public void test1363() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1363");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.strForEx(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1364() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1364");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj9 = new java.lang.Object();
    java.lang.Class<?> wildcardClass10 = obj9.getClass();
    boolean boolean11 = queryLoggingServiceExtensionFactory0.equals(obj9);
    java.lang.String str12 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj13 = null;
    boolean boolean14 = queryLoggingServiceExtensionFactory0.equals(obj13);
    java.lang.String str15 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory16 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean18 = queryLoggingServiceExtensionFactory16.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService19 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService19.rolcForKe(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService19.rolcForKe(kernelTransaction22, throwable23);
    boolean boolean25 = queryLoggingServiceExtensionFactory16.equals(
        (java.lang.Object) queryLoggingService19);
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory16);
    java.lang.String str27 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory28 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean30 = queryLoggingServiceExtensionFactory28.equals((java.lang.Object) (-1L));
    java.lang.String str31 = queryLoggingServiceExtensionFactory28.toString();
    boolean boolean32 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) str31);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory33 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory34 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean36 = queryLoggingServiceExtensionFactory34.equals((java.lang.Object) (-1L));
    boolean boolean37 = queryLoggingServiceExtensionFactory33.equals((java.lang.Object) boolean36);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService38 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction39 = null;
    queryLoggingService38.rolcForKe(kernelTransaction39);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction41 = null;
    java.lang.Throwable throwable42 = null;
    queryLoggingService38.rolcForKe(kernelTransaction41, throwable42);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    queryLoggingService38.rolcForKe(kernelTransaction44);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery46 = null;
    queryLoggingService38.sucsForEx(executingQuery46);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction48 = null;
    queryLoggingService38.strForEx(kernelTransaction48);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery50 = null;
    queryLoggingService38.faleForExTh(executingQuery50,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    boolean boolean53 = queryLoggingServiceExtensionFactory33.equals(
        (java.lang.Object) "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService54 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    queryLoggingService54.rolcForKe(kernelTransaction55);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction57 = null;
    java.lang.Throwable throwable58 = null;
    queryLoggingService54.rolcForKe(kernelTransaction57, throwable58);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction60 = null;
    queryLoggingService54.rolcForKe(kernelTransaction60);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery62 = null;
    queryLoggingService54.sucsForEx(executingQuery62);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction64 = null;
    queryLoggingService54.strForEx(kernelTransaction64);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery66 = null;
    queryLoggingService54.faleForExTh(executingQuery66,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction69 = null;
    java.lang.Throwable throwable70 = null;
    queryLoggingService54.rolcForKe(kernelTransaction69, throwable70);
    boolean boolean72 = queryLoggingServiceExtensionFactory33.equals(
        (java.lang.Object) queryLoggingService54);
    boolean boolean73 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory33);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext74 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies75 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle76 = queryLoggingServiceExtensionFactory33.newInstance(
          extensionContext74, queryLoggingServiceDependencies75);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "query-logging" + "'", str12,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertEquals(
        "'" + str15 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str15, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    org.junit.Assert.assertNotNull(queryLoggingService19);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "query-logging" + "'", str27,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    org.junit.Assert.assertEquals(
        "'" + str31 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str31, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertNotNull(queryLoggingService38);
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    org.junit.Assert.assertNotNull(queryLoggingService54);
    org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
  }

  @Test
  public void test1365() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1365");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService2 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService2.rolcForKe(kernelTransaction3, throwable4);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable4);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str11 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.Class<?> wildcardClass12 = queryLoggingServiceExtensionFactory0.getClass();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService2);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "query-logging" + "'", str10,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(wildcardClass12);
  }

  @Test
  public void test1366() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1366");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.strForEx(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.faleForExTh(executingQuery13, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20, "hi!");
    java.lang.Class<?> wildcardClass23 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass23);
  }

  @Test
  public void test1367() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1367");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService2 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService2.rolcForKe(kernelTransaction3, throwable4);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable4);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl9 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction10 = null;
    org.neo4j.configuration.Config config12 = null;
    java.nio.file.Path path13 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl9.init(fileSystemAbstraction10, "hi!", config12,
        path13);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction15 = null;
    org.neo4j.configuration.Config config17 = null;
    java.nio.file.Path path18 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl9.init(fileSystemAbstraction15,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config17, path18);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.configuration.Config config22 = null;
    java.nio.file.Path path23 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl9.init(fileSystemAbstraction20,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config22, path23);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction25 = null;
    org.neo4j.configuration.Config config27 = null;
    java.nio.file.Path path28 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl9.init(fileSystemAbstraction25, "query-logging",
        config27, path28);
    boolean boolean30 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) fileSystemAbstraction25);
    boolean boolean32 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0.0f);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService33 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    queryLoggingService33.strForEx(executingQuery34);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService33.faleForExTh(executingQuery36, throwable37);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction39 = null;
    java.lang.Throwable throwable40 = null;
    queryLoggingService33.rolcForKe(kernelTransaction39, throwable40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    queryLoggingService33.faleForExTh(executingQuery42, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery45 = null;
    queryLoggingService33.sucsForEx(executingQuery45);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    java.lang.Throwable throwable48 = null;
    queryLoggingService33.faleForExTh(executingQuery47, throwable48);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery50 = null;
    queryLoggingService33.strForEx(executingQuery50);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction52 = null;
    java.lang.Throwable throwable53 = null;
    queryLoggingService33.rolcForKe(kernelTransaction52, throwable53);
    boolean boolean55 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable53);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService56 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction57 = null;
    java.lang.Throwable throwable58 = null;
    queryLoggingService56.rolcForKe(kernelTransaction57, throwable58);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction60 = null;
    queryLoggingService56.comForKe(kernelTransaction60);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery62 = null;
    java.lang.Throwable throwable63 = null;
    queryLoggingService56.faleForExTh(executingQuery62, throwable63);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery65 = null;
    queryLoggingService56.sucsForEx(executingQuery65);
    boolean boolean67 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery65);
    java.lang.String str68 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str69 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService2);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertNotNull(queryLoggingService33);
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    org.junit.Assert.assertNotNull(queryLoggingService56);
    org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    org.junit.Assert.assertEquals(
        "'" + str68 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str68, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str69 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str69, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1368() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1368");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.faleForExTh(executingQuery1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.rolcForKe(kernelTransaction4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.sucsForEx(executingQuery10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12, throwable13);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1369() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1369");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService2 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService2.rolcForKe(kernelTransaction3, throwable4);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable4);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory11 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean13 = queryLoggingServiceExtensionFactory11.equals((java.lang.Object) (short) 1);
    java.lang.String str14 = queryLoggingServiceExtensionFactory11.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService15 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService15.strForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService15.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService15.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService15.comForKe(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService15.strForEx(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService15.strForEx(executingQuery28);
    boolean boolean30 = queryLoggingServiceExtensionFactory11.equals(
        (java.lang.Object) executingQuery28);
    java.lang.String str31 = queryLoggingServiceExtensionFactory11.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService32 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    queryLoggingService32.rolcForKe(kernelTransaction33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService32.faleForExTh(executingQuery35, "");
    java.lang.Class<?> wildcardClass38 = queryLoggingService32.getClass();
    boolean boolean39 = queryLoggingServiceExtensionFactory11.equals(
        (java.lang.Object) queryLoggingService32);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory40 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory41 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean43 = queryLoggingServiceExtensionFactory41.equals((java.lang.Object) (-1L));
    boolean boolean44 = queryLoggingServiceExtensionFactory40.equals((java.lang.Object) boolean43);
    java.lang.String str45 = queryLoggingServiceExtensionFactory40.toString();
    java.lang.String str46 = queryLoggingServiceExtensionFactory40.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory47 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean49 = queryLoggingServiceExtensionFactory47.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory50 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str51 = queryLoggingServiceExtensionFactory50.toString();
    boolean boolean52 = queryLoggingServiceExtensionFactory47.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory50);
    boolean boolean53 = queryLoggingServiceExtensionFactory40.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory47);
    java.lang.String str54 = queryLoggingServiceExtensionFactory40.getName();
    boolean boolean55 = queryLoggingServiceExtensionFactory11.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory40);
    boolean boolean56 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory11);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService57 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery58 = null;
    queryLoggingService57.strForEx(executingQuery58);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery60 = null;
    java.lang.Throwable throwable61 = null;
    queryLoggingService57.faleForExTh(executingQuery60, throwable61);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction63 = null;
    java.lang.Throwable throwable64 = null;
    queryLoggingService57.rolcForKe(kernelTransaction63, throwable64);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery66 = null;
    queryLoggingService57.faleForExTh(executingQuery66, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery69 = null;
    queryLoggingService57.sucsForEx(executingQuery69);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery71 = null;
    java.lang.Throwable throwable72 = null;
    queryLoggingService57.faleForExTh(executingQuery71, throwable72);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery74 = null;
    queryLoggingService57.strForEx(executingQuery74);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery76 = null;
    java.lang.Throwable throwable77 = null;
    queryLoggingService57.faleForExTh(executingQuery76, throwable77);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery79 = null;
    java.lang.Throwable throwable80 = null;
    queryLoggingService57.faleForExTh(executingQuery79, throwable80);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction82 = null;
    queryLoggingService57.strForEx(kernelTransaction82);
    boolean boolean84 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction82);
    java.lang.String str85 = queryLoggingServiceExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext86 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies87 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle88 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext86, queryLoggingServiceDependencies87);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService2);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str10, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "query-logging" + "'", str14,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService15);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    org.junit.Assert.assertEquals("'" + str31 + "' != '" + "query-logging" + "'", str31,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService32);
    org.junit.Assert.assertNotNull(wildcardClass38);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    org.junit.Assert.assertEquals(
        "'" + str45 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str45, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str46 + "' != '" + "query-logging" + "'", str46,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertEquals(
        "'" + str51 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str51, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    org.junit.Assert.assertEquals("'" + str54 + "' != '" + "query-logging" + "'", str54,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    org.junit.Assert.assertNotNull(queryLoggingService57);
    org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    org.junit.Assert.assertEquals("'" + str85 + "' != '" + "query-logging" + "'", str85,
        "query-logging");
  }

  @Test
  public void test1370() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1370");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.strForEx(executingQuery17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.faleForExTh(executingQuery21, "hi!");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1371() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1371");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean9 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory10 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str11 = queryLoggingServiceExtensionFactory10.toString();
    boolean boolean12 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory10);
    boolean boolean13 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    java.lang.Object obj14 = null;
    boolean boolean15 = queryLoggingServiceExtensionFactory0.equals(obj14);
    java.lang.Class<?> wildcardClass16 = queryLoggingServiceExtensionFactory0.getClass();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertNotNull(wildcardClass16);
  }

  @Test
  public void test1372() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1372");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.faleForExTh(executingQuery23, throwable24);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    java.lang.Throwable throwable27 = null;
    queryLoggingService0.rolcForKe(kernelTransaction26, throwable27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService0.faleForExTh(executingQuery29, throwable30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService0.strForEx(executingQuery32);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction34 = null;
    java.lang.Throwable throwable35 = null;
    queryLoggingService0.rolcForKe(kernelTransaction34, throwable35);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1373() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1373");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17, throwable18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.sucsForEx(executingQuery20);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1374() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1374");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.comForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.strForEx(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18, throwable19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1375() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1375");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.sucsForEx(executingQuery11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.comForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.strForEx(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.faleForExTh(executingQuery21, throwable22);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1376() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1376");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj8 = null;
    boolean boolean9 = queryLoggingServiceExtensionFactory0.equals(obj8);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext10 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies11 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle12 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext10, queryLoggingServiceDependencies11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1377() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1377");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.comForKe(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22, throwable23);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1378() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1378");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.faleForExTh(executingQuery13, throwable14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1379() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1379");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.strForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.strForEx(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1380() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1380");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.strForEx(kernelTransaction1);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1381() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1381");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.strForEx(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.strForEx(executingQuery16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.comForKe(kernelTransaction18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20, throwable21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.faleForExTh(executingQuery23, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    queryLoggingService0.comForKe(kernelTransaction26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService0.faleForExTh(executingQuery28, throwable29);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1382() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1382");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "hi!", config13,
        path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "hi!", config23,
        path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "hi!", config28,
        path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31, "hi!", config33,
        path34);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction36 = null;
    org.neo4j.configuration.Config config38 = null;
    java.nio.file.Path path39 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction36,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config38, path39);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction41 = null;
    org.neo4j.configuration.Config config43 = null;
    java.nio.file.Path path44 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction41, "", config43,
        path44);
  }

  @Test
  public void test1383() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1383");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.rolcForKe(kernelTransaction4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    queryLoggingService0.faleForExTh(executingQuery7, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1384() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1384");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.comForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.sucsForEx(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.strForEx(executingQuery21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23, throwable24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService0.sucsForEx(executingQuery26);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1385() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1385");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1386() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1386");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6, "", config8,
        path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "query-logging",
        config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config23, path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "hi!", config28,
        path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31, "query-logging",
        config33, path34);
  }

  @Test
  public void test1387() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1387");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "hi!");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1388() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1388");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.strForEx(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1389() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1389");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.strForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1390() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1390");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.faleForExTh(executingQuery16, "");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1391() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1391");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.Object obj10 = null;
    boolean boolean11 = queryLoggingServiceExtensionFactory3.equals(obj10);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService12 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService12.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService12.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService12.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService12.comForKe(kernelTransaction20);
    boolean boolean22 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService12);
    java.lang.String str23 = queryLoggingServiceExtensionFactory3.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService24 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService24.strForEx(executingQuery25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    java.lang.Throwable throwable28 = null;
    queryLoggingService24.faleForExTh(executingQuery27, throwable28);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    queryLoggingService24.rolcForKe(kernelTransaction30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService24.faleForExTh(executingQuery32, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    java.lang.Throwable throwable36 = null;
    queryLoggingService24.faleForExTh(executingQuery35, throwable36);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery38 = null;
    queryLoggingService24.faleForExTh(executingQuery38, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction41 = null;
    queryLoggingService24.strForEx(kernelTransaction41);
    boolean boolean43 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService24);
    java.lang.String str44 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str45 = queryLoggingServiceExtensionFactory3.getName();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(queryLoggingService12);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertEquals(
        "'" + str23 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str23, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService24);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertEquals(
        "'" + str44 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str44, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str45 + "' != '" + "query-logging" + "'", str45,
        "query-logging");
  }

  @Test
  public void test1392() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1392");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.sucsForEx(executingQuery15);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1393() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1393");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj9 = new java.lang.Object();
    java.lang.Class<?> wildcardClass10 = obj9.getClass();
    boolean boolean11 = queryLoggingServiceExtensionFactory0.equals(obj9);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory12 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean14 = queryLoggingServiceExtensionFactory12.equals((java.lang.Object) (short) 1);
    java.lang.String str15 = queryLoggingServiceExtensionFactory12.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService16 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService16.strForEx(executingQuery17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService16.faleForExTh(executingQuery19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService16.rolcForKe(kernelTransaction22, throwable23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService16.comForKe(kernelTransaction25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService16.strForEx(executingQuery27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService16.strForEx(executingQuery29);
    boolean boolean31 = queryLoggingServiceExtensionFactory12.equals(
        (java.lang.Object) executingQuery29);
    boolean boolean32 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery29);
    java.lang.String str33 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str34 = queryLoggingServiceExtensionFactory0.getName();
    boolean boolean36 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 10);
    java.lang.String str37 = queryLoggingServiceExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext38 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies39 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle40 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext38, queryLoggingServiceDependencies39);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "query-logging" + "'", str15,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService16);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertEquals(
        "'" + str33 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str33, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str34 + "' != '" + "query-logging" + "'", str34,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertEquals("'" + str37 + "' != '" + "query-logging" + "'", str37,
        "query-logging");
  }

  @Test
  public void test1394() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1394");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17, throwable18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1395() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1395");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService5.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService5.sucsForEx(executingQuery9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.comForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.faleForExTh(executingQuery13, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService5.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService5.faleForExTh(executingQuery18, "query-logging");
    boolean boolean21 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) "query-logging");
    java.lang.String str22 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str23 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    org.junit.Assert.assertEquals("'" + str22 + "' != '" + "query-logging" + "'", str22,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str23 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str23, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1396() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1396");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean9 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory10 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str11 = queryLoggingServiceExtensionFactory10.toString();
    boolean boolean12 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory10);
    boolean boolean13 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    java.lang.Object obj14 = null;
    boolean boolean15 = queryLoggingServiceExtensionFactory0.equals(obj14);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory16 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory17 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean19 = queryLoggingServiceExtensionFactory17.equals((java.lang.Object) (-1L));
    boolean boolean20 = queryLoggingServiceExtensionFactory16.equals((java.lang.Object) boolean19);
    boolean boolean22 = queryLoggingServiceExtensionFactory16.equals((java.lang.Object) 0L);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory23 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory24 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean26 = queryLoggingServiceExtensionFactory24.equals((java.lang.Object) (-1L));
    boolean boolean27 = queryLoggingServiceExtensionFactory23.equals((java.lang.Object) boolean26);
    java.lang.Object obj28 = new java.lang.Object();
    boolean boolean29 = queryLoggingServiceExtensionFactory23.equals(obj28);
    java.lang.String str30 = queryLoggingServiceExtensionFactory23.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService31 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService31.strForEx(executingQuery32);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    java.lang.Throwable throwable35 = null;
    queryLoggingService31.faleForExTh(executingQuery34, throwable35);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction37 = null;
    java.lang.Throwable throwable38 = null;
    queryLoggingService31.rolcForKe(kernelTransaction37, throwable38);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    queryLoggingService31.comForKe(kernelTransaction40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    queryLoggingService31.strForEx(executingQuery42);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    java.lang.Throwable throwable45 = null;
    queryLoggingService31.rolcForKe(kernelTransaction44, throwable45);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction47 = null;
    queryLoggingService31.comForKe(kernelTransaction47);
    boolean boolean49 = queryLoggingServiceExtensionFactory23.equals(
        (java.lang.Object) queryLoggingService31);
    boolean boolean50 = queryLoggingServiceExtensionFactory16.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory23);
    boolean boolean51 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory23);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext52 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies53 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle54 = queryLoggingServiceExtensionFactory23.newInstance(
          extensionContext52, queryLoggingServiceDependencies53);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertEquals("'" + str30 + "' != '" + "query-logging" + "'", str30,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService31);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
  }

  @Test
  public void test1397() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1397");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str11 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str12 = queryLoggingServiceExtensionFactory3.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory13 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory14 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean16 = queryLoggingServiceExtensionFactory14.equals((java.lang.Object) (-1L));
    boolean boolean17 = queryLoggingServiceExtensionFactory13.equals((java.lang.Object) boolean16);
    java.lang.String str18 = queryLoggingServiceExtensionFactory13.toString();
    java.lang.String str19 = queryLoggingServiceExtensionFactory13.getName();
    java.lang.String str20 = queryLoggingServiceExtensionFactory13.getName();
    boolean boolean21 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory13);
    java.lang.String str22 = queryLoggingServiceExtensionFactory13.toString();
    java.lang.Class<?> wildcardClass23 = queryLoggingServiceExtensionFactory13.getClass();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "query-logging" + "'", str10,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "query-logging" + "'", str11,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "query-logging" + "'", str12,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertEquals(
        "'" + str18 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str18, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "query-logging" + "'", str19,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "query-logging" + "'", str20,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    org.junit.Assert.assertEquals(
        "'" + str22 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str22, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(wildcardClass23);
  }

  @Test
  public void test1398() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1398");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService3 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService3.rolcForKe(kernelTransaction4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService3.rolcForKe(kernelTransaction6, throwable7);
    boolean boolean9 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService3);
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Class<?> wildcardClass11 = queryLoggingServiceExtensionFactory0.getClass();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(queryLoggingService3);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "query-logging" + "'", str10,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass11);
  }

  @Test
  public void test1399() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1399");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.sucsForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.faleForExTh(executingQuery11, "");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1400() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1400");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.faleForExTh(executingQuery21, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService0.faleForExTh(executingQuery24, throwable25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    java.lang.Throwable throwable28 = null;
    queryLoggingService0.rolcForKe(kernelTransaction27, throwable28);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    java.lang.Throwable throwable31 = null;
    queryLoggingService0.rolcForKe(kernelTransaction30, throwable31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    java.lang.Throwable throwable34 = null;
    queryLoggingService0.faleForExTh(executingQuery33, throwable34);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1401() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1401");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.faleForExTh(executingQuery13, throwable14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18, throwable19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1402() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1402");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    queryLoggingService0.comForKe(kernelTransaction3);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction5 = null;
    queryLoggingService0.rolcForKe(kernelTransaction5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    queryLoggingService0.strForEx(executingQuery7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1403() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1403");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService7 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService7.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService7.sucsForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService7.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService7.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService7.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService7.sucsForEx(executingQuery21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService7.rolcForKe(kernelTransaction23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService7.rolcForKe(kernelTransaction25, throwable26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService7.comForKe(kernelTransaction28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryLoggingService7.sucsForEx(executingQuery30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService7.strForEx(executingQuery32);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    java.lang.Throwable throwable36 = null;
    queryLoggingService7.faleForExTh(executingQuery35, throwable36);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery38 = null;
    java.lang.Throwable throwable39 = null;
    queryLoggingService7.faleForExTh(executingQuery38, throwable39);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction41 = null;
    java.lang.Throwable throwable42 = null;
    queryLoggingService7.rolcForKe(kernelTransaction41, throwable42);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService7);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
  }

  @Test
  public void test1404() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1404");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.strForEx(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.faleForExTh(executingQuery16,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.strForEx(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.rolcForKe(kernelTransaction21, throwable22);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1405() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1405");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str2 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService3 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService3.rolcForKe(kernelTransaction4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService3.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService3.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService3.sucsForEx(executingQuery11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService3.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService3.rolcForKe(kernelTransaction15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService3.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService3.rolcForKe(kernelTransaction21);
    boolean boolean23 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction21);
    java.lang.String str24 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str25 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str26 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str2, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService3);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "query-logging" + "'", str24,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str25 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str25, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "query-logging" + "'", str26,
        "query-logging");
  }

  @Test
  public void test1406() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1406");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.strForEx(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.strForEx(executingQuery20);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1407() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1407");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService0.sucsForEx(executingQuery25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService0.strForEx(executingQuery27);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    queryLoggingService0.comForKe(kernelTransaction29);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1408() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1408");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService8.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService8.faleForExTh(executingQuery14, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService8.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService8.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService8.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService8.comForKe(kernelTransaction24);
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService8);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService27 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService27.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    java.lang.Throwable throwable32 = null;
    queryLoggingService27.faleForExTh(executingQuery31, throwable32);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    java.lang.Throwable throwable35 = null;
    queryLoggingService27.faleForExTh(executingQuery34, throwable35);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction37 = null;
    java.lang.Throwable throwable38 = null;
    queryLoggingService27.rolcForKe(kernelTransaction37, throwable38);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    queryLoggingService27.strForEx(kernelTransaction40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    queryLoggingService27.faleForExTh(executingQuery42, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery45 = null;
    queryLoggingService27.strForEx(executingQuery45);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    queryLoggingService27.faleForExTh(executingQuery47, "");
    boolean boolean50 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery47);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertNotNull(queryLoggingService27);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
  }

  @Test
  public void test1409() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1409");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 1);
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService4 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    queryLoggingService4.strForEx(executingQuery5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService4.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService4.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService4.faleForExTh(executingQuery13, "hi!");
    boolean boolean16 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) "hi!");
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory17 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory18 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean20 = queryLoggingServiceExtensionFactory18.equals((java.lang.Object) (-1L));
    boolean boolean21 = queryLoggingServiceExtensionFactory17.equals((java.lang.Object) boolean20);
    java.lang.Object obj22 = new java.lang.Object();
    boolean boolean23 = queryLoggingServiceExtensionFactory17.equals(obj22);
    java.lang.String str24 = queryLoggingServiceExtensionFactory17.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService25 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService25.strForEx(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService25.faleForExTh(executingQuery28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    java.lang.Throwable throwable32 = null;
    queryLoggingService25.rolcForKe(kernelTransaction31, throwable32);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction34 = null;
    queryLoggingService25.comForKe(kernelTransaction34);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery36 = null;
    queryLoggingService25.strForEx(executingQuery36);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction38 = null;
    java.lang.Throwable throwable39 = null;
    queryLoggingService25.rolcForKe(kernelTransaction38, throwable39);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction41 = null;
    queryLoggingService25.comForKe(kernelTransaction41);
    boolean boolean43 = queryLoggingServiceExtensionFactory17.equals(
        (java.lang.Object) queryLoggingService25);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService44 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    java.lang.Throwable throwable46 = null;
    queryLoggingService44.rolcForKe(kernelTransaction45, throwable46);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery48 = null;
    queryLoggingService44.sucsForEx(executingQuery48);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction50 = null;
    queryLoggingService44.comForKe(kernelTransaction50);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery52 = null;
    queryLoggingService44.faleForExTh(executingQuery52, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    queryLoggingService44.strForEx(kernelTransaction55);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction57 = null;
    java.lang.Throwable throwable58 = null;
    queryLoggingService44.rolcForKe(kernelTransaction57, throwable58);
    boolean boolean60 = queryLoggingServiceExtensionFactory17.equals(
        (java.lang.Object) kernelTransaction57);
    java.lang.String str61 = queryLoggingServiceExtensionFactory17.getName();
    boolean boolean62 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory17);
    java.lang.String str63 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str64 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService65 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction66 = null;
    queryLoggingService65.rolcForKe(kernelTransaction66);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction68 = null;
    java.lang.Throwable throwable69 = null;
    queryLoggingService65.rolcForKe(kernelTransaction68, throwable69);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction71 = null;
    java.lang.Throwable throwable72 = null;
    queryLoggingService65.rolcForKe(kernelTransaction71, throwable72);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery74 = null;
    java.lang.Throwable throwable75 = null;
    queryLoggingService65.faleForExTh(executingQuery74, throwable75);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction77 = null;
    queryLoggingService65.strForEx(kernelTransaction77);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery79 = null;
    queryLoggingService65.sucsForEx(executingQuery79);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery81 = null;
    queryLoggingService65.faleForExTh(executingQuery81,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery84 = null;
    queryLoggingService65.faleForExTh(executingQuery84,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    boolean boolean87 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService65);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str3, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService4);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "query-logging" + "'", str24,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService25);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertNotNull(queryLoggingService44);
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    org.junit.Assert.assertEquals("'" + str61 + "' != '" + "query-logging" + "'", str61,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    org.junit.Assert.assertEquals("'" + str63 + "' != '" + "query-logging" + "'", str63,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str64 + "' != '" + "query-logging" + "'", str64,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService65);
    org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
  }

  @Test
  public void test1410() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1410");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.strForEx(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.comForKe(kernelTransaction18);
    java.lang.Class<?> wildcardClass20 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass20);
  }

  @Test
  public void test1411() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1411");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.Object obj5 = new java.lang.Object();
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals(obj5);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService8.comForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService8.strForEx(executingQuery19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService8.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService8.comForKe(kernelTransaction24);
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    java.lang.Throwable throwable28 = null;
    queryLoggingService8.rolcForKe(kernelTransaction27, throwable28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryLoggingService8.strForEx(executingQuery30);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction32 = null;
    queryLoggingService8.rolcForKe(kernelTransaction32);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
  }

  @Test
  public void test1412() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1412");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService2 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService2.rolcForKe(kernelTransaction3, throwable4);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable4);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.Class<?> wildcardClass9 = queryLoggingServiceExtensionFactory0.getClass();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService2);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(wildcardClass9);
  }

  @Test
  public void test1413() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1413");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.Object obj5 = new java.lang.Object();
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals(obj5);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService8.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService8.faleForExTh(executingQuery12, throwable13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService8.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService8.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService8.strForEx(kernelTransaction21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService8.faleForExTh(executingQuery23, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService8.strForEx(executingQuery26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService8.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService8.comForKe(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService8.sucsForEx(executingQuery33);
    java.lang.Class<?> wildcardClass35 = queryLoggingService8.getClass();
    boolean boolean36 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService8);
    java.lang.String str37 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertNotNull(wildcardClass35);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertEquals(
        "'" + str37 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str37, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1414() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1414");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6, "query-logging",
        config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "query-logging",
        config18, path19);
  }

  @Test
  public void test1415() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1415");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 1);
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService4 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    queryLoggingService4.strForEx(executingQuery5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService4.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService4.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService4.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService4.strForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService4.strForEx(executingQuery17);
    boolean boolean19 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery17);
    java.lang.String str20 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str21 = queryLoggingServiceExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext22 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies23 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle24 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext22, queryLoggingServiceDependencies23);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "query-logging" + "'", str3,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService4);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "query-logging" + "'", str20,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str21 + "' != '" + "query-logging" + "'", str21,
        "query-logging");
  }

  @Test
  public void test1416() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1416");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService2 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService2.strForEx(executingQuery3);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    java.lang.Throwable throwable6 = null;
    queryLoggingService2.faleForExTh(executingQuery5, throwable6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService2.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService2.sucsForEx(executingQuery10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService2.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService2.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService2.strForEx(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService2.strForEx(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService2.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService2.rolcForKe(kernelTransaction24, throwable25);
    boolean boolean27 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction24);
    java.lang.Object obj28 = null;
    boolean boolean29 = queryLoggingServiceExtensionFactory0.equals(obj28);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory30 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory31 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean33 = queryLoggingServiceExtensionFactory31.equals((java.lang.Object) (-1L));
    boolean boolean34 = queryLoggingServiceExtensionFactory30.equals((java.lang.Object) boolean33);
    java.lang.String str35 = queryLoggingServiceExtensionFactory30.toString();
    java.lang.String str36 = queryLoggingServiceExtensionFactory30.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory37 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean39 = queryLoggingServiceExtensionFactory37.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory40 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str41 = queryLoggingServiceExtensionFactory40.toString();
    boolean boolean42 = queryLoggingServiceExtensionFactory37.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory40);
    boolean boolean43 = queryLoggingServiceExtensionFactory30.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory37);
    java.lang.Object obj44 = null;
    boolean boolean45 = queryLoggingServiceExtensionFactory30.equals(obj44);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory46 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory47 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean49 = queryLoggingServiceExtensionFactory47.equals((java.lang.Object) (-1L));
    boolean boolean50 = queryLoggingServiceExtensionFactory46.equals((java.lang.Object) boolean49);
    boolean boolean52 = queryLoggingServiceExtensionFactory46.equals((java.lang.Object) 0L);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory53 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory54 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean56 = queryLoggingServiceExtensionFactory54.equals((java.lang.Object) (-1L));
    boolean boolean57 = queryLoggingServiceExtensionFactory53.equals((java.lang.Object) boolean56);
    java.lang.Object obj58 = new java.lang.Object();
    boolean boolean59 = queryLoggingServiceExtensionFactory53.equals(obj58);
    java.lang.String str60 = queryLoggingServiceExtensionFactory53.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService61 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery62 = null;
    queryLoggingService61.strForEx(executingQuery62);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery64 = null;
    java.lang.Throwable throwable65 = null;
    queryLoggingService61.faleForExTh(executingQuery64, throwable65);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction67 = null;
    java.lang.Throwable throwable68 = null;
    queryLoggingService61.rolcForKe(kernelTransaction67, throwable68);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction70 = null;
    queryLoggingService61.comForKe(kernelTransaction70);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery72 = null;
    queryLoggingService61.strForEx(executingQuery72);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction74 = null;
    java.lang.Throwable throwable75 = null;
    queryLoggingService61.rolcForKe(kernelTransaction74, throwable75);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction77 = null;
    queryLoggingService61.comForKe(kernelTransaction77);
    boolean boolean79 = queryLoggingServiceExtensionFactory53.equals(
        (java.lang.Object) queryLoggingService61);
    boolean boolean80 = queryLoggingServiceExtensionFactory46.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory53);
    boolean boolean81 = queryLoggingServiceExtensionFactory30.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory53);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService82 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction83 = null;
    java.lang.Throwable throwable84 = null;
    queryLoggingService82.rolcForKe(kernelTransaction83, throwable84);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction86 = null;
    queryLoggingService82.comForKe(kernelTransaction86);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery88 = null;
    queryLoggingService82.sucsForEx(executingQuery88);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction90 = null;
    java.lang.Throwable throwable91 = null;
    queryLoggingService82.rolcForKe(kernelTransaction90, throwable91);
    boolean boolean93 = queryLoggingServiceExtensionFactory30.equals(
        (java.lang.Object) queryLoggingService82);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery94 = null;
    queryLoggingService82.sucsForEx(executingQuery94);
    boolean boolean96 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService82);
    java.lang.Class<?> wildcardClass97 = queryLoggingServiceExtensionFactory0.getClass();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService2);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertEquals(
        "'" + str35 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str35, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str36 + "' != '" + "query-logging" + "'", str36,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertEquals(
        "'" + str41 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str41, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    org.junit.Assert.assertEquals("'" + str60 + "' != '" + "query-logging" + "'", str60,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService61);
    org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    org.junit.Assert.assertNotNull(queryLoggingService82);
    org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    org.junit.Assert.assertNotNull(wildcardClass97);
  }

  @Test
  public void test1417() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1417");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService7 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService7.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService7.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService7.rolcForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService7.sucsForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService7.faleForExTh(executingQuery17, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService7.strForEx(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService7.rolcForKe(kernelTransaction22);
    boolean boolean24 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService7);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService25 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    java.lang.Throwable throwable27 = null;
    queryLoggingService25.rolcForKe(kernelTransaction26, throwable27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService25.sucsForEx(executingQuery29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryLoggingService25.strForEx(executingQuery31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService25.strForEx(executingQuery33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService25.strForEx(executingQuery35);
    boolean boolean37 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery35);
    java.lang.String str38 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService39 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    queryLoggingService39.rolcForKe(kernelTransaction40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    queryLoggingService39.faleForExTh(executingQuery42, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery45 = null;
    java.lang.Throwable throwable46 = null;
    queryLoggingService39.faleForExTh(executingQuery45, throwable46);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery48 = null;
    java.lang.Throwable throwable49 = null;
    queryLoggingService39.faleForExTh(executingQuery48, throwable49);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction51 = null;
    queryLoggingService39.strForEx(kernelTransaction51);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery53 = null;
    queryLoggingService39.faleForExTh(executingQuery53, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery56 = null;
    java.lang.Throwable throwable57 = null;
    queryLoggingService39.faleForExTh(executingQuery56, throwable57);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction59 = null;
    queryLoggingService39.comForKe(kernelTransaction59);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery61 = null;
    queryLoggingService39.sucsForEx(executingQuery61);
    boolean boolean63 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService39);
    java.lang.String str64 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService7);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(queryLoggingService25);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertEquals("'" + str38 + "' != '" + "query-logging" + "'", str38,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService39);
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    org.junit.Assert.assertEquals("'" + str64 + "' != '" + "query-logging" + "'", str64,
        "query-logging");
  }

  @Test
  public void test1418() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1418");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.comForKe(kernelTransaction18);
    java.lang.Class<?> wildcardClass20 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass20);
  }

  @Test
  public void test1419() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1419");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.strForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.strForEx(executingQuery16);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1420() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1420");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService2 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService2.rolcForKe(kernelTransaction3, throwable4);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable4);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl9 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction10 = null;
    org.neo4j.configuration.Config config12 = null;
    java.nio.file.Path path13 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl9.init(fileSystemAbstraction10, "hi!", config12,
        path13);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction15 = null;
    org.neo4j.configuration.Config config17 = null;
    java.nio.file.Path path18 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl9.init(fileSystemAbstraction15, "query-logging",
        config17, path18);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.configuration.Config config22 = null;
    java.nio.file.Path path23 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl9.init(fileSystemAbstraction20,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config22, path23);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction25 = null;
    org.neo4j.configuration.Config config27 = null;
    java.nio.file.Path path28 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl9.init(fileSystemAbstraction25, "", config27,
        path28);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction30 = null;
    org.neo4j.configuration.Config config32 = null;
    java.nio.file.Path path33 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl9.init(fileSystemAbstraction30, "hi!", config32,
        path33);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction35 = null;
    org.neo4j.configuration.Config config37 = null;
    java.nio.file.Path path38 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl9.init(fileSystemAbstraction35, "hi!", config37,
        path38);
    boolean boolean40 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) config37);
    java.lang.String str41 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.Class<?> wildcardClass42 = queryLoggingServiceExtensionFactory0.getClass();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService2);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    org.junit.Assert.assertEquals(
        "'" + str41 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str41, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(wildcardClass42);
  }

  @Test
  public void test1421() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1421");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.sucsForEx(executingQuery10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.comForKe(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.faleForExTh(executingQuery17,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1422() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1422");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str2 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory4 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean6 = queryLoggingServiceExtensionFactory4.equals((java.lang.Object) (-1L));
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) boolean6);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    boolean boolean20 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery18);
    java.lang.String str21 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str22 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean23 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) str22);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext24 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies25 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle26 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext24, queryLoggingServiceDependencies25);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str2, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertEquals(
        "'" + str21 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str21, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str22 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str22, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
  }

  @Test
  public void test1423() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1423");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.faleForExTh(executingQuery1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.faleForExTh(executingQuery10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1424() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1424");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService9 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService9.rolcForKe(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService9.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService9.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService9.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService9.rolcForKe(kernelTransaction20);
    java.lang.Class<?> wildcardClass22 = queryLoggingService9.getClass();
    boolean boolean23 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) wildcardClass22);
    java.lang.String str24 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj25 = null;
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals(obj25);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str6, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService9);
    org.junit.Assert.assertNotNull(wildcardClass22);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "query-logging" + "'", str24,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
  }

  @Test
  public void test1425() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1425");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj9 = new java.lang.Object();
    java.lang.Class<?> wildcardClass10 = obj9.getClass();
    boolean boolean11 = queryLoggingServiceExtensionFactory0.equals(obj9);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService12 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService12.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService12.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService12.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService12.faleForExTh(executingQuery20, throwable21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService12.strForEx(kernelTransaction23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService12.strForEx(executingQuery25);
    boolean boolean27 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery25);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext28 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies29 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle30 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext28, queryLoggingServiceDependencies29);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(queryLoggingService12);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
  }

  @Test
  public void test1426() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1426");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.strForEx(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.strForEx(kernelTransaction19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1427() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1427");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService8.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService8.sucsForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery22);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService25 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService25.strForEx(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService25.faleForExTh(executingQuery28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService25.rolcForKe(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService25.sucsForEx(executingQuery33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService25.strForEx(executingQuery35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService25.sucsForEx(executingQuery37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService25.sucsForEx(executingQuery39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    queryLoggingService25.sucsForEx(executingQuery41);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService25.strForEx(executingQuery43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    java.lang.Throwable throwable46 = null;
    queryLoggingService25.rolcForKe(kernelTransaction45, throwable46);
    boolean boolean48 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService25);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService49 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery50 = null;
    queryLoggingService49.strForEx(executingQuery50);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery52 = null;
    java.lang.Throwable throwable53 = null;
    queryLoggingService49.faleForExTh(executingQuery52, throwable53);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    java.lang.Throwable throwable56 = null;
    queryLoggingService49.rolcForKe(kernelTransaction55, throwable56);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery58 = null;
    queryLoggingService49.faleForExTh(executingQuery58, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction61 = null;
    java.lang.Throwable throwable62 = null;
    queryLoggingService49.rolcForKe(kernelTransaction61, throwable62);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction64 = null;
    queryLoggingService49.comForKe(kernelTransaction64);
    boolean boolean66 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) kernelTransaction64);
    java.lang.String str67 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str68 = queryLoggingServiceExtensionFactory3.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService69 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction70 = null;
    queryLoggingService69.rolcForKe(kernelTransaction70);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction72 = null;
    java.lang.Throwable throwable73 = null;
    queryLoggingService69.rolcForKe(kernelTransaction72, throwable73);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction75 = null;
    java.lang.Throwable throwable76 = null;
    queryLoggingService69.rolcForKe(kernelTransaction75, throwable76);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery78 = null;
    java.lang.Throwable throwable79 = null;
    queryLoggingService69.faleForExTh(executingQuery78, throwable79);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction81 = null;
    queryLoggingService69.strForEx(kernelTransaction81);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery83 = null;
    queryLoggingService69.sucsForEx(executingQuery83);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery85 = null;
    java.lang.Throwable throwable86 = null;
    queryLoggingService69.faleForExTh(executingQuery85, throwable86);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction88 = null;
    queryLoggingService69.rolcForKe(kernelTransaction88);
    boolean boolean90 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) kernelTransaction88);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext91 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies92 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle93 = queryLoggingServiceExtensionFactory3.newInstance(
          extensionContext91, queryLoggingServiceDependencies92);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(queryLoggingService25);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    org.junit.Assert.assertNotNull(queryLoggingService49);
    org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    org.junit.Assert.assertEquals("'" + str67 + "' != '" + "query-logging" + "'", str67,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str68 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str68, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService69);
    org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
  }

  @Test
  public void test1428() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1428");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.faleForExTh(executingQuery13, throwable14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.faleForExTh(executingQuery16, throwable17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.strForEx(executingQuery19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1429() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1429");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.strForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1430() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1430");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.comForKe(kernelTransaction18);
    java.lang.Class<?> wildcardClass20 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass20);
  }

  @Test
  public void test1431() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1431");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    boolean boolean8 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService10 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService10.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService10.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService10.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService10.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService10.strForEx(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService10.rolcForKe(kernelTransaction22, throwable23);
    boolean boolean25 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable23);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService26 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    java.lang.Throwable throwable28 = null;
    queryLoggingService26.rolcForKe(kernelTransaction27, throwable28);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    queryLoggingService26.comForKe(kernelTransaction30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService26.strForEx(executingQuery32);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService26);
    java.lang.String str35 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str9, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService10);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertNotNull(queryLoggingService26);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertEquals(
        "'" + str35 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str35, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1432() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1432");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1.0d));
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService3 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService3.rolcForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService3.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService3.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService3.faleForExTh(executingQuery12, throwable13);
    boolean boolean15 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery12);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService16 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService16.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService16.faleForExTh(executingQuery19, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService16.rolcForKe(kernelTransaction22);
    boolean boolean24 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService16);
    java.lang.String str25 = queryLoggingServiceExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext26 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies27 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle28 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext26, queryLoggingServiceDependencies27);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(queryLoggingService3);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertNotNull(queryLoggingService16);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertEquals("'" + str25 + "' != '" + "query-logging" + "'", str25,
        "query-logging");
  }

  @Test
  public void test1433() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1433");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.strForEx(executingQuery12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.comForKe(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1434() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1434");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.faleForExTh(executingQuery1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.faleForExTh(executingQuery10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1435() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1435");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.faleForExTh(executingQuery14, throwable15);
    java.lang.Class<?> wildcardClass17 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass17);
  }

  @Test
  public void test1436() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1436");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    queryLoggingService0.strForEx(kernelTransaction3);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction5 = null;
    queryLoggingService0.strForEx(kernelTransaction5);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction7);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1437() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1437");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.faleForExTh(executingQuery1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.faleForExTh(executingQuery11, "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1438() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1438");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.faleForExTh(executingQuery20, throwable21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23, throwable24);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    queryLoggingService0.comForKe(kernelTransaction26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService0.strForEx(executingQuery28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryLoggingService0.sucsForEx(executingQuery30);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1439() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1439");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean9 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory10 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str11 = queryLoggingServiceExtensionFactory10.toString();
    boolean boolean12 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory10);
    boolean boolean13 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    java.lang.Object obj14 = null;
    boolean boolean15 = queryLoggingServiceExtensionFactory0.equals(obj14);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory16 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory17 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean19 = queryLoggingServiceExtensionFactory17.equals((java.lang.Object) (-1L));
    boolean boolean20 = queryLoggingServiceExtensionFactory16.equals((java.lang.Object) boolean19);
    boolean boolean22 = queryLoggingServiceExtensionFactory16.equals((java.lang.Object) 0L);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory23 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory24 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean26 = queryLoggingServiceExtensionFactory24.equals((java.lang.Object) (-1L));
    boolean boolean27 = queryLoggingServiceExtensionFactory23.equals((java.lang.Object) boolean26);
    java.lang.Object obj28 = new java.lang.Object();
    boolean boolean29 = queryLoggingServiceExtensionFactory23.equals(obj28);
    java.lang.String str30 = queryLoggingServiceExtensionFactory23.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService31 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService31.strForEx(executingQuery32);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    java.lang.Throwable throwable35 = null;
    queryLoggingService31.faleForExTh(executingQuery34, throwable35);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction37 = null;
    java.lang.Throwable throwable38 = null;
    queryLoggingService31.rolcForKe(kernelTransaction37, throwable38);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    queryLoggingService31.comForKe(kernelTransaction40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    queryLoggingService31.strForEx(executingQuery42);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    java.lang.Throwable throwable45 = null;
    queryLoggingService31.rolcForKe(kernelTransaction44, throwable45);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction47 = null;
    queryLoggingService31.comForKe(kernelTransaction47);
    boolean boolean49 = queryLoggingServiceExtensionFactory23.equals(
        (java.lang.Object) queryLoggingService31);
    boolean boolean50 = queryLoggingServiceExtensionFactory16.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory23);
    boolean boolean51 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory23);
    java.lang.String str52 = queryLoggingServiceExtensionFactory23.toString();
    java.lang.String str53 = queryLoggingServiceExtensionFactory23.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext54 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies55 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle56 = queryLoggingServiceExtensionFactory23.newInstance(
          extensionContext54, queryLoggingServiceDependencies55);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertEquals("'" + str30 + "' != '" + "query-logging" + "'", str30,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService31);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    org.junit.Assert.assertEquals(
        "'" + str52 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str52, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str53 + "' != '" + "query-logging" + "'", str53,
        "query-logging");
  }

  @Test
  public void test1440() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1440");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.comForKe(kernelTransaction11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.faleForExTh(executingQuery16, throwable17);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1441() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1441");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService0.strForEx(kernelTransaction8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.comForKe(kernelTransaction12);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1442() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1442");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.strForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16, throwable17);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1443() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1443");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.strForEx(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.faleForExTh(executingQuery21, "");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1444() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1444");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService0.strForEx(kernelTransaction8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15, throwable16);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1445() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1445");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService5.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService5.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService5.faleForExTh(executingQuery17,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    boolean boolean20 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    java.lang.String str21 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str22 = queryLoggingServiceExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext23 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies24 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle25 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext23, queryLoggingServiceDependencies24);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertEquals(
        "'" + str21 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str21, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str22 + "' != '" + "query-logging" + "'", str22,
        "query-logging");
  }

  @Test
  public void test1446() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1446");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.strForEx(executingQuery22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.strForEx(kernelTransaction24);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    queryLoggingService0.comForKe(kernelTransaction26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService0.strForEx(executingQuery28);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    queryLoggingService0.rolcForKe(kernelTransaction30);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1447() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1447");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 1);
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService4 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    queryLoggingService4.strForEx(executingQuery5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService4.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService4.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService4.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService4.strForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService4.strForEx(executingQuery17);
    boolean boolean19 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery17);
    java.lang.String str20 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str21 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str22 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str23 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService24 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService24.strForEx(executingQuery25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    java.lang.Throwable throwable28 = null;
    queryLoggingService24.faleForExTh(executingQuery27, throwable28);
    boolean boolean30 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable28);
    java.lang.String str31 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "query-logging" + "'", str3,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService4);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "query-logging" + "'", str20,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str21 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str21, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str22 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str22, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "query-logging" + "'", str23,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService24);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    org.junit.Assert.assertEquals("'" + str31 + "' != '" + "query-logging" + "'", str31,
        "query-logging");
  }

  @Test
  public void test1448() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1448");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext10 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies11 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle12 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext10, queryLoggingServiceDependencies11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
  }

  @Test
  public void test1449() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1449");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 1);
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService4 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    queryLoggingService4.strForEx(executingQuery5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService4.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService4.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService4.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService4.strForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService4.strForEx(executingQuery17);
    boolean boolean19 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery17);
    java.lang.String str20 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str21 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService22 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService22.faleForExTh(executingQuery23,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    java.lang.Throwable throwable27 = null;
    queryLoggingService22.rolcForKe(kernelTransaction26, throwable27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService22.faleForExTh(executingQuery29, throwable30);
    boolean boolean32 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable30);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory33 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean35 = queryLoggingServiceExtensionFactory33.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory36 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str37 = queryLoggingServiceExtensionFactory36.toString();
    boolean boolean38 = queryLoggingServiceExtensionFactory33.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory36);
    boolean boolean40 = queryLoggingServiceExtensionFactory36.equals((java.lang.Object) 100.0d);
    java.lang.String str41 = queryLoggingServiceExtensionFactory36.toString();
    java.lang.String str42 = queryLoggingServiceExtensionFactory36.getName();
    boolean boolean43 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) str42);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "query-logging" + "'", str3,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService4);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "query-logging" + "'", str20,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str21 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str21, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService22);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    org.junit.Assert.assertEquals(
        "'" + str37 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str37, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    org.junit.Assert.assertEquals(
        "'" + str41 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str41, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str42 + "' != '" + "query-logging" + "'", str42,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
  }

  @Test
  public void test1450() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1450");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.faleForExTh(executingQuery12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.strForEx(executingQuery17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.sucsForEx(executingQuery19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1451() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1451");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.comForKe(kernelTransaction11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1452() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1452");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService8.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService8.sucsForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery22);
    java.lang.String str25 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str26 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str27 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str28 = queryLoggingServiceExtensionFactory3.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService29 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    java.lang.Throwable throwable31 = null;
    queryLoggingService29.rolcForKe(kernelTransaction30, throwable31);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    queryLoggingService29.comForKe(kernelTransaction33);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction35 = null;
    queryLoggingService29.rolcForKe(kernelTransaction35);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction37 = null;
    queryLoggingService29.rolcForKe(kernelTransaction37);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction39 = null;
    java.lang.Throwable throwable40 = null;
    queryLoggingService29.rolcForKe(kernelTransaction39, throwable40);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction42 = null;
    queryLoggingService29.comForKe(kernelTransaction42);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    java.lang.Throwable throwable45 = null;
    queryLoggingService29.rolcForKe(kernelTransaction44, throwable45);
    boolean boolean47 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) throwable45);
    java.lang.Class<?> wildcardClass48 = queryLoggingServiceExtensionFactory3.getClass();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertEquals(
        "'" + str25 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str25, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "query-logging" + "'", str26,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str27 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str27, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str28 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str28, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService29);
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    org.junit.Assert.assertNotNull(wildcardClass48);
  }

  @Test
  public void test1453() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1453");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService0.strForEx(kernelTransaction8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.faleForExTh(executingQuery10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1454() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1454");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.sucsForEx(executingQuery21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.strForEx(kernelTransaction23);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1455() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1455");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22, throwable23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService0.strForEx(executingQuery25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService0.strForEx(executingQuery27);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1456() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1456");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.sucsForEx(executingQuery17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService0.faleForExTh(executingQuery26, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService0.faleForExTh(executingQuery29, throwable30);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1457() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1457");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.comForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.strForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.sucsForEx(executingQuery21);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1458() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1458");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.sucsForEx(executingQuery10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.comForKe(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.faleForExTh(executingQuery16, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.faleForExTh(executingQuery19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22, throwable23);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1459() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1459");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.comForKe(kernelTransaction11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1460() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1460");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.sucsForEx(executingQuery11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.sucsForEx(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.strForEx(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService0.faleForExTh(executingQuery26,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    queryLoggingService0.comForKe(kernelTransaction29);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1461() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1461");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22, throwable23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService0.strForEx(kernelTransaction25);
    java.lang.Class<?> wildcardClass27 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass27);
  }

  @Test
  public void test1462() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1462");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.faleForExTh(executingQuery16,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.faleForExTh(executingQuery19, "");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1463() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1463");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.strForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService0.faleForExTh(executingQuery22, throwable23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService0.strForEx(executingQuery25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService0.sucsForEx(executingQuery27);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1464() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1464");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService5.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService5.strForEx(executingQuery15);
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery15);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService18 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService18.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService18.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService18.faleForExTh(executingQuery24, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService18.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService18.faleForExTh(executingQuery29, throwable30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService18.sucsForEx(executingQuery32);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService18);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService35 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService35.rolcForKe(kernelTransaction36, throwable37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    java.lang.Throwable throwable40 = null;
    queryLoggingService35.faleForExTh(executingQuery39, throwable40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    java.lang.Throwable throwable43 = null;
    queryLoggingService35.faleForExTh(executingQuery42, throwable43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    queryLoggingService35.strForEx(kernelTransaction45);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    java.lang.Throwable throwable48 = null;
    queryLoggingService35.faleForExTh(executingQuery47, throwable48);
    java.lang.Class<?> wildcardClass50 = queryLoggingService35.getClass();
    boolean boolean51 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) wildcardClass50);
    java.lang.String str52 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str53 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(queryLoggingService18);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertNotNull(queryLoggingService35);
    org.junit.Assert.assertNotNull(wildcardClass50);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    org.junit.Assert.assertEquals(
        "'" + str52 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str52, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str53 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str53, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1465() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1465");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str9, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str10, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1466() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1466");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory8 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean10 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) (-1L));
    boolean boolean11 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) boolean10);
    java.lang.Object obj12 = new java.lang.Object();
    boolean boolean13 = queryLoggingServiceExtensionFactory7.equals(obj12);
    java.lang.String str14 = queryLoggingServiceExtensionFactory7.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService15 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService15.strForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService15.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService15.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService15.comForKe(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService15.strForEx(executingQuery26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService15.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService15.comForKe(kernelTransaction31);
    boolean boolean33 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingService15);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService35 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService35.rolcForKe(kernelTransaction36, throwable37);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction39 = null;
    queryLoggingService35.comForKe(kernelTransaction39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    java.lang.Throwable throwable42 = null;
    queryLoggingService35.faleForExTh(executingQuery41, throwable42);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    queryLoggingService35.rolcForKe(kernelTransaction44);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction46 = null;
    queryLoggingService35.comForKe(kernelTransaction46);
    boolean boolean48 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingService35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery49 = null;
    queryLoggingService35.sucsForEx(executingQuery49);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery51 = null;
    queryLoggingService35.strForEx(executingQuery51);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery53 = null;
    queryLoggingService35.sucsForEx(executingQuery53);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "query-logging" + "'", str14,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService15);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    org.junit.Assert.assertNotNull(queryLoggingService35);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
  }

  @Test
  public void test1467() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1467");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory8 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean10 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) (-1L));
    boolean boolean11 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) boolean10);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService12 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService12.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService12.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService12.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService12.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService12.strForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) executingQuery22);
    boolean boolean25 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory26 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean28 = queryLoggingServiceExtensionFactory26.equals((java.lang.Object) (short) 1);
    java.lang.String str29 = queryLoggingServiceExtensionFactory26.toString();
    boolean boolean30 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory26);
    java.lang.String str31 = queryLoggingServiceExtensionFactory26.getName();
    java.lang.String str32 = queryLoggingServiceExtensionFactory26.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext33 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies34 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle35 = queryLoggingServiceExtensionFactory26.newInstance(
          extensionContext33, queryLoggingServiceDependencies34);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(queryLoggingService12);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertEquals(
        "'" + str29 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str29, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    org.junit.Assert.assertEquals("'" + str31 + "' != '" + "query-logging" + "'", str31,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str32 + "' != '" + "query-logging" + "'", str32,
        "query-logging");
  }

  @Test
  public void test1468() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1468");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.strForEx(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.faleForExTh(executingQuery11, throwable12);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1469() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1469");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.faleForExTh(executingQuery17,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.strForEx(executingQuery20);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1470() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1470");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService3 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService3.rolcForKe(kernelTransaction4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService3.rolcForKe(kernelTransaction6, throwable7);
    boolean boolean9 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService3);
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str11 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str12 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(queryLoggingService3);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "query-logging" + "'", str10,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str12 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str12, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1471() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1471");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService3 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService3.rolcForKe(kernelTransaction4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService3.rolcForKe(kernelTransaction6, throwable7);
    boolean boolean9 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService3);
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str11 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str12 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory13 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean15 = queryLoggingServiceExtensionFactory13.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory16 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str17 = queryLoggingServiceExtensionFactory16.toString();
    boolean boolean18 = queryLoggingServiceExtensionFactory13.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory16);
    java.lang.String str19 = queryLoggingServiceExtensionFactory13.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory20 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory21 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean23 = queryLoggingServiceExtensionFactory21.equals((java.lang.Object) (-1L));
    boolean boolean24 = queryLoggingServiceExtensionFactory20.equals((java.lang.Object) boolean23);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService25 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService25.strForEx(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService25.faleForExTh(executingQuery28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService25.rolcForKe(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService25.sucsForEx(executingQuery33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService25.strForEx(executingQuery35);
    boolean boolean37 = queryLoggingServiceExtensionFactory20.equals(
        (java.lang.Object) executingQuery35);
    boolean boolean38 = queryLoggingServiceExtensionFactory13.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory20);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory39 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean41 = queryLoggingServiceExtensionFactory39.equals((java.lang.Object) (short) 1);
    java.lang.String str42 = queryLoggingServiceExtensionFactory39.toString();
    boolean boolean43 = queryLoggingServiceExtensionFactory13.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory39);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService44 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    java.lang.Throwable throwable46 = null;
    queryLoggingService44.rolcForKe(kernelTransaction45, throwable46);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction48 = null;
    queryLoggingService44.comForKe(kernelTransaction48);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery50 = null;
    queryLoggingService44.strForEx(executingQuery50);
    boolean boolean52 = queryLoggingServiceExtensionFactory39.equals(
        (java.lang.Object) queryLoggingService44);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction53 = null;
    queryLoggingService44.rolcForKe(kernelTransaction53);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    queryLoggingService44.rolcForKe(kernelTransaction55);
    boolean boolean57 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction55);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService58 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery59 = null;
    queryLoggingService58.strForEx(executingQuery59);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery61 = null;
    java.lang.Throwable throwable62 = null;
    queryLoggingService58.faleForExTh(executingQuery61, throwable62);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction64 = null;
    queryLoggingService58.rolcForKe(kernelTransaction64);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery66 = null;
    queryLoggingService58.sucsForEx(executingQuery66);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction68 = null;
    queryLoggingService58.strForEx(kernelTransaction68);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery70 = null;
    java.lang.Throwable throwable71 = null;
    queryLoggingService58.faleForExTh(executingQuery70, throwable71);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction73 = null;
    queryLoggingService58.strForEx(kernelTransaction73);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction75 = null;
    queryLoggingService58.comForKe(kernelTransaction75);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction77 = null;
    java.lang.Throwable throwable78 = null;
    queryLoggingService58.rolcForKe(kernelTransaction77, throwable78);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction80 = null;
    queryLoggingService58.comForKe(kernelTransaction80);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction82 = null;
    queryLoggingService58.strForEx(kernelTransaction82);
    boolean boolean84 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction82);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(queryLoggingService3);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str10, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "query-logging" + "'", str11,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "query-logging" + "'", str12,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertEquals(
        "'" + str17 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str17, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "query-logging" + "'", str19,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(queryLoggingService25);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    org.junit.Assert.assertEquals(
        "'" + str42 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str42, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    org.junit.Assert.assertNotNull(queryLoggingService44);
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    org.junit.Assert.assertNotNull(queryLoggingService58);
    org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
  }

  @Test
  public void test1472() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1472");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1473() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1473");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService5.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService5.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService5.faleForExTh(executingQuery17,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    boolean boolean20 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService21 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService21.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService21.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService21.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService21.sucsForEx(executingQuery29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService21.strForEx(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService21.faleForExTh(executingQuery33,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService21.rolcForKe(kernelTransaction36, throwable37);
    boolean boolean39 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService21);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory40 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory41 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean43 = queryLoggingServiceExtensionFactory41.equals((java.lang.Object) (-1L));
    boolean boolean44 = queryLoggingServiceExtensionFactory40.equals((java.lang.Object) boolean43);
    boolean boolean46 = queryLoggingServiceExtensionFactory40.equals((java.lang.Object) 0L);
    java.lang.String str47 = queryLoggingServiceExtensionFactory40.toString();
    java.lang.String str48 = queryLoggingServiceExtensionFactory40.getName();
    boolean boolean49 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) str48);
    java.lang.String str50 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertNotNull(queryLoggingService21);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    org.junit.Assert.assertEquals(
        "'" + str47 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str47, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str48 + "' != '" + "query-logging" + "'", str48,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertEquals(
        "'" + str50 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str50, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1474() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1474");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext7 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies8 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle9 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext7, queryLoggingServiceDependencies8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
  }

  @Test
  public void test1475() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1475");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService10 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService10.strForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService10.faleForExTh(executingQuery13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService10.rolcForKe(kernelTransaction16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService10.comForKe(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService10.strForEx(executingQuery21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService10.rolcForKe(kernelTransaction23, throwable24);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    queryLoggingService10.comForKe(kernelTransaction26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService10.faleForExTh(executingQuery28, throwable29);
    boolean boolean31 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery28);
    java.lang.String str32 = queryLoggingServiceExtensionFactory3.toString();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService10);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertEquals(
        "'" + str32 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str32, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1476() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1476");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.strForEx(executingQuery15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.comForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1477() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1477");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "query-logging",
        config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config23, path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "", config28,
        path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31, "", config33,
        path34);
  }

  @Test
  public void test1478() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1478");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService5.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService5.strForEx(executingQuery15);
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery15);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService18 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService18.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService18.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService18.faleForExTh(executingQuery24, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService18.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService18.faleForExTh(executingQuery29, throwable30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService18.sucsForEx(executingQuery32);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService18);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService35 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    queryLoggingService35.rolcForKe(kernelTransaction36);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery38 = null;
    queryLoggingService35.faleForExTh(executingQuery38, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    java.lang.Throwable throwable42 = null;
    queryLoggingService35.faleForExTh(executingQuery41, throwable42);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    queryLoggingService35.rolcForKe(kernelTransaction44);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction46 = null;
    queryLoggingService35.comForKe(kernelTransaction46);
    boolean boolean48 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction46);
    java.lang.String str49 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str50 = queryLoggingServiceExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext51 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies52 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle53 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext51, queryLoggingServiceDependencies52);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(queryLoggingService18);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertNotNull(queryLoggingService35);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    org.junit.Assert.assertEquals("'" + str49 + "' != '" + "query-logging" + "'", str49,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str50 + "' != '" + "query-logging" + "'", str50,
        "query-logging");
  }

  @Test
  public void test1479() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1479");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.Object obj5 = new java.lang.Object();
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals(obj5);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService8.comForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService8.strForEx(executingQuery19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService8.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService8.comForKe(kernelTransaction24);
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService8);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory27 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean29 = queryLoggingServiceExtensionFactory27.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory30 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str31 = queryLoggingServiceExtensionFactory30.toString();
    boolean boolean32 = queryLoggingServiceExtensionFactory27.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory30);
    java.lang.String str33 = queryLoggingServiceExtensionFactory27.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory34 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory35 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean37 = queryLoggingServiceExtensionFactory35.equals((java.lang.Object) (-1L));
    boolean boolean38 = queryLoggingServiceExtensionFactory34.equals((java.lang.Object) boolean37);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService39 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery40 = null;
    queryLoggingService39.strForEx(executingQuery40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    java.lang.Throwable throwable43 = null;
    queryLoggingService39.faleForExTh(executingQuery42, throwable43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    queryLoggingService39.rolcForKe(kernelTransaction45);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    queryLoggingService39.sucsForEx(executingQuery47);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery49 = null;
    queryLoggingService39.strForEx(executingQuery49);
    boolean boolean51 = queryLoggingServiceExtensionFactory34.equals(
        (java.lang.Object) executingQuery49);
    boolean boolean52 = queryLoggingServiceExtensionFactory27.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory34);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory53 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean55 = queryLoggingServiceExtensionFactory53.equals((java.lang.Object) (short) 1);
    java.lang.String str56 = queryLoggingServiceExtensionFactory53.toString();
    boolean boolean57 = queryLoggingServiceExtensionFactory27.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory53);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService58 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction59 = null;
    java.lang.Throwable throwable60 = null;
    queryLoggingService58.rolcForKe(kernelTransaction59, throwable60);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction62 = null;
    queryLoggingService58.comForKe(kernelTransaction62);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery64 = null;
    queryLoggingService58.strForEx(executingQuery64);
    boolean boolean66 = queryLoggingServiceExtensionFactory53.equals(
        (java.lang.Object) queryLoggingService58);
    boolean boolean67 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService58);
    java.lang.String str68 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str69 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertEquals(
        "'" + str31 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str31, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    org.junit.Assert.assertEquals("'" + str33 + "' != '" + "query-logging" + "'", str33,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    org.junit.Assert.assertNotNull(queryLoggingService39);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    org.junit.Assert.assertEquals(
        "'" + str56 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str56, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    org.junit.Assert.assertNotNull(queryLoggingService58);
    org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    org.junit.Assert.assertEquals("'" + str68 + "' != '" + "query-logging" + "'", str68,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str69 + "' != '" + "query-logging" + "'", str69,
        "query-logging");
  }

  @Test
  public void test1480() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1480");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService5.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService5.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService5.faleForExTh(executingQuery17,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    boolean boolean20 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService21 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService21.faleForExTh(executingQuery22,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService21.rolcForKe(kernelTransaction25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    java.lang.Throwable throwable28 = null;
    queryLoggingService21.rolcForKe(kernelTransaction27, throwable28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryLoggingService21.strForEx(executingQuery30);
    boolean boolean32 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    java.lang.Throwable throwable34 = null;
    queryLoggingService21.rolcForKe(kernelTransaction33, throwable34);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService21.faleForExTh(executingQuery36, throwable37);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertNotNull(queryLoggingService21);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
  }

  @Test
  public void test1481() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1481");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1.0d));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory4 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean6 = queryLoggingServiceExtensionFactory4.equals((java.lang.Object) (-1L));
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) boolean6);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    boolean boolean20 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery18);
    java.lang.String str21 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean22 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str23 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str24 = queryLoggingServiceExtensionFactory3.toString();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertEquals(
        "'" + str21 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str21, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    org.junit.Assert.assertEquals(
        "'" + str23 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str23, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str24 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str24, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1482() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1482");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService5.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService5.strForEx(executingQuery15);
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery15);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService18 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService18.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService18.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService18.faleForExTh(executingQuery24, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService18.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService18.faleForExTh(executingQuery29, throwable30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService18.sucsForEx(executingQuery32);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService18);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService35 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService35.rolcForKe(kernelTransaction36, throwable37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    java.lang.Throwable throwable40 = null;
    queryLoggingService35.faleForExTh(executingQuery39, throwable40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    java.lang.Throwable throwable43 = null;
    queryLoggingService35.faleForExTh(executingQuery42, throwable43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    queryLoggingService35.strForEx(kernelTransaction45);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    java.lang.Throwable throwable48 = null;
    queryLoggingService35.faleForExTh(executingQuery47, throwable48);
    java.lang.Class<?> wildcardClass50 = queryLoggingService35.getClass();
    boolean boolean51 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) wildcardClass50);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService52 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction53 = null;
    queryLoggingService52.rolcForKe(kernelTransaction53);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery55 = null;
    queryLoggingService52.faleForExTh(executingQuery55, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction58 = null;
    java.lang.Throwable throwable59 = null;
    queryLoggingService52.rolcForKe(kernelTransaction58, throwable59);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction61 = null;
    queryLoggingService52.strForEx(kernelTransaction61);
    boolean boolean63 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService52);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery64 = null;
    queryLoggingService52.sucsForEx(executingQuery64);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction66 = null;
    queryLoggingService52.comForKe(kernelTransaction66);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(queryLoggingService18);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertNotNull(queryLoggingService35);
    org.junit.Assert.assertNotNull(wildcardClass50);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    org.junit.Assert.assertNotNull(queryLoggingService52);
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
  }

  @Test
  public void test1483() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1483");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean9 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory10 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str11 = queryLoggingServiceExtensionFactory10.toString();
    boolean boolean12 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory10);
    boolean boolean13 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    java.lang.Object obj14 = null;
    boolean boolean15 = queryLoggingServiceExtensionFactory0.equals(obj14);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory16 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory17 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean19 = queryLoggingServiceExtensionFactory17.equals((java.lang.Object) (-1L));
    boolean boolean20 = queryLoggingServiceExtensionFactory16.equals((java.lang.Object) boolean19);
    boolean boolean22 = queryLoggingServiceExtensionFactory16.equals((java.lang.Object) 0L);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory23 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory24 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean26 = queryLoggingServiceExtensionFactory24.equals((java.lang.Object) (-1L));
    boolean boolean27 = queryLoggingServiceExtensionFactory23.equals((java.lang.Object) boolean26);
    java.lang.Object obj28 = new java.lang.Object();
    boolean boolean29 = queryLoggingServiceExtensionFactory23.equals(obj28);
    java.lang.String str30 = queryLoggingServiceExtensionFactory23.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService31 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService31.strForEx(executingQuery32);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    java.lang.Throwable throwable35 = null;
    queryLoggingService31.faleForExTh(executingQuery34, throwable35);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction37 = null;
    java.lang.Throwable throwable38 = null;
    queryLoggingService31.rolcForKe(kernelTransaction37, throwable38);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    queryLoggingService31.comForKe(kernelTransaction40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    queryLoggingService31.strForEx(executingQuery42);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    java.lang.Throwable throwable45 = null;
    queryLoggingService31.rolcForKe(kernelTransaction44, throwable45);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction47 = null;
    queryLoggingService31.comForKe(kernelTransaction47);
    boolean boolean49 = queryLoggingServiceExtensionFactory23.equals(
        (java.lang.Object) queryLoggingService31);
    boolean boolean50 = queryLoggingServiceExtensionFactory16.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory23);
    boolean boolean51 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory23);
    java.lang.String str52 = queryLoggingServiceExtensionFactory23.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory53 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean55 = queryLoggingServiceExtensionFactory53.equals((java.lang.Object) (short) 1);
    java.lang.String str56 = queryLoggingServiceExtensionFactory53.toString();
    java.lang.String str57 = queryLoggingServiceExtensionFactory53.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService58 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction59 = null;
    java.lang.Throwable throwable60 = null;
    queryLoggingService58.rolcForKe(kernelTransaction59, throwable60);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction62 = null;
    queryLoggingService58.comForKe(kernelTransaction62);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery64 = null;
    java.lang.Throwable throwable65 = null;
    queryLoggingService58.faleForExTh(executingQuery64, throwable65);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction67 = null;
    queryLoggingService58.rolcForKe(kernelTransaction67);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery69 = null;
    java.lang.Throwable throwable70 = null;
    queryLoggingService58.faleForExTh(executingQuery69, throwable70);
    java.lang.Class<?> wildcardClass72 = queryLoggingService58.getClass();
    boolean boolean73 = queryLoggingServiceExtensionFactory53.equals(
        (java.lang.Object) wildcardClass72);
    java.lang.String str74 = queryLoggingServiceExtensionFactory53.getName();
    boolean boolean75 = queryLoggingServiceExtensionFactory23.equals((java.lang.Object) str74);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertEquals("'" + str30 + "' != '" + "query-logging" + "'", str30,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService31);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    org.junit.Assert.assertEquals(
        "'" + str52 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str52, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    org.junit.Assert.assertEquals(
        "'" + str56 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str56, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str57 + "' != '" + "query-logging" + "'", str57,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService58);
    org.junit.Assert.assertNotNull(wildcardClass72);
    org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    org.junit.Assert.assertEquals("'" + str74 + "' != '" + "query-logging" + "'", str74,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
  }

  @Test
  public void test1484() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1484");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20, throwable21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService0.comForKe(kernelTransaction25);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1485() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1485");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    boolean boolean8 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService10 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService10.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService10.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService10.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService10.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService10.strForEx(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService10.rolcForKe(kernelTransaction22, throwable23);
    boolean boolean25 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable23);
    boolean boolean27 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 100.0d);
    java.lang.Class<?> wildcardClass28 = queryLoggingServiceExtensionFactory0.getClass();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str9, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService10);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertNotNull(wildcardClass28);
  }

  @Test
  public void test1486() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1486");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17, throwable18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.comForKe(kernelTransaction22);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1487() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1487");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService6 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    queryLoggingService6.strForEx(executingQuery7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService6.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService6.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService6.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService6.strForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService6.strForEx(kernelTransaction20);
    boolean boolean22 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService6.faleForExTh(executingQuery23,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService6.faleForExTh(executingQuery26, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService6.rolcForKe(kernelTransaction29, throwable30);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService6);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
  }

  @Test
  public void test1488() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1488");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.faleForExTh(executingQuery12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17, throwable18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService0.faleForExTh(executingQuery22, throwable23);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1489() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1489");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.comForKe(kernelTransaction21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.faleForExTh(executingQuery23, throwable24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1490() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1490");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.faleForExTh(executingQuery1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.faleForExTh(executingQuery4,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction7 = null;
    queryLoggingService0.strForEx(kernelTransaction7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15, throwable16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.strForEx(kernelTransaction21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.faleForExTh(executingQuery23, "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1491() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1491");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20, throwable21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService0.strForEx(executingQuery25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    java.lang.Throwable throwable28 = null;
    queryLoggingService0.faleForExTh(executingQuery27, throwable28);
    java.lang.Class<?> wildcardClass30 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass30);
  }

  @Test
  public void test1492() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1492");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14, "");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1493() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1493");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService7 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService7.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService7.sucsForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService7.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService7.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService7.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService7.sucsForEx(executingQuery21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService7.rolcForKe(kernelTransaction23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService7.rolcForKe(kernelTransaction25, throwable26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService7.comForKe(kernelTransaction28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryLoggingService7.sucsForEx(executingQuery30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService7.strForEx(executingQuery32);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    java.lang.Throwable throwable36 = null;
    queryLoggingService7.faleForExTh(executingQuery35, throwable36);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery38 = null;
    queryLoggingService7.faleForExTh(executingQuery38, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    java.lang.Throwable throwable42 = null;
    queryLoggingService7.faleForExTh(executingQuery41, throwable42);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    java.lang.Throwable throwable45 = null;
    queryLoggingService7.rolcForKe(kernelTransaction44, throwable45);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    queryLoggingService7.sucsForEx(executingQuery47);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService7);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
  }

  @Test
  public void test1494() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1494");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory3.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService7 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService7.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService7.faleForExTh(executingQuery10, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService7.faleForExTh(executingQuery13, throwable14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService7.faleForExTh(executingQuery16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService7.strForEx(kernelTransaction19);
    java.lang.Class<?> wildcardClass21 = queryLoggingService7.getClass();
    boolean boolean22 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService7);
    java.lang.String str23 = queryLoggingServiceExtensionFactory3.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService24 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService24.rolcForKe(kernelTransaction25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService24.faleForExTh(executingQuery27, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    java.lang.Throwable throwable31 = null;
    queryLoggingService24.faleForExTh(executingQuery30, throwable31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    java.lang.Throwable throwable34 = null;
    queryLoggingService24.faleForExTh(executingQuery33, throwable34);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    queryLoggingService24.strForEx(kernelTransaction36);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction38 = null;
    queryLoggingService24.strForEx(kernelTransaction38);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    queryLoggingService24.strForEx(kernelTransaction40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    queryLoggingService24.strForEx(executingQuery42);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    java.lang.Throwable throwable45 = null;
    queryLoggingService24.rolcForKe(kernelTransaction44, throwable45);
    boolean boolean47 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) kernelTransaction44);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService48 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery49 = null;
    queryLoggingService48.faleForExTh(executingQuery49,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery52 = null;
    queryLoggingService48.sucsForEx(executingQuery52);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery54 = null;
    queryLoggingService48.strForEx(executingQuery54);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction56 = null;
    queryLoggingService48.rolcForKe(kernelTransaction56);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction58 = null;
    queryLoggingService48.rolcForKe(kernelTransaction58);
    java.lang.Class<?> wildcardClass60 = queryLoggingService48.getClass();
    boolean boolean61 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) wildcardClass60);
    java.lang.String str62 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str63 = queryLoggingServiceExtensionFactory3.getName();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str6, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService7);
    org.junit.Assert.assertNotNull(wildcardClass21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "query-logging" + "'", str23,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService24);
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    org.junit.Assert.assertNotNull(queryLoggingService48);
    org.junit.Assert.assertNotNull(wildcardClass60);
    org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    org.junit.Assert.assertEquals(
        "'" + str62 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str62, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str63 + "' != '" + "query-logging" + "'", str63,
        "query-logging");
  }

  @Test
  public void test1495() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1495");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService8.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService8.sucsForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery22);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService25 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService25.strForEx(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService25.faleForExTh(executingQuery28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService25.rolcForKe(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService25.sucsForEx(executingQuery33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService25.strForEx(executingQuery35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService25.sucsForEx(executingQuery37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService25.sucsForEx(executingQuery39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    queryLoggingService25.sucsForEx(executingQuery41);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService25.strForEx(executingQuery43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    java.lang.Throwable throwable46 = null;
    queryLoggingService25.rolcForKe(kernelTransaction45, throwable46);
    boolean boolean48 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction49 = null;
    queryLoggingService25.comForKe(kernelTransaction49);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction51 = null;
    java.lang.Throwable throwable52 = null;
    queryLoggingService25.rolcForKe(kernelTransaction51, throwable52);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery54 = null;
    java.lang.Throwable throwable55 = null;
    queryLoggingService25.faleForExTh(executingQuery54, throwable55);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(queryLoggingService25);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
  }

  @Test
  public void test1496() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1496");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.sucsForEx(executingQuery11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.strForEx(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.comForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.comForKe(kernelTransaction21);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1497() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1497");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService0.faleForExTh(executingQuery22, throwable23);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1498() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1498");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.strForEx(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.strForEx(executingQuery15);
    java.lang.Class<?> wildcardClass17 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass17);
  }

  @Test
  public void test1499() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1499");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6, "", config8,
        path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "query-logging",
        config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "query-logging",
        config23, path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "hi!", config28,
        path29);
  }

  @Test
  public void test1500() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1500");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.strForEx(executingQuery17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService0.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService0.strForEx(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService0.faleForExTh(executingQuery29, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService0.sucsForEx(executingQuery32);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }
}


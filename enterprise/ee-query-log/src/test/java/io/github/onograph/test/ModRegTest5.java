package io.github.onograph.test;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class ModRegTest5 {

  public static boolean debug = false;

  @Test
  public void test2501() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2501");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "", config13,
        path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "hi!", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "", config23,
        path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "", config28,
        path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31, "query-logging",
        config33, path34);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction36 = null;
    org.neo4j.configuration.Config config38 = null;
    java.nio.file.Path path39 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction36,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config38, path39);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction41 = null;
    org.neo4j.configuration.Config config43 = null;
    java.nio.file.Path path44 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction41, "query-logging",
        config43, path44);
  }

  @Test
  public void test2502() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2502");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.strForEx(executingQuery15);
    java.lang.Class<?> wildcardClass17 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass17);
  }

  @Test
  public void test2503() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2503");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8, throwable9);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2504() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2504");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.strForEx(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.strForEx(executingQuery22);
    java.lang.Class<?> wildcardClass24 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass24);
  }

  @Test
  public void test2505() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2505");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.sucsForEx(executingQuery22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.comForKe(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    java.lang.Throwable throwable27 = null;
    queryLoggingService0.faleForExTh(executingQuery26, throwable27);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2506() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2506");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.comForKe(kernelTransaction18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2507() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2507");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.sucsForEx(executingQuery10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.comForKe(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14, "");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2508() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2508");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.strForEx(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2509() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2509");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str11 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str12 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory13 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean15 = queryLoggingServiceExtensionFactory13.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory16 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str17 = queryLoggingServiceExtensionFactory16.toString();
    boolean boolean18 = queryLoggingServiceExtensionFactory13.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory16);
    boolean boolean20 = queryLoggingServiceExtensionFactory16.equals((java.lang.Object) 100.0d);
    boolean boolean21 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 100.0d);
    java.lang.String str22 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory23 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory24 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean26 = queryLoggingServiceExtensionFactory24.equals((java.lang.Object) (-1L));
    boolean boolean27 = queryLoggingServiceExtensionFactory23.equals((java.lang.Object) boolean26);
    boolean boolean29 = queryLoggingServiceExtensionFactory23.equals((java.lang.Object) 0L);
    java.lang.String str30 = queryLoggingServiceExtensionFactory23.toString();
    java.lang.String str31 = queryLoggingServiceExtensionFactory23.getName();
    boolean boolean33 = queryLoggingServiceExtensionFactory23.equals(
        (java.lang.Object) (short) 100);
    java.lang.String str34 = queryLoggingServiceExtensionFactory23.getName();
    boolean boolean35 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory23);
    java.lang.String str36 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str10, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "query-logging" + "'", str11,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "query-logging" + "'", str12,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertEquals(
        "'" + str17 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str17, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    org.junit.Assert.assertEquals("'" + str22 + "' != '" + "query-logging" + "'", str22,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertEquals(
        "'" + str30 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str30, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str31 + "' != '" + "query-logging" + "'", str31,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertEquals("'" + str34 + "' != '" + "query-logging" + "'", str34,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    org.junit.Assert.assertEquals(
        "'" + str36 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str36, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test2510() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2510");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22, throwable23);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2511() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2511");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService10 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService10.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService10.comForKe(kernelTransaction14);
    boolean boolean16 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService10.strForEx(kernelTransaction17);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str9, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService10);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
  }

  @Test
  public void test2512() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2512");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.faleForExTh(executingQuery12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.comForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23, throwable24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService0.sucsForEx(executingQuery26);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2513() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2513");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.comForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.faleForExTh(executingQuery13, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2514() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2514");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.strForEx(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.faleForExTh(executingQuery13, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.faleForExTh(executingQuery16, throwable17);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2515() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2515");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2516() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2516");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.strForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.strForEx(executingQuery21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.strForEx(kernelTransaction23);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2517() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2517");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.strForEx(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.comForKe(kernelTransaction24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2518() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2518");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.strForEx(executingQuery12);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2519() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2519");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str2 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService3 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService3.faleForExTh(executingQuery4,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    queryLoggingService3.faleForExTh(executingQuery7,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService3.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService3.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService3.faleForExTh(executingQuery14,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory18 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean20 = queryLoggingServiceExtensionFactory18.equals((java.lang.Object) (short) 1);
    java.lang.String str21 = queryLoggingServiceExtensionFactory18.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService22 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService22.strForEx(executingQuery23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService22.faleForExTh(executingQuery25, throwable26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService22.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService22.comForKe(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService22.strForEx(executingQuery33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService22.strForEx(executingQuery35);
    boolean boolean37 = queryLoggingServiceExtensionFactory18.equals(
        (java.lang.Object) executingQuery35);
    java.lang.Class<?> wildcardClass38 = queryLoggingServiceExtensionFactory18.getClass();
    boolean boolean39 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) wildcardClass38);
    java.lang.String str40 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService41 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction42 = null;
    queryLoggingService41.rolcForKe(kernelTransaction42);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    java.lang.Throwable throwable45 = null;
    queryLoggingService41.rolcForKe(kernelTransaction44, throwable45);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction47 = null;
    queryLoggingService41.rolcForKe(kernelTransaction47);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery49 = null;
    queryLoggingService41.sucsForEx(executingQuery49);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction51 = null;
    queryLoggingService41.strForEx(kernelTransaction51);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery53 = null;
    queryLoggingService41.faleForExTh(executingQuery53,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery56 = null;
    queryLoggingService41.faleForExTh(executingQuery56, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction59 = null;
    queryLoggingService41.rolcForKe(kernelTransaction59);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction61 = null;
    queryLoggingService41.rolcForKe(kernelTransaction61);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction63 = null;
    java.lang.Throwable throwable64 = null;
    queryLoggingService41.rolcForKe(kernelTransaction63, throwable64);
    boolean boolean66 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction63);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService67 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery68 = null;
    queryLoggingService67.strForEx(executingQuery68);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery70 = null;
    java.lang.Throwable throwable71 = null;
    queryLoggingService67.faleForExTh(executingQuery70, throwable71);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction73 = null;
    java.lang.Throwable throwable74 = null;
    queryLoggingService67.rolcForKe(kernelTransaction73, throwable74);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery76 = null;
    queryLoggingService67.faleForExTh(executingQuery76, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery79 = null;
    queryLoggingService67.faleForExTh(executingQuery79, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction82 = null;
    java.lang.Throwable throwable83 = null;
    queryLoggingService67.rolcForKe(kernelTransaction82, throwable83);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction85 = null;
    queryLoggingService67.strForEx(kernelTransaction85);
    boolean boolean87 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction85);
    java.lang.String str88 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str89 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str90 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str91 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str2, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService3);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertEquals("'" + str21 + "' != '" + "query-logging" + "'", str21,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService22);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertNotNull(wildcardClass38);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertEquals(
        "'" + str40 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str40, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService41);
    org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    org.junit.Assert.assertNotNull(queryLoggingService67);
    org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    org.junit.Assert.assertEquals(
        "'" + str88 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str88, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str89 + "' != '" + "query-logging" + "'", str89,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str90 + "' != '" + "query-logging" + "'", str90,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str91 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str91, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test2520() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2520");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService10 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService10.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService10.comForKe(kernelTransaction14);
    boolean boolean16 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService10.faleForExTh(executingQuery17,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService10.rolcForKe(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService10.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService10.comForKe(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService10.faleForExTh(executingQuery26, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    queryLoggingService10.strForEx(kernelTransaction29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryLoggingService10.faleForExTh(executingQuery31, "hi!");
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str9, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService10);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
  }

  @Test
  public void test2521() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2521");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.strForEx(executingQuery17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.comForKe(kernelTransaction21);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2522() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2522");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService10 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService10.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService10.comForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService10.faleForExTh(executingQuery16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService10.comForKe(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService10.strForEx(executingQuery21);
    boolean boolean23 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService10);
    java.lang.String str24 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str25 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService10);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertEquals(
        "'" + str24 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str24, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str25 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str25, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test2523() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2523");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.Object obj5 = new java.lang.Object();
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals(obj5);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext11 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies12 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle13 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext11, queryLoggingServiceDependencies12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str9, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "query-logging" + "'", str10,
        "query-logging");
  }

  @Test
  public void test2524() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2524");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17, throwable18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2525() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2525");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.strForEx(kernelTransaction11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.comForKe(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17, throwable18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.strForEx(executingQuery20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.comForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2526() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2526");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str2 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService4 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction5 = null;
    queryLoggingService4.rolcForKe(kernelTransaction5);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService4.rolcForKe(kernelTransaction7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService4.rolcForKe(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService4.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService4.strForEx(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService4.rolcForKe(kernelTransaction16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService4.strForEx(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService4.faleForExTh(executingQuery21,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    boolean boolean24 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "query-logging" + "'", str2,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str3, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService4);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
  }

  @Test
  public void test2527() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2527");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.strForEx(executingQuery15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.strForEx(kernelTransaction17);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2528() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2528");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.faleForExTh(executingQuery16, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.strForEx(executingQuery19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.rolcForKe(kernelTransaction21, throwable22);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2529() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2529");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "query-logging",
        config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config23, path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "hi!", config28,
        path29);
    java.lang.Class<?> wildcardClass31 = diagnosticsOfflineReportProviderQueryLoggingImpl0.getClass();
    org.junit.Assert.assertNotNull(wildcardClass31);
  }

  @Test
  public void test2530() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2530");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory8 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean10 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) (-1L));
    boolean boolean11 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) boolean10);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService12 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService12.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService12.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService12.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService12.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService12.strForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) executingQuery22);
    boolean boolean25 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory26 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean28 = queryLoggingServiceExtensionFactory26.equals((java.lang.Object) (short) 1);
    java.lang.String str29 = queryLoggingServiceExtensionFactory26.toString();
    boolean boolean30 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory26);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService31 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction32 = null;
    java.lang.Throwable throwable33 = null;
    queryLoggingService31.rolcForKe(kernelTransaction32, throwable33);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction35 = null;
    queryLoggingService31.comForKe(kernelTransaction35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService31.strForEx(executingQuery37);
    boolean boolean39 = queryLoggingServiceExtensionFactory26.equals(
        (java.lang.Object) queryLoggingService31);
    java.lang.String str40 = queryLoggingServiceExtensionFactory26.toString();
    java.lang.String str41 = queryLoggingServiceExtensionFactory26.getName();
    java.lang.String str42 = queryLoggingServiceExtensionFactory26.getName();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(queryLoggingService12);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertEquals(
        "'" + str29 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str29, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    org.junit.Assert.assertNotNull(queryLoggingService31);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertEquals(
        "'" + str40 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str40, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str41 + "' != '" + "query-logging" + "'", str41,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str42 + "' != '" + "query-logging" + "'", str42,
        "query-logging");
  }

  @Test
  public void test2531() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2531");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1.0d));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory4 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean6 = queryLoggingServiceExtensionFactory4.equals((java.lang.Object) (-1L));
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) boolean6);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    boolean boolean20 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery18);
    java.lang.String str21 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean22 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str23 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory24 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str25 = queryLoggingServiceExtensionFactory24.toString();
    java.lang.String str26 = queryLoggingServiceExtensionFactory24.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService27 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService27.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryLoggingService27.sucsForEx(executingQuery31);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    queryLoggingService27.rolcForKe(kernelTransaction33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService27.sucsForEx(executingQuery35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService27.faleForExTh(executingQuery37, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    java.lang.Throwable throwable41 = null;
    queryLoggingService27.rolcForKe(kernelTransaction40, throwable41);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    java.lang.Throwable throwable44 = null;
    queryLoggingService27.faleForExTh(executingQuery43, throwable44);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery46 = null;
    queryLoggingService27.faleForExTh(executingQuery46, "");
    boolean boolean49 = queryLoggingServiceExtensionFactory24.equals(
        (java.lang.Object) executingQuery46);
    boolean boolean50 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery46);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertEquals(
        "'" + str21 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str21, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    org.junit.Assert.assertEquals(
        "'" + str23 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str23, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str25 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str25, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "query-logging" + "'", str26,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService27);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
  }

  @Test
  public void test2532() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2532");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.Object obj10 = null;
    boolean boolean11 = queryLoggingServiceExtensionFactory3.equals(obj10);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService12 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService12.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService12.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService12.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService12.comForKe(kernelTransaction20);
    boolean boolean22 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService12);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory23 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory24 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean26 = queryLoggingServiceExtensionFactory24.equals((java.lang.Object) (-1L));
    boolean boolean27 = queryLoggingServiceExtensionFactory23.equals((java.lang.Object) boolean26);
    boolean boolean29 = queryLoggingServiceExtensionFactory23.equals((java.lang.Object) 0L);
    java.lang.String str30 = queryLoggingServiceExtensionFactory23.toString();
    java.lang.String str31 = queryLoggingServiceExtensionFactory23.getName();
    java.lang.String str32 = queryLoggingServiceExtensionFactory23.getName();
    java.lang.Class<?> wildcardClass33 = queryLoggingServiceExtensionFactory23.getClass();
    boolean boolean34 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) wildcardClass33);
    java.lang.String str35 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str36 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str37 = queryLoggingServiceExtensionFactory3.getName();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(queryLoggingService12);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertEquals(
        "'" + str30 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str30, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str31 + "' != '" + "query-logging" + "'", str31,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str32 + "' != '" + "query-logging" + "'", str32,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass33);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertEquals(
        "'" + str35 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str35, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str36 + "' != '" + "query-logging" + "'", str36,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str37 + "' != '" + "query-logging" + "'", str37,
        "query-logging");
  }

  @Test
  public void test2533() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2533");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.Object obj5 = new java.lang.Object();
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals(obj5);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService8.comForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService8.strForEx(executingQuery19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService8.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService8.comForKe(kernelTransaction24);
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService8);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService27 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService27.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryLoggingService27.sucsForEx(executingQuery31);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    queryLoggingService27.comForKe(kernelTransaction33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService27.faleForExTh(executingQuery35, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction38 = null;
    queryLoggingService27.strForEx(kernelTransaction38);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    java.lang.Throwable throwable41 = null;
    queryLoggingService27.rolcForKe(kernelTransaction40, throwable41);
    boolean boolean43 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction40);
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl44 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction45 = null;
    org.neo4j.configuration.Config config47 = null;
    java.nio.file.Path path48 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl44.init(fileSystemAbstraction45,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config47, path48);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction50 = null;
    org.neo4j.configuration.Config config52 = null;
    java.nio.file.Path path53 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl44.init(fileSystemAbstraction50,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config52, path53);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction55 = null;
    org.neo4j.configuration.Config config57 = null;
    java.nio.file.Path path58 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl44.init(fileSystemAbstraction55, "", config57,
        path58);
    boolean boolean60 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) diagnosticsOfflineReportProviderQueryLoggingImpl44);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext61 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies62 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle63 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext61, queryLoggingServiceDependencies62);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertNotNull(queryLoggingService27);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
  }

  @Test
  public void test2534() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2534");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.strForEx(executingQuery17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.faleForExTh(executingQuery19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22, throwable23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService0.faleForExTh(executingQuery25, throwable26);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2535() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2535");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.comForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.sucsForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.faleForExTh(executingQuery13, throwable14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.faleForExTh(executingQuery16, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.strForEx(executingQuery19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.strForEx(kernelTransaction21);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2536() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2536");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16, throwable17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.strForEx(executingQuery19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.sucsForEx(executingQuery23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService0.sucsForEx(executingQuery25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService0.sucsForEx(executingQuery27);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    queryLoggingService0.strForEx(kernelTransaction29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService0.rolcForKe(kernelTransaction31);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2537() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2537");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.rolcForKe(kernelTransaction4, throwable5);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction7 = null;
    queryLoggingService0.comForKe(kernelTransaction7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.strForEx(kernelTransaction11);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2538() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2538");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6, "", config8,
        path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "hi!", config13,
        path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "hi!", config23,
        path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "hi!", config28,
        path29);
  }

  @Test
  public void test2539() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2539");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17, throwable18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.comForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2540() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2540");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 1);
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService4 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    queryLoggingService4.strForEx(executingQuery5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService4.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService4.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService4.faleForExTh(executingQuery13, "hi!");
    boolean boolean16 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) "hi!");
    java.lang.String str17 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str3, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService4);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    org.junit.Assert.assertEquals(
        "'" + str17 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str17, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test2541() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2541");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService0.strForEx(kernelTransaction8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2542() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2542");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20, throwable21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23, throwable24);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    queryLoggingService0.comForKe(kernelTransaction26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService0.strForEx(kernelTransaction28);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    queryLoggingService0.comForKe(kernelTransaction30);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2543() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2543");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6, "query-logging",
        config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "query-logging",
        config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "hi!", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config23, path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "query-logging",
        config28, path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config33, path34);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction36 = null;
    org.neo4j.configuration.Config config38 = null;
    java.nio.file.Path path39 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction36, "", config38,
        path39);
  }

  @Test
  public void test2544() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2544");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "hi!", config13,
        path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "hi!", config23,
        path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "", config28,
        path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31, "query-logging",
        config33, path34);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction36 = null;
    org.neo4j.configuration.Config config38 = null;
    java.nio.file.Path path39 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction36,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config38, path39);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction41 = null;
    org.neo4j.configuration.Config config43 = null;
    java.nio.file.Path path44 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction41, "query-logging",
        config43, path44);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction46 = null;
    org.neo4j.configuration.Config config48 = null;
    java.nio.file.Path path49 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction46, "", config48,
        path49);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction51 = null;
    org.neo4j.configuration.Config config53 = null;
    java.nio.file.Path path54 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction51,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config53, path54);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction56 = null;
    org.neo4j.configuration.Config config58 = null;
    java.nio.file.Path path59 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction56, "", config58,
        path59);
  }

  @Test
  public void test2545() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2545");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory8 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean10 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) (-1L));
    boolean boolean11 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) boolean10);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService12 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService12.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService12.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService12.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService12.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService12.strForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) executingQuery22);
    boolean boolean25 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory26 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean28 = queryLoggingServiceExtensionFactory26.equals((java.lang.Object) (short) 1);
    java.lang.String str29 = queryLoggingServiceExtensionFactory26.toString();
    boolean boolean30 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory26);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService31 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService31.strForEx(executingQuery32);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    java.lang.Throwable throwable35 = null;
    queryLoggingService31.faleForExTh(executingQuery34, throwable35);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction37 = null;
    java.lang.Throwable throwable38 = null;
    queryLoggingService31.rolcForKe(kernelTransaction37, throwable38);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery40 = null;
    queryLoggingService31.faleForExTh(executingQuery40, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService31.sucsForEx(executingQuery43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    queryLoggingService31.comForKe(kernelTransaction45);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    queryLoggingService31.strForEx(executingQuery47);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery49 = null;
    queryLoggingService31.strForEx(executingQuery49);
    boolean boolean51 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery49);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService52 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction53 = null;
    queryLoggingService52.rolcForKe(kernelTransaction53);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    java.lang.Throwable throwable56 = null;
    queryLoggingService52.rolcForKe(kernelTransaction55, throwable56);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction58 = null;
    queryLoggingService52.rolcForKe(kernelTransaction58);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery60 = null;
    java.lang.Throwable throwable61 = null;
    queryLoggingService52.faleForExTh(executingQuery60, throwable61);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery63 = null;
    queryLoggingService52.faleForExTh(executingQuery63, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery66 = null;
    queryLoggingService52.strForEx(executingQuery66);
    boolean boolean68 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery66);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(queryLoggingService12);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertEquals(
        "'" + str29 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str29, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    org.junit.Assert.assertNotNull(queryLoggingService31);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    org.junit.Assert.assertNotNull(queryLoggingService52);
    org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
  }

  @Test
  public void test2546() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2546");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj9 = new java.lang.Object();
    java.lang.Class<?> wildcardClass10 = obj9.getClass();
    boolean boolean11 = queryLoggingServiceExtensionFactory0.equals(obj9);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory12 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean14 = queryLoggingServiceExtensionFactory12.equals((java.lang.Object) (short) 1);
    java.lang.String str15 = queryLoggingServiceExtensionFactory12.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService16 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService16.strForEx(executingQuery17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService16.faleForExTh(executingQuery19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService16.rolcForKe(kernelTransaction22, throwable23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService16.comForKe(kernelTransaction25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService16.strForEx(executingQuery27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService16.strForEx(executingQuery29);
    boolean boolean31 = queryLoggingServiceExtensionFactory12.equals(
        (java.lang.Object) executingQuery29);
    boolean boolean32 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery29);
    java.lang.String str33 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str34 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str35 = queryLoggingServiceExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext36 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies37 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle38 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext36, queryLoggingServiceDependencies37);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "query-logging" + "'", str15,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService16);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertEquals("'" + str33 + "' != '" + "query-logging" + "'", str33,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str34 + "' != '" + "query-logging" + "'", str34,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str35 + "' != '" + "query-logging" + "'", str35,
        "query-logging");
  }

  @Test
  public void test2547() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2547");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.sucsForEx(executingQuery10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.comForKe(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.faleForExTh(executingQuery16, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.faleForExTh(executingQuery19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.comForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService0.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    java.lang.Throwable throwable28 = null;
    queryLoggingService0.faleForExTh(executingQuery27, throwable28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    java.lang.Throwable throwable31 = null;
    queryLoggingService0.faleForExTh(executingQuery30, throwable31);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2548() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2548");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.strForEx(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.sucsForEx(executingQuery11);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2549() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2549");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService0.faleForExTh(executingQuery24, "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2550() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2550");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.strForEx(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService0.faleForExTh(executingQuery24, throwable25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    java.lang.Throwable throwable28 = null;
    queryLoggingService0.faleForExTh(executingQuery27, throwable28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryLoggingService0.faleForExTh(executingQuery30, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService0.sucsForEx(executingQuery33);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2551() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2551");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 1);
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService4 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    queryLoggingService4.strForEx(executingQuery5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService4.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService4.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService4.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService4.strForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService4.strForEx(executingQuery17);
    boolean boolean19 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery17);
    java.lang.String str20 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService21 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService21.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService21.faleForExTh(executingQuery24, "");
    java.lang.Class<?> wildcardClass27 = queryLoggingService21.getClass();
    boolean boolean28 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService21);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService29 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    queryLoggingService29.rolcForKe(kernelTransaction30);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction32 = null;
    java.lang.Throwable throwable33 = null;
    queryLoggingService29.rolcForKe(kernelTransaction32, throwable33);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction35 = null;
    queryLoggingService29.rolcForKe(kernelTransaction35);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction37 = null;
    java.lang.Throwable throwable38 = null;
    queryLoggingService29.rolcForKe(kernelTransaction37, throwable38);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    queryLoggingService29.rolcForKe(kernelTransaction40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    queryLoggingService29.strForEx(executingQuery42);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery44 = null;
    queryLoggingService29.faleForExTh(executingQuery44,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    boolean boolean47 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery48 = null;
    queryLoggingService29.strForEx(executingQuery48);
    java.lang.Class<?> wildcardClass50 = queryLoggingService29.getClass();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "query-logging" + "'", str3,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService4);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "query-logging" + "'", str20,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService21);
    org.junit.Assert.assertNotNull(wildcardClass27);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertNotNull(queryLoggingService29);
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    org.junit.Assert.assertNotNull(wildcardClass50);
  }

  @Test
  public void test2552() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2552");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "hi!", config13,
        path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "query-logging",
        config18, path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config23, path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "", config28,
        path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config33, path34);
  }

  @Test
  public void test2553() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2553");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.comForKe(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.sucsForEx(executingQuery21);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2554() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2554");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean9 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory10 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str11 = queryLoggingServiceExtensionFactory10.toString();
    boolean boolean12 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory10);
    boolean boolean13 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    java.lang.String str14 = queryLoggingServiceExtensionFactory7.getName();
    java.lang.String str15 = queryLoggingServiceExtensionFactory7.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService16 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService16.strForEx(executingQuery17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService16.faleForExTh(executingQuery19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService16.rolcForKe(kernelTransaction22, throwable23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService16.strForEx(executingQuery25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService16.strForEx(executingQuery27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService16.sucsForEx(executingQuery29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService16.comForKe(kernelTransaction31);
    boolean boolean33 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) kernelTransaction31);
    java.lang.String str34 = queryLoggingServiceExtensionFactory7.toString();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "query-logging" + "'", str14,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "query-logging" + "'", str15,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService16);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertEquals(
        "'" + str34 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str34, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test2555() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2555");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.sucsForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.faleForExTh(executingQuery17, throwable18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20, "");
    java.lang.Class<?> wildcardClass23 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass23);
  }

  @Test
  public void test2556() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2556");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.comForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.comForKe(kernelTransaction23);
    java.lang.Class<?> wildcardClass25 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass25);
  }

  @Test
  public void test2557() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2557");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23, throwable24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService0.sucsForEx(executingQuery26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService0.strForEx(kernelTransaction28);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    queryLoggingService0.strForEx(kernelTransaction30);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2558() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2558");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.faleForExTh(executingQuery12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17, throwable18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.strForEx(kernelTransaction20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.sucsForEx(executingQuery22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService0.strForEx(executingQuery24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2559() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2559");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.faleForExTh(executingQuery12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.strForEx(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.faleForExTh(executingQuery19, throwable20);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2560() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2560");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.strForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14, "hi!");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2561() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2561");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean9 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory10 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str11 = queryLoggingServiceExtensionFactory10.toString();
    boolean boolean12 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory10);
    boolean boolean13 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    java.lang.Object obj14 = null;
    boolean boolean15 = queryLoggingServiceExtensionFactory0.equals(obj14);
    java.lang.String str16 = queryLoggingServiceExtensionFactory0.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext17 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies18 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle19 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext17, queryLoggingServiceDependencies18);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertEquals(
        "'" + str16 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str16, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test2562() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2562");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory8 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean10 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) (-1L));
    boolean boolean11 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) boolean10);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService12 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService12.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService12.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService12.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService12.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService12.strForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) executingQuery22);
    boolean boolean25 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory26 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean28 = queryLoggingServiceExtensionFactory26.equals((java.lang.Object) (short) 1);
    java.lang.String str29 = queryLoggingServiceExtensionFactory26.toString();
    boolean boolean30 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory26);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService31 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction32 = null;
    queryLoggingService31.rolcForKe(kernelTransaction32);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction34 = null;
    java.lang.Throwable throwable35 = null;
    queryLoggingService31.rolcForKe(kernelTransaction34, throwable35);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction37 = null;
    queryLoggingService31.rolcForKe(kernelTransaction37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService31.sucsForEx(executingQuery39);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction41 = null;
    queryLoggingService31.strForEx(kernelTransaction41);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction43 = null;
    queryLoggingService31.strForEx(kernelTransaction43);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery45 = null;
    queryLoggingService31.strForEx(executingQuery45);
    boolean boolean47 = queryLoggingServiceExtensionFactory26.equals(
        (java.lang.Object) executingQuery45);
    java.lang.String str48 = queryLoggingServiceExtensionFactory26.getName();
    java.lang.String str49 = queryLoggingServiceExtensionFactory26.toString();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(queryLoggingService12);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertEquals(
        "'" + str29 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str29, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    org.junit.Assert.assertNotNull(queryLoggingService31);
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    org.junit.Assert.assertEquals("'" + str48 + "' != '" + "query-logging" + "'", str48,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str49 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str49, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test2563() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2563");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16, throwable17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.strForEx(executingQuery19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2564() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2564");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService2 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService2.rolcForKe(kernelTransaction3, throwable4);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable4);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.Class<?> wildcardClass10 = queryLoggingServiceExtensionFactory0.getClass();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService2);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str9, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(wildcardClass10);
  }

  @Test
  public void test2565() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2565");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.faleForExTh(executingQuery21,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService0.faleForExTh(executingQuery24, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    java.lang.Throwable throwable28 = null;
    queryLoggingService0.faleForExTh(executingQuery27, throwable28);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2566() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2566");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    java.lang.Class<?> wildcardClass17 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass17);
  }

  @Test
  public void test2567() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2567");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18, "hi!");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2568() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2568");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.faleForExTh(executingQuery1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.rolcForKe(kernelTransaction4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    queryLoggingService0.faleForExTh(executingQuery7, "hi!");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2569() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2569");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "hi!", config13,
        path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "hi!", config23,
        path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "", config28,
        path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31, "query-logging",
        config33, path34);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction36 = null;
    org.neo4j.configuration.Config config38 = null;
    java.nio.file.Path path39 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction36,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config38, path39);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction41 = null;
    org.neo4j.configuration.Config config43 = null;
    java.nio.file.Path path44 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction41,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config43, path44);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction46 = null;
    org.neo4j.configuration.Config config48 = null;
    java.nio.file.Path path49 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction46, "query-logging",
        config48, path49);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction51 = null;
    org.neo4j.configuration.Config config53 = null;
    java.nio.file.Path path54 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction51,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config53, path54);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction56 = null;
    org.neo4j.configuration.Config config58 = null;
    java.nio.file.Path path59 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction56, "query-logging",
        config58, path59);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction61 = null;
    org.neo4j.configuration.Config config63 = null;
    java.nio.file.Path path64 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction61, "", config63,
        path64);
  }

  @Test
  public void test2570() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2570");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory11 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory12 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean14 = queryLoggingServiceExtensionFactory12.equals((java.lang.Object) (-1L));
    boolean boolean15 = queryLoggingServiceExtensionFactory11.equals((java.lang.Object) boolean14);
    boolean boolean17 = queryLoggingServiceExtensionFactory11.equals((java.lang.Object) 0L);
    java.lang.String str18 = queryLoggingServiceExtensionFactory11.toString();
    java.lang.String str19 = queryLoggingServiceExtensionFactory11.getName();
    java.lang.Object obj20 = new java.lang.Object();
    java.lang.Class<?> wildcardClass21 = obj20.getClass();
    boolean boolean22 = queryLoggingServiceExtensionFactory11.equals(obj20);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory23 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean25 = queryLoggingServiceExtensionFactory23.equals((java.lang.Object) (short) 1);
    java.lang.String str26 = queryLoggingServiceExtensionFactory23.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService27 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService27.strForEx(executingQuery28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    java.lang.Throwable throwable31 = null;
    queryLoggingService27.faleForExTh(executingQuery30, throwable31);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    java.lang.Throwable throwable34 = null;
    queryLoggingService27.rolcForKe(kernelTransaction33, throwable34);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    queryLoggingService27.comForKe(kernelTransaction36);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery38 = null;
    queryLoggingService27.strForEx(executingQuery38);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery40 = null;
    queryLoggingService27.strForEx(executingQuery40);
    boolean boolean42 = queryLoggingServiceExtensionFactory23.equals(
        (java.lang.Object) executingQuery40);
    boolean boolean43 = queryLoggingServiceExtensionFactory11.equals(
        (java.lang.Object) executingQuery40);
    java.lang.String str44 = queryLoggingServiceExtensionFactory11.toString();
    boolean boolean45 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory11);
    java.lang.String str46 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService47 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery48 = null;
    queryLoggingService47.strForEx(executingQuery48);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery50 = null;
    java.lang.Throwable throwable51 = null;
    queryLoggingService47.faleForExTh(executingQuery50, throwable51);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction53 = null;
    java.lang.Throwable throwable54 = null;
    queryLoggingService47.rolcForKe(kernelTransaction53, throwable54);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction56 = null;
    queryLoggingService47.comForKe(kernelTransaction56);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery58 = null;
    queryLoggingService47.strForEx(executingQuery58);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery60 = null;
    java.lang.Throwable throwable61 = null;
    queryLoggingService47.faleForExTh(executingQuery60, throwable61);
    boolean boolean63 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable61);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str10, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertEquals(
        "'" + str18 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str18, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "query-logging" + "'", str19,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "query-logging" + "'", str26,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService27);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertEquals(
        "'" + str44 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str44, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    org.junit.Assert.assertEquals("'" + str46 + "' != '" + "query-logging" + "'", str46,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService47);
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
  }

  @Test
  public void test2571() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2571");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.comForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2572() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2572");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22, throwable23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService0.faleForExTh(executingQuery25, "hi!");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2573() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2573");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.strForEx(kernelTransaction14);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2574() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2574");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.rolcForKe(kernelTransaction4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    queryLoggingService0.sucsForEx(executingQuery7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    java.lang.Class<?> wildcardClass12 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass12);
  }

  @Test
  public void test2575() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2575");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.faleForExTh(executingQuery14, throwable15);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2576() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2576");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService10 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService10.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService10.comForKe(kernelTransaction14);
    boolean boolean16 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService10.faleForExTh(executingQuery17,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService10.strForEx(executingQuery20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService10.rolcForKe(kernelTransaction22, throwable23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService10.sucsForEx(executingQuery25);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str9, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService10);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
  }

  @Test
  public void test2577() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2577");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService10 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService10.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService10.comForKe(kernelTransaction14);
    boolean boolean16 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService10.faleForExTh(executingQuery17,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService10.rolcForKe(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService10.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService10.comForKe(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService10.faleForExTh(executingQuery26, "query-logging");
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str9, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService10);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
  }

  @Test
  public void test2578() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2578");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6, "query-logging",
        config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config18, path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "query-logging",
        config23, path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config28, path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config33, path34);
  }

  @Test
  public void test2579() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2579");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.sucsForEx(executingQuery21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23, throwable24);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    java.lang.Throwable throwable27 = null;
    queryLoggingService0.rolcForKe(kernelTransaction26, throwable27);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2580() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2580");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str11 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str12 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str13 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str14 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str15 = queryLoggingServiceExtensionFactory3.getName();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "query-logging" + "'", str10,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "query-logging" + "'", str11,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "query-logging" + "'", str12,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "query-logging" + "'", str13,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "query-logging" + "'", str14,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "query-logging" + "'", str15,
        "query-logging");
  }

  @Test
  public void test2581() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2581");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str11 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str12 = queryLoggingServiceExtensionFactory0.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext13 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies14 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle15 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext13, queryLoggingServiceDependencies14);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str10, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str12 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str12, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test2582() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2582");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.faleForExTh(executingQuery6, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2583() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2583");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.strForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.faleForExTh(executingQuery22, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService0.strForEx(kernelTransaction25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService0.strForEx(executingQuery27);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    queryLoggingService0.comForKe(kernelTransaction29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService0.comForKe(kernelTransaction31);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2584() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2584");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2585() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2585");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.faleForExTh(executingQuery23, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    java.lang.Throwable throwable27 = null;
    queryLoggingService0.rolcForKe(kernelTransaction26, throwable27);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    queryLoggingService0.comForKe(kernelTransaction29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService0.rolcForKe(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService0.strForEx(executingQuery33);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2586() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2586");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService0.faleForExTh(executingQuery22, throwable23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService0.comForKe(kernelTransaction25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService0.comForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService0.sucsForEx(executingQuery29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService0.rolcForKe(kernelTransaction31);
    java.lang.Class<?> wildcardClass33 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass33);
  }

  @Test
  public void test2587() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2587");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj9 = new java.lang.Object();
    java.lang.Class<?> wildcardClass10 = obj9.getClass();
    boolean boolean11 = queryLoggingServiceExtensionFactory0.equals(obj9);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory12 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean14 = queryLoggingServiceExtensionFactory12.equals((java.lang.Object) (short) 1);
    java.lang.String str15 = queryLoggingServiceExtensionFactory12.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService16 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService16.strForEx(executingQuery17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService16.faleForExTh(executingQuery19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService16.rolcForKe(kernelTransaction22, throwable23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService16.comForKe(kernelTransaction25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService16.strForEx(executingQuery27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService16.strForEx(executingQuery29);
    boolean boolean31 = queryLoggingServiceExtensionFactory12.equals(
        (java.lang.Object) executingQuery29);
    boolean boolean32 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery29);
    java.lang.String str33 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str34 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService35 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    queryLoggingService35.rolcForKe(kernelTransaction36);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction38 = null;
    java.lang.Throwable throwable39 = null;
    queryLoggingService35.rolcForKe(kernelTransaction38, throwable39);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction41 = null;
    queryLoggingService35.rolcForKe(kernelTransaction41);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService35.sucsForEx(executingQuery43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    queryLoggingService35.strForEx(kernelTransaction45);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction47 = null;
    java.lang.Throwable throwable48 = null;
    queryLoggingService35.rolcForKe(kernelTransaction47, throwable48);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction50 = null;
    java.lang.Throwable throwable51 = null;
    queryLoggingService35.rolcForKe(kernelTransaction50, throwable51);
    boolean boolean53 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService35);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction54 = null;
    queryLoggingService35.strForEx(kernelTransaction54);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "query-logging" + "'", str15,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService16);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertEquals("'" + str33 + "' != '" + "query-logging" + "'", str33,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str34 + "' != '" + "query-logging" + "'", str34,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService35);
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
  }

  @Test
  public void test2588() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2588");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory11 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory12 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean14 = queryLoggingServiceExtensionFactory12.equals((java.lang.Object) (-1L));
    boolean boolean15 = queryLoggingServiceExtensionFactory11.equals((java.lang.Object) boolean14);
    boolean boolean17 = queryLoggingServiceExtensionFactory11.equals((java.lang.Object) 0L);
    java.lang.String str18 = queryLoggingServiceExtensionFactory11.toString();
    java.lang.String str19 = queryLoggingServiceExtensionFactory11.getName();
    java.lang.Object obj20 = new java.lang.Object();
    java.lang.Class<?> wildcardClass21 = obj20.getClass();
    boolean boolean22 = queryLoggingServiceExtensionFactory11.equals(obj20);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory23 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean25 = queryLoggingServiceExtensionFactory23.equals((java.lang.Object) (short) 1);
    java.lang.String str26 = queryLoggingServiceExtensionFactory23.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService27 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService27.strForEx(executingQuery28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    java.lang.Throwable throwable31 = null;
    queryLoggingService27.faleForExTh(executingQuery30, throwable31);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    java.lang.Throwable throwable34 = null;
    queryLoggingService27.rolcForKe(kernelTransaction33, throwable34);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    queryLoggingService27.comForKe(kernelTransaction36);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery38 = null;
    queryLoggingService27.strForEx(executingQuery38);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery40 = null;
    queryLoggingService27.strForEx(executingQuery40);
    boolean boolean42 = queryLoggingServiceExtensionFactory23.equals(
        (java.lang.Object) executingQuery40);
    boolean boolean43 = queryLoggingServiceExtensionFactory11.equals(
        (java.lang.Object) executingQuery40);
    java.lang.String str44 = queryLoggingServiceExtensionFactory11.toString();
    boolean boolean45 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory11);
    java.lang.String str46 = queryLoggingServiceExtensionFactory11.getName();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str10, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertEquals(
        "'" + str18 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str18, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "query-logging" + "'", str19,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "query-logging" + "'", str26,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService27);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertEquals(
        "'" + str44 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str44, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    org.junit.Assert.assertEquals("'" + str46 + "' != '" + "query-logging" + "'", str46,
        "query-logging");
  }

  @Test
  public void test2589() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2589");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.faleForExTh(executingQuery13, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16, throwable17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.faleForExTh(executingQuery19, "hi!");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2590() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2590");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService5.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService5.strForEx(executingQuery15);
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery15);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService18 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService18.strForEx(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService18.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService18.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService18.comForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService18.faleForExTh(executingQuery29, "");
    boolean boolean32 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) "");
    java.lang.Object obj33 = null;
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(obj33);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService35 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService35.rolcForKe(kernelTransaction36, throwable37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    java.lang.Throwable throwable40 = null;
    queryLoggingService35.faleForExTh(executingQuery39, throwable40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    java.lang.Throwable throwable43 = null;
    queryLoggingService35.faleForExTh(executingQuery42, throwable43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    queryLoggingService35.strForEx(kernelTransaction45);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    java.lang.Throwable throwable48 = null;
    queryLoggingService35.faleForExTh(executingQuery47, throwable48);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction50 = null;
    queryLoggingService35.rolcForKe(kernelTransaction50);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction52 = null;
    queryLoggingService35.comForKe(kernelTransaction52);
    boolean boolean54 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery55 = null;
    queryLoggingService35.strForEx(executingQuery55);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(queryLoggingService18);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertNotNull(queryLoggingService35);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
  }

  @Test
  public void test2591() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2591");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.strForEx(executingQuery15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17, throwable18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.strForEx(executingQuery20);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2592() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2592");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.comForKe(kernelTransaction16);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2593() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2593");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.sucsForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18, "hi!");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2594() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2594");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.comForKe(kernelTransaction18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2595() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2595");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean9 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory10 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str11 = queryLoggingServiceExtensionFactory10.toString();
    boolean boolean12 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory10);
    boolean boolean13 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    java.lang.String str14 = queryLoggingServiceExtensionFactory7.getName();
    java.lang.String str15 = queryLoggingServiceExtensionFactory7.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService16 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService16.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService16.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService16.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService16.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService16.faleForExTh(executingQuery27, "hi!");
    boolean boolean30 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingService16);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService31 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction32 = null;
    queryLoggingService31.rolcForKe(kernelTransaction32);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction34 = null;
    java.lang.Throwable throwable35 = null;
    queryLoggingService31.rolcForKe(kernelTransaction34, throwable35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService31.faleForExTh(executingQuery37, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    java.lang.Throwable throwable41 = null;
    queryLoggingService31.rolcForKe(kernelTransaction40, throwable41);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService31.strForEx(executingQuery43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    queryLoggingService31.comForKe(kernelTransaction45);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction47 = null;
    queryLoggingService31.strForEx(kernelTransaction47);
    boolean boolean49 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingService31);
    java.lang.String str50 = queryLoggingServiceExtensionFactory7.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext51 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies52 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle53 = queryLoggingServiceExtensionFactory7.newInstance(
          extensionContext51, queryLoggingServiceDependencies52);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "query-logging" + "'", str14,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str15 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str15, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService16);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    org.junit.Assert.assertNotNull(queryLoggingService31);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertEquals("'" + str50 + "' != '" + "query-logging" + "'", str50,
        "query-logging");
  }

  @Test
  public void test2596() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2596");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.sucsForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.sucsForEx(executingQuery17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.faleForExTh(executingQuery19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.strForEx(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService0.sucsForEx(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService0.sucsForEx(executingQuery28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    java.lang.Throwable throwable31 = null;
    queryLoggingService0.faleForExTh(executingQuery30, throwable31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService0.sucsForEx(executingQuery33);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2597() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2597");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.strForEx(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.comForKe(kernelTransaction14);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2598() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2598");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory8 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean10 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) (-1L));
    boolean boolean11 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) boolean10);
    java.lang.Object obj12 = new java.lang.Object();
    boolean boolean13 = queryLoggingServiceExtensionFactory7.equals(obj12);
    java.lang.String str14 = queryLoggingServiceExtensionFactory7.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService15 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService15.strForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService15.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService15.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService15.comForKe(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService15.strForEx(executingQuery26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService15.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService15.comForKe(kernelTransaction31);
    boolean boolean33 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingService15);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService35 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService35.rolcForKe(kernelTransaction36, throwable37);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction39 = null;
    queryLoggingService35.comForKe(kernelTransaction39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    java.lang.Throwable throwable42 = null;
    queryLoggingService35.faleForExTh(executingQuery41, throwable42);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    queryLoggingService35.rolcForKe(kernelTransaction44);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction46 = null;
    queryLoggingService35.comForKe(kernelTransaction46);
    boolean boolean48 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingService35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery49 = null;
    queryLoggingService35.sucsForEx(executingQuery49);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery51 = null;
    queryLoggingService35.strForEx(executingQuery51);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery53 = null;
    java.lang.Throwable throwable54 = null;
    queryLoggingService35.faleForExTh(executingQuery53, throwable54);
    java.lang.Class<?> wildcardClass56 = queryLoggingService35.getClass();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "query-logging" + "'", str14,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService15);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    org.junit.Assert.assertNotNull(queryLoggingService35);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    org.junit.Assert.assertNotNull(wildcardClass56);
  }

  @Test
  public void test2599() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2599");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.strForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2600() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2600");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.strForEx(executingQuery12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.strForEx(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18, throwable19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2601() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2601");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory3.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService7 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService7.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService7.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService7.faleForExTh(executingQuery13, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService7.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService7.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService7.strForEx(executingQuery21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService7.faleForExTh(executingQuery23,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    boolean boolean26 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    java.lang.String str27 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str28 = queryLoggingServiceExtensionFactory3.toString();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str6, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService7);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "query-logging" + "'", str27,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str28 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str28, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test2602() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2602");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction21);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2603() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2603");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory11 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory12 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean14 = queryLoggingServiceExtensionFactory12.equals((java.lang.Object) (-1L));
    boolean boolean15 = queryLoggingServiceExtensionFactory11.equals((java.lang.Object) boolean14);
    boolean boolean17 = queryLoggingServiceExtensionFactory11.equals((java.lang.Object) 0L);
    java.lang.String str18 = queryLoggingServiceExtensionFactory11.toString();
    java.lang.String str19 = queryLoggingServiceExtensionFactory11.getName();
    java.lang.Object obj20 = new java.lang.Object();
    java.lang.Class<?> wildcardClass21 = obj20.getClass();
    boolean boolean22 = queryLoggingServiceExtensionFactory11.equals(obj20);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory23 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean25 = queryLoggingServiceExtensionFactory23.equals((java.lang.Object) (short) 1);
    java.lang.String str26 = queryLoggingServiceExtensionFactory23.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService27 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService27.strForEx(executingQuery28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    java.lang.Throwable throwable31 = null;
    queryLoggingService27.faleForExTh(executingQuery30, throwable31);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    java.lang.Throwable throwable34 = null;
    queryLoggingService27.rolcForKe(kernelTransaction33, throwable34);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    queryLoggingService27.comForKe(kernelTransaction36);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery38 = null;
    queryLoggingService27.strForEx(executingQuery38);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery40 = null;
    queryLoggingService27.strForEx(executingQuery40);
    boolean boolean42 = queryLoggingServiceExtensionFactory23.equals(
        (java.lang.Object) executingQuery40);
    boolean boolean43 = queryLoggingServiceExtensionFactory11.equals(
        (java.lang.Object) executingQuery40);
    java.lang.String str44 = queryLoggingServiceExtensionFactory11.toString();
    boolean boolean45 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory11);
    java.lang.String str46 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService47 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction48 = null;
    java.lang.Throwable throwable49 = null;
    queryLoggingService47.rolcForKe(kernelTransaction48, throwable49);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery51 = null;
    queryLoggingService47.sucsForEx(executingQuery51);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction53 = null;
    queryLoggingService47.rolcForKe(kernelTransaction53);
    boolean boolean55 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService47);
    java.lang.String str56 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str57 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str10, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertEquals(
        "'" + str18 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str18, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "query-logging" + "'", str19,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "query-logging" + "'", str26,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService27);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertEquals(
        "'" + str44 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str44, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    org.junit.Assert.assertEquals("'" + str46 + "' != '" + "query-logging" + "'", str46,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService47);
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    org.junit.Assert.assertEquals(
        "'" + str56 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str56, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str57 + "' != '" + "query-logging" + "'", str57,
        "query-logging");
  }

  @Test
  public void test2604() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2604");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.comForKe(kernelTransaction15);
    java.lang.Class<?> wildcardClass17 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass17);
  }

  @Test
  public void test2605() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2605");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.strForEx(executingQuery17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.comForKe(kernelTransaction22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService0.sucsForEx(executingQuery24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2606() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2606");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService2 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService2.rolcForKe(kernelTransaction3, throwable4);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable4);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str11 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService2);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str9, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "query-logging" + "'", str10,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test2607() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2607");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.sucsForEx(executingQuery17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService0.faleForExTh(executingQuery22, throwable23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService0.strForEx(kernelTransaction25);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2608() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2608");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.faleForExTh(executingQuery23, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    java.lang.Throwable throwable27 = null;
    queryLoggingService0.rolcForKe(kernelTransaction26, throwable27);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    queryLoggingService0.comForKe(kernelTransaction29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryLoggingService0.faleForExTh(executingQuery31,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2609() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2609");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.strForEx(executingQuery3);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    queryLoggingService0.sucsForEx(executingQuery5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    queryLoggingService0.faleForExTh(executingQuery7, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.faleForExTh(executingQuery10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.sucsForEx(executingQuery15);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2610() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2610");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.strForEx(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.sucsForEx(executingQuery21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.faleForExTh(executingQuery23, throwable24);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    queryLoggingService0.strForEx(kernelTransaction26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService0.strForEx(kernelTransaction28);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2611() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2611");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.faleForExTh(executingQuery17, throwable18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.strForEx(kernelTransaction20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService0.faleForExTh(executingQuery22, throwable23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService0.comForKe(kernelTransaction25);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2612() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2612");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService5.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService5.strForEx(executingQuery15);
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery15);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService18 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService18.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService18.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService18.faleForExTh(executingQuery24, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService18.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService18.faleForExTh(executingQuery29, throwable30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService18.sucsForEx(executingQuery32);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService18);
    java.lang.String str35 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str36 = queryLoggingServiceExtensionFactory0.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext37 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies38 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle39 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext37, queryLoggingServiceDependencies38);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(queryLoggingService18);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertEquals(
        "'" + str35 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str35, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str36 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str36, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test2613() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2613");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.strForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.faleForExTh(executingQuery22, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService0.strForEx(kernelTransaction25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService0.faleForExTh(executingQuery27, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryLoggingService0.strForEx(executingQuery30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService0.faleForExTh(executingQuery32, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction35 = null;
    queryLoggingService0.comForKe(kernelTransaction35);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction37 = null;
    queryLoggingService0.comForKe(kernelTransaction37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    java.lang.Throwable throwable40 = null;
    queryLoggingService0.faleForExTh(executingQuery39, throwable40);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2614() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2614");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.faleForExTh(executingQuery20, throwable21);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2615() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2615");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 1);
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService4 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    queryLoggingService4.strForEx(executingQuery5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService4.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService4.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService4.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService4.strForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService4.strForEx(executingQuery17);
    boolean boolean19 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery17);
    java.lang.String str20 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str21 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str22 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str23 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str24 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str25 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str26 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory27 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory28 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean30 = queryLoggingServiceExtensionFactory28.equals((java.lang.Object) (-1L));
    boolean boolean31 = queryLoggingServiceExtensionFactory27.equals((java.lang.Object) boolean30);
    boolean boolean33 = queryLoggingServiceExtensionFactory27.equals((java.lang.Object) 0L);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory34 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory35 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean37 = queryLoggingServiceExtensionFactory35.equals((java.lang.Object) (-1L));
    boolean boolean38 = queryLoggingServiceExtensionFactory34.equals((java.lang.Object) boolean37);
    java.lang.Object obj39 = new java.lang.Object();
    boolean boolean40 = queryLoggingServiceExtensionFactory34.equals(obj39);
    java.lang.String str41 = queryLoggingServiceExtensionFactory34.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService42 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService42.strForEx(executingQuery43);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery45 = null;
    java.lang.Throwable throwable46 = null;
    queryLoggingService42.faleForExTh(executingQuery45, throwable46);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction48 = null;
    java.lang.Throwable throwable49 = null;
    queryLoggingService42.rolcForKe(kernelTransaction48, throwable49);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction51 = null;
    queryLoggingService42.comForKe(kernelTransaction51);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery53 = null;
    queryLoggingService42.strForEx(executingQuery53);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    java.lang.Throwable throwable56 = null;
    queryLoggingService42.rolcForKe(kernelTransaction55, throwable56);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction58 = null;
    queryLoggingService42.comForKe(kernelTransaction58);
    boolean boolean60 = queryLoggingServiceExtensionFactory34.equals(
        (java.lang.Object) queryLoggingService42);
    boolean boolean61 = queryLoggingServiceExtensionFactory27.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory34);
    boolean boolean62 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory34);
    java.lang.String str63 = queryLoggingServiceExtensionFactory34.toString();
    java.lang.String str64 = queryLoggingServiceExtensionFactory34.toString();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "query-logging" + "'", str3,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService4);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "query-logging" + "'", str20,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str21 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str21, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str22 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str22, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "query-logging" + "'", str23,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "query-logging" + "'", str24,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str25 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str25, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "query-logging" + "'", str26,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    org.junit.Assert.assertEquals("'" + str41 + "' != '" + "query-logging" + "'", str41,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService42);
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    org.junit.Assert.assertEquals(
        "'" + str63 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str63, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str64 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str64, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test2616() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2616");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.faleForExTh(executingQuery6, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14, throwable15);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2617() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2617");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.Object obj10 = null;
    boolean boolean11 = queryLoggingServiceExtensionFactory3.equals(obj10);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService12 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService12.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService12.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService12.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService12.comForKe(kernelTransaction20);
    boolean boolean22 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService12);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory23 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory24 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean26 = queryLoggingServiceExtensionFactory24.equals((java.lang.Object) (-1L));
    boolean boolean27 = queryLoggingServiceExtensionFactory23.equals((java.lang.Object) boolean26);
    boolean boolean29 = queryLoggingServiceExtensionFactory23.equals((java.lang.Object) 0L);
    java.lang.String str30 = queryLoggingServiceExtensionFactory23.toString();
    java.lang.String str31 = queryLoggingServiceExtensionFactory23.getName();
    java.lang.String str32 = queryLoggingServiceExtensionFactory23.getName();
    java.lang.Class<?> wildcardClass33 = queryLoggingServiceExtensionFactory23.getClass();
    boolean boolean34 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) wildcardClass33);
    java.lang.String str35 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str36 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str37 = queryLoggingServiceExtensionFactory3.toString();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(queryLoggingService12);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertEquals(
        "'" + str30 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str30, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str31 + "' != '" + "query-logging" + "'", str31,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str32 + "' != '" + "query-logging" + "'", str32,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass33);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertEquals(
        "'" + str35 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str35, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str36 + "' != '" + "query-logging" + "'", str36,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str37 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str37, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test2618() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2618");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.strForEx(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService0.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService0.comForKe(kernelTransaction27);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2619() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2619");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.Object obj5 = new java.lang.Object();
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals(obj5);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService10 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService10.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService10.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService10.strForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService10.faleForExTh(executingQuery18, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService10.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService10.sucsForEx(executingQuery24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService10.sucsForEx(executingQuery26);
    boolean boolean28 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService10);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService29 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    queryLoggingService29.rolcForKe(kernelTransaction30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService29.faleForExTh(executingQuery32, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    java.lang.Throwable throwable36 = null;
    queryLoggingService29.faleForExTh(executingQuery35, throwable36);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery38 = null;
    java.lang.Throwable throwable39 = null;
    queryLoggingService29.faleForExTh(executingQuery38, throwable39);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction41 = null;
    queryLoggingService29.strForEx(kernelTransaction41);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService29.faleForExTh(executingQuery43, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction46 = null;
    queryLoggingService29.rolcForKe(kernelTransaction46);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction48 = null;
    queryLoggingService29.rolcForKe(kernelTransaction48);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery50 = null;
    java.lang.Throwable throwable51 = null;
    queryLoggingService29.faleForExTh(executingQuery50, throwable51);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction53 = null;
    queryLoggingService29.rolcForKe(kernelTransaction53);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    queryLoggingService29.comForKe(kernelTransaction55);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction57 = null;
    queryLoggingService29.strForEx(kernelTransaction57);
    boolean boolean59 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService29);
    java.lang.String str60 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str9, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService10);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertNotNull(queryLoggingService29);
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    org.junit.Assert.assertEquals("'" + str60 + "' != '" + "query-logging" + "'", str60,
        "query-logging");
  }

  @Test
  public void test2620() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2620");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService2 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService2.strForEx(executingQuery3);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    java.lang.Throwable throwable6 = null;
    queryLoggingService2.faleForExTh(executingQuery5, throwable6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService2.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService2.sucsForEx(executingQuery10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService2.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService2.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService2.strForEx(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService2.strForEx(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService2.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService2.rolcForKe(kernelTransaction24, throwable25);
    boolean boolean27 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction24);
    java.lang.String str28 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str29 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService2);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertEquals("'" + str28 + "' != '" + "query-logging" + "'", str28,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str29 + "' != '" + "query-logging" + "'", str29,
        "query-logging");
  }

  @Test
  public void test2621() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2621");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService8.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService8.sucsForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery22);
    java.lang.String str25 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str26 = queryLoggingServiceExtensionFactory3.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory27 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str28 = queryLoggingServiceExtensionFactory27.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService29 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    java.lang.Throwable throwable31 = null;
    queryLoggingService29.rolcForKe(kernelTransaction30, throwable31);
    boolean boolean33 = queryLoggingServiceExtensionFactory27.equals(
        (java.lang.Object) throwable31);
    java.lang.String str34 = queryLoggingServiceExtensionFactory27.getName();
    java.lang.String str35 = queryLoggingServiceExtensionFactory27.toString();
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl36 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction37 = null;
    org.neo4j.configuration.Config config39 = null;
    java.nio.file.Path path40 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl36.init(fileSystemAbstraction37, "hi!",
        config39, path40);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction42 = null;
    org.neo4j.configuration.Config config44 = null;
    java.nio.file.Path path45 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl36.init(fileSystemAbstraction42,
        "query-logging", config44, path45);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction47 = null;
    org.neo4j.configuration.Config config49 = null;
    java.nio.file.Path path50 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl36.init(fileSystemAbstraction47,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config49, path50);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction52 = null;
    org.neo4j.configuration.Config config54 = null;
    java.nio.file.Path path55 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl36.init(fileSystemAbstraction52, "", config54,
        path55);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction57 = null;
    org.neo4j.configuration.Config config59 = null;
    java.nio.file.Path path60 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl36.init(fileSystemAbstraction57, "hi!",
        config59, path60);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction62 = null;
    org.neo4j.configuration.Config config64 = null;
    java.nio.file.Path path65 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl36.init(fileSystemAbstraction62, "hi!",
        config64, path65);
    boolean boolean67 = queryLoggingServiceExtensionFactory27.equals((java.lang.Object) config64);
    boolean boolean68 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory27);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService69 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction70 = null;
    queryLoggingService69.rolcForKe(kernelTransaction70);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction72 = null;
    java.lang.Throwable throwable73 = null;
    queryLoggingService69.rolcForKe(kernelTransaction72, throwable73);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction75 = null;
    queryLoggingService69.rolcForKe(kernelTransaction75);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction77 = null;
    java.lang.Throwable throwable78 = null;
    queryLoggingService69.rolcForKe(kernelTransaction77, throwable78);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery80 = null;
    queryLoggingService69.faleForExTh(executingQuery80, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction83 = null;
    java.lang.Throwable throwable84 = null;
    queryLoggingService69.rolcForKe(kernelTransaction83, throwable84);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery86 = null;
    java.lang.Throwable throwable87 = null;
    queryLoggingService69.faleForExTh(executingQuery86, throwable87);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery89 = null;
    queryLoggingService69.strForEx(executingQuery89);
    boolean boolean91 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService69);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertEquals(
        "'" + str25 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str25, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "query-logging" + "'", str26,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str28 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str28, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService29);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertEquals("'" + str34 + "' != '" + "query-logging" + "'", str34,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str35 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str35, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    org.junit.Assert.assertNotNull(queryLoggingService69);
    org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
  }

  @Test
  public void test2622() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2622");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.faleForExTh(executingQuery16, throwable17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.faleForExTh(executingQuery19, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.comForKe(kernelTransaction22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService0.faleForExTh(executingQuery24, throwable25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService0.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService0.rolcForKe(kernelTransaction29, throwable30);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction32 = null;
    queryLoggingService0.strForEx(kernelTransaction32);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2623() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2623");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.comForKe(kernelTransaction18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2624() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2624");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService2 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService2.rolcForKe(kernelTransaction3, throwable4);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable4);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService9 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService9.rolcForKe(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService9.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService9.rolcForKe(kernelTransaction15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService9.comForKe(kernelTransaction18);
    boolean boolean20 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService9);
    java.lang.String str21 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str22 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService23 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService23.strForEx(executingQuery24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    java.lang.Throwable throwable27 = null;
    queryLoggingService23.faleForExTh(executingQuery26, throwable27);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService23.rolcForKe(kernelTransaction29, throwable30);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction32 = null;
    queryLoggingService23.comForKe(kernelTransaction32);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    queryLoggingService23.strForEx(executingQuery34);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    queryLoggingService23.strForEx(kernelTransaction36);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction38 = null;
    java.lang.Throwable throwable39 = null;
    queryLoggingService23.rolcForKe(kernelTransaction38, throwable39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    queryLoggingService23.strForEx(executingQuery41);
    boolean boolean43 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService23);
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService2);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService9);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertEquals(
        "'" + str21 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str21, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str22 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str22, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService23);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
  }

  @Test
  public void test2625() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2625");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.faleForExTh(executingQuery13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2626() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2626");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    boolean boolean10 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 100);
    java.lang.String str11 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str12 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService13 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService13.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService13.sucsForEx(executingQuery17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService13.sucsForEx(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService13.sucsForEx(executingQuery21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService13.sucsForEx(executingQuery23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService13.comForKe(kernelTransaction25);
    boolean boolean27 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService13.rolcForKe(kernelTransaction28);
    java.lang.Class<?> wildcardClass30 = queryLoggingService13.getClass();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "query-logging" + "'", str11,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str12 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str12, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService13);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertNotNull(wildcardClass30);
  }

  @Test
  public void test2627() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2627");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.comForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.strForEx(kernelTransaction11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.strForEx(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.strForEx(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.strForEx(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService0.sucsForEx(executingQuery26);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2628() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2628");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str2 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService3 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService3.faleForExTh(executingQuery4,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    queryLoggingService3.faleForExTh(executingQuery7,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService3.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService3.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService3.faleForExTh(executingQuery14,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory18 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean20 = queryLoggingServiceExtensionFactory18.equals((java.lang.Object) (short) 1);
    java.lang.String str21 = queryLoggingServiceExtensionFactory18.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService22 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService22.strForEx(executingQuery23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService22.faleForExTh(executingQuery25, throwable26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService22.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService22.comForKe(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService22.strForEx(executingQuery33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService22.strForEx(executingQuery35);
    boolean boolean37 = queryLoggingServiceExtensionFactory18.equals(
        (java.lang.Object) executingQuery35);
    java.lang.Class<?> wildcardClass38 = queryLoggingServiceExtensionFactory18.getClass();
    boolean boolean39 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) wildcardClass38);
    java.lang.String str40 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService41 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction42 = null;
    queryLoggingService41.rolcForKe(kernelTransaction42);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    java.lang.Throwable throwable45 = null;
    queryLoggingService41.rolcForKe(kernelTransaction44, throwable45);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction47 = null;
    queryLoggingService41.rolcForKe(kernelTransaction47);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery49 = null;
    queryLoggingService41.sucsForEx(executingQuery49);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction51 = null;
    queryLoggingService41.strForEx(kernelTransaction51);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery53 = null;
    queryLoggingService41.faleForExTh(executingQuery53,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery56 = null;
    queryLoggingService41.faleForExTh(executingQuery56, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction59 = null;
    queryLoggingService41.rolcForKe(kernelTransaction59);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction61 = null;
    queryLoggingService41.rolcForKe(kernelTransaction61);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction63 = null;
    java.lang.Throwable throwable64 = null;
    queryLoggingService41.rolcForKe(kernelTransaction63, throwable64);
    boolean boolean66 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction63);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService67 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery68 = null;
    queryLoggingService67.strForEx(executingQuery68);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery70 = null;
    java.lang.Throwable throwable71 = null;
    queryLoggingService67.faleForExTh(executingQuery70, throwable71);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction73 = null;
    java.lang.Throwable throwable74 = null;
    queryLoggingService67.rolcForKe(kernelTransaction73, throwable74);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery76 = null;
    queryLoggingService67.faleForExTh(executingQuery76, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery79 = null;
    queryLoggingService67.faleForExTh(executingQuery79, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction82 = null;
    java.lang.Throwable throwable83 = null;
    queryLoggingService67.rolcForKe(kernelTransaction82, throwable83);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction85 = null;
    queryLoggingService67.strForEx(kernelTransaction85);
    boolean boolean87 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction85);
    java.lang.String str88 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str89 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str90 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str2, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService3);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertEquals("'" + str21 + "' != '" + "query-logging" + "'", str21,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService22);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertNotNull(wildcardClass38);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertEquals(
        "'" + str40 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str40, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService41);
    org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    org.junit.Assert.assertNotNull(queryLoggingService67);
    org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    org.junit.Assert.assertEquals(
        "'" + str88 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str88, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str89 + "' != '" + "query-logging" + "'", str89,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str90 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str90, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test2629() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2629");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean9 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory10 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str11 = queryLoggingServiceExtensionFactory10.toString();
    boolean boolean12 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory10);
    boolean boolean13 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    java.lang.String str14 = queryLoggingServiceExtensionFactory7.getName();
    java.lang.String str15 = queryLoggingServiceExtensionFactory7.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService16 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService16.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService16.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService16.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService16.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService16.faleForExTh(executingQuery27, "hi!");
    boolean boolean30 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingService16);
    java.lang.String str31 = queryLoggingServiceExtensionFactory7.toString();
    java.lang.String str32 = queryLoggingServiceExtensionFactory7.getName();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "query-logging" + "'", str14,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str15 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str15, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService16);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    org.junit.Assert.assertEquals(
        "'" + str31 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str31, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str32 + "' != '" + "query-logging" + "'", str32,
        "query-logging");
  }

  @Test
  public void test2630() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2630");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService2 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService2.rolcForKe(kernelTransaction3, throwable4);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable4);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService11 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService11.strForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService11.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService11.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService11.faleForExTh(executingQuery19, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService11.strForEx(kernelTransaction22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService11.faleForExTh(executingQuery24, throwable25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService11.faleForExTh(executingQuery27, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryLoggingService11.strForEx(executingQuery30);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction32 = null;
    queryLoggingService11.strForEx(kernelTransaction32);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction34 = null;
    java.lang.Throwable throwable35 = null;
    queryLoggingService11.rolcForKe(kernelTransaction34, throwable35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService11.sucsForEx(executingQuery37);
    boolean boolean39 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery37);
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService2);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "query-logging" + "'", str10,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService11);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
  }

  @Test
  public void test2631() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2631");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.faleForExTh(executingQuery21,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.strForEx(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService0.sucsForEx(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService0.strForEx(executingQuery28);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    queryLoggingService0.comForKe(kernelTransaction30);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2632() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2632");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6, "query-logging",
        config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config18, path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "", config23,
        path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "query-logging",
        config28, path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31, "query-logging",
        config33, path34);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction36 = null;
    org.neo4j.configuration.Config config38 = null;
    java.nio.file.Path path39 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction36, "", config38,
        path39);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction41 = null;
    org.neo4j.configuration.Config config43 = null;
    java.nio.file.Path path44 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction41, "query-logging",
        config43, path44);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction46 = null;
    org.neo4j.configuration.Config config48 = null;
    java.nio.file.Path path49 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction46,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config48, path49);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction51 = null;
    org.neo4j.configuration.Config config53 = null;
    java.nio.file.Path path54 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction51,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config53, path54);
  }

  @Test
  public void test2633() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2633");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "hi!", config13,
        path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "hi!", config23,
        path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "", config28,
        path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31, "query-logging",
        config33, path34);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction36 = null;
    org.neo4j.configuration.Config config38 = null;
    java.nio.file.Path path39 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction36,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config38, path39);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction41 = null;
    org.neo4j.configuration.Config config43 = null;
    java.nio.file.Path path44 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction41,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config43, path44);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction46 = null;
    org.neo4j.configuration.Config config48 = null;
    java.nio.file.Path path49 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction46, "query-logging",
        config48, path49);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction51 = null;
    org.neo4j.configuration.Config config53 = null;
    java.nio.file.Path path54 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction51, "hi!", config53,
        path54);
  }

  @Test
  public void test2634() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2634");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 1);
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService4 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    queryLoggingService4.strForEx(executingQuery5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService4.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService4.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService4.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService4.strForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService4.strForEx(executingQuery17);
    boolean boolean19 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery17);
    java.lang.String str20 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str21 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str22 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str23 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService24 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService24.strForEx(executingQuery25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    java.lang.Throwable throwable28 = null;
    queryLoggingService24.faleForExTh(executingQuery27, throwable28);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    queryLoggingService24.rolcForKe(kernelTransaction30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService24.sucsForEx(executingQuery32);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction34 = null;
    queryLoggingService24.strForEx(kernelTransaction34);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService24.faleForExTh(executingQuery36, throwable37);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction39 = null;
    queryLoggingService24.strForEx(kernelTransaction39);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction41 = null;
    java.lang.Throwable throwable42 = null;
    queryLoggingService24.rolcForKe(kernelTransaction41, throwable42);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    java.lang.Throwable throwable45 = null;
    queryLoggingService24.rolcForKe(kernelTransaction44, throwable45);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    queryLoggingService24.sucsForEx(executingQuery47);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction49 = null;
    queryLoggingService24.rolcForKe(kernelTransaction49);
    boolean boolean51 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction49);
    java.lang.String str52 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str53 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory54 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory55 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean57 = queryLoggingServiceExtensionFactory55.equals((java.lang.Object) (-1L));
    boolean boolean58 = queryLoggingServiceExtensionFactory54.equals((java.lang.Object) boolean57);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService59 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery60 = null;
    queryLoggingService59.strForEx(executingQuery60);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery62 = null;
    java.lang.Throwable throwable63 = null;
    queryLoggingService59.faleForExTh(executingQuery62, throwable63);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction65 = null;
    queryLoggingService59.rolcForKe(kernelTransaction65);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery67 = null;
    queryLoggingService59.sucsForEx(executingQuery67);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery69 = null;
    queryLoggingService59.strForEx(executingQuery69);
    boolean boolean71 = queryLoggingServiceExtensionFactory54.equals(
        (java.lang.Object) executingQuery69);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService72 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction73 = null;
    queryLoggingService72.rolcForKe(kernelTransaction73);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction75 = null;
    java.lang.Throwable throwable76 = null;
    queryLoggingService72.rolcForKe(kernelTransaction75, throwable76);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery78 = null;
    queryLoggingService72.faleForExTh(executingQuery78, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction81 = null;
    queryLoggingService72.rolcForKe(kernelTransaction81);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery83 = null;
    java.lang.Throwable throwable84 = null;
    queryLoggingService72.faleForExTh(executingQuery83, throwable84);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery86 = null;
    queryLoggingService72.sucsForEx(executingQuery86);
    boolean boolean88 = queryLoggingServiceExtensionFactory54.equals(
        (java.lang.Object) queryLoggingService72);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery89 = null;
    queryLoggingService72.strForEx(executingQuery89);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery91 = null;
    java.lang.Throwable throwable92 = null;
    queryLoggingService72.faleForExTh(executingQuery91, throwable92);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery94 = null;
    queryLoggingService72.sucsForEx(executingQuery94);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction96 = null;
    queryLoggingService72.rolcForKe(kernelTransaction96);
    boolean boolean98 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService72);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "query-logging" + "'", str3,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService4);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "query-logging" + "'", str20,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str21 + "' != '" + "query-logging" + "'", str21,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str22 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str22, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str23 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str23, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService24);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    org.junit.Assert.assertEquals("'" + str52 + "' != '" + "query-logging" + "'", str52,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str53 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str53, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    org.junit.Assert.assertNotNull(queryLoggingService59);
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    org.junit.Assert.assertNotNull(queryLoggingService72);
    org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
  }

  @Test
  public void test2635() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2635");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.sucsForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction21);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2636() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2636");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.strForEx(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20, "hi!");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2637() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2637");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    boolean boolean10 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 100);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService11 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService11.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService11.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService11.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService11.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService11.sucsForEx(executingQuery22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService11.comForKe(kernelTransaction24);
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction24);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService27 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService27.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    java.lang.Throwable throwable32 = null;
    queryLoggingService27.rolcForKe(kernelTransaction31, throwable32);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction34 = null;
    queryLoggingService27.rolcForKe(kernelTransaction34);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService27.rolcForKe(kernelTransaction36, throwable37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService27.strForEx(executingQuery39);
    boolean boolean41 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService27);
    java.lang.String str42 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str43 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str44 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertNotNull(queryLoggingService11);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertNotNull(queryLoggingService27);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    org.junit.Assert.assertEquals(
        "'" + str42 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str42, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str43 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str43, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str44 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str44, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test2638() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2638");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj9 = new java.lang.Object();
    java.lang.Class<?> wildcardClass10 = obj9.getClass();
    boolean boolean11 = queryLoggingServiceExtensionFactory0.equals(obj9);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory12 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean14 = queryLoggingServiceExtensionFactory12.equals((java.lang.Object) (short) 1);
    java.lang.String str15 = queryLoggingServiceExtensionFactory12.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService16 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService16.strForEx(executingQuery17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService16.faleForExTh(executingQuery19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService16.rolcForKe(kernelTransaction22, throwable23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService16.comForKe(kernelTransaction25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService16.strForEx(executingQuery27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService16.strForEx(executingQuery29);
    boolean boolean31 = queryLoggingServiceExtensionFactory12.equals(
        (java.lang.Object) executingQuery29);
    boolean boolean32 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery29);
    java.lang.String str33 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str34 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str35 = queryLoggingServiceExtensionFactory0.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext36 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies37 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle38 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext36, queryLoggingServiceDependencies37);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "query-logging" + "'", str15,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService16);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertEquals("'" + str33 + "' != '" + "query-logging" + "'", str33,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str34 + "' != '" + "query-logging" + "'", str34,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str35 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str35, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test2639() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2639");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.strForEx(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.strForEx(executingQuery16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.comForKe(kernelTransaction18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20, throwable21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.faleForExTh(executingQuery23, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    queryLoggingService0.comForKe(kernelTransaction26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService0.faleForExTh(executingQuery28, "hi!");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2640() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2640");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.faleForExTh(executingQuery21,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService0.faleForExTh(executingQuery24, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    java.lang.Throwable throwable28 = null;
    queryLoggingService0.rolcForKe(kernelTransaction27, throwable28);
    java.lang.Class<?> wildcardClass30 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass30);
  }

  @Test
  public void test2641() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2641");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.strForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.faleForExTh(executingQuery22, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService0.comForKe(kernelTransaction25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService0.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService0.rolcForKe(kernelTransaction29, throwable30);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction32 = null;
    java.lang.Throwable throwable33 = null;
    queryLoggingService0.rolcForKe(kernelTransaction32, throwable33);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction35 = null;
    queryLoggingService0.comForKe(kernelTransaction35);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2642() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2642");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj9 = new java.lang.Object();
    java.lang.Class<?> wildcardClass10 = obj9.getClass();
    boolean boolean11 = queryLoggingServiceExtensionFactory0.equals(obj9);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory12 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean14 = queryLoggingServiceExtensionFactory12.equals((java.lang.Object) (short) 1);
    java.lang.String str15 = queryLoggingServiceExtensionFactory12.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService16 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService16.strForEx(executingQuery17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService16.faleForExTh(executingQuery19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService16.rolcForKe(kernelTransaction22, throwable23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService16.comForKe(kernelTransaction25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService16.strForEx(executingQuery27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService16.strForEx(executingQuery29);
    boolean boolean31 = queryLoggingServiceExtensionFactory12.equals(
        (java.lang.Object) executingQuery29);
    boolean boolean32 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery29);
    java.lang.String str33 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str34 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str35 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str36 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "query-logging" + "'", str15,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService16);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertEquals("'" + str33 + "' != '" + "query-logging" + "'", str33,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str34 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str34, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str35 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str35, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str36 + "' != '" + "query-logging" + "'", str36,
        "query-logging");
  }

  @Test
  public void test2643() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2643");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.sucsForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.sucsForEx(executingQuery17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.faleForExTh(executingQuery19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.strForEx(kernelTransaction24);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    queryLoggingService0.comForKe(kernelTransaction26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService0.rolcForKe(kernelTransaction28, throwable29);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2644() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2644");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.strForEx(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService0.comForKe(kernelTransaction8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.comForKe(kernelTransaction14);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2645() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2645");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.strForEx(executingQuery20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.comForKe(kernelTransaction22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService0.sucsForEx(executingQuery24);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    queryLoggingService0.comForKe(kernelTransaction26);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2646() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2646");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2647() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2647");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.faleForExTh(executingQuery12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.sucsForEx(executingQuery17);
    java.lang.Class<?> wildcardClass19 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass19);
  }

  @Test
  public void test2648() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2648");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.faleForExTh(executingQuery16, throwable17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.faleForExTh(executingQuery19, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.comForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2649() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2649");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.strForEx(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.strForEx(executingQuery23);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2650() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2650");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.Object obj10 = null;
    boolean boolean11 = queryLoggingServiceExtensionFactory3.equals(obj10);
    java.lang.String str12 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str13 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str14 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str15 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str16 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str17 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str18 = queryLoggingServiceExtensionFactory3.getName();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertEquals(
        "'" + str12 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str12, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "query-logging" + "'", str13,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str14 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str14, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str15 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str15, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str16 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str16, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str17 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str17, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "query-logging" + "'", str18,
        "query-logging");
  }

  @Test
  public void test2651() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2651");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.strForEx(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.faleForExTh(executingQuery21, throwable22);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2652() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2652");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 1);
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService4 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    queryLoggingService4.strForEx(executingQuery5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService4.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService4.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService4.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService4.strForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService4.strForEx(executingQuery17);
    boolean boolean19 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery17);
    java.lang.String str20 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str21 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str22 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str23 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService24 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService24.rolcForKe(kernelTransaction25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    java.lang.Throwable throwable28 = null;
    queryLoggingService24.rolcForKe(kernelTransaction27, throwable28);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    queryLoggingService24.rolcForKe(kernelTransaction30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService24.sucsForEx(executingQuery32);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    queryLoggingService24.faleForExTh(executingQuery34, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction37 = null;
    queryLoggingService24.strForEx(kernelTransaction37);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction39 = null;
    queryLoggingService24.rolcForKe(kernelTransaction39);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction41 = null;
    queryLoggingService24.comForKe(kernelTransaction41);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService24.sucsForEx(executingQuery43);
    boolean boolean45 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService24);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "query-logging" + "'", str3,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService4);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "query-logging" + "'", str20,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str21 + "' != '" + "query-logging" + "'", str21,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str22 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str22, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str23 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str23, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService24);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
  }

  @Test
  public void test2653() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2653");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.faleForExTh(executingQuery17, "hi!");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2654() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2654");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService10 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService10.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService10.comForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService10.faleForExTh(executingQuery16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService10.comForKe(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService10.strForEx(executingQuery21);
    boolean boolean23 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService10);
    java.lang.String str24 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str25 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str26 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService27 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService27.strForEx(executingQuery28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    java.lang.Throwable throwable31 = null;
    queryLoggingService27.faleForExTh(executingQuery30, throwable31);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    java.lang.Throwable throwable34 = null;
    queryLoggingService27.rolcForKe(kernelTransaction33, throwable34);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery36 = null;
    queryLoggingService27.faleForExTh(executingQuery36, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService27.sucsForEx(executingQuery39);
    boolean boolean41 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery39);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService10);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "query-logging" + "'", str24,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str25 + "' != '" + "query-logging" + "'", str25,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "query-logging" + "'", str26,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService27);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
  }

  @Test
  public void test2655() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2655");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.comForKe(kernelTransaction18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2656() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2656");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    queryLoggingService0.strForEx(kernelTransaction3);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    java.lang.Throwable throwable6 = null;
    queryLoggingService0.faleForExTh(executingQuery5, throwable6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService0.strForEx(kernelTransaction8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2657() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2657");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.faleForExTh(executingQuery11, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.comForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.faleForExTh(executingQuery16,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.strForEx(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.comForKe(kernelTransaction24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2658() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2658");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory8 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean10 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) (-1L));
    boolean boolean11 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) boolean10);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService12 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService12.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService12.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService12.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService12.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService12.strForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) executingQuery22);
    boolean boolean25 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory26 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean28 = queryLoggingServiceExtensionFactory26.equals((java.lang.Object) (short) 1);
    java.lang.String str29 = queryLoggingServiceExtensionFactory26.toString();
    boolean boolean30 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory26);
    java.lang.String str31 = queryLoggingServiceExtensionFactory26.getName();
    java.lang.String str32 = queryLoggingServiceExtensionFactory26.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService33 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction34 = null;
    queryLoggingService33.rolcForKe(kernelTransaction34);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery36 = null;
    queryLoggingService33.faleForExTh(executingQuery36, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    java.lang.Throwable throwable40 = null;
    queryLoggingService33.faleForExTh(executingQuery39, throwable40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    java.lang.Throwable throwable43 = null;
    queryLoggingService33.faleForExTh(executingQuery42, throwable43);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery45 = null;
    queryLoggingService33.faleForExTh(executingQuery45, "hi!");
    boolean boolean48 = queryLoggingServiceExtensionFactory26.equals(
        (java.lang.Object) executingQuery45);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory49 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory50 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean52 = queryLoggingServiceExtensionFactory50.equals((java.lang.Object) (-1L));
    boolean boolean53 = queryLoggingServiceExtensionFactory49.equals((java.lang.Object) boolean52);
    java.lang.String str54 = queryLoggingServiceExtensionFactory49.toString();
    java.lang.String str55 = queryLoggingServiceExtensionFactory49.toString();
    java.lang.String str56 = queryLoggingServiceExtensionFactory49.toString();
    java.lang.String str57 = queryLoggingServiceExtensionFactory49.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService58 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction59 = null;
    queryLoggingService58.rolcForKe(kernelTransaction59);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction61 = null;
    java.lang.Throwable throwable62 = null;
    queryLoggingService58.rolcForKe(kernelTransaction61, throwable62);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery64 = null;
    queryLoggingService58.faleForExTh(executingQuery64, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction67 = null;
    queryLoggingService58.rolcForKe(kernelTransaction67);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction69 = null;
    queryLoggingService58.rolcForKe(kernelTransaction69);
    java.lang.Class<?> wildcardClass71 = queryLoggingService58.getClass();
    boolean boolean72 = queryLoggingServiceExtensionFactory49.equals(
        (java.lang.Object) wildcardClass71);
    java.lang.String str73 = queryLoggingServiceExtensionFactory49.toString();
    boolean boolean74 = queryLoggingServiceExtensionFactory26.equals((java.lang.Object) str73);
    java.lang.String str75 = queryLoggingServiceExtensionFactory26.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService76 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction77 = null;
    java.lang.Throwable throwable78 = null;
    queryLoggingService76.rolcForKe(kernelTransaction77, throwable78);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction80 = null;
    queryLoggingService76.comForKe(kernelTransaction80);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction82 = null;
    queryLoggingService76.rolcForKe(kernelTransaction82);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction84 = null;
    queryLoggingService76.rolcForKe(kernelTransaction84);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction86 = null;
    queryLoggingService76.comForKe(kernelTransaction86);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery88 = null;
    queryLoggingService76.strForEx(executingQuery88);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction90 = null;
    java.lang.Throwable throwable91 = null;
    queryLoggingService76.rolcForKe(kernelTransaction90, throwable91);
    boolean boolean93 = queryLoggingServiceExtensionFactory26.equals(
        (java.lang.Object) kernelTransaction90);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(queryLoggingService12);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertEquals(
        "'" + str29 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str29, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    org.junit.Assert.assertEquals("'" + str31 + "' != '" + "query-logging" + "'", str31,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str32 + "' != '" + "query-logging" + "'", str32,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService33);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    org.junit.Assert.assertEquals(
        "'" + str54 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str54, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str55 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str55, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str56 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str56, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str57 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str57, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService58);
    org.junit.Assert.assertNotNull(wildcardClass71);
    org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    org.junit.Assert.assertEquals(
        "'" + str73 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str73, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    org.junit.Assert.assertEquals("'" + str75 + "' != '" + "query-logging" + "'", str75,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService76);
    org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
  }

  @Test
  public void test2659() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2659");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService10 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService10.strForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService10.faleForExTh(executingQuery13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService10.rolcForKe(kernelTransaction16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService10.comForKe(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService10.strForEx(executingQuery21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService10.strForEx(executingQuery23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService10.faleForExTh(executingQuery25,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService10.rolcForKe(kernelTransaction28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryLoggingService10.strForEx(executingQuery30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService10.sucsForEx(executingQuery32);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery32);
    java.lang.String str35 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str36 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService37 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery38 = null;
    queryLoggingService37.strForEx(executingQuery38);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery40 = null;
    java.lang.Throwable throwable41 = null;
    queryLoggingService37.faleForExTh(executingQuery40, throwable41);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction43 = null;
    java.lang.Throwable throwable44 = null;
    queryLoggingService37.rolcForKe(kernelTransaction43, throwable44);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery46 = null;
    queryLoggingService37.faleForExTh(executingQuery46, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery49 = null;
    queryLoggingService37.sucsForEx(executingQuery49);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery51 = null;
    queryLoggingService37.faleForExTh(executingQuery51, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction54 = null;
    queryLoggingService37.comForKe(kernelTransaction54);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery56 = null;
    queryLoggingService37.sucsForEx(executingQuery56);
    boolean boolean58 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService37);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str6, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService10);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertEquals(
        "'" + str35 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str35, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str36 + "' != '" + "query-logging" + "'", str36,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService37);
    org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
  }

  @Test
  public void test2660() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2660");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.strForEx(executingQuery17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.strForEx(kernelTransaction21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.faleForExTh(executingQuery23, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService0.strForEx(executingQuery26);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2661() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2661");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    java.lang.Class<?> wildcardClass21 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass21);
  }

  @Test
  public void test2662() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2662");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj9 = new java.lang.Object();
    java.lang.Class<?> wildcardClass10 = obj9.getClass();
    boolean boolean11 = queryLoggingServiceExtensionFactory0.equals(obj9);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory12 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory13 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean15 = queryLoggingServiceExtensionFactory13.equals((java.lang.Object) (-1L));
    boolean boolean16 = queryLoggingServiceExtensionFactory12.equals((java.lang.Object) boolean15);
    java.lang.String str17 = queryLoggingServiceExtensionFactory12.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService18 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService18.strForEx(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService18.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService18.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService18.faleForExTh(executingQuery27, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryLoggingService18.strForEx(executingQuery30);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction32 = null;
    queryLoggingService18.strForEx(kernelTransaction32);
    boolean boolean34 = queryLoggingServiceExtensionFactory12.equals(
        (java.lang.Object) queryLoggingService18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction35 = null;
    queryLoggingService18.comForKe(kernelTransaction35);
    boolean boolean37 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery38 = null;
    java.lang.Throwable throwable39 = null;
    queryLoggingService18.faleForExTh(executingQuery38, throwable39);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    org.junit.Assert.assertEquals(
        "'" + str17 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str17, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService18);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
  }

  @Test
  public void test2663() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2663");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.faleForExTh(executingQuery1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2664() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2664");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.strForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.faleForExTh(executingQuery22, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService0.strForEx(kernelTransaction25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService0.faleForExTh(executingQuery27, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryLoggingService0.strForEx(executingQuery30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService0.sucsForEx(executingQuery32);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2665() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2665");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean9 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory10 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str11 = queryLoggingServiceExtensionFactory10.toString();
    boolean boolean12 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory10);
    boolean boolean13 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    java.lang.Object obj14 = null;
    boolean boolean15 = queryLoggingServiceExtensionFactory0.equals(obj14);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory16 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory17 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean19 = queryLoggingServiceExtensionFactory17.equals((java.lang.Object) (-1L));
    boolean boolean20 = queryLoggingServiceExtensionFactory16.equals((java.lang.Object) boolean19);
    boolean boolean22 = queryLoggingServiceExtensionFactory16.equals((java.lang.Object) 0L);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory23 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory24 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean26 = queryLoggingServiceExtensionFactory24.equals((java.lang.Object) (-1L));
    boolean boolean27 = queryLoggingServiceExtensionFactory23.equals((java.lang.Object) boolean26);
    java.lang.Object obj28 = new java.lang.Object();
    boolean boolean29 = queryLoggingServiceExtensionFactory23.equals(obj28);
    java.lang.String str30 = queryLoggingServiceExtensionFactory23.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService31 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService31.strForEx(executingQuery32);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    java.lang.Throwable throwable35 = null;
    queryLoggingService31.faleForExTh(executingQuery34, throwable35);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction37 = null;
    java.lang.Throwable throwable38 = null;
    queryLoggingService31.rolcForKe(kernelTransaction37, throwable38);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    queryLoggingService31.comForKe(kernelTransaction40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    queryLoggingService31.strForEx(executingQuery42);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    java.lang.Throwable throwable45 = null;
    queryLoggingService31.rolcForKe(kernelTransaction44, throwable45);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction47 = null;
    queryLoggingService31.comForKe(kernelTransaction47);
    boolean boolean49 = queryLoggingServiceExtensionFactory23.equals(
        (java.lang.Object) queryLoggingService31);
    boolean boolean50 = queryLoggingServiceExtensionFactory16.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory23);
    boolean boolean51 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory23);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService52 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction53 = null;
    java.lang.Throwable throwable54 = null;
    queryLoggingService52.rolcForKe(kernelTransaction53, throwable54);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction56 = null;
    queryLoggingService52.comForKe(kernelTransaction56);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery58 = null;
    queryLoggingService52.sucsForEx(executingQuery58);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction60 = null;
    java.lang.Throwable throwable61 = null;
    queryLoggingService52.rolcForKe(kernelTransaction60, throwable61);
    boolean boolean63 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService52);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction64 = null;
    queryLoggingService52.rolcForKe(kernelTransaction64);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery66 = null;
    queryLoggingService52.strForEx(executingQuery66);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertEquals("'" + str30 + "' != '" + "query-logging" + "'", str30,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService31);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    org.junit.Assert.assertNotNull(queryLoggingService52);
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
  }

  @Test
  public void test2666() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2666");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.comForKe(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.strForEx(executingQuery17);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2667() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2667");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str2 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService3 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService3.faleForExTh(executingQuery4,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    queryLoggingService3.faleForExTh(executingQuery7,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService3.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService3.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService3.faleForExTh(executingQuery14,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory18 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean20 = queryLoggingServiceExtensionFactory18.equals((java.lang.Object) (short) 1);
    java.lang.String str21 = queryLoggingServiceExtensionFactory18.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService22 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService22.strForEx(executingQuery23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService22.faleForExTh(executingQuery25, throwable26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService22.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService22.comForKe(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService22.strForEx(executingQuery33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService22.strForEx(executingQuery35);
    boolean boolean37 = queryLoggingServiceExtensionFactory18.equals(
        (java.lang.Object) executingQuery35);
    java.lang.Class<?> wildcardClass38 = queryLoggingServiceExtensionFactory18.getClass();
    boolean boolean39 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) wildcardClass38);
    java.lang.String str40 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str41 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str2, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService3);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertEquals("'" + str21 + "' != '" + "query-logging" + "'", str21,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService22);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertNotNull(wildcardClass38);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertEquals("'" + str40 + "' != '" + "query-logging" + "'", str40,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str41 + "' != '" + "query-logging" + "'", str41,
        "query-logging");
  }

  @Test
  public void test2668() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2668");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory8 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean10 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) (-1L));
    boolean boolean11 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) boolean10);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService12 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService12.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService12.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService12.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService12.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService12.strForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) executingQuery22);
    boolean boolean25 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory26 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean28 = queryLoggingServiceExtensionFactory26.equals((java.lang.Object) (short) 1);
    java.lang.String str29 = queryLoggingServiceExtensionFactory26.toString();
    boolean boolean30 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory26);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService31 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService31.strForEx(executingQuery32);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    java.lang.Throwable throwable35 = null;
    queryLoggingService31.faleForExTh(executingQuery34, throwable35);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction37 = null;
    java.lang.Throwable throwable38 = null;
    queryLoggingService31.rolcForKe(kernelTransaction37, throwable38);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery40 = null;
    queryLoggingService31.faleForExTh(executingQuery40, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService31.sucsForEx(executingQuery43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    queryLoggingService31.comForKe(kernelTransaction45);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    queryLoggingService31.strForEx(executingQuery47);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery49 = null;
    queryLoggingService31.strForEx(executingQuery49);
    boolean boolean51 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery49);
    java.lang.String str52 = queryLoggingServiceExtensionFactory0.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext53 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies54 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle55 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext53, queryLoggingServiceDependencies54);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(queryLoggingService12);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertEquals(
        "'" + str29 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str29, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    org.junit.Assert.assertNotNull(queryLoggingService31);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    org.junit.Assert.assertEquals(
        "'" + str52 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str52, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test2669() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2669");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 1);
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService4 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    queryLoggingService4.strForEx(executingQuery5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService4.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService4.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService4.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService4.strForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService4.strForEx(executingQuery17);
    boolean boolean19 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery17);
    java.lang.String str20 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str21 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str22 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str23 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str24 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str25 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str26 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService27 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService27.rolcForKe(kernelTransaction28);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    java.lang.Throwable throwable31 = null;
    queryLoggingService27.rolcForKe(kernelTransaction30, throwable31);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    java.lang.Throwable throwable34 = null;
    queryLoggingService27.rolcForKe(kernelTransaction33, throwable34);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService27.faleForExTh(executingQuery36, throwable37);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction39 = null;
    queryLoggingService27.rolcForKe(kernelTransaction39);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction41 = null;
    queryLoggingService27.rolcForKe(kernelTransaction41);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService27.strForEx(executingQuery43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    queryLoggingService27.comForKe(kernelTransaction45);
    boolean boolean47 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService27);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "query-logging" + "'", str3,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService4);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "query-logging" + "'", str20,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str21 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str21, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str22 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str22, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "query-logging" + "'", str23,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "query-logging" + "'", str24,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str25 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str25, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "query-logging" + "'", str26,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService27);
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
  }

  @Test
  public void test2670() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2670");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.strForEx(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23, throwable24);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    queryLoggingService0.comForKe(kernelTransaction26);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2671() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2671");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService2 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService2.rolcForKe(kernelTransaction3, throwable4);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable4);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService9 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService9.rolcForKe(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService9.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService9.rolcForKe(kernelTransaction15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService9.comForKe(kernelTransaction18);
    boolean boolean20 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService9.faleForExTh(executingQuery21, throwable22);
    java.lang.Class<?> wildcardClass24 = queryLoggingService9.getClass();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService2);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService9);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertNotNull(wildcardClass24);
  }

  @Test
  public void test2672() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2672");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.strForEx(executingQuery12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.comForKe(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16, throwable17);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2673() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2673");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.strForEx(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.strForEx(kernelTransaction24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2674() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2674");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17, throwable18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2675() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2675");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.sucsForEx(executingQuery11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.sucsForEx(executingQuery17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.strForEx(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.strForEx(kernelTransaction23);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2676() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2676");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.strForEx(executingQuery23);
    java.lang.Class<?> wildcardClass25 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass25);
  }

  @Test
  public void test2677() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2677");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.faleForExTh(executingQuery16,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.strForEx(kernelTransaction24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2678() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2678");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.strForEx(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.sucsForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.faleForExTh(executingQuery13, "hi!");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2679() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2679");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory8 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean10 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) (-1L));
    boolean boolean11 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) boolean10);
    java.lang.Object obj12 = new java.lang.Object();
    boolean boolean13 = queryLoggingServiceExtensionFactory7.equals(obj12);
    java.lang.String str14 = queryLoggingServiceExtensionFactory7.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService15 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService15.strForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService15.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService15.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService15.comForKe(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService15.strForEx(executingQuery26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService15.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService15.comForKe(kernelTransaction31);
    boolean boolean33 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingService15);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    java.lang.String str35 = queryLoggingServiceExtensionFactory7.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory36 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean38 = queryLoggingServiceExtensionFactory36.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory39 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str40 = queryLoggingServiceExtensionFactory39.toString();
    boolean boolean41 = queryLoggingServiceExtensionFactory36.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory39);
    boolean boolean43 = queryLoggingServiceExtensionFactory39.equals((java.lang.Object) 100.0d);
    java.lang.String str44 = queryLoggingServiceExtensionFactory39.toString();
    java.lang.String str45 = queryLoggingServiceExtensionFactory39.getName();
    java.lang.Object obj46 = null;
    boolean boolean47 = queryLoggingServiceExtensionFactory39.equals(obj46);
    java.lang.String str48 = queryLoggingServiceExtensionFactory39.toString();
    java.lang.String str49 = queryLoggingServiceExtensionFactory39.getName();
    java.lang.String str50 = queryLoggingServiceExtensionFactory39.toString();
    java.lang.String str51 = queryLoggingServiceExtensionFactory39.toString();
    java.lang.String str52 = queryLoggingServiceExtensionFactory39.toString();
    boolean boolean53 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) str52);
    java.lang.String str54 = queryLoggingServiceExtensionFactory7.getName();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "query-logging" + "'", str14,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService15);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    org.junit.Assert.assertEquals("'" + str35 + "' != '" + "query-logging" + "'", str35,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    org.junit.Assert.assertEquals(
        "'" + str40 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str40, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertEquals(
        "'" + str44 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str44, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str45 + "' != '" + "query-logging" + "'", str45,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    org.junit.Assert.assertEquals(
        "'" + str48 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str48, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str49 + "' != '" + "query-logging" + "'", str49,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str50 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str50, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str51 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str51, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str52 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str52, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    org.junit.Assert.assertEquals("'" + str54 + "' != '" + "query-logging" + "'", str54,
        "query-logging");
  }

  @Test
  public void test2680() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2680");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.Object obj5 = new java.lang.Object();
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals(obj5);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj11 = null;
    boolean boolean12 = queryLoggingServiceExtensionFactory0.equals(obj11);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext13 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies14 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle15 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext13, queryLoggingServiceDependencies14);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "query-logging" + "'", str10,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
  }

  @Test
  public void test2681() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2681");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.comForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.faleForExTh(executingQuery17, throwable18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.faleForExTh(executingQuery23,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2682() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2682");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService11 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService11.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService11.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService11.faleForExTh(executingQuery17, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService11.rolcForKe(kernelTransaction20, throwable21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService11.rolcForKe(kernelTransaction23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService11.faleForExTh(executingQuery25, throwable26);
    boolean boolean28 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable26);
    java.lang.String str29 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str10, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService11);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertEquals("'" + str29 + "' != '" + "query-logging" + "'", str29,
        "query-logging");
  }

  @Test
  public void test2683() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2683");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.faleForExTh(executingQuery1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.strForEx(kernelTransaction6);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2684() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2684");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.sucsForEx(executingQuery11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.faleForExTh(executingQuery19, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.strForEx(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2685() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2685");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.faleForExTh(executingQuery17, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20, throwable21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.strForEx(kernelTransaction23);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2686() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2686");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.faleForExTh(executingQuery16,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.strForEx(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.sucsForEx(executingQuery23);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2687() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2687");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14, throwable15);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2688() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2688");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2689() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2689");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.strForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.faleForExTh(executingQuery10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.strForEx(executingQuery17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.faleForExTh(executingQuery19, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.faleForExTh(executingQuery22, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService0.faleForExTh(executingQuery25, throwable26);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2690() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2690");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.faleForExTh(executingQuery11, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14, throwable15);
    java.lang.Class<?> wildcardClass17 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass17);
  }

  @Test
  public void test2691() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2691");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6, "", config8,
        path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config18, path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "query-logging",
        config23, path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config28, path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config33, path34);
  }

  @Test
  public void test2692() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2692");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str11 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str12 = queryLoggingServiceExtensionFactory3.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService13 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService13.strForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService13.faleForExTh(executingQuery16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService13.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService13.sucsForEx(executingQuery21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService13.strForEx(kernelTransaction23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService13.faleForExTh(executingQuery25, throwable26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService13.strForEx(kernelTransaction28);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    queryLoggingService13.strForEx(kernelTransaction30);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction32 = null;
    java.lang.Throwable throwable33 = null;
    queryLoggingService13.rolcForKe(kernelTransaction32, throwable33);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction35 = null;
    java.lang.Throwable throwable36 = null;
    queryLoggingService13.rolcForKe(kernelTransaction35, throwable36);
    java.lang.Class<?> wildcardClass38 = queryLoggingService13.getClass();
    boolean boolean39 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) wildcardClass38);
    java.lang.String str40 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str41 = queryLoggingServiceExtensionFactory3.getName();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "query-logging" + "'", str10,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "query-logging" + "'", str11,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "query-logging" + "'", str12,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService13);
    org.junit.Assert.assertNotNull(wildcardClass38);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertEquals(
        "'" + str40 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str40, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str41 + "' != '" + "query-logging" + "'", str41,
        "query-logging");
  }

  @Test
  public void test2693() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2693");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.sucsForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.faleForExTh(executingQuery17, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.strForEx(kernelTransaction23);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2694() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2694");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService5.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService5.strForEx(executingQuery15);
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery15);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService18 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService18.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService18.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService18.faleForExTh(executingQuery24, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService18.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService18.faleForExTh(executingQuery29, throwable30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService18.sucsForEx(executingQuery32);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService18);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService35 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService35.rolcForKe(kernelTransaction36, throwable37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    java.lang.Throwable throwable40 = null;
    queryLoggingService35.faleForExTh(executingQuery39, throwable40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    java.lang.Throwable throwable43 = null;
    queryLoggingService35.faleForExTh(executingQuery42, throwable43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    queryLoggingService35.strForEx(kernelTransaction45);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    java.lang.Throwable throwable48 = null;
    queryLoggingService35.faleForExTh(executingQuery47, throwable48);
    java.lang.Class<?> wildcardClass50 = queryLoggingService35.getClass();
    boolean boolean51 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) wildcardClass50);
    java.lang.String str52 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str53 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str54 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str55 = queryLoggingServiceExtensionFactory0.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext56 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies57 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle58 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext56, queryLoggingServiceDependencies57);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(queryLoggingService18);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertNotNull(queryLoggingService35);
    org.junit.Assert.assertNotNull(wildcardClass50);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    org.junit.Assert.assertEquals("'" + str52 + "' != '" + "query-logging" + "'", str52,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str53 + "' != '" + "query-logging" + "'", str53,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str54 + "' != '" + "query-logging" + "'", str54,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str55 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str55, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test2695() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2695");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.comForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.sucsForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.faleForExTh(executingQuery13, throwable14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.faleForExTh(executingQuery16, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.strForEx(executingQuery19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.strForEx(kernelTransaction24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2696() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2696");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.faleForExTh(executingQuery16, throwable17);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2697() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2697");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.faleForExTh(executingQuery23, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    java.lang.Throwable throwable27 = null;
    queryLoggingService0.rolcForKe(kernelTransaction26, throwable27);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    queryLoggingService0.comForKe(kernelTransaction29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService0.strForEx(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService0.strForEx(executingQuery33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    java.lang.Throwable throwable36 = null;
    queryLoggingService0.faleForExTh(executingQuery35, throwable36);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2698() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2698");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.strForEx(executingQuery17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.faleForExTh(executingQuery19, throwable20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService0.faleForExTh(executingQuery22, throwable23);
    java.lang.Class<?> wildcardClass25 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass25);
  }

  @Test
  public void test2699() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2699");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService4 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction5 = null;
    queryLoggingService4.rolcForKe(kernelTransaction5);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction7 = null;
    queryLoggingService4.strForEx(kernelTransaction7);
    java.lang.Class<?> wildcardClass9 = queryLoggingService4.getClass();
    boolean boolean10 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService4);
    java.lang.String str11 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str12 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str3, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService4);
    org.junit.Assert.assertNotNull(wildcardClass9);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "query-logging" + "'", str12,
        "query-logging");
  }

  @Test
  public void test2700() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2700");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config3, path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "", config13,
        path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "query-logging",
        config23, path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "query-logging",
        config28, path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31, "query-logging",
        config33, path34);
  }

  @Test
  public void test2701() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2701");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6, "", config8,
        path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "query-logging",
        config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config18, path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "", config23,
        path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config28, path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config33, path34);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction36 = null;
    org.neo4j.configuration.Config config38 = null;
    java.nio.file.Path path39 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction36, "", config38,
        path39);
  }

  @Test
  public void test2702() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2702");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "query-logging",
        config18, path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "hi!", config23,
        path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "query-logging",
        config28, path29);
    java.lang.Class<?> wildcardClass31 = diagnosticsOfflineReportProviderQueryLoggingImpl0.getClass();
    org.junit.Assert.assertNotNull(wildcardClass31);
  }

  @Test
  public void test2703() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2703");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.comForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.faleForExTh(executingQuery22, "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2704() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2704");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18, throwable19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2705() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2705");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.strForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.sucsForEx(executingQuery10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.strForEx(executingQuery12);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2706() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2706");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.sucsForEx(executingQuery17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.faleForExTh(executingQuery22, "hi!");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2707() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2707");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6, "", config8,
        path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config18, path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "query-logging",
        config23, path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config28, path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31, "", config33,
        path34);
  }

  @Test
  public void test2708() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2708");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12, "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2709() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2709");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str11 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str12 = queryLoggingServiceExtensionFactory3.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService13 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService13.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService13.comForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService13.faleForExTh(executingQuery19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService13.comForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService13.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService13.comForKe(kernelTransaction27);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    queryLoggingService13.strForEx(kernelTransaction29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService13.rolcForKe(kernelTransaction31);
    java.lang.Class<?> wildcardClass33 = queryLoggingService13.getClass();
    boolean boolean34 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService13);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "query-logging" + "'", str10,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "query-logging" + "'", str11,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "query-logging" + "'", str12,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService13);
    org.junit.Assert.assertNotNull(wildcardClass33);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
  }

  @Test
  public void test2710() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2710");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.faleForExTh(executingQuery16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.comForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.comForKe(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.comForKe(kernelTransaction23);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2711() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2711");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.comForKe(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService0.faleForExTh(executingQuery25, throwable26);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2712() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2712");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.comForKe(kernelTransaction14);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2713() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2713");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.strForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    java.lang.Class<?> wildcardClass18 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass18);
  }

  @Test
  public void test2714() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2714");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.faleForExTh(executingQuery23, throwable24);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    java.lang.Throwable throwable27 = null;
    queryLoggingService0.rolcForKe(kernelTransaction26, throwable27);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    queryLoggingService0.strForEx(kernelTransaction29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    java.lang.Throwable throwable32 = null;
    queryLoggingService0.rolcForKe(kernelTransaction31, throwable32);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    queryLoggingService0.faleForExTh(executingQuery34,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService0.sucsForEx(executingQuery37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService0.faleForExTh(executingQuery39,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2715() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2715");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 1);
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService4 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    queryLoggingService4.strForEx(executingQuery5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService4.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService4.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService4.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService4.strForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService4.strForEx(executingQuery17);
    boolean boolean19 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery17);
    java.lang.String str20 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService21 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService21.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService21.faleForExTh(executingQuery24, "");
    java.lang.Class<?> wildcardClass27 = queryLoggingService21.getClass();
    boolean boolean28 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService21);
    java.lang.String str29 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory30 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str31 = queryLoggingServiceExtensionFactory30.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService32 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    java.lang.Throwable throwable34 = null;
    queryLoggingService32.rolcForKe(kernelTransaction33, throwable34);
    boolean boolean36 = queryLoggingServiceExtensionFactory30.equals(
        (java.lang.Object) throwable34);
    java.lang.String str37 = queryLoggingServiceExtensionFactory30.toString();
    java.lang.String str38 = queryLoggingServiceExtensionFactory30.toString();
    java.lang.String str39 = queryLoggingServiceExtensionFactory30.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService40 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction41 = null;
    queryLoggingService40.rolcForKe(kernelTransaction41);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction43 = null;
    java.lang.Throwable throwable44 = null;
    queryLoggingService40.rolcForKe(kernelTransaction43, throwable44);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction46 = null;
    queryLoggingService40.rolcForKe(kernelTransaction46);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery48 = null;
    queryLoggingService40.sucsForEx(executingQuery48);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction50 = null;
    queryLoggingService40.strForEx(kernelTransaction50);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction52 = null;
    java.lang.Throwable throwable53 = null;
    queryLoggingService40.rolcForKe(kernelTransaction52, throwable53);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    java.lang.Throwable throwable56 = null;
    queryLoggingService40.rolcForKe(kernelTransaction55, throwable56);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction58 = null;
    queryLoggingService40.rolcForKe(kernelTransaction58);
    boolean boolean60 = queryLoggingServiceExtensionFactory30.equals(
        (java.lang.Object) kernelTransaction58);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory61 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory62 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean64 = queryLoggingServiceExtensionFactory62.equals((java.lang.Object) (-1L));
    boolean boolean65 = queryLoggingServiceExtensionFactory61.equals((java.lang.Object) boolean64);
    java.lang.Object obj66 = new java.lang.Object();
    boolean boolean67 = queryLoggingServiceExtensionFactory61.equals(obj66);
    java.lang.String str68 = queryLoggingServiceExtensionFactory61.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService69 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery70 = null;
    queryLoggingService69.strForEx(executingQuery70);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery72 = null;
    java.lang.Throwable throwable73 = null;
    queryLoggingService69.faleForExTh(executingQuery72, throwable73);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction75 = null;
    java.lang.Throwable throwable76 = null;
    queryLoggingService69.rolcForKe(kernelTransaction75, throwable76);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction78 = null;
    queryLoggingService69.comForKe(kernelTransaction78);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery80 = null;
    queryLoggingService69.strForEx(executingQuery80);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction82 = null;
    java.lang.Throwable throwable83 = null;
    queryLoggingService69.rolcForKe(kernelTransaction82, throwable83);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction85 = null;
    queryLoggingService69.comForKe(kernelTransaction85);
    boolean boolean87 = queryLoggingServiceExtensionFactory61.equals(
        (java.lang.Object) queryLoggingService69);
    java.lang.Class<?> wildcardClass88 = queryLoggingService69.getClass();
    boolean boolean89 = queryLoggingServiceExtensionFactory30.equals(
        (java.lang.Object) wildcardClass88);
    boolean boolean90 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) wildcardClass88);
    java.lang.Class<?> wildcardClass91 = queryLoggingServiceExtensionFactory0.getClass();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "query-logging" + "'", str3,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService4);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "query-logging" + "'", str20,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService21);
    org.junit.Assert.assertNotNull(wildcardClass27);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertEquals(
        "'" + str29 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str29, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str31 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str31, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService32);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertEquals(
        "'" + str37 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str37, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str38 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str38, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str39 + "' != '" + "query-logging" + "'", str39,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService40);
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    org.junit.Assert.assertEquals("'" + str68 + "' != '" + "query-logging" + "'", str68,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService69);
    org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    org.junit.Assert.assertNotNull(wildcardClass88);
    org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    org.junit.Assert.assertNotNull(wildcardClass91);
  }

  @Test
  public void test2716() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2716");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.comForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.sucsForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.faleForExTh(executingQuery17, throwable18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2717() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2717");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Class<?> wildcardClass9 = queryLoggingServiceExtensionFactory0.getClass();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str6, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass9);
  }

  @Test
  public void test2718() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2718");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.Class<?> wildcardClass10 = queryLoggingServiceExtensionFactory0.getClass();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str6, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str9, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(wildcardClass10);
  }

  @Test
  public void test2719() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2719");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.faleForExTh(executingQuery16,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService0.faleForExTh(executingQuery24, throwable25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService0.strForEx(kernelTransaction27);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2720() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2720");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.strForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.faleForExTh(executingQuery17,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2721() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2721");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.faleForExTh(executingQuery21, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService0.faleForExTh(executingQuery24, throwable25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    java.lang.Throwable throwable28 = null;
    queryLoggingService0.rolcForKe(kernelTransaction27, throwable28);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    java.lang.Throwable throwable31 = null;
    queryLoggingService0.rolcForKe(kernelTransaction30, throwable31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService0.strForEx(executingQuery33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService0.faleForExTh(executingQuery35, "hi!");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2722() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2722");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    queryLoggingService0.strForEx(kernelTransaction3);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction5 = null;
    queryLoggingService0.rolcForKe(kernelTransaction5);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.rolcForKe(kernelTransaction7, throwable8);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2723() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2723");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.comForKe(kernelTransaction21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.sucsForEx(executingQuery23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService0.strForEx(executingQuery25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    java.lang.Throwable throwable28 = null;
    queryLoggingService0.faleForExTh(executingQuery27, throwable28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    java.lang.Throwable throwable31 = null;
    queryLoggingService0.faleForExTh(executingQuery30, throwable31);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    java.lang.Throwable throwable34 = null;
    queryLoggingService0.rolcForKe(kernelTransaction33, throwable34);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2724() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2724");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.comForKe(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.strForEx(executingQuery12);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2725() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2725");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.faleForExTh(executingQuery12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.strForEx(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.comForKe(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.faleForExTh(executingQuery21, throwable22);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2726() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2726");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.strForEx(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService0.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService0.strForEx(executingQuery27);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2727() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2727");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.comForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.strForEx(executingQuery15);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2728() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2728");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.strForEx(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.faleForExTh(executingQuery11, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.strForEx(kernelTransaction14);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2729() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2729");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15, throwable16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18, "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2730() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2730");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str11 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str12 = queryLoggingServiceExtensionFactory3.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory13 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory14 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean16 = queryLoggingServiceExtensionFactory14.equals((java.lang.Object) (-1L));
    boolean boolean17 = queryLoggingServiceExtensionFactory13.equals((java.lang.Object) boolean16);
    java.lang.String str18 = queryLoggingServiceExtensionFactory13.toString();
    java.lang.String str19 = queryLoggingServiceExtensionFactory13.getName();
    java.lang.String str20 = queryLoggingServiceExtensionFactory13.getName();
    boolean boolean21 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory13);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService22 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService22.strForEx(executingQuery23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService22.faleForExTh(executingQuery25, throwable26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService22.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryLoggingService22.faleForExTh(executingQuery31, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    queryLoggingService22.sucsForEx(executingQuery34);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService22.faleForExTh(executingQuery36, throwable37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService22.strForEx(executingQuery39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    java.lang.Throwable throwable42 = null;
    queryLoggingService22.faleForExTh(executingQuery41, throwable42);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    java.lang.Throwable throwable45 = null;
    queryLoggingService22.rolcForKe(kernelTransaction44, throwable45);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction47 = null;
    queryLoggingService22.rolcForKe(kernelTransaction47);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery49 = null;
    queryLoggingService22.sucsForEx(executingQuery49);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery51 = null;
    java.lang.Throwable throwable52 = null;
    queryLoggingService22.faleForExTh(executingQuery51, throwable52);
    boolean boolean54 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery51);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "query-logging" + "'", str10,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "query-logging" + "'", str11,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "query-logging" + "'", str12,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertEquals(
        "'" + str18 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str18, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "query-logging" + "'", str19,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "query-logging" + "'", str20,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    org.junit.Assert.assertNotNull(queryLoggingService22);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
  }

  @Test
  public void test2731() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2731");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.strForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.faleForExTh(executingQuery22, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService0.strForEx(kernelTransaction25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService0.strForEx(executingQuery27);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    queryLoggingService0.comForKe(kernelTransaction29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    java.lang.Throwable throwable32 = null;
    queryLoggingService0.rolcForKe(kernelTransaction31, throwable32);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction34 = null;
    queryLoggingService0.comForKe(kernelTransaction34);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery36 = null;
    queryLoggingService0.strForEx(executingQuery36);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2732() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2732");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.faleForExTh(executingQuery23, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService0.faleForExTh(executingQuery26,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService0.faleForExTh(executingQuery29, throwable30);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction32 = null;
    queryLoggingService0.rolcForKe(kernelTransaction32);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2733() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2733");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.strForEx(executingQuery17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.strForEx(kernelTransaction21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.faleForExTh(executingQuery23, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    queryLoggingService0.strForEx(kernelTransaction26);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2734() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2734");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.strForEx(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.faleForExTh(executingQuery16, throwable17);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2735() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2735");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.strForEx(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.comForKe(kernelTransaction23);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2736() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2736");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory8 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory9 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean11 = queryLoggingServiceExtensionFactory9.equals((java.lang.Object) (-1L));
    boolean boolean12 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) boolean11);
    java.lang.String str13 = queryLoggingServiceExtensionFactory8.toString();
    java.lang.String str14 = queryLoggingServiceExtensionFactory8.getName();
    boolean boolean16 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) 0L);
    java.lang.String str17 = queryLoggingServiceExtensionFactory8.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService18 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService18.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService18.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService18.rolcForKe(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService18.sucsForEx(executingQuery26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService18.strForEx(kernelTransaction28);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    java.lang.Throwable throwable31 = null;
    queryLoggingService18.rolcForKe(kernelTransaction30, throwable31);
    boolean boolean33 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) throwable31);
    boolean boolean34 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) boolean33);
    java.lang.String str35 = queryLoggingServiceExtensionFactory3.getName();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    org.junit.Assert.assertEquals(
        "'" + str13 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str13, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "query-logging" + "'", str14,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    org.junit.Assert.assertEquals(
        "'" + str17 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str17, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService18);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertEquals("'" + str35 + "' != '" + "query-logging" + "'", str35,
        "query-logging");
  }

  @Test
  public void test2737() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2737");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.strForEx(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService0.faleForExTh(executingQuery24, throwable25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService0.rolcForKe(kernelTransaction27);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2738() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2738");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.comForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.strForEx(kernelTransaction11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.strForEx(executingQuery15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.strForEx(kernelTransaction17);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2739() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2739");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService6 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    queryLoggingService6.strForEx(executingQuery7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService6.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService6.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService6.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService6.strForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService6.strForEx(kernelTransaction20);
    boolean boolean22 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService6);
    java.lang.String str23 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService24 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService24.rolcForKe(kernelTransaction25, throwable26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService24.sucsForEx(executingQuery28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryLoggingService24.faleForExTh(executingQuery30, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    java.lang.Throwable throwable34 = null;
    queryLoggingService24.faleForExTh(executingQuery33, throwable34);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    queryLoggingService24.comForKe(kernelTransaction36);
    boolean boolean38 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService24);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService6);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertEquals(
        "'" + str23 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str23, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService24);
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
  }

  @Test
  public void test2740() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2740");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.comForKe(kernelTransaction18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2741() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2741");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str11 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str12 = queryLoggingServiceExtensionFactory0.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext13 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies14 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle15 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext13, queryLoggingServiceDependencies14);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "query-logging" + "'", str10,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str12 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str12, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test2742() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2742");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.comForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2743() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2743");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23, throwable24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService0.faleForExTh(executingQuery26, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService0.faleForExTh(executingQuery29, "");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2744() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2744");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory8 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean10 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) (-1L));
    boolean boolean11 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) boolean10);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService12 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService12.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService12.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService12.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService12.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService12.strForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) executingQuery22);
    boolean boolean25 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    java.lang.String str26 = queryLoggingServiceExtensionFactory7.getName();
    java.lang.String str27 = queryLoggingServiceExtensionFactory7.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService28 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    queryLoggingService28.rolcForKe(kernelTransaction29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService28.strForEx(kernelTransaction31);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    queryLoggingService28.strForEx(kernelTransaction33);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction35 = null;
    java.lang.Throwable throwable36 = null;
    queryLoggingService28.rolcForKe(kernelTransaction35, throwable36);
    boolean boolean38 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingService28);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService39 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    java.lang.Throwable throwable41 = null;
    queryLoggingService39.rolcForKe(kernelTransaction40, throwable41);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService39.sucsForEx(executingQuery43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    queryLoggingService39.rolcForKe(kernelTransaction45);
    java.lang.Class<?> wildcardClass47 = queryLoggingService39.getClass();
    boolean boolean48 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) wildcardClass47);
    java.lang.String str49 = queryLoggingServiceExtensionFactory7.toString();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(queryLoggingService12);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "query-logging" + "'", str26,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "query-logging" + "'", str27,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService28);
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    org.junit.Assert.assertNotNull(queryLoggingService39);
    org.junit.Assert.assertNotNull(wildcardClass47);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    org.junit.Assert.assertEquals(
        "'" + str49 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str49, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test2745() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2745");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService8.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService8.sucsForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery22);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService25 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService25.strForEx(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService25.faleForExTh(executingQuery28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService25.rolcForKe(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService25.sucsForEx(executingQuery33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService25.strForEx(executingQuery35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService25.sucsForEx(executingQuery37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService25.sucsForEx(executingQuery39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    queryLoggingService25.sucsForEx(executingQuery41);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService25.strForEx(executingQuery43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    java.lang.Throwable throwable46 = null;
    queryLoggingService25.rolcForKe(kernelTransaction45, throwable46);
    boolean boolean48 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService25);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService49 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery50 = null;
    queryLoggingService49.strForEx(executingQuery50);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery52 = null;
    java.lang.Throwable throwable53 = null;
    queryLoggingService49.faleForExTh(executingQuery52, throwable53);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    java.lang.Throwable throwable56 = null;
    queryLoggingService49.rolcForKe(kernelTransaction55, throwable56);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery58 = null;
    queryLoggingService49.faleForExTh(executingQuery58, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction61 = null;
    java.lang.Throwable throwable62 = null;
    queryLoggingService49.rolcForKe(kernelTransaction61, throwable62);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction64 = null;
    queryLoggingService49.comForKe(kernelTransaction64);
    boolean boolean66 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) kernelTransaction64);
    java.lang.String str67 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str68 = queryLoggingServiceExtensionFactory3.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext69 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies70 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle71 = queryLoggingServiceExtensionFactory3.newInstance(
          extensionContext69, queryLoggingServiceDependencies70);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(queryLoggingService25);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    org.junit.Assert.assertNotNull(queryLoggingService49);
    org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    org.junit.Assert.assertEquals("'" + str67 + "' != '" + "query-logging" + "'", str67,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str68 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str68, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test2746() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2746");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.strForEx(executingQuery17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.strForEx(kernelTransaction24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2747() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2747");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.sucsForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.comForKe(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.comForKe(kernelTransaction17);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2748() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2748");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean9 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory10 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str11 = queryLoggingServiceExtensionFactory10.toString();
    boolean boolean12 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory10);
    boolean boolean13 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    java.lang.String str14 = queryLoggingServiceExtensionFactory7.getName();
    java.lang.String str15 = queryLoggingServiceExtensionFactory7.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService16 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService16.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService16.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService16.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService16.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService16.faleForExTh(executingQuery27, "hi!");
    boolean boolean30 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingService16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    java.lang.Throwable throwable32 = null;
    queryLoggingService16.rolcForKe(kernelTransaction31, throwable32);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "query-logging" + "'", str14,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str15 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str15, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService16);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
  }

  @Test
  public void test2749() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2749");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6, "", config8,
        path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "query-logging",
        config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config23, path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "hi!", config28,
        path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31, "hi!", config33,
        path34);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction36 = null;
    org.neo4j.configuration.Config config38 = null;
    java.nio.file.Path path39 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction36,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config38, path39);
  }

  @Test
  public void test2750() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2750");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService5.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService5.strForEx(executingQuery15);
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery15);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService18 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService18.strForEx(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService18.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService18.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService18.comForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService18.faleForExTh(executingQuery29, "");
    boolean boolean32 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) "");
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 'a');
    java.lang.String str35 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService36 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction37 = null;
    queryLoggingService36.rolcForKe(kernelTransaction37);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction39 = null;
    java.lang.Throwable throwable40 = null;
    queryLoggingService36.rolcForKe(kernelTransaction39, throwable40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    queryLoggingService36.faleForExTh(executingQuery42, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    queryLoggingService36.rolcForKe(kernelTransaction45);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction47 = null;
    queryLoggingService36.rolcForKe(kernelTransaction47);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery49 = null;
    java.lang.Throwable throwable50 = null;
    queryLoggingService36.faleForExTh(executingQuery49, throwable50);
    boolean boolean52 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable50);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService53 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction54 = null;
    java.lang.Throwable throwable55 = null;
    queryLoggingService53.rolcForKe(kernelTransaction54, throwable55);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction57 = null;
    queryLoggingService53.comForKe(kernelTransaction57);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction59 = null;
    queryLoggingService53.rolcForKe(kernelTransaction59);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction61 = null;
    queryLoggingService53.comForKe(kernelTransaction61);
    boolean boolean63 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService53);
    java.lang.Class<?> wildcardClass64 = queryLoggingService53.getClass();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(queryLoggingService18);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertEquals(
        "'" + str35 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str35, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService36);
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    org.junit.Assert.assertNotNull(queryLoggingService53);
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    org.junit.Assert.assertNotNull(wildcardClass64);
  }

  @Test
  public void test2751() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2751");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18, "");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2752() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2752");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str4 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext6 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies7 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle8 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext6, queryLoggingServiceDependencies7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "query-logging" + "'", str3,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "query-logging" + "'", str4,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "query-logging" + "'", str5,
        "query-logging");
  }

  @Test
  public void test2753() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2753");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService3 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService3.rolcForKe(kernelTransaction4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService3.rolcForKe(kernelTransaction6, throwable7);
    boolean boolean9 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService3);
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str11 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str12 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str13 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str14 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(queryLoggingService3);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str10, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "query-logging" + "'", str11,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "query-logging" + "'", str12,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str13 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str13, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "query-logging" + "'", str14,
        "query-logging");
  }

  @Test
  public void test2754() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2754");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService10 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService10.strForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService10.faleForExTh(executingQuery13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService10.rolcForKe(kernelTransaction16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService10.comForKe(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService10.strForEx(executingQuery21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService10.strForEx(executingQuery23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService10.faleForExTh(executingQuery25,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService10.rolcForKe(kernelTransaction28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryLoggingService10.strForEx(executingQuery30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService10.sucsForEx(executingQuery32);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery32);
    java.lang.String str35 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str36 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str37 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str6, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService10);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertEquals(
        "'" + str35 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str35, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str36 + "' != '" + "query-logging" + "'", str36,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str37 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str37, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test2755() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2755");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.faleForExTh(executingQuery12, throwable13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.strForEx(executingQuery15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.strForEx(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.faleForExTh(executingQuery21, "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2756() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2756");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.strForEx(executingQuery17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.strForEx(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23, throwable24);
    java.lang.Class<?> wildcardClass26 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass26);
  }

  @Test
  public void test2757() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2757");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.strForEx(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.faleForExTh(executingQuery21, throwable22);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2758() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2758");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 1);
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str4 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService10 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService10.strForEx(executingQuery11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService10.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService10.strForEx(executingQuery15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService10.comForKe(kernelTransaction17);
    boolean boolean19 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction17);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "query-logging" + "'", str3,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "query-logging" + "'", str4,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str9, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService10);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
  }

  @Test
  public void test2759() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2759");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str11 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str12 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str13 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str14 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "query-logging" + "'", str10,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str12 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str12, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "query-logging" + "'", str13,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str14 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str14, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test2760() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2760");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.faleForExTh(executingQuery12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.strForEx(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.faleForExTh(executingQuery22, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService0.faleForExTh(executingQuery25,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2761() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2761");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config3, path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "", config13,
        path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "hi!", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "query-logging",
        config23, path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "", config28,
        path29);
  }

  @Test
  public void test2762() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2762");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.faleForExTh(executingQuery21, throwable22);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2763() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2763");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService5.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService5.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService5.faleForExTh(executingQuery17,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    boolean boolean20 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService21 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService21.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService21.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService21.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService21.sucsForEx(executingQuery29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService21.strForEx(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService21.faleForExTh(executingQuery33,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService21.rolcForKe(kernelTransaction36, throwable37);
    boolean boolean39 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService21);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory40 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory41 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean43 = queryLoggingServiceExtensionFactory41.equals((java.lang.Object) (-1L));
    boolean boolean44 = queryLoggingServiceExtensionFactory40.equals((java.lang.Object) boolean43);
    boolean boolean46 = queryLoggingServiceExtensionFactory40.equals((java.lang.Object) 0L);
    java.lang.String str47 = queryLoggingServiceExtensionFactory40.toString();
    java.lang.String str48 = queryLoggingServiceExtensionFactory40.getName();
    boolean boolean49 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) str48);
    java.lang.String str50 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str51 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService52 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction53 = null;
    queryLoggingService52.rolcForKe(kernelTransaction53);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    java.lang.Throwable throwable56 = null;
    queryLoggingService52.rolcForKe(kernelTransaction55, throwable56);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction58 = null;
    queryLoggingService52.rolcForKe(kernelTransaction58);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery60 = null;
    queryLoggingService52.sucsForEx(executingQuery60);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction62 = null;
    queryLoggingService52.strForEx(kernelTransaction62);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery64 = null;
    queryLoggingService52.faleForExTh(executingQuery64,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery67 = null;
    queryLoggingService52.faleForExTh(executingQuery67, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction70 = null;
    queryLoggingService52.rolcForKe(kernelTransaction70);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction72 = null;
    queryLoggingService52.rolcForKe(kernelTransaction72);
    boolean boolean74 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService52);
    java.lang.String str75 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str76 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str77 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService78 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery79 = null;
    queryLoggingService78.strForEx(executingQuery79);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery81 = null;
    java.lang.Throwable throwable82 = null;
    queryLoggingService78.faleForExTh(executingQuery81, throwable82);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction84 = null;
    queryLoggingService78.rolcForKe(kernelTransaction84);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery86 = null;
    queryLoggingService78.sucsForEx(executingQuery86);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery88 = null;
    queryLoggingService78.strForEx(executingQuery88);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery90 = null;
    queryLoggingService78.sucsForEx(executingQuery90);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery92 = null;
    queryLoggingService78.sucsForEx(executingQuery92);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery94 = null;
    queryLoggingService78.sucsForEx(executingQuery94);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery96 = null;
    java.lang.Throwable throwable97 = null;
    queryLoggingService78.faleForExTh(executingQuery96, throwable97);
    boolean boolean99 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable97);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertNotNull(queryLoggingService21);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    org.junit.Assert.assertEquals(
        "'" + str47 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str47, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str48 + "' != '" + "query-logging" + "'", str48,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertEquals("'" + str50 + "' != '" + "query-logging" + "'", str50,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str51 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str51, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService52);
    org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    org.junit.Assert.assertEquals("'" + str75 + "' != '" + "query-logging" + "'", str75,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str76 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str76, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str77 + "' != '" + "query-logging" + "'", str77,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService78);
    org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
  }

  @Test
  public void test2764() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2764");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.Object obj5 = new java.lang.Object();
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals(obj5);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService8.comForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService8.strForEx(executingQuery19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService8.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService8.comForKe(kernelTransaction24);
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService8);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService27 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService27.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryLoggingService27.sucsForEx(executingQuery31);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    queryLoggingService27.comForKe(kernelTransaction33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService27.faleForExTh(executingQuery35, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction38 = null;
    queryLoggingService27.strForEx(kernelTransaction38);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    java.lang.Throwable throwable41 = null;
    queryLoggingService27.rolcForKe(kernelTransaction40, throwable41);
    boolean boolean43 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction40);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService44 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    queryLoggingService44.rolcForKe(kernelTransaction45);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction47 = null;
    java.lang.Throwable throwable48 = null;
    queryLoggingService44.rolcForKe(kernelTransaction47, throwable48);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction50 = null;
    queryLoggingService44.rolcForKe(kernelTransaction50);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery52 = null;
    queryLoggingService44.sucsForEx(executingQuery52);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery54 = null;
    java.lang.Throwable throwable55 = null;
    queryLoggingService44.faleForExTh(executingQuery54, throwable55);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction57 = null;
    java.lang.Throwable throwable58 = null;
    queryLoggingService44.rolcForKe(kernelTransaction57, throwable58);
    boolean boolean60 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction57);
    java.lang.String str61 = queryLoggingServiceExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext62 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies63 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle64 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext62, queryLoggingServiceDependencies63);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertNotNull(queryLoggingService27);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertNotNull(queryLoggingService44);
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    org.junit.Assert.assertEquals("'" + str61 + "' != '" + "query-logging" + "'", str61,
        "query-logging");
  }

  @Test
  public void test2765() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2765");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.strForEx(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.strForEx(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.faleForExTh(executingQuery20, throwable21);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2766() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2766");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.strForEx(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.faleForExTh(executingQuery13, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2767() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2767");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.faleForExTh(executingQuery11, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.strForEx(executingQuery17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2768() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2768");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.faleForExTh(executingQuery16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.sucsForEx(executingQuery21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService0.rolcForKe(kernelTransaction25, throwable26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService0.strForEx(kernelTransaction28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryLoggingService0.sucsForEx(executingQuery30);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2769() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2769");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.faleForExTh(executingQuery1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.faleForExTh(executingQuery4,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.rolcForKe(kernelTransaction7, throwable8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.sucsForEx(executingQuery15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.strForEx(kernelTransaction17);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2770() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2770");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.faleForExTh(executingQuery16, throwable17);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2771() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2771");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService5.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService5.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService5.faleForExTh(executingQuery17,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    boolean boolean20 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService21 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService21.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService21.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService21.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService21.sucsForEx(executingQuery29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService21.strForEx(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService21.faleForExTh(executingQuery33,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService21.rolcForKe(kernelTransaction36, throwable37);
    boolean boolean39 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService21);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory40 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory41 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean43 = queryLoggingServiceExtensionFactory41.equals((java.lang.Object) (-1L));
    boolean boolean44 = queryLoggingServiceExtensionFactory40.equals((java.lang.Object) boolean43);
    boolean boolean46 = queryLoggingServiceExtensionFactory40.equals((java.lang.Object) 0L);
    java.lang.String str47 = queryLoggingServiceExtensionFactory40.toString();
    java.lang.String str48 = queryLoggingServiceExtensionFactory40.getName();
    boolean boolean49 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) str48);
    java.lang.String str50 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str51 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService52 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction53 = null;
    queryLoggingService52.rolcForKe(kernelTransaction53);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    java.lang.Throwable throwable56 = null;
    queryLoggingService52.rolcForKe(kernelTransaction55, throwable56);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction58 = null;
    queryLoggingService52.rolcForKe(kernelTransaction58);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery60 = null;
    queryLoggingService52.sucsForEx(executingQuery60);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction62 = null;
    queryLoggingService52.strForEx(kernelTransaction62);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery64 = null;
    queryLoggingService52.faleForExTh(executingQuery64,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery67 = null;
    queryLoggingService52.faleForExTh(executingQuery67, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction70 = null;
    queryLoggingService52.rolcForKe(kernelTransaction70);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction72 = null;
    queryLoggingService52.rolcForKe(kernelTransaction72);
    boolean boolean74 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService52);
    java.lang.String str75 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str76 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService77 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction78 = null;
    queryLoggingService77.rolcForKe(kernelTransaction78);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery80 = null;
    queryLoggingService77.faleForExTh(executingQuery80, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery83 = null;
    java.lang.Throwable throwable84 = null;
    queryLoggingService77.faleForExTh(executingQuery83, throwable84);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction86 = null;
    queryLoggingService77.strForEx(kernelTransaction86);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction88 = null;
    queryLoggingService77.rolcForKe(kernelTransaction88);
    boolean boolean90 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService77);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertNotNull(queryLoggingService21);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    org.junit.Assert.assertEquals(
        "'" + str47 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str47, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str48 + "' != '" + "query-logging" + "'", str48,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertEquals("'" + str50 + "' != '" + "query-logging" + "'", str50,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str51 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str51, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService52);
    org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    org.junit.Assert.assertEquals("'" + str75 + "' != '" + "query-logging" + "'", str75,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str76 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str76, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService77);
    org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
  }

  @Test
  public void test2772() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2772");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.faleForExTh(executingQuery11, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.faleForExTh(executingQuery17, throwable18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20, throwable21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.faleForExTh(executingQuery23, throwable24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService0.strForEx(executingQuery26);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2773() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2773");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str11 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str12 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str13 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "query-logging" + "'", str10,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str12 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str12, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str13 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str13, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test2774() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2774");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.strForEx(executingQuery17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.sucsForEx(executingQuery19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.rolcForKe(kernelTransaction21, throwable22);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2775() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2775");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.strForEx(executingQuery9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2776() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2776");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.strForEx(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.strForEx(executingQuery19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2777() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2777");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.faleForExTh(executingQuery12, throwable13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.faleForExTh(executingQuery21, throwable22);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2778() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2778");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.sucsForEx(executingQuery17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService0.faleForExTh(executingQuery26, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    queryLoggingService0.strForEx(kernelTransaction29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    java.lang.Throwable throwable32 = null;
    queryLoggingService0.faleForExTh(executingQuery31, throwable32);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2779() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2779");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.faleForExTh(executingQuery1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.faleForExTh(executingQuery11,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.faleForExTh(executingQuery17, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.sucsForEx(executingQuery20);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2780() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2780");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.comForKe(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.faleForExTh(executingQuery17, throwable18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2781() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2781");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17, throwable18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.comForKe(kernelTransaction20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.faleForExTh(executingQuery22, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService0.comForKe(kernelTransaction25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService0.strForEx(kernelTransaction27);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2782() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2782");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService2 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService2.rolcForKe(kernelTransaction3, throwable4);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable4);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory11 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean13 = queryLoggingServiceExtensionFactory11.equals((java.lang.Object) (short) 1);
    java.lang.String str14 = queryLoggingServiceExtensionFactory11.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService15 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService15.strForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService15.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService15.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService15.comForKe(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService15.strForEx(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService15.strForEx(executingQuery28);
    boolean boolean30 = queryLoggingServiceExtensionFactory11.equals(
        (java.lang.Object) executingQuery28);
    java.lang.String str31 = queryLoggingServiceExtensionFactory11.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService32 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    queryLoggingService32.rolcForKe(kernelTransaction33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService32.faleForExTh(executingQuery35, "");
    java.lang.Class<?> wildcardClass38 = queryLoggingService32.getClass();
    boolean boolean39 = queryLoggingServiceExtensionFactory11.equals(
        (java.lang.Object) queryLoggingService32);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory40 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory41 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean43 = queryLoggingServiceExtensionFactory41.equals((java.lang.Object) (-1L));
    boolean boolean44 = queryLoggingServiceExtensionFactory40.equals((java.lang.Object) boolean43);
    java.lang.String str45 = queryLoggingServiceExtensionFactory40.toString();
    java.lang.String str46 = queryLoggingServiceExtensionFactory40.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory47 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean49 = queryLoggingServiceExtensionFactory47.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory50 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str51 = queryLoggingServiceExtensionFactory50.toString();
    boolean boolean52 = queryLoggingServiceExtensionFactory47.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory50);
    boolean boolean53 = queryLoggingServiceExtensionFactory40.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory47);
    java.lang.String str54 = queryLoggingServiceExtensionFactory40.getName();
    boolean boolean55 = queryLoggingServiceExtensionFactory11.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory40);
    boolean boolean56 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory11);
    java.lang.String str57 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str58 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.Class<?> wildcardClass59 = queryLoggingServiceExtensionFactory0.getClass();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService2);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str10, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "query-logging" + "'", str14,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService15);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    org.junit.Assert.assertEquals("'" + str31 + "' != '" + "query-logging" + "'", str31,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService32);
    org.junit.Assert.assertNotNull(wildcardClass38);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    org.junit.Assert.assertEquals(
        "'" + str45 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str45, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str46 + "' != '" + "query-logging" + "'", str46,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertEquals(
        "'" + str51 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str51, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    org.junit.Assert.assertEquals("'" + str54 + "' != '" + "query-logging" + "'", str54,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    org.junit.Assert.assertEquals(
        "'" + str57 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str57, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str58 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str58, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(wildcardClass59);
  }

  @Test
  public void test2783() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2783");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService8.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService8.sucsForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery22);
    java.lang.String str25 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str26 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str27 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str28 = queryLoggingServiceExtensionFactory3.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService29 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    queryLoggingService29.rolcForKe(kernelTransaction30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService29.faleForExTh(executingQuery32, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    java.lang.Throwable throwable36 = null;
    queryLoggingService29.faleForExTh(executingQuery35, throwable36);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction38 = null;
    queryLoggingService29.rolcForKe(kernelTransaction38);
    boolean boolean40 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction41 = null;
    queryLoggingService29.comForKe(kernelTransaction41);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    java.lang.Throwable throwable44 = null;
    queryLoggingService29.faleForExTh(executingQuery43, throwable44);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertEquals(
        "'" + str25 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str25, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "query-logging" + "'", str26,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str27 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str27, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str28 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str28, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService29);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
  }

  @Test
  public void test2784() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2784");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.sucsForEx(executingQuery11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.faleForExTh(executingQuery19, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.comForKe(kernelTransaction24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2785() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2785");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.comForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    java.lang.Class<?> wildcardClass20 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass20);
  }

  @Test
  public void test2786() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2786");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16, throwable17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.sucsForEx(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService0.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService0.strForEx(executingQuery27);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2787() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2787");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6, "query-logging",
        config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "hi!", config23,
        path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config28, path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config33, path34);
  }

  @Test
  public void test2788() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2788");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.faleForExTh(executingQuery16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.sucsForEx(executingQuery21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService0.rolcForKe(kernelTransaction25, throwable26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService0.strForEx(kernelTransaction28);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    queryLoggingService0.rolcForKe(kernelTransaction30);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2789() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2789");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.strForEx(executingQuery9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.comForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.faleForExTh(executingQuery21, throwable22);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2790() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2790");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService5.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService5.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService5.faleForExTh(executingQuery17,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    boolean boolean20 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService21 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService21.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService21.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService21.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService21.sucsForEx(executingQuery29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService21.strForEx(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService21.faleForExTh(executingQuery33,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService21.rolcForKe(kernelTransaction36, throwable37);
    boolean boolean39 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService21);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory40 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory41 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean43 = queryLoggingServiceExtensionFactory41.equals((java.lang.Object) (-1L));
    boolean boolean44 = queryLoggingServiceExtensionFactory40.equals((java.lang.Object) boolean43);
    boolean boolean46 = queryLoggingServiceExtensionFactory40.equals((java.lang.Object) 0L);
    java.lang.String str47 = queryLoggingServiceExtensionFactory40.toString();
    java.lang.String str48 = queryLoggingServiceExtensionFactory40.getName();
    boolean boolean49 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) str48);
    java.lang.String str50 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str51 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService52 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction53 = null;
    queryLoggingService52.rolcForKe(kernelTransaction53);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    java.lang.Throwable throwable56 = null;
    queryLoggingService52.rolcForKe(kernelTransaction55, throwable56);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction58 = null;
    queryLoggingService52.rolcForKe(kernelTransaction58);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery60 = null;
    queryLoggingService52.sucsForEx(executingQuery60);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction62 = null;
    queryLoggingService52.strForEx(kernelTransaction62);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery64 = null;
    queryLoggingService52.faleForExTh(executingQuery64,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery67 = null;
    queryLoggingService52.faleForExTh(executingQuery67, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction70 = null;
    queryLoggingService52.rolcForKe(kernelTransaction70);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction72 = null;
    queryLoggingService52.rolcForKe(kernelTransaction72);
    boolean boolean74 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService52);
    java.lang.String str75 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str76 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj77 = null;
    boolean boolean78 = queryLoggingServiceExtensionFactory0.equals(obj77);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertNotNull(queryLoggingService21);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    org.junit.Assert.assertEquals(
        "'" + str47 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str47, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str48 + "' != '" + "query-logging" + "'", str48,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertEquals("'" + str50 + "' != '" + "query-logging" + "'", str50,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str51 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str51, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService52);
    org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    org.junit.Assert.assertEquals("'" + str75 + "' != '" + "query-logging" + "'", str75,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str76 + "' != '" + "query-logging" + "'", str76,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
  }

  @Test
  public void test2791() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2791");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.faleForExTh(executingQuery13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.strForEx(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.faleForExTh(executingQuery21, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.comForKe(kernelTransaction24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2792() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2792");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.strForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.faleForExTh(executingQuery10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.faleForExTh(executingQuery17,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.comForKe(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22, throwable23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService0.comForKe(kernelTransaction25);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2793() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2793");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.comForKe(kernelTransaction11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.faleForExTh(executingQuery16, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.faleForExTh(executingQuery19,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.comForKe(kernelTransaction22);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2794() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2794");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.comForKe(kernelTransaction17);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2795() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2795");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6, "query-logging",
        config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "query-logging",
        config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "hi!", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config23, path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "query-logging",
        config28, path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31, "hi!", config33,
        path34);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction36 = null;
    org.neo4j.configuration.Config config38 = null;
    java.nio.file.Path path39 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction36, "hi!", config38,
        path39);
  }

  @Test
  public void test2796() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2796");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.Object obj5 = new java.lang.Object();
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals(obj5);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj11 = null;
    boolean boolean12 = queryLoggingServiceExtensionFactory0.equals(obj11);
    java.lang.String str13 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "query-logging" + "'", str10,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "query-logging" + "'", str13,
        "query-logging");
  }

  @Test
  public void test2797() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2797");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory8 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean10 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) (-1L));
    boolean boolean11 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) boolean10);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService12 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService12.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService12.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService12.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService12.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService12.strForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) executingQuery22);
    boolean boolean25 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    java.lang.String str26 = queryLoggingServiceExtensionFactory7.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService27 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService27.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService27.comForKe(kernelTransaction31);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    queryLoggingService27.rolcForKe(kernelTransaction33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    java.lang.Throwable throwable36 = null;
    queryLoggingService27.faleForExTh(executingQuery35, throwable36);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction38 = null;
    java.lang.Throwable throwable39 = null;
    queryLoggingService27.rolcForKe(kernelTransaction38, throwable39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    queryLoggingService27.faleForExTh(executingQuery41,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    queryLoggingService27.rolcForKe(kernelTransaction44);
    boolean boolean46 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) kernelTransaction44);
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl47 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction48 = null;
    org.neo4j.configuration.Config config50 = null;
    java.nio.file.Path path51 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl47.init(fileSystemAbstraction48, "hi!",
        config50, path51);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction53 = null;
    org.neo4j.configuration.Config config55 = null;
    java.nio.file.Path path56 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl47.init(fileSystemAbstraction53,
        "query-logging", config55, path56);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction58 = null;
    org.neo4j.configuration.Config config60 = null;
    java.nio.file.Path path61 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl47.init(fileSystemAbstraction58,
        "query-logging", config60, path61);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction63 = null;
    org.neo4j.configuration.Config config65 = null;
    java.nio.file.Path path66 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl47.init(fileSystemAbstraction63, "", config65,
        path66);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction68 = null;
    org.neo4j.configuration.Config config70 = null;
    java.nio.file.Path path71 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl47.init(fileSystemAbstraction68, "", config70,
        path71);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction73 = null;
    org.neo4j.configuration.Config config75 = null;
    java.nio.file.Path path76 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl47.init(fileSystemAbstraction73,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config75, path76);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction78 = null;
    org.neo4j.configuration.Config config80 = null;
    java.nio.file.Path path81 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl47.init(fileSystemAbstraction78,
        "query-logging", config80, path81);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction83 = null;
    org.neo4j.configuration.Config config85 = null;
    java.nio.file.Path path86 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl47.init(fileSystemAbstraction83, "", config85,
        path86);
    boolean boolean88 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) config85);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext89 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies90 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle91 = queryLoggingServiceExtensionFactory7.newInstance(
          extensionContext89, queryLoggingServiceDependencies90);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(queryLoggingService12);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "query-logging" + "'", str26,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService27);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
  }

  @Test
  public void test2798() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2798");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory8 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean10 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) (-1L));
    boolean boolean11 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) boolean10);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService12 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService12.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService12.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService12.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService12.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService12.strForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) executingQuery22);
    boolean boolean25 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory26 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean28 = queryLoggingServiceExtensionFactory26.equals((java.lang.Object) (short) 1);
    java.lang.String str29 = queryLoggingServiceExtensionFactory26.toString();
    boolean boolean30 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory26);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService31 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService31.strForEx(executingQuery32);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    java.lang.Throwable throwable35 = null;
    queryLoggingService31.faleForExTh(executingQuery34, throwable35);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction37 = null;
    java.lang.Throwable throwable38 = null;
    queryLoggingService31.rolcForKe(kernelTransaction37, throwable38);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery40 = null;
    queryLoggingService31.faleForExTh(executingQuery40, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService31.sucsForEx(executingQuery43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    queryLoggingService31.comForKe(kernelTransaction45);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    queryLoggingService31.strForEx(executingQuery47);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery49 = null;
    queryLoggingService31.strForEx(executingQuery49);
    boolean boolean51 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery49);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory52 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean54 = queryLoggingServiceExtensionFactory52.equals((java.lang.Object) (-1.0d));
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService55 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction56 = null;
    queryLoggingService55.rolcForKe(kernelTransaction56);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery58 = null;
    queryLoggingService55.faleForExTh(executingQuery58, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery61 = null;
    java.lang.Throwable throwable62 = null;
    queryLoggingService55.faleForExTh(executingQuery61, throwable62);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery64 = null;
    java.lang.Throwable throwable65 = null;
    queryLoggingService55.faleForExTh(executingQuery64, throwable65);
    boolean boolean67 = queryLoggingServiceExtensionFactory52.equals(
        (java.lang.Object) executingQuery64);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory68 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean70 = queryLoggingServiceExtensionFactory68.equals((java.lang.Object) (short) 1);
    java.lang.String str71 = queryLoggingServiceExtensionFactory68.getName();
    boolean boolean72 = queryLoggingServiceExtensionFactory52.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory68);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory73 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean75 = queryLoggingServiceExtensionFactory73.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory76 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str77 = queryLoggingServiceExtensionFactory76.toString();
    boolean boolean78 = queryLoggingServiceExtensionFactory73.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory76);
    boolean boolean80 = queryLoggingServiceExtensionFactory73.equals((java.lang.Object) (-1.0f));
    boolean boolean81 = queryLoggingServiceExtensionFactory68.equals((java.lang.Object) (-1.0f));
    boolean boolean82 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1.0f));
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(queryLoggingService12);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertEquals(
        "'" + str29 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str29, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    org.junit.Assert.assertNotNull(queryLoggingService31);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    org.junit.Assert.assertNotNull(queryLoggingService55);
    org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    org.junit.Assert.assertEquals("'" + str71 + "' != '" + "query-logging" + "'", str71,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    org.junit.Assert.assertEquals(
        "'" + str77 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str77, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
  }

  @Test
  public void test2799() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2799");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16, throwable17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.strForEx(executingQuery19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2800() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2800");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.faleForExTh(executingQuery16, throwable17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.faleForExTh(executingQuery19, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService0.faleForExTh(executingQuery24, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService0.strForEx(executingQuery27);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService0.rolcForKe(kernelTransaction29, throwable30);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2801() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2801");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.strForEx(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.sucsForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.faleForExTh(executingQuery17, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.strForEx(executingQuery20);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2802() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2802");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService3 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService3.rolcForKe(kernelTransaction4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService3.rolcForKe(kernelTransaction6, throwable7);
    boolean boolean9 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService10 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService10.strForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService10.faleForExTh(executingQuery13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService10.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService10.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService10.comForKe(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService10.rolcForKe(kernelTransaction22, throwable23);
    boolean boolean25 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction22);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService26 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService26.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService26.rolcForKe(kernelTransaction29, throwable30);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction32 = null;
    queryLoggingService26.rolcForKe(kernelTransaction32);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    queryLoggingService26.sucsForEx(executingQuery34);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    queryLoggingService26.strForEx(kernelTransaction36);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery38 = null;
    queryLoggingService26.faleForExTh(executingQuery38,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    queryLoggingService26.faleForExTh(executingQuery41, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery44 = null;
    queryLoggingService26.sucsForEx(executingQuery44);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery46 = null;
    queryLoggingService26.faleForExTh(executingQuery46, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery49 = null;
    java.lang.Throwable throwable50 = null;
    queryLoggingService26.faleForExTh(executingQuery49, throwable50);
    boolean boolean52 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery49);
    java.lang.String str53 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(queryLoggingService3);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertNotNull(queryLoggingService10);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertNotNull(queryLoggingService26);
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    org.junit.Assert.assertEquals(
        "'" + str53 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str53, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test2803() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2803");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.strForEx(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.sucsForEx(executingQuery21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.comForKe(kernelTransaction23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService0.strForEx(executingQuery25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService0.strForEx(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService0.strForEx(executingQuery29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService0.strForEx(kernelTransaction31);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2804() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2804");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory8 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean10 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) (-1L));
    boolean boolean11 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) boolean10);
    java.lang.Object obj12 = new java.lang.Object();
    boolean boolean13 = queryLoggingServiceExtensionFactory7.equals(obj12);
    java.lang.String str14 = queryLoggingServiceExtensionFactory7.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService15 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService15.strForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService15.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService15.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService15.comForKe(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService15.strForEx(executingQuery26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService15.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService15.comForKe(kernelTransaction31);
    boolean boolean33 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingService15);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory35 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean37 = queryLoggingServiceExtensionFactory35.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory38 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str39 = queryLoggingServiceExtensionFactory38.toString();
    boolean boolean40 = queryLoggingServiceExtensionFactory35.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory38);
    boolean boolean42 = queryLoggingServiceExtensionFactory38.equals((java.lang.Object) 100.0d);
    java.lang.String str43 = queryLoggingServiceExtensionFactory38.toString();
    java.lang.String str44 = queryLoggingServiceExtensionFactory38.getName();
    java.lang.Object obj45 = null;
    boolean boolean46 = queryLoggingServiceExtensionFactory38.equals(obj45);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService47 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction48 = null;
    java.lang.Throwable throwable49 = null;
    queryLoggingService47.rolcForKe(kernelTransaction48, throwable49);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction51 = null;
    queryLoggingService47.comForKe(kernelTransaction51);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery53 = null;
    queryLoggingService47.sucsForEx(executingQuery53);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    queryLoggingService47.comForKe(kernelTransaction55);
    boolean boolean57 = queryLoggingServiceExtensionFactory38.equals(
        (java.lang.Object) queryLoggingService47);
    java.lang.Class<?> wildcardClass58 = queryLoggingServiceExtensionFactory38.getClass();
    boolean boolean59 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) wildcardClass58);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService60 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery61 = null;
    queryLoggingService60.faleForExTh(executingQuery61,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery64 = null;
    queryLoggingService60.faleForExTh(executingQuery64,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction67 = null;
    queryLoggingService60.strForEx(kernelTransaction67);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction69 = null;
    queryLoggingService60.rolcForKe(kernelTransaction69);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery71 = null;
    queryLoggingService60.strForEx(executingQuery71);
    java.lang.Class<?> wildcardClass73 = queryLoggingService60.getClass();
    boolean boolean74 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) wildcardClass73);
    java.lang.Class<?> wildcardClass75 = queryLoggingServiceExtensionFactory0.getClass();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "query-logging" + "'", str14,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService15);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertEquals(
        "'" + str39 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str39, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertEquals(
        "'" + str43 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str43, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str44 + "' != '" + "query-logging" + "'", str44,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    org.junit.Assert.assertNotNull(queryLoggingService47);
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    org.junit.Assert.assertNotNull(wildcardClass58);
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    org.junit.Assert.assertNotNull(queryLoggingService60);
    org.junit.Assert.assertNotNull(wildcardClass73);
    org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    org.junit.Assert.assertNotNull(wildcardClass75);
  }

  @Test
  public void test2805() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2805");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService2 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService2.rolcForKe(kernelTransaction3, throwable4);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable4);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str11 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService2);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str9, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str10, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "query-logging" + "'", str11,
        "query-logging");
  }

  @Test
  public void test2806() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2806");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.sucsForEx(executingQuery11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.sucsForEx(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.strForEx(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService0.faleForExTh(executingQuery26,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService0.rolcForKe(kernelTransaction29, throwable30);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction32 = null;
    java.lang.Throwable throwable33 = null;
    queryLoggingService0.rolcForKe(kernelTransaction32, throwable33);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2807() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2807");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory11 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory12 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean14 = queryLoggingServiceExtensionFactory12.equals((java.lang.Object) (-1L));
    boolean boolean15 = queryLoggingServiceExtensionFactory11.equals((java.lang.Object) boolean14);
    boolean boolean17 = queryLoggingServiceExtensionFactory11.equals((java.lang.Object) 0L);
    java.lang.String str18 = queryLoggingServiceExtensionFactory11.toString();
    java.lang.String str19 = queryLoggingServiceExtensionFactory11.getName();
    java.lang.Object obj20 = new java.lang.Object();
    java.lang.Class<?> wildcardClass21 = obj20.getClass();
    boolean boolean22 = queryLoggingServiceExtensionFactory11.equals(obj20);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory23 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean25 = queryLoggingServiceExtensionFactory23.equals((java.lang.Object) (short) 1);
    java.lang.String str26 = queryLoggingServiceExtensionFactory23.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService27 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService27.strForEx(executingQuery28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    java.lang.Throwable throwable31 = null;
    queryLoggingService27.faleForExTh(executingQuery30, throwable31);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    java.lang.Throwable throwable34 = null;
    queryLoggingService27.rolcForKe(kernelTransaction33, throwable34);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    queryLoggingService27.comForKe(kernelTransaction36);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery38 = null;
    queryLoggingService27.strForEx(executingQuery38);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery40 = null;
    queryLoggingService27.strForEx(executingQuery40);
    boolean boolean42 = queryLoggingServiceExtensionFactory23.equals(
        (java.lang.Object) executingQuery40);
    boolean boolean43 = queryLoggingServiceExtensionFactory11.equals(
        (java.lang.Object) executingQuery40);
    java.lang.String str44 = queryLoggingServiceExtensionFactory11.toString();
    boolean boolean45 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory11);
    java.lang.String str46 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService47 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery48 = null;
    queryLoggingService47.faleForExTh(executingQuery48,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction51 = null;
    queryLoggingService47.rolcForKe(kernelTransaction51);
    boolean boolean53 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction51);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService54 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery55 = null;
    queryLoggingService54.strForEx(executingQuery55);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery57 = null;
    java.lang.Throwable throwable58 = null;
    queryLoggingService54.faleForExTh(executingQuery57, throwable58);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction60 = null;
    java.lang.Throwable throwable61 = null;
    queryLoggingService54.rolcForKe(kernelTransaction60, throwable61);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery63 = null;
    queryLoggingService54.faleForExTh(executingQuery63, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery66 = null;
    queryLoggingService54.sucsForEx(executingQuery66);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery68 = null;
    queryLoggingService54.sucsForEx(executingQuery68);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery70 = null;
    java.lang.Throwable throwable71 = null;
    queryLoggingService54.faleForExTh(executingQuery70, throwable71);
    boolean boolean73 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable71);
    java.lang.String str74 = queryLoggingServiceExtensionFactory0.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext75 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies76 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle77 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext75, queryLoggingServiceDependencies76);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str10, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertEquals(
        "'" + str18 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str18, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "query-logging" + "'", str19,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "query-logging" + "'", str26,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService27);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertEquals(
        "'" + str44 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str44, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    org.junit.Assert.assertEquals(
        "'" + str46 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str46, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService47);
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    org.junit.Assert.assertNotNull(queryLoggingService54);
    org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    org.junit.Assert.assertEquals(
        "'" + str74 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str74, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test2808() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2808");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.faleForExTh(executingQuery17,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.faleForExTh(executingQuery20, throwable21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.strForEx(executingQuery23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService0.sucsForEx(executingQuery25);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2809() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2809");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.rolcForKe(kernelTransaction4, throwable5);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction7 = null;
    queryLoggingService0.comForKe(kernelTransaction7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.strForEx(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.strForEx(kernelTransaction11);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2810() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2810");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.faleForExTh(executingQuery23, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    queryLoggingService0.rolcForKe(kernelTransaction26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService0.comForKe(kernelTransaction28);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2811() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2811");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2812() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2812");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.sucsForEx(executingQuery10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.faleForExTh(executingQuery16, throwable17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.sucsForEx(executingQuery19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2813() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2813");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.faleForExTh(executingQuery1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2814() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2814");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService5.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService5.strForEx(executingQuery15);
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery15);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService18 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService18.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService18.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService18.faleForExTh(executingQuery24, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService18.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService18.faleForExTh(executingQuery29, throwable30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService18.sucsForEx(executingQuery32);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService18);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService35 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    queryLoggingService35.rolcForKe(kernelTransaction36);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery38 = null;
    queryLoggingService35.faleForExTh(executingQuery38, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    java.lang.Throwable throwable42 = null;
    queryLoggingService35.faleForExTh(executingQuery41, throwable42);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    queryLoggingService35.rolcForKe(kernelTransaction44);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction46 = null;
    queryLoggingService35.comForKe(kernelTransaction46);
    boolean boolean48 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction46);
    java.lang.String str49 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str50 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Class<?> wildcardClass51 = queryLoggingServiceExtensionFactory0.getClass();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(queryLoggingService18);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertNotNull(queryLoggingService35);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    org.junit.Assert.assertEquals("'" + str49 + "' != '" + "query-logging" + "'", str49,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str50 + "' != '" + "query-logging" + "'", str50,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass51);
  }

  @Test
  public void test2815() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2815");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.strForEx(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.comForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction24);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    queryLoggingService0.comForKe(kernelTransaction26);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2816() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2816");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.strForEx(executingQuery22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.strForEx(kernelTransaction24);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    queryLoggingService0.comForKe(kernelTransaction26);
    java.lang.Class<?> wildcardClass28 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass28);
  }

  @Test
  public void test2817() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2817");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.strForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.sucsForEx(executingQuery15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.strForEx(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19, throwable20);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2818() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2818");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean9 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory10 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str11 = queryLoggingServiceExtensionFactory10.toString();
    boolean boolean12 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory10);
    boolean boolean13 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    java.lang.String str14 = queryLoggingServiceExtensionFactory7.getName();
    java.lang.String str15 = queryLoggingServiceExtensionFactory7.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService16 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService16.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService16.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService16.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService16.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService16.faleForExTh(executingQuery27, "hi!");
    boolean boolean30 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingService16);
    java.lang.String str31 = queryLoggingServiceExtensionFactory7.getName();
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl32 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction33 = null;
    org.neo4j.configuration.Config config35 = null;
    java.nio.file.Path path36 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl32.init(fileSystemAbstraction33,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config35, path36);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction38 = null;
    org.neo4j.configuration.Config config40 = null;
    java.nio.file.Path path41 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl32.init(fileSystemAbstraction38,
        "query-logging", config40, path41);
    boolean boolean43 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) path41);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "query-logging" + "'", str14,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str15 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str15, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService16);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    org.junit.Assert.assertEquals("'" + str31 + "' != '" + "query-logging" + "'", str31,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
  }

  @Test
  public void test2819() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2819");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.comForKe(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2820() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2820");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.strForEx(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20, throwable21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.sucsForEx(executingQuery23);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2821() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2821");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.faleForExTh(executingQuery11,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2822() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2822");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService5.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService5.strForEx(executingQuery15);
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery15);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService18 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService18.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService18.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService18.faleForExTh(executingQuery24, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService18.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService18.faleForExTh(executingQuery29, throwable30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService18.sucsForEx(executingQuery32);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService18);
    java.lang.String str35 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str36 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str37 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str38 = queryLoggingServiceExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext39 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies40 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle41 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext39, queryLoggingServiceDependencies40);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(queryLoggingService18);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertEquals(
        "'" + str35 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str35, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str36 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str36, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str37 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str37, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str38 + "' != '" + "query-logging" + "'", str38,
        "query-logging");
  }

  @Test
  public void test2823() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2823");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService2 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService2.strForEx(executingQuery3);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    java.lang.Throwable throwable6 = null;
    queryLoggingService2.faleForExTh(executingQuery5, throwable6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService2.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService2.sucsForEx(executingQuery10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService2.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService2.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService2.strForEx(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService2.strForEx(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService2.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService2.rolcForKe(kernelTransaction24, throwable25);
    boolean boolean27 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction24);
    java.lang.Object obj28 = null;
    boolean boolean29 = queryLoggingServiceExtensionFactory0.equals(obj28);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory30 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory31 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean33 = queryLoggingServiceExtensionFactory31.equals((java.lang.Object) (-1L));
    boolean boolean34 = queryLoggingServiceExtensionFactory30.equals((java.lang.Object) boolean33);
    boolean boolean36 = queryLoggingServiceExtensionFactory30.equals((java.lang.Object) 0L);
    java.lang.String str37 = queryLoggingServiceExtensionFactory30.toString();
    java.lang.String str38 = queryLoggingServiceExtensionFactory30.getName();
    java.lang.String str39 = queryLoggingServiceExtensionFactory30.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService40 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction41 = null;
    java.lang.Throwable throwable42 = null;
    queryLoggingService40.rolcForKe(kernelTransaction41, throwable42);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    queryLoggingService40.comForKe(kernelTransaction44);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery46 = null;
    java.lang.Throwable throwable47 = null;
    queryLoggingService40.faleForExTh(executingQuery46, throwable47);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction49 = null;
    queryLoggingService40.comForKe(kernelTransaction49);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery51 = null;
    queryLoggingService40.strForEx(executingQuery51);
    boolean boolean53 = queryLoggingServiceExtensionFactory30.equals(
        (java.lang.Object) queryLoggingService40);
    java.lang.String str54 = queryLoggingServiceExtensionFactory30.getName();
    java.lang.String str55 = queryLoggingServiceExtensionFactory30.getName();
    boolean boolean56 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory30);
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService2);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertEquals(
        "'" + str37 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str37, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str38 + "' != '" + "query-logging" + "'", str38,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str39 + "' != '" + "query-logging" + "'", str39,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService40);
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    org.junit.Assert.assertEquals("'" + str54 + "' != '" + "query-logging" + "'", str54,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str55 + "' != '" + "query-logging" + "'", str55,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
  }

  @Test
  public void test2824() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2824");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.comForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.rolcForKe(kernelTransaction21, throwable22);
    java.lang.Class<?> wildcardClass24 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass24);
  }

  @Test
  public void test2825() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2825");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.Object obj10 = null;
    boolean boolean11 = queryLoggingServiceExtensionFactory3.equals(obj10);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService12 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService12.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService12.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService12.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService12.comForKe(kernelTransaction20);
    boolean boolean22 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService12);
    java.lang.String str23 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str24 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str25 = queryLoggingServiceExtensionFactory3.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService26 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService26.strForEx(executingQuery27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService26.faleForExTh(executingQuery29, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction32 = null;
    queryLoggingService26.strForEx(kernelTransaction32);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction34 = null;
    queryLoggingService26.strForEx(kernelTransaction34);
    boolean boolean36 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService26);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService37 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction38 = null;
    java.lang.Throwable throwable39 = null;
    queryLoggingService37.rolcForKe(kernelTransaction38, throwable39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    queryLoggingService37.sucsForEx(executingQuery41);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction43 = null;
    queryLoggingService37.comForKe(kernelTransaction43);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery45 = null;
    queryLoggingService37.faleForExTh(executingQuery45, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction48 = null;
    queryLoggingService37.strForEx(kernelTransaction48);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction50 = null;
    queryLoggingService37.comForKe(kernelTransaction50);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction52 = null;
    queryLoggingService37.comForKe(kernelTransaction52);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction54 = null;
    queryLoggingService37.strForEx(kernelTransaction54);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction56 = null;
    queryLoggingService37.rolcForKe(kernelTransaction56);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery58 = null;
    queryLoggingService37.faleForExTh(executingQuery58, "");
    boolean boolean61 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService37);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext62 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies63 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle64 = queryLoggingServiceExtensionFactory3.newInstance(
          extensionContext62, queryLoggingServiceDependencies63);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(queryLoggingService12);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "query-logging" + "'", str23,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str24 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str24, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str25 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str25, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService26);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertNotNull(queryLoggingService37);
    org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
  }

  @Test
  public void test2826() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2826");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService7 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService7.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService7.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService7.rolcForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService7.sucsForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService7.faleForExTh(executingQuery17, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService7.strForEx(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService7.rolcForKe(kernelTransaction22);
    boolean boolean24 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService7);
    java.lang.String str25 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str26 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str27 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str28 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str29 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService7);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertEquals("'" + str25 + "' != '" + "query-logging" + "'", str25,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str26 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str26, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str27 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str27, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str28 + "' != '" + "query-logging" + "'", str28,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str29 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str29, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test2827() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2827");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.strForEx(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.faleForExTh(executingQuery16,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2828() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2828");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService8.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService8.faleForExTh(executingQuery14, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService8.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService8.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService8.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService8.comForKe(kernelTransaction24);
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    java.lang.Throwable throwable28 = null;
    queryLoggingService8.faleForExTh(executingQuery27, throwable28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    java.lang.Throwable throwable31 = null;
    queryLoggingService8.faleForExTh(executingQuery30, throwable31);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
  }

  @Test
  public void test2829() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2829");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.comForKe(kernelTransaction11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.strForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2830() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2830");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService0.strForEx(kernelTransaction8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.faleForExTh(executingQuery10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2831() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2831");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config3, path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "query-logging",
        config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "query-logging",
        config23, path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "query-logging",
        config28, path29);
  }

  @Test
  public void test2832() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2832");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.strForEx(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService0.strForEx(kernelTransaction8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2833() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2833");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.faleForExTh(executingQuery20, throwable21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23, throwable24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    java.lang.Throwable throwable27 = null;
    queryLoggingService0.faleForExTh(executingQuery26, throwable27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService0.sucsForEx(executingQuery29);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2834() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2834");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16, throwable17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.sucsForEx(executingQuery19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2835() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2835");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.strForEx(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService0.sucsForEx(executingQuery24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2836() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2836");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.faleForExTh(executingQuery11, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.strForEx(executingQuery17);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2837() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2837");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService10 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService10.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService10.comForKe(kernelTransaction14);
    boolean boolean16 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService10);
    java.lang.String str17 = queryLoggingServiceExtensionFactory3.toString();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str9, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService10);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    org.junit.Assert.assertEquals(
        "'" + str17 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str17, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test2838() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2838");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    java.lang.Class<?> wildcardClass15 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass15);
  }

  @Test
  public void test2839() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2839");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService10 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService10.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService10.comForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService10.faleForExTh(executingQuery16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService10.comForKe(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService10.strForEx(executingQuery21);
    boolean boolean23 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService10);
    java.lang.Object obj24 = null;
    boolean boolean25 = queryLoggingServiceExtensionFactory0.equals(obj24);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService10);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
  }

  @Test
  public void test2840() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2840");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.strForEx(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.faleForExTh(executingQuery17,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.comForKe(kernelTransaction20);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2841() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2841");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService4 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction5 = null;
    queryLoggingService4.rolcForKe(kernelTransaction5);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction7 = null;
    queryLoggingService4.strForEx(kernelTransaction7);
    java.lang.Class<?> wildcardClass9 = queryLoggingService4.getClass();
    boolean boolean10 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService4);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory11 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean13 = queryLoggingServiceExtensionFactory11.equals((java.lang.Object) (short) 1);
    java.lang.String str14 = queryLoggingServiceExtensionFactory11.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService15 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService15.strForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService15.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService15.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService15.comForKe(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService15.strForEx(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService15.strForEx(executingQuery28);
    boolean boolean30 = queryLoggingServiceExtensionFactory11.equals(
        (java.lang.Object) executingQuery28);
    java.lang.String str31 = queryLoggingServiceExtensionFactory11.getName();
    java.lang.String str32 = queryLoggingServiceExtensionFactory11.toString();
    java.lang.String str33 = queryLoggingServiceExtensionFactory11.toString();
    java.lang.String str34 = queryLoggingServiceExtensionFactory11.getName();
    java.lang.String str35 = queryLoggingServiceExtensionFactory11.getName();
    java.lang.String str36 = queryLoggingServiceExtensionFactory11.toString();
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl37 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction38 = null;
    org.neo4j.configuration.Config config40 = null;
    java.nio.file.Path path41 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl37.init(fileSystemAbstraction38, "hi!",
        config40, path41);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction43 = null;
    org.neo4j.configuration.Config config45 = null;
    java.nio.file.Path path46 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl37.init(fileSystemAbstraction43,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config45, path46);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction48 = null;
    org.neo4j.configuration.Config config50 = null;
    java.nio.file.Path path51 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl37.init(fileSystemAbstraction48, "", config50,
        path51);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction53 = null;
    org.neo4j.configuration.Config config55 = null;
    java.nio.file.Path path56 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl37.init(fileSystemAbstraction53, "hi!",
        config55, path56);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction58 = null;
    org.neo4j.configuration.Config config60 = null;
    java.nio.file.Path path61 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl37.init(fileSystemAbstraction58, "", config60,
        path61);
    boolean boolean63 = queryLoggingServiceExtensionFactory11.equals((java.lang.Object) "");
    java.lang.String str64 = queryLoggingServiceExtensionFactory11.toString();
    boolean boolean65 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory11);
    java.lang.Object obj66 = null;
    boolean boolean67 = queryLoggingServiceExtensionFactory11.equals(obj66);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext68 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies69 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle70 = queryLoggingServiceExtensionFactory11.newInstance(
          extensionContext68, queryLoggingServiceDependencies69);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str3, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService4);
    org.junit.Assert.assertNotNull(wildcardClass9);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "query-logging" + "'", str14,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService15);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    org.junit.Assert.assertEquals("'" + str31 + "' != '" + "query-logging" + "'", str31,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str32 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str32, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str33 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str33, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str34 + "' != '" + "query-logging" + "'", str34,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str35 + "' != '" + "query-logging" + "'", str35,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str36 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str36, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    org.junit.Assert.assertEquals(
        "'" + str64 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str64, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
  }

  @Test
  public void test2842() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2842");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "", config13,
        path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "hi!", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "", config23,
        path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "hi!", config28,
        path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config33, path34);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction36 = null;
    org.neo4j.configuration.Config config38 = null;
    java.nio.file.Path path39 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction36,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config38, path39);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction41 = null;
    org.neo4j.configuration.Config config43 = null;
    java.nio.file.Path path44 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction41, "hi!", config43,
        path44);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction46 = null;
    org.neo4j.configuration.Config config48 = null;
    java.nio.file.Path path49 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction46, "hi!", config48,
        path49);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction51 = null;
    org.neo4j.configuration.Config config53 = null;
    java.nio.file.Path path54 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction51, "hi!", config53,
        path54);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction56 = null;
    org.neo4j.configuration.Config config58 = null;
    java.nio.file.Path path59 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction56,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config58, path59);
  }

  @Test
  public void test2843() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2843");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.rolcForKe(kernelTransaction4, throwable5);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.strForEx(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.comForKe(kernelTransaction22);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2844() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2844");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.strForEx(executingQuery22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService0.faleForExTh(executingQuery24, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService0.strForEx(kernelTransaction27);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    queryLoggingService0.strForEx(kernelTransaction29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryLoggingService0.faleForExTh(executingQuery31, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    queryLoggingService0.sucsForEx(executingQuery34);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2845() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2845");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    java.lang.Class<?> wildcardClass17 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass17);
  }

  @Test
  public void test2846() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2846");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.sucsForEx(executingQuery11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.comForKe(kernelTransaction15);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2847() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2847");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService8.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService8.sucsForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery22);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService25 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService25.strForEx(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService25.faleForExTh(executingQuery28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService25.rolcForKe(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService25.sucsForEx(executingQuery33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService25.strForEx(executingQuery35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService25.sucsForEx(executingQuery37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService25.sucsForEx(executingQuery39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    queryLoggingService25.sucsForEx(executingQuery41);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService25.strForEx(executingQuery43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    java.lang.Throwable throwable46 = null;
    queryLoggingService25.rolcForKe(kernelTransaction45, throwable46);
    boolean boolean48 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService25);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService49 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery50 = null;
    queryLoggingService49.strForEx(executingQuery50);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery52 = null;
    java.lang.Throwable throwable53 = null;
    queryLoggingService49.faleForExTh(executingQuery52, throwable53);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    java.lang.Throwable throwable56 = null;
    queryLoggingService49.rolcForKe(kernelTransaction55, throwable56);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery58 = null;
    queryLoggingService49.faleForExTh(executingQuery58, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction61 = null;
    java.lang.Throwable throwable62 = null;
    queryLoggingService49.rolcForKe(kernelTransaction61, throwable62);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction64 = null;
    queryLoggingService49.comForKe(kernelTransaction64);
    boolean boolean66 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) kernelTransaction64);
    java.lang.String str67 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.Class<?> wildcardClass68 = queryLoggingServiceExtensionFactory3.getClass();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(queryLoggingService25);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    org.junit.Assert.assertNotNull(queryLoggingService49);
    org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    org.junit.Assert.assertEquals(
        "'" + str67 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str67, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(wildcardClass68);
  }

  @Test
  public void test2848() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2848");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.strForEx(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.faleForExTh(executingQuery21, throwable22);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2849() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2849");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.comForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.sucsForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.sucsForEx(executingQuery15);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2850() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2850");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.faleForExTh(executingQuery20, throwable21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23, throwable24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService0.faleForExTh(executingQuery26,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    queryLoggingService0.rolcForKe(kernelTransaction29);
    java.lang.Class<?> wildcardClass31 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass31);
  }

  @Test
  public void test2851() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2851");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.faleForExTh(executingQuery16, throwable17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.faleForExTh(executingQuery19, throwable20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.sucsForEx(executingQuery22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService0.faleForExTh(executingQuery24, throwable25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService0.rolcForKe(kernelTransaction27);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2852() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2852");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str11 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str12 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str10, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "query-logging" + "'", str12,
        "query-logging");
  }

  @Test
  public void test2853() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2853");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.strForEx(executingQuery9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.comForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.strForEx(executingQuery20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.strForEx(kernelTransaction22);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2854() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2854");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.strForEx(executingQuery20);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2855() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2855");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.faleForExTh(executingQuery12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.sucsForEx(executingQuery21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.strForEx(executingQuery23);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2856() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2856");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean9 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory10 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str11 = queryLoggingServiceExtensionFactory10.toString();
    boolean boolean12 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory10);
    boolean boolean13 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    java.lang.String str14 = queryLoggingServiceExtensionFactory7.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService15 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService15.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService15.faleForExTh(executingQuery18, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService15.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService15.strForEx(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService15.strForEx(executingQuery26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService15.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryLoggingService15.strForEx(executingQuery31);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    queryLoggingService15.comForKe(kernelTransaction33);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction35 = null;
    java.lang.Throwable throwable36 = null;
    queryLoggingService15.rolcForKe(kernelTransaction35, throwable36);
    boolean boolean38 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) kernelTransaction35);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService39 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    java.lang.Throwable throwable41 = null;
    queryLoggingService39.rolcForKe(kernelTransaction40, throwable41);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService39.sucsForEx(executingQuery43);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery45 = null;
    queryLoggingService39.strForEx(executingQuery45);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    queryLoggingService39.faleForExTh(executingQuery47, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction50 = null;
    java.lang.Throwable throwable51 = null;
    queryLoggingService39.rolcForKe(kernelTransaction50, throwable51);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery53 = null;
    queryLoggingService39.sucsForEx(executingQuery53);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery55 = null;
    java.lang.Throwable throwable56 = null;
    queryLoggingService39.faleForExTh(executingQuery55, throwable56);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery58 = null;
    java.lang.Throwable throwable59 = null;
    queryLoggingService39.faleForExTh(executingQuery58, throwable59);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery61 = null;
    queryLoggingService39.sucsForEx(executingQuery61);
    boolean boolean63 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingService39);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService64 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction65 = null;
    queryLoggingService64.rolcForKe(kernelTransaction65);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction67 = null;
    java.lang.Throwable throwable68 = null;
    queryLoggingService64.rolcForKe(kernelTransaction67, throwable68);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction70 = null;
    java.lang.Throwable throwable71 = null;
    queryLoggingService64.rolcForKe(kernelTransaction70, throwable71);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction73 = null;
    java.lang.Throwable throwable74 = null;
    queryLoggingService64.rolcForKe(kernelTransaction73, throwable74);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery76 = null;
    queryLoggingService64.strForEx(executingQuery76);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery78 = null;
    queryLoggingService64.strForEx(executingQuery78);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction80 = null;
    java.lang.Throwable throwable81 = null;
    queryLoggingService64.rolcForKe(kernelTransaction80, throwable81);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction83 = null;
    java.lang.Throwable throwable84 = null;
    queryLoggingService64.rolcForKe(kernelTransaction83, throwable84);
    boolean boolean86 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) kernelTransaction83);
    java.lang.String str87 = queryLoggingServiceExtensionFactory7.getName();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "query-logging" + "'", str14,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService15);
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    org.junit.Assert.assertNotNull(queryLoggingService39);
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    org.junit.Assert.assertNotNull(queryLoggingService64);
    org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    org.junit.Assert.assertEquals("'" + str87 + "' != '" + "query-logging" + "'", str87,
        "query-logging");
  }

  @Test
  public void test2857() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2857");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.sucsForEx(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.strForEx(kernelTransaction24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2858() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2858");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.Object obj10 = null;
    boolean boolean11 = queryLoggingServiceExtensionFactory3.equals(obj10);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService12 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService12.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService12.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService12.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService12.comForKe(kernelTransaction20);
    boolean boolean22 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService12);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory23 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory24 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean26 = queryLoggingServiceExtensionFactory24.equals((java.lang.Object) (-1L));
    boolean boolean27 = queryLoggingServiceExtensionFactory23.equals((java.lang.Object) boolean26);
    boolean boolean29 = queryLoggingServiceExtensionFactory23.equals((java.lang.Object) 0L);
    java.lang.String str30 = queryLoggingServiceExtensionFactory23.toString();
    java.lang.String str31 = queryLoggingServiceExtensionFactory23.getName();
    java.lang.String str32 = queryLoggingServiceExtensionFactory23.getName();
    java.lang.Class<?> wildcardClass33 = queryLoggingServiceExtensionFactory23.getClass();
    boolean boolean34 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) wildcardClass33);
    java.lang.String str35 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str36 = queryLoggingServiceExtensionFactory3.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService37 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction38 = null;
    java.lang.Throwable throwable39 = null;
    queryLoggingService37.rolcForKe(kernelTransaction38, throwable39);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction41 = null;
    queryLoggingService37.comForKe(kernelTransaction41);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    java.lang.Throwable throwable44 = null;
    queryLoggingService37.faleForExTh(executingQuery43, throwable44);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction46 = null;
    queryLoggingService37.rolcForKe(kernelTransaction46);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction48 = null;
    java.lang.Throwable throwable49 = null;
    queryLoggingService37.rolcForKe(kernelTransaction48, throwable49);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery51 = null;
    queryLoggingService37.sucsForEx(executingQuery51);
    boolean boolean53 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService37);
    java.lang.String str54 = queryLoggingServiceExtensionFactory3.getName();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(queryLoggingService12);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertEquals(
        "'" + str30 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str30, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str31 + "' != '" + "query-logging" + "'", str31,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str32 + "' != '" + "query-logging" + "'", str32,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass33);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertEquals(
        "'" + str35 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str35, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str36 + "' != '" + "query-logging" + "'", str36,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService37);
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    org.junit.Assert.assertEquals("'" + str54 + "' != '" + "query-logging" + "'", str54,
        "query-logging");
  }

  @Test
  public void test2859() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2859");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService7 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService7.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService7.sucsForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService7.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService7.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService7.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService7.sucsForEx(executingQuery21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService7.rolcForKe(kernelTransaction23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService7.rolcForKe(kernelTransaction25, throwable26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService7.comForKe(kernelTransaction28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryLoggingService7.sucsForEx(executingQuery30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService7.strForEx(executingQuery32);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    java.lang.Throwable throwable36 = null;
    queryLoggingService7.faleForExTh(executingQuery35, throwable36);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction38 = null;
    queryLoggingService7.comForKe(kernelTransaction38);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    queryLoggingService7.comForKe(kernelTransaction40);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction42 = null;
    queryLoggingService7.strForEx(kernelTransaction42);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService7);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
  }

  @Test
  public void test2860() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2860");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.Object obj5 = new java.lang.Object();
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals(obj5);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory8 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean10 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) (-1L));
    boolean boolean11 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) boolean10);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService12 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService12.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService12.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService12.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService12.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService12.strForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) executingQuery22);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService25 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    queryLoggingService25.rolcForKe(kernelTransaction26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService25.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryLoggingService25.faleForExTh(executingQuery31, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction34 = null;
    queryLoggingService25.rolcForKe(kernelTransaction34);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService25.faleForExTh(executingQuery36, throwable37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService25.sucsForEx(executingQuery39);
    boolean boolean41 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingService25);
    boolean boolean42 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean41);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService43 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery44 = null;
    queryLoggingService43.strForEx(executingQuery44);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery46 = null;
    java.lang.Throwable throwable47 = null;
    queryLoggingService43.faleForExTh(executingQuery46, throwable47);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction49 = null;
    queryLoggingService43.rolcForKe(kernelTransaction49);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery51 = null;
    queryLoggingService43.sucsForEx(executingQuery51);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery53 = null;
    queryLoggingService43.strForEx(executingQuery53);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery55 = null;
    queryLoggingService43.sucsForEx(executingQuery55);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery57 = null;
    queryLoggingService43.sucsForEx(executingQuery57);
    boolean boolean59 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery57);
    java.lang.String str60 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str61 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(queryLoggingService12);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(queryLoggingService25);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertNotNull(queryLoggingService43);
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    org.junit.Assert.assertEquals("'" + str60 + "' != '" + "query-logging" + "'", str60,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str61 + "' != '" + "query-logging" + "'", str61,
        "query-logging");
  }

  @Test
  public void test2861() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2861");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2862() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2862");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    java.lang.Class<?> wildcardClass8 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass8);
  }

  @Test
  public void test2863() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2863");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.strForEx(kernelTransaction21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.faleForExTh(executingQuery23, throwable24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2864() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2864");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean9 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory10 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str11 = queryLoggingServiceExtensionFactory10.toString();
    boolean boolean12 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory10);
    boolean boolean13 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    java.lang.String str14 = queryLoggingServiceExtensionFactory7.getName();
    java.lang.String str15 = queryLoggingServiceExtensionFactory7.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService16 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService16.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService16.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService16.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService16.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService16.faleForExTh(executingQuery27, "hi!");
    boolean boolean30 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingService16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryLoggingService16.faleForExTh(executingQuery31, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction34 = null;
    queryLoggingService16.strForEx(kernelTransaction34);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "query-logging" + "'", str14,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str15 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str15, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService16);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
  }

  @Test
  public void test2865() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2865");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.strForEx(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.faleForExTh(executingQuery11, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17, throwable18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.strForEx(executingQuery20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2866() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2866");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.comForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20, "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2867() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2867");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2868() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2868");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService8.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService8.sucsForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery22);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService25 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService25.strForEx(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService25.faleForExTh(executingQuery28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService25.rolcForKe(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService25.sucsForEx(executingQuery33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService25.strForEx(executingQuery35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService25.sucsForEx(executingQuery37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService25.sucsForEx(executingQuery39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    queryLoggingService25.sucsForEx(executingQuery41);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService25.strForEx(executingQuery43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    java.lang.Throwable throwable46 = null;
    queryLoggingService25.rolcForKe(kernelTransaction45, throwable46);
    boolean boolean48 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService25);
    java.lang.String str49 = queryLoggingServiceExtensionFactory3.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory50 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory51 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean53 = queryLoggingServiceExtensionFactory51.equals((java.lang.Object) (-1L));
    boolean boolean54 = queryLoggingServiceExtensionFactory50.equals((java.lang.Object) boolean53);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService55 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction56 = null;
    queryLoggingService55.rolcForKe(kernelTransaction56);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction58 = null;
    java.lang.Throwable throwable59 = null;
    queryLoggingService55.rolcForKe(kernelTransaction58, throwable59);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction61 = null;
    queryLoggingService55.rolcForKe(kernelTransaction61);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery63 = null;
    queryLoggingService55.sucsForEx(executingQuery63);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction65 = null;
    queryLoggingService55.strForEx(kernelTransaction65);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery67 = null;
    queryLoggingService55.faleForExTh(executingQuery67,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    boolean boolean70 = queryLoggingServiceExtensionFactory50.equals(
        (java.lang.Object) "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService71 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction72 = null;
    queryLoggingService71.rolcForKe(kernelTransaction72);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction74 = null;
    java.lang.Throwable throwable75 = null;
    queryLoggingService71.rolcForKe(kernelTransaction74, throwable75);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction77 = null;
    queryLoggingService71.rolcForKe(kernelTransaction77);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery79 = null;
    queryLoggingService71.sucsForEx(executingQuery79);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction81 = null;
    queryLoggingService71.strForEx(kernelTransaction81);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery83 = null;
    queryLoggingService71.faleForExTh(executingQuery83,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction86 = null;
    java.lang.Throwable throwable87 = null;
    queryLoggingService71.rolcForKe(kernelTransaction86, throwable87);
    boolean boolean89 = queryLoggingServiceExtensionFactory50.equals(
        (java.lang.Object) queryLoggingService71);
    boolean boolean90 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) boolean89);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(queryLoggingService25);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    org.junit.Assert.assertEquals(
        "'" + str49 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str49, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    org.junit.Assert.assertNotNull(queryLoggingService55);
    org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    org.junit.Assert.assertNotNull(queryLoggingService71);
    org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
  }

  @Test
  public void test2869() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2869");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.faleForExTh(executingQuery23, throwable24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2870() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2870");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl6 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction7 = null;
    org.neo4j.configuration.Config config9 = null;
    java.nio.file.Path path10 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl6.init(fileSystemAbstraction7, "hi!", config9,
        path10);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction12 = null;
    org.neo4j.configuration.Config config14 = null;
    java.nio.file.Path path15 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl6.init(fileSystemAbstraction12, "", config14,
        path15);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.configuration.Config config19 = null;
    java.nio.file.Path path20 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl6.init(fileSystemAbstraction17,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config19, path20);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction22 = null;
    org.neo4j.configuration.Config config24 = null;
    java.nio.file.Path path25 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl6.init(fileSystemAbstraction22, "", config24,
        path25);
    boolean boolean27 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) diagnosticsOfflineReportProviderQueryLoggingImpl6);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction28 = null;
    org.neo4j.configuration.Config config30 = null;
    java.nio.file.Path path31 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl6.init(fileSystemAbstraction28,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config30, path31);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction33 = null;
    org.neo4j.configuration.Config config35 = null;
    java.nio.file.Path path36 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl6.init(fileSystemAbstraction33, "query-logging",
        config35, path36);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction38 = null;
    org.neo4j.configuration.Config config40 = null;
    java.nio.file.Path path41 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl6.init(fileSystemAbstraction38, "", config40,
        path41);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
  }

  @Test
  public void test2871() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2871");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.strForEx(kernelTransaction19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2872() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2872");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str2 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService3 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService3.rolcForKe(kernelTransaction4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    queryLoggingService3.sucsForEx(executingQuery7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService3.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService3.faleForExTh(executingQuery11, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService3.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService3.sucsForEx(executingQuery17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService3.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService3.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService3.comForKe(kernelTransaction24);
    java.lang.Class<?> wildcardClass26 = queryLoggingService3.getClass();
    boolean boolean27 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) wildcardClass26);
    java.lang.String str28 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str29 = queryLoggingServiceExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext30 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies31 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle32 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext30, queryLoggingServiceDependencies31);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str2, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService3);
    org.junit.Assert.assertNotNull(wildcardClass26);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertEquals(
        "'" + str28 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str28, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str29 + "' != '" + "query-logging" + "'", str29,
        "query-logging");
  }

  @Test
  public void test2873() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2873");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.comForKe(kernelTransaction10);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2874() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2874");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.strForEx(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.faleForExTh(executingQuery22, "hi!");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2875() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2875");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory8 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean10 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) (-1L));
    boolean boolean11 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) boolean10);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService12 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService12.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService12.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService12.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService12.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService12.strForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) executingQuery22);
    boolean boolean25 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory26 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean28 = queryLoggingServiceExtensionFactory26.equals((java.lang.Object) (short) 1);
    java.lang.String str29 = queryLoggingServiceExtensionFactory26.toString();
    boolean boolean30 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory26);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService31 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction32 = null;
    java.lang.Throwable throwable33 = null;
    queryLoggingService31.rolcForKe(kernelTransaction32, throwable33);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction35 = null;
    queryLoggingService31.comForKe(kernelTransaction35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService31.strForEx(executingQuery37);
    boolean boolean39 = queryLoggingServiceExtensionFactory26.equals(
        (java.lang.Object) queryLoggingService31);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    queryLoggingService31.rolcForKe(kernelTransaction40);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction42 = null;
    queryLoggingService31.rolcForKe(kernelTransaction42);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    queryLoggingService31.rolcForKe(kernelTransaction44);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery46 = null;
    queryLoggingService31.faleForExTh(executingQuery46, "hi!");
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(queryLoggingService12);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertEquals(
        "'" + str29 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str29, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    org.junit.Assert.assertNotNull(queryLoggingService31);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
  }

  @Test
  public void test2876() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2876");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.Object obj5 = new java.lang.Object();
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals(obj5);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory8 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean10 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory11 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str12 = queryLoggingServiceExtensionFactory11.toString();
    boolean boolean13 = queryLoggingServiceExtensionFactory8.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory11);
    boolean boolean15 = queryLoggingServiceExtensionFactory11.equals((java.lang.Object) 100.0d);
    java.lang.String str16 = queryLoggingServiceExtensionFactory11.getName();
    java.lang.String str17 = queryLoggingServiceExtensionFactory11.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService18 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService18.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService18.comForKe(kernelTransaction22);
    boolean boolean24 = queryLoggingServiceExtensionFactory11.equals(
        (java.lang.Object) queryLoggingService18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService18.faleForExTh(executingQuery25,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService18.rolcForKe(kernelTransaction28);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    queryLoggingService18.rolcForKe(kernelTransaction30);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction32 = null;
    queryLoggingService18.strForEx(kernelTransaction32);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction35 = null;
    queryLoggingService18.comForKe(kernelTransaction35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    java.lang.Throwable throwable38 = null;
    queryLoggingService18.faleForExTh(executingQuery37, throwable38);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertEquals(
        "'" + str12 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str12, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "query-logging" + "'", str16,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str17 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str17, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService18);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
  }

  @Test
  public void test2877() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2877");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.comForKe(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23, throwable24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2878() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2878");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService8.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService8.sucsForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery22);
    java.lang.String str25 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str26 = queryLoggingServiceExtensionFactory3.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory27 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str28 = queryLoggingServiceExtensionFactory27.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService29 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    java.lang.Throwable throwable31 = null;
    queryLoggingService29.rolcForKe(kernelTransaction30, throwable31);
    boolean boolean33 = queryLoggingServiceExtensionFactory27.equals(
        (java.lang.Object) throwable31);
    java.lang.String str34 = queryLoggingServiceExtensionFactory27.getName();
    java.lang.String str35 = queryLoggingServiceExtensionFactory27.toString();
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl36 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction37 = null;
    org.neo4j.configuration.Config config39 = null;
    java.nio.file.Path path40 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl36.init(fileSystemAbstraction37, "hi!",
        config39, path40);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction42 = null;
    org.neo4j.configuration.Config config44 = null;
    java.nio.file.Path path45 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl36.init(fileSystemAbstraction42,
        "query-logging", config44, path45);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction47 = null;
    org.neo4j.configuration.Config config49 = null;
    java.nio.file.Path path50 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl36.init(fileSystemAbstraction47,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config49, path50);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction52 = null;
    org.neo4j.configuration.Config config54 = null;
    java.nio.file.Path path55 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl36.init(fileSystemAbstraction52, "", config54,
        path55);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction57 = null;
    org.neo4j.configuration.Config config59 = null;
    java.nio.file.Path path60 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl36.init(fileSystemAbstraction57, "hi!",
        config59, path60);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction62 = null;
    org.neo4j.configuration.Config config64 = null;
    java.nio.file.Path path65 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl36.init(fileSystemAbstraction62, "hi!",
        config64, path65);
    boolean boolean67 = queryLoggingServiceExtensionFactory27.equals((java.lang.Object) config64);
    boolean boolean68 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory27);
    java.lang.String str69 = queryLoggingServiceExtensionFactory27.toString();
    java.lang.Object obj70 = null;
    boolean boolean71 = queryLoggingServiceExtensionFactory27.equals(obj70);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertEquals(
        "'" + str25 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str25, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "query-logging" + "'", str26,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str28 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str28, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService29);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertEquals("'" + str34 + "' != '" + "query-logging" + "'", str34,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str35 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str35, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    org.junit.Assert.assertEquals(
        "'" + str69 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str69, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
  }

  @Test
  public void test2879() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2879");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.comForKe(kernelTransaction15);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2880() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2880");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService5.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService5.strForEx(executingQuery15);
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery15);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService18 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService18.strForEx(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService18.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService18.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService18.comForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService18.faleForExTh(executingQuery29, "");
    boolean boolean32 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) "");
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl33 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction34 = null;
    org.neo4j.configuration.Config config36 = null;
    java.nio.file.Path path37 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl33.init(fileSystemAbstraction34, "hi!",
        config36, path37);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction39 = null;
    org.neo4j.configuration.Config config41 = null;
    java.nio.file.Path path42 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl33.init(fileSystemAbstraction39,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config41, path42);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction44 = null;
    org.neo4j.configuration.Config config46 = null;
    java.nio.file.Path path47 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl33.init(fileSystemAbstraction44, "", config46,
        path47);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction49 = null;
    org.neo4j.configuration.Config config51 = null;
    java.nio.file.Path path52 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl33.init(fileSystemAbstraction49, "hi!",
        config51, path52);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction54 = null;
    org.neo4j.configuration.Config config56 = null;
    java.nio.file.Path path57 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl33.init(fileSystemAbstraction54, "", config56,
        path57);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction59 = null;
    org.neo4j.configuration.Config config61 = null;
    java.nio.file.Path path62 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl33.init(fileSystemAbstraction59, "hi!",
        config61, path62);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction64 = null;
    org.neo4j.configuration.Config config66 = null;
    java.nio.file.Path path67 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl33.init(fileSystemAbstraction64,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config66, path67);
    boolean boolean69 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    java.lang.Class<?> wildcardClass70 = queryLoggingServiceExtensionFactory0.getClass();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(queryLoggingService18);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    org.junit.Assert.assertNotNull(wildcardClass70);
  }

  @Test
  public void test2881() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2881");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "query-logging",
        config18, path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config23, path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config28, path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31, "", config33,
        path34);
  }

  @Test
  public void test2882() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2882");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.strForEx(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.comForKe(kernelTransaction23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService0.rolcForKe(kernelTransaction25, throwable26);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2883() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2883");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.sucsForEx(executingQuery10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.comForKe(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2884() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2884");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.strForEx(kernelTransaction21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.faleForExTh(executingQuery23, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    java.lang.Throwable throwable27 = null;
    queryLoggingService0.faleForExTh(executingQuery26, throwable27);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2885() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2885");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.strForEx(executingQuery16);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2886() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2886");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.strForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2887() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2887");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.sucsForEx(executingQuery9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.faleForExTh(executingQuery13, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2888() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2888");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.sucsForEx(executingQuery17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.comForKe(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService0.faleForExTh(executingQuery24,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService0.strForEx(kernelTransaction27);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService0.rolcForKe(kernelTransaction29, throwable30);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction32 = null;
    queryLoggingService0.strForEx(kernelTransaction32);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2889() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2889");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.strForEx(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.sucsForEx(executingQuery22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.strForEx(kernelTransaction24);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    queryLoggingService0.rolcForKe(kernelTransaction26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService0.sucsForEx(executingQuery28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryLoggingService0.strForEx(executingQuery30);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2890() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2890");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService0.faleForExTh(executingQuery22, throwable23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService0.comForKe(kernelTransaction25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService0.comForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService0.sucsForEx(executingQuery29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryLoggingService0.strForEx(executingQuery31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService0.strForEx(executingQuery33);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction35 = null;
    java.lang.Throwable throwable36 = null;
    queryLoggingService0.rolcForKe(kernelTransaction35, throwable36);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2891() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2891");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.faleForExTh(executingQuery1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.faleForExTh(executingQuery4,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    queryLoggingService0.faleForExTh(executingQuery7, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.faleForExTh(executingQuery10, throwable11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.faleForExTh(executingQuery13, throwable14);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2892() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2892");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.strForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.sucsForEx(executingQuery22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService0.strForEx(executingQuery24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2893() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2893");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService10 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService10.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService10.comForKe(kernelTransaction14);
    boolean boolean16 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService10.faleForExTh(executingQuery17,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService10.rolcForKe(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService10.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService10.strForEx(kernelTransaction24);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    java.lang.Throwable throwable27 = null;
    queryLoggingService10.rolcForKe(kernelTransaction26, throwable27);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str9, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService10);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
  }

  @Test
  public void test2894() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2894");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.strForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2895() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2895");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.strForEx(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.faleForExTh(executingQuery13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23, throwable24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2896() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2896");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory3.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService7 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService7.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService7.faleForExTh(executingQuery10, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService7.faleForExTh(executingQuery13, throwable14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService7.faleForExTh(executingQuery16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService7.strForEx(kernelTransaction19);
    java.lang.Class<?> wildcardClass21 = queryLoggingService7.getClass();
    boolean boolean22 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService7);
    java.lang.String str23 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str24 = queryLoggingServiceExtensionFactory3.toString();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str6, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService7);
    org.junit.Assert.assertNotNull(wildcardClass21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertEquals(
        "'" + str23 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str23, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str24 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str24, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test2897() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2897");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.strForEx(kernelTransaction21);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2898() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2898");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.strForEx(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.faleForExTh(executingQuery20, throwable21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService0.strForEx(kernelTransaction25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService0.sucsForEx(executingQuery27);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    queryLoggingService0.strForEx(kernelTransaction29);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2899() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2899");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.faleForExTh(executingQuery12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.comForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23, throwable24);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    java.lang.Throwable throwable27 = null;
    queryLoggingService0.rolcForKe(kernelTransaction26, throwable27);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2900() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2900");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.faleForExTh(executingQuery11, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.comForKe(kernelTransaction16);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2901() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2901");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService2 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService2.rolcForKe(kernelTransaction3, throwable4);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable4);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str11 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str12 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService2);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str9, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "query-logging" + "'", str10,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "query-logging" + "'", str11,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str12 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str12, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test2902() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2902");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory2 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean5 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) (-1L));
    boolean boolean6 = queryLoggingServiceExtensionFactory2.equals((java.lang.Object) boolean5);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService7 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService7.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService7.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService7.rolcForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService7.sucsForEx(executingQuery15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService7.strForEx(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService7.faleForExTh(executingQuery19,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    boolean boolean22 = queryLoggingServiceExtensionFactory2.equals(
        (java.lang.Object) "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService23 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService23.faleForExTh(executingQuery24,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService23.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService23.rolcForKe(kernelTransaction29, throwable30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService23.strForEx(executingQuery32);
    boolean boolean34 = queryLoggingServiceExtensionFactory2.equals(
        (java.lang.Object) queryLoggingService23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction35 = null;
    queryLoggingService23.comForKe(kernelTransaction35);
    boolean boolean37 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery38 = null;
    java.lang.Throwable throwable39 = null;
    queryLoggingService23.faleForExTh(executingQuery38, throwable39);
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNotNull(queryLoggingService7);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertNotNull(queryLoggingService23);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
  }

  @Test
  public void test2903() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2903");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService0.strForEx(kernelTransaction8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.faleForExTh(executingQuery10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.sucsForEx(executingQuery21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService0.rolcForKe(kernelTransaction25);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2904() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2904");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.comForKe(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.comForKe(kernelTransaction18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2905() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2905");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14, throwable15);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2906() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2906");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.faleForExTh(executingQuery11, "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2907() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2907");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.sucsForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.comForKe(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.strForEx(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.strForEx(executingQuery19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2908() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2908");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.rolcForKe(kernelTransaction4, throwable5);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.strForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16, throwable17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.faleForExTh(executingQuery19, throwable20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.sucsForEx(executingQuery22);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2909() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2909");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2910() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2910");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj9 = new java.lang.Object();
    java.lang.Class<?> wildcardClass10 = obj9.getClass();
    boolean boolean11 = queryLoggingServiceExtensionFactory0.equals(obj9);
    java.lang.String str12 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj13 = null;
    boolean boolean14 = queryLoggingServiceExtensionFactory0.equals(obj13);
    java.lang.String str15 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str16 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory17 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory18 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean20 = queryLoggingServiceExtensionFactory18.equals((java.lang.Object) (-1L));
    boolean boolean21 = queryLoggingServiceExtensionFactory17.equals((java.lang.Object) boolean20);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService22 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService22.rolcForKe(kernelTransaction23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService22.rolcForKe(kernelTransaction25, throwable26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService22.rolcForKe(kernelTransaction28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryLoggingService22.sucsForEx(executingQuery30);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction32 = null;
    queryLoggingService22.strForEx(kernelTransaction32);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    queryLoggingService22.faleForExTh(executingQuery34,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    boolean boolean37 = queryLoggingServiceExtensionFactory17.equals(
        (java.lang.Object) "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService38 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction39 = null;
    queryLoggingService38.rolcForKe(kernelTransaction39);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction41 = null;
    java.lang.Throwable throwable42 = null;
    queryLoggingService38.rolcForKe(kernelTransaction41, throwable42);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    queryLoggingService38.rolcForKe(kernelTransaction44);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery46 = null;
    queryLoggingService38.sucsForEx(executingQuery46);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction48 = null;
    queryLoggingService38.strForEx(kernelTransaction48);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery50 = null;
    queryLoggingService38.faleForExTh(executingQuery50,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction53 = null;
    java.lang.Throwable throwable54 = null;
    queryLoggingService38.rolcForKe(kernelTransaction53, throwable54);
    boolean boolean56 = queryLoggingServiceExtensionFactory17.equals(
        (java.lang.Object) queryLoggingService38);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory57 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory58 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean60 = queryLoggingServiceExtensionFactory58.equals((java.lang.Object) (-1L));
    boolean boolean61 = queryLoggingServiceExtensionFactory57.equals((java.lang.Object) boolean60);
    boolean boolean63 = queryLoggingServiceExtensionFactory57.equals((java.lang.Object) 0L);
    java.lang.String str64 = queryLoggingServiceExtensionFactory57.toString();
    java.lang.String str65 = queryLoggingServiceExtensionFactory57.getName();
    boolean boolean66 = queryLoggingServiceExtensionFactory17.equals((java.lang.Object) str65);
    java.lang.String str67 = queryLoggingServiceExtensionFactory17.getName();
    java.lang.String str68 = queryLoggingServiceExtensionFactory17.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService69 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction70 = null;
    queryLoggingService69.rolcForKe(kernelTransaction70);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction72 = null;
    java.lang.Throwable throwable73 = null;
    queryLoggingService69.rolcForKe(kernelTransaction72, throwable73);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction75 = null;
    queryLoggingService69.rolcForKe(kernelTransaction75);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery77 = null;
    queryLoggingService69.sucsForEx(executingQuery77);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction79 = null;
    queryLoggingService69.strForEx(kernelTransaction79);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery81 = null;
    queryLoggingService69.faleForExTh(executingQuery81,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery84 = null;
    queryLoggingService69.faleForExTh(executingQuery84, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction87 = null;
    queryLoggingService69.rolcForKe(kernelTransaction87);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction89 = null;
    queryLoggingService69.rolcForKe(kernelTransaction89);
    boolean boolean91 = queryLoggingServiceExtensionFactory17.equals(
        (java.lang.Object) queryLoggingService69);
    java.lang.Class<?> wildcardClass92 = queryLoggingService69.getClass();
    boolean boolean93 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) wildcardClass92);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "query-logging" + "'", str12,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertEquals(
        "'" + str15 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str15, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str16 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str16, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    org.junit.Assert.assertNotNull(queryLoggingService22);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertNotNull(queryLoggingService38);
    org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    org.junit.Assert.assertEquals(
        "'" + str64 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str64, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str65 + "' != '" + "query-logging" + "'", str65,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    org.junit.Assert.assertEquals("'" + str67 + "' != '" + "query-logging" + "'", str67,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str68 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str68, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService69);
    org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    org.junit.Assert.assertNotNull(wildcardClass92);
    org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
  }

  @Test
  public void test2911() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2911");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.sucsForEx(executingQuery11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.sucsForEx(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.strForEx(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService0.faleForExTh(executingQuery26,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    queryLoggingService0.strForEx(kernelTransaction29);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2912() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2912");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj9 = new java.lang.Object();
    java.lang.Class<?> wildcardClass10 = obj9.getClass();
    boolean boolean11 = queryLoggingServiceExtensionFactory0.equals(obj9);
    java.lang.String str12 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj13 = null;
    boolean boolean14 = queryLoggingServiceExtensionFactory0.equals(obj13);
    java.lang.String str15 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory16 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean18 = queryLoggingServiceExtensionFactory16.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService19 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService19.rolcForKe(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService19.rolcForKe(kernelTransaction22, throwable23);
    boolean boolean25 = queryLoggingServiceExtensionFactory16.equals(
        (java.lang.Object) queryLoggingService19);
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory16);
    java.lang.String str27 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService28 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService28.rolcForKe(kernelTransaction29, throwable30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService28.sucsForEx(executingQuery32);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction34 = null;
    queryLoggingService28.comForKe(kernelTransaction34);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery36 = null;
    queryLoggingService28.faleForExTh(executingQuery36, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction39 = null;
    queryLoggingService28.strForEx(kernelTransaction39);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction41 = null;
    queryLoggingService28.comForKe(kernelTransaction41);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService28.strForEx(executingQuery43);
    boolean boolean45 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery43);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory46 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory47 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean49 = queryLoggingServiceExtensionFactory47.equals((java.lang.Object) (-1L));
    boolean boolean50 = queryLoggingServiceExtensionFactory46.equals((java.lang.Object) boolean49);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService51 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery52 = null;
    queryLoggingService51.strForEx(executingQuery52);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery54 = null;
    java.lang.Throwable throwable55 = null;
    queryLoggingService51.faleForExTh(executingQuery54, throwable55);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction57 = null;
    queryLoggingService51.rolcForKe(kernelTransaction57);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery59 = null;
    queryLoggingService51.sucsForEx(executingQuery59);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery61 = null;
    queryLoggingService51.strForEx(executingQuery61);
    boolean boolean63 = queryLoggingServiceExtensionFactory46.equals(
        (java.lang.Object) executingQuery61);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService64 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction65 = null;
    queryLoggingService64.rolcForKe(kernelTransaction65);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction67 = null;
    java.lang.Throwable throwable68 = null;
    queryLoggingService64.rolcForKe(kernelTransaction67, throwable68);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery70 = null;
    queryLoggingService64.faleForExTh(executingQuery70, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction73 = null;
    queryLoggingService64.rolcForKe(kernelTransaction73);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery75 = null;
    java.lang.Throwable throwable76 = null;
    queryLoggingService64.faleForExTh(executingQuery75, throwable76);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery78 = null;
    queryLoggingService64.sucsForEx(executingQuery78);
    boolean boolean80 = queryLoggingServiceExtensionFactory46.equals(
        (java.lang.Object) queryLoggingService64);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService81 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction82 = null;
    queryLoggingService81.rolcForKe(kernelTransaction82);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery84 = null;
    queryLoggingService81.faleForExTh(executingQuery84, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery87 = null;
    java.lang.Throwable throwable88 = null;
    queryLoggingService81.faleForExTh(executingQuery87, throwable88);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction90 = null;
    queryLoggingService81.rolcForKe(kernelTransaction90);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction92 = null;
    queryLoggingService81.comForKe(kernelTransaction92);
    boolean boolean94 = queryLoggingServiceExtensionFactory46.equals(
        (java.lang.Object) kernelTransaction92);
    java.lang.String str95 = queryLoggingServiceExtensionFactory46.getName();
    java.lang.String str96 = queryLoggingServiceExtensionFactory46.toString();
    boolean boolean97 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory46);
    java.lang.String str98 = queryLoggingServiceExtensionFactory46.getName();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "query-logging" + "'", str12,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertEquals(
        "'" + str15 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str15, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    org.junit.Assert.assertNotNull(queryLoggingService19);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "query-logging" + "'", str27,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService28);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    org.junit.Assert.assertNotNull(queryLoggingService51);
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    org.junit.Assert.assertNotNull(queryLoggingService64);
    org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    org.junit.Assert.assertNotNull(queryLoggingService81);
    org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    org.junit.Assert.assertEquals("'" + str95 + "' != '" + "query-logging" + "'", str95,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str96 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str96, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
    org.junit.Assert.assertEquals("'" + str98 + "' != '" + "query-logging" + "'", str98,
        "query-logging");
  }

  @Test
  public void test2913() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2913");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.faleForExTh(executingQuery12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17, throwable18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20, throwable21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.strForEx(executingQuery23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService0.faleForExTh(executingQuery25, throwable26);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2914() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2914");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "hi!", config13,
        path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "query-logging",
        config18, path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "", config23,
        path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "", config28,
        path29);
  }

  @Test
  public void test2915() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2915");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService0.strForEx(kernelTransaction8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.comForKe(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16, throwable17);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2916() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2916");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService2 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService2.strForEx(executingQuery3);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    java.lang.Throwable throwable6 = null;
    queryLoggingService2.faleForExTh(executingQuery5, throwable6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService2.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService2.sucsForEx(executingQuery10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService2.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService2.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService2.strForEx(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService2.strForEx(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService2.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService2.rolcForKe(kernelTransaction24, throwable25);
    boolean boolean27 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction24);
    java.lang.String str28 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str29 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str30 = queryLoggingServiceExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext31 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies32 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle33 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext31, queryLoggingServiceDependencies32);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService2);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertEquals(
        "'" + str28 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str28, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str29 + "' != '" + "query-logging" + "'", str29,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str30 + "' != '" + "query-logging" + "'", str30,
        "query-logging");
  }

  @Test
  public void test2917() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2917");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.Object obj5 = new java.lang.Object();
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals(obj5);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService8.comForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService8.strForEx(executingQuery19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService8.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService8.comForKe(kernelTransaction24);
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService8.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService8.faleForExTh(executingQuery29, throwable30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService8.faleForExTh(executingQuery32, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    java.lang.Throwable throwable36 = null;
    queryLoggingService8.faleForExTh(executingQuery35, throwable36);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
  }

  @Test
  public void test2918() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2918");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.strForEx(executingQuery15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.comForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.faleForExTh(executingQuery19, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.strForEx(executingQuery22);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2919() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2919");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.sucsForEx(executingQuery10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.comForKe(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.faleForExTh(executingQuery16, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.faleForExTh(executingQuery19, throwable20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.sucsForEx(executingQuery22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.comForKe(kernelTransaction24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2920() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2920");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "hi!", config13,
        path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config23, path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "hi!", config28,
        path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31, "", config33,
        path34);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction36 = null;
    org.neo4j.configuration.Config config38 = null;
    java.nio.file.Path path39 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction36, "query-logging",
        config38, path39);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction41 = null;
    org.neo4j.configuration.Config config43 = null;
    java.nio.file.Path path44 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction41,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config43, path44);
  }

  @Test
  public void test2921() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2921");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService2 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService2.rolcForKe(kernelTransaction3, throwable4);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable4);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService7 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService7.strForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService7.faleForExTh(executingQuery10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService7.rolcForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService7.sucsForEx(executingQuery15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService7.strForEx(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService7.faleForExTh(executingQuery19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService7.strForEx(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService7.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService7.strForEx(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService7.faleForExTh(executingQuery29, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService7.strForEx(executingQuery32);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery32);
    java.lang.String str35 = queryLoggingServiceExtensionFactory0.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext36 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies37 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle38 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext36, queryLoggingServiceDependencies37);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService2);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNotNull(queryLoggingService7);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertEquals(
        "'" + str35 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str35, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test2922() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2922");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService7 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService7.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService7.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService7.rolcForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService7.sucsForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService7.faleForExTh(executingQuery17, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService7.strForEx(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService7.rolcForKe(kernelTransaction22);
    boolean boolean24 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService7);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService25 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    java.lang.Throwable throwable27 = null;
    queryLoggingService25.rolcForKe(kernelTransaction26, throwable27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService25.sucsForEx(executingQuery29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryLoggingService25.strForEx(executingQuery31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService25.strForEx(executingQuery33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService25.strForEx(executingQuery35);
    boolean boolean37 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery35);
    java.lang.String str38 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str39 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str40 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService41 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction42 = null;
    java.lang.Throwable throwable43 = null;
    queryLoggingService41.rolcForKe(kernelTransaction42, throwable43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    queryLoggingService41.comForKe(kernelTransaction45);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    java.lang.Throwable throwable48 = null;
    queryLoggingService41.faleForExTh(executingQuery47, throwable48);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction50 = null;
    queryLoggingService41.comForKe(kernelTransaction50);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction52 = null;
    java.lang.Throwable throwable53 = null;
    queryLoggingService41.rolcForKe(kernelTransaction52, throwable53);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery55 = null;
    queryLoggingService41.strForEx(executingQuery55);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery57 = null;
    java.lang.Throwable throwable58 = null;
    queryLoggingService41.faleForExTh(executingQuery57, throwable58);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction60 = null;
    queryLoggingService41.comForKe(kernelTransaction60);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction62 = null;
    queryLoggingService41.strForEx(kernelTransaction62);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction64 = null;
    queryLoggingService41.rolcForKe(kernelTransaction64);
    boolean boolean66 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction64);
    java.lang.String str67 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str68 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str69 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService7);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(queryLoggingService25);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertEquals("'" + str38 + "' != '" + "query-logging" + "'", str38,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str39 + "' != '" + "query-logging" + "'", str39,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str40 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str40, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService41);
    org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    org.junit.Assert.assertEquals(
        "'" + str67 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str67, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str68 + "' != '" + "query-logging" + "'", str68,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str69 + "' != '" + "query-logging" + "'", str69,
        "query-logging");
  }

  @Test
  public void test2923() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2923");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.faleForExTh(executingQuery12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.comForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.sucsForEx(executingQuery19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction21);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2924() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2924");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17, throwable18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.strForEx(kernelTransaction20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.faleForExTh(executingQuery22, "");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2925() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2925");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.faleForExTh(executingQuery12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.strForEx(executingQuery21);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2926() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2926");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.faleForExTh(executingQuery21, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService0.faleForExTh(executingQuery24, throwable25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    java.lang.Throwable throwable28 = null;
    queryLoggingService0.rolcForKe(kernelTransaction27, throwable28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryLoggingService0.sucsForEx(executingQuery30);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2927() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2927");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService5.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService5.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService5.faleForExTh(executingQuery17,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    boolean boolean20 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService21 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService21.faleForExTh(executingQuery22,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService21.rolcForKe(kernelTransaction25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    java.lang.Throwable throwable28 = null;
    queryLoggingService21.rolcForKe(kernelTransaction27, throwable28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryLoggingService21.strForEx(executingQuery30);
    boolean boolean32 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService21);
    java.lang.String str33 = queryLoggingServiceExtensionFactory0.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext34 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies35 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle36 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext34, queryLoggingServiceDependencies35);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertNotNull(queryLoggingService21);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertEquals(
        "'" + str33 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str33, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test2928() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2928");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory3.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService7 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService7.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService7.faleForExTh(executingQuery10, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService7.faleForExTh(executingQuery13, throwable14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService7.faleForExTh(executingQuery16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService7.strForEx(kernelTransaction19);
    java.lang.Class<?> wildcardClass21 = queryLoggingService7.getClass();
    boolean boolean22 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService7);
    java.lang.String str23 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str24 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str25 = queryLoggingServiceExtensionFactory3.toString();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str6, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService7);
    org.junit.Assert.assertNotNull(wildcardClass21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "query-logging" + "'", str23,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "query-logging" + "'", str24,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str25 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str25, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test2929() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2929");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.faleForExTh(executingQuery1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.faleForExTh(executingQuery11, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2930() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2930");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.sucsForEx(executingQuery21);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2931() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2931");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2932() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2932");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.strForEx(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.faleForExTh(executingQuery20, throwable21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService0.strForEx(executingQuery25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService0.faleForExTh(executingQuery27, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryLoggingService0.sucsForEx(executingQuery30);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2933() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2933");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.strForEx(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.comForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.strForEx(executingQuery20);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2934() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2934");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService8.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService8.sucsForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery22);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService25 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService25.strForEx(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService25.faleForExTh(executingQuery28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService25.rolcForKe(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService25.sucsForEx(executingQuery33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService25.strForEx(executingQuery35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService25.sucsForEx(executingQuery37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService25.sucsForEx(executingQuery39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    queryLoggingService25.sucsForEx(executingQuery41);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService25.strForEx(executingQuery43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    java.lang.Throwable throwable46 = null;
    queryLoggingService25.rolcForKe(kernelTransaction45, throwable46);
    boolean boolean48 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService25);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService49 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery50 = null;
    queryLoggingService49.strForEx(executingQuery50);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery52 = null;
    java.lang.Throwable throwable53 = null;
    queryLoggingService49.faleForExTh(executingQuery52, throwable53);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    java.lang.Throwable throwable56 = null;
    queryLoggingService49.rolcForKe(kernelTransaction55, throwable56);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery58 = null;
    queryLoggingService49.faleForExTh(executingQuery58, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction61 = null;
    java.lang.Throwable throwable62 = null;
    queryLoggingService49.rolcForKe(kernelTransaction61, throwable62);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction64 = null;
    queryLoggingService49.comForKe(kernelTransaction64);
    boolean boolean66 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) kernelTransaction64);
    java.lang.String str67 = queryLoggingServiceExtensionFactory3.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService68 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction69 = null;
    queryLoggingService68.rolcForKe(kernelTransaction69);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery71 = null;
    queryLoggingService68.faleForExTh(executingQuery71, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery74 = null;
    java.lang.Throwable throwable75 = null;
    queryLoggingService68.faleForExTh(executingQuery74, throwable75);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction77 = null;
    queryLoggingService68.strForEx(kernelTransaction77);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery79 = null;
    queryLoggingService68.strForEx(executingQuery79);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction81 = null;
    java.lang.Throwable throwable82 = null;
    queryLoggingService68.rolcForKe(kernelTransaction81, throwable82);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery84 = null;
    queryLoggingService68.strForEx(executingQuery84);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction86 = null;
    queryLoggingService68.comForKe(kernelTransaction86);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction88 = null;
    queryLoggingService68.rolcForKe(kernelTransaction88);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction90 = null;
    queryLoggingService68.strForEx(kernelTransaction90);
    boolean boolean92 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService68);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(queryLoggingService25);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    org.junit.Assert.assertNotNull(queryLoggingService49);
    org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    org.junit.Assert.assertEquals(
        "'" + str67 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str67, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService68);
    org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
  }

  @Test
  public void test2935() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2935");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17, throwable18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.strForEx(executingQuery20);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2936() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2936");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1.0d));
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService3 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService3.rolcForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService3.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService3.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService3.faleForExTh(executingQuery12, throwable13);
    boolean boolean15 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery12);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory16 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean18 = queryLoggingServiceExtensionFactory16.equals((java.lang.Object) (short) 1);
    java.lang.String str19 = queryLoggingServiceExtensionFactory16.getName();
    boolean boolean20 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory16);
    java.lang.String str21 = queryLoggingServiceExtensionFactory16.getName();
    java.lang.String str22 = queryLoggingServiceExtensionFactory16.toString();
    java.lang.String str23 = queryLoggingServiceExtensionFactory16.getName();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(queryLoggingService3);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "query-logging" + "'", str19,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    org.junit.Assert.assertEquals("'" + str21 + "' != '" + "query-logging" + "'", str21,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str22 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str22, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "query-logging" + "'", str23,
        "query-logging");
  }

  @Test
  public void test2937() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2937");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.faleForExTh(executingQuery1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.comForKe(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.comForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.faleForExTh(executingQuery16, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.comForKe(kernelTransaction19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2938() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2938");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.comForKe(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.strForEx(kernelTransaction17);
    java.lang.Class<?> wildcardClass19 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass19);
  }

  @Test
  public void test2939() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2939");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    boolean boolean10 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 100);
    java.lang.String str11 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str12 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService13 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService13.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService13.sucsForEx(executingQuery17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService13.sucsForEx(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService13.sucsForEx(executingQuery21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService13.sucsForEx(executingQuery23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService13.comForKe(kernelTransaction25);
    boolean boolean27 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService13);
    java.lang.String str28 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str29 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str30 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str31 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "query-logging" + "'", str11,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str12 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str12, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService13);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertEquals("'" + str28 + "' != '" + "query-logging" + "'", str28,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str29 + "' != '" + "query-logging" + "'", str29,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str30 + "' != '" + "query-logging" + "'", str30,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str31 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str31, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test2940() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2940");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17, throwable18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.strForEx(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2941() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2941");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.faleForExTh(executingQuery11, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.faleForExTh(executingQuery17, throwable18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20, throwable21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.sucsForEx(executingQuery23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService0.faleForExTh(executingQuery25,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2942() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2942");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService10 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService10.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService10.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService10.faleForExTh(executingQuery16, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService10.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService10.rolcForKe(kernelTransaction21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService10.strForEx(executingQuery23);
    boolean boolean25 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery23);
    java.lang.String str26 = queryLoggingServiceExtensionFactory3.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory27 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean29 = queryLoggingServiceExtensionFactory27.equals((java.lang.Object) (short) 1);
    java.lang.String str30 = queryLoggingServiceExtensionFactory27.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService31 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService31.strForEx(executingQuery32);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    java.lang.Throwable throwable35 = null;
    queryLoggingService31.faleForExTh(executingQuery34, throwable35);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction37 = null;
    java.lang.Throwable throwable38 = null;
    queryLoggingService31.rolcForKe(kernelTransaction37, throwable38);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    queryLoggingService31.comForKe(kernelTransaction40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    queryLoggingService31.strForEx(executingQuery42);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery44 = null;
    queryLoggingService31.strForEx(executingQuery44);
    boolean boolean46 = queryLoggingServiceExtensionFactory27.equals(
        (java.lang.Object) executingQuery44);
    java.lang.String str47 = queryLoggingServiceExtensionFactory27.getName();
    boolean boolean48 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory27);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str9, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService10);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertEquals(
        "'" + str26 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str26, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertEquals("'" + str30 + "' != '" + "query-logging" + "'", str30,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService31);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    org.junit.Assert.assertEquals("'" + str47 + "' != '" + "query-logging" + "'", str47,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
  }

  @Test
  public void test2943() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2943");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.strForEx(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.faleForExTh(executingQuery15, throwable16);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2944() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2944");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14, "");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2945() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2945");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.strForEx(kernelTransaction11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2946() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2946");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.strForEx(executingQuery12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.strForEx(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.comForKe(kernelTransaction18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2947() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2947");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.strForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2948() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2948");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.strForEx(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService0.faleForExTh(executingQuery22, throwable23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService0.sucsForEx(executingQuery25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService0.faleForExTh(executingQuery27, "hi!");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2949() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2949");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService7 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService7.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService7.sucsForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService7.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService7.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService7.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService7.sucsForEx(executingQuery21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService7.rolcForKe(kernelTransaction23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService7.rolcForKe(kernelTransaction25, throwable26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService7.comForKe(kernelTransaction28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryLoggingService7.sucsForEx(executingQuery30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService7.strForEx(executingQuery32);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService7);
    java.lang.String str35 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService7);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertEquals("'" + str35 + "' != '" + "query-logging" + "'", str35,
        "query-logging");
  }

  @Test
  public void test2950() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2950");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.faleForExTh(executingQuery1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.faleForExTh(executingQuery4,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction7 = null;
    queryLoggingService0.strForEx(kernelTransaction7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.faleForExTh(executingQuery11, throwable12);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2951() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2951");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj9 = new java.lang.Object();
    java.lang.Class<?> wildcardClass10 = obj9.getClass();
    boolean boolean11 = queryLoggingServiceExtensionFactory0.equals(obj9);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory12 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean14 = queryLoggingServiceExtensionFactory12.equals((java.lang.Object) (short) 1);
    java.lang.String str15 = queryLoggingServiceExtensionFactory12.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService16 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService16.strForEx(executingQuery17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService16.faleForExTh(executingQuery19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService16.rolcForKe(kernelTransaction22, throwable23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService16.comForKe(kernelTransaction25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService16.strForEx(executingQuery27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService16.strForEx(executingQuery29);
    boolean boolean31 = queryLoggingServiceExtensionFactory12.equals(
        (java.lang.Object) executingQuery29);
    boolean boolean32 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery29);
    java.lang.String str33 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str34 = queryLoggingServiceExtensionFactory0.getName();
    boolean boolean36 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 10);
    java.lang.String str37 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str38 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str39 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "query-logging" + "'", str15,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService16);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertEquals(
        "'" + str33 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str33, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str34 + "' != '" + "query-logging" + "'", str34,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertEquals("'" + str37 + "' != '" + "query-logging" + "'", str37,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str38 + "' != '" + "query-logging" + "'", str38,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str39 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str39, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test2952() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2952");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2953() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2953");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.strForEx(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.sucsForEx(executingQuery21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.strForEx(executingQuery23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService0.strForEx(kernelTransaction25);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2954() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2954");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService5.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService5.strForEx(executingQuery15);
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery15);
    java.lang.String str18 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService19 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService19.rolcForKe(kernelTransaction20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService19.strForEx(executingQuery22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService19.faleForExTh(executingQuery24, throwable25);
    boolean boolean27 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService19);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService28 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    queryLoggingService28.rolcForKe(kernelTransaction29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryLoggingService28.faleForExTh(executingQuery31, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    java.lang.Throwable throwable35 = null;
    queryLoggingService28.faleForExTh(executingQuery34, throwable35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    java.lang.Throwable throwable38 = null;
    queryLoggingService28.faleForExTh(executingQuery37, throwable38);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    queryLoggingService28.strForEx(kernelTransaction40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    queryLoggingService28.faleForExTh(executingQuery42, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    queryLoggingService28.rolcForKe(kernelTransaction45);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction47 = null;
    queryLoggingService28.rolcForKe(kernelTransaction47);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery49 = null;
    java.lang.Throwable throwable50 = null;
    queryLoggingService28.faleForExTh(executingQuery49, throwable50);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction52 = null;
    queryLoggingService28.strForEx(kernelTransaction52);
    boolean boolean54 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction52);
    java.lang.String str55 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertEquals(
        "'" + str18 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str18, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService19);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertNotNull(queryLoggingService28);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    org.junit.Assert.assertEquals("'" + str55 + "' != '" + "query-logging" + "'", str55,
        "query-logging");
  }

  @Test
  public void test2955() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2955");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean9 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory10 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str11 = queryLoggingServiceExtensionFactory10.toString();
    boolean boolean12 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory10);
    boolean boolean13 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    java.lang.String str14 = queryLoggingServiceExtensionFactory7.getName();
    java.lang.String str15 = queryLoggingServiceExtensionFactory7.getName();
    java.lang.String str16 = queryLoggingServiceExtensionFactory7.toString();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "query-logging" + "'", str14,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "query-logging" + "'", str15,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str16 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str16, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test2956() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2956");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.strForEx(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.strForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2957() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2957");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.faleForExTh(executingQuery1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2958() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2958");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService8.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService8.sucsForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery22);
    java.lang.String str25 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str26 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str27 = queryLoggingServiceExtensionFactory3.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService28 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService28.strForEx(executingQuery29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    java.lang.Throwable throwable32 = null;
    queryLoggingService28.faleForExTh(executingQuery31, throwable32);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction34 = null;
    queryLoggingService28.rolcForKe(kernelTransaction34);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery36 = null;
    queryLoggingService28.faleForExTh(executingQuery36, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction39 = null;
    queryLoggingService28.strForEx(kernelTransaction39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    java.lang.Throwable throwable42 = null;
    queryLoggingService28.faleForExTh(executingQuery41, throwable42);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery44 = null;
    queryLoggingService28.faleForExTh(executingQuery44, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    queryLoggingService28.strForEx(executingQuery47);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction49 = null;
    queryLoggingService28.strForEx(kernelTransaction49);
    boolean boolean51 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService28);
    java.lang.String str52 = queryLoggingServiceExtensionFactory3.getName();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertEquals(
        "'" + str25 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str25, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "query-logging" + "'", str26,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "query-logging" + "'", str27,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService28);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    org.junit.Assert.assertEquals("'" + str52 + "' != '" + "query-logging" + "'", str52,
        "query-logging");
  }

  @Test
  public void test2959() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2959");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory8 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean10 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) (-1L));
    boolean boolean11 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) boolean10);
    java.lang.Object obj12 = new java.lang.Object();
    boolean boolean13 = queryLoggingServiceExtensionFactory7.equals(obj12);
    java.lang.String str14 = queryLoggingServiceExtensionFactory7.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService15 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService15.strForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService15.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService15.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService15.comForKe(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService15.strForEx(executingQuery26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService15.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService15.comForKe(kernelTransaction31);
    boolean boolean33 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingService15);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory35 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean37 = queryLoggingServiceExtensionFactory35.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory38 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str39 = queryLoggingServiceExtensionFactory38.toString();
    boolean boolean40 = queryLoggingServiceExtensionFactory35.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory38);
    boolean boolean42 = queryLoggingServiceExtensionFactory38.equals((java.lang.Object) 100.0d);
    java.lang.String str43 = queryLoggingServiceExtensionFactory38.toString();
    java.lang.String str44 = queryLoggingServiceExtensionFactory38.getName();
    java.lang.Object obj45 = null;
    boolean boolean46 = queryLoggingServiceExtensionFactory38.equals(obj45);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService47 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction48 = null;
    java.lang.Throwable throwable49 = null;
    queryLoggingService47.rolcForKe(kernelTransaction48, throwable49);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction51 = null;
    queryLoggingService47.comForKe(kernelTransaction51);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery53 = null;
    queryLoggingService47.sucsForEx(executingQuery53);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    queryLoggingService47.comForKe(kernelTransaction55);
    boolean boolean57 = queryLoggingServiceExtensionFactory38.equals(
        (java.lang.Object) queryLoggingService47);
    java.lang.Class<?> wildcardClass58 = queryLoggingServiceExtensionFactory38.getClass();
    boolean boolean59 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) wildcardClass58);
    java.lang.String str60 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str61 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str62 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService63 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery64 = null;
    queryLoggingService63.strForEx(executingQuery64);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery66 = null;
    java.lang.Throwable throwable67 = null;
    queryLoggingService63.faleForExTh(executingQuery66, throwable67);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction69 = null;
    java.lang.Throwable throwable70 = null;
    queryLoggingService63.rolcForKe(kernelTransaction69, throwable70);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery72 = null;
    queryLoggingService63.faleForExTh(executingQuery72, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction75 = null;
    java.lang.Throwable throwable76 = null;
    queryLoggingService63.rolcForKe(kernelTransaction75, throwable76);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery78 = null;
    queryLoggingService63.strForEx(executingQuery78);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction80 = null;
    queryLoggingService63.rolcForKe(kernelTransaction80);
    boolean boolean82 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService63);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "query-logging" + "'", str14,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService15);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertEquals(
        "'" + str39 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str39, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertEquals(
        "'" + str43 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str43, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str44 + "' != '" + "query-logging" + "'", str44,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    org.junit.Assert.assertNotNull(queryLoggingService47);
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    org.junit.Assert.assertNotNull(wildcardClass58);
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    org.junit.Assert.assertEquals("'" + str60 + "' != '" + "query-logging" + "'", str60,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str61 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str61, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str62 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str62, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService63);
    org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
  }

  @Test
  public void test2960() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2960");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.comForKe(kernelTransaction18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20, throwable21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.faleForExTh(executingQuery23, throwable24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService0.strForEx(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService0.faleForExTh(executingQuery28, throwable29);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2961() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2961");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20, throwable21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.comForKe(kernelTransaction23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService0.comForKe(kernelTransaction25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService0.strForEx(executingQuery27);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    queryLoggingService0.comForKe(kernelTransaction29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryLoggingService0.strForEx(executingQuery31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService0.strForEx(executingQuery33);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2962() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2962");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.strForEx(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.faleForExTh(executingQuery11, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17, throwable18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.strForEx(executingQuery22);
    java.lang.Class<?> wildcardClass24 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass24);
  }

  @Test
  public void test2963() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2963");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.strForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.faleForExTh(executingQuery22, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService0.strForEx(kernelTransaction25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService0.strForEx(executingQuery27);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    queryLoggingService0.comForKe(kernelTransaction29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    java.lang.Throwable throwable32 = null;
    queryLoggingService0.rolcForKe(kernelTransaction31, throwable32);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction34 = null;
    queryLoggingService0.strForEx(kernelTransaction34);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2964() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2964");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.sucsForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.faleForExTh(executingQuery17, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23, throwable24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2965() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2965");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory8 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean10 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) (-1L));
    boolean boolean11 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) boolean10);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService12 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService12.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService12.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService12.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService12.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService12.strForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) executingQuery22);
    boolean boolean25 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory26 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean28 = queryLoggingServiceExtensionFactory26.equals((java.lang.Object) (short) 1);
    java.lang.String str29 = queryLoggingServiceExtensionFactory26.toString();
    boolean boolean30 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory26);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService31 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService31.strForEx(executingQuery32);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    java.lang.Throwable throwable35 = null;
    queryLoggingService31.faleForExTh(executingQuery34, throwable35);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction37 = null;
    java.lang.Throwable throwable38 = null;
    queryLoggingService31.rolcForKe(kernelTransaction37, throwable38);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery40 = null;
    queryLoggingService31.faleForExTh(executingQuery40, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService31.sucsForEx(executingQuery43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    queryLoggingService31.comForKe(kernelTransaction45);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    queryLoggingService31.strForEx(executingQuery47);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery49 = null;
    queryLoggingService31.strForEx(executingQuery49);
    boolean boolean51 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery49);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService52 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction53 = null;
    java.lang.Throwable throwable54 = null;
    queryLoggingService52.rolcForKe(kernelTransaction53, throwable54);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery56 = null;
    java.lang.Throwable throwable57 = null;
    queryLoggingService52.faleForExTh(executingQuery56, throwable57);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery59 = null;
    java.lang.Throwable throwable60 = null;
    queryLoggingService52.faleForExTh(executingQuery59, throwable60);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction62 = null;
    java.lang.Throwable throwable63 = null;
    queryLoggingService52.rolcForKe(kernelTransaction62, throwable63);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction65 = null;
    queryLoggingService52.strForEx(kernelTransaction65);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery67 = null;
    queryLoggingService52.faleForExTh(executingQuery67, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery70 = null;
    queryLoggingService52.strForEx(executingQuery70);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery72 = null;
    queryLoggingService52.sucsForEx(executingQuery72);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery74 = null;
    queryLoggingService52.strForEx(executingQuery74);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction76 = null;
    java.lang.Throwable throwable77 = null;
    queryLoggingService52.rolcForKe(kernelTransaction76, throwable77);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery79 = null;
    queryLoggingService52.faleForExTh(executingQuery79, "query-logging");
    boolean boolean82 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery79);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(queryLoggingService12);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertEquals(
        "'" + str29 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str29, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    org.junit.Assert.assertNotNull(queryLoggingService31);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    org.junit.Assert.assertNotNull(queryLoggingService52);
    org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
  }

  @Test
  public void test2966() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2966");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService8.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService8.faleForExTh(executingQuery14, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService8.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService8.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService8.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService8.comForKe(kernelTransaction24);
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService8.sucsForEx(executingQuery27);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService8.rolcForKe(kernelTransaction29, throwable30);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
  }

  @Test
  public void test2967() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2967");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl6 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction7 = null;
    org.neo4j.configuration.Config config9 = null;
    java.nio.file.Path path10 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl6.init(fileSystemAbstraction7, "hi!", config9,
        path10);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction12 = null;
    org.neo4j.configuration.Config config14 = null;
    java.nio.file.Path path15 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl6.init(fileSystemAbstraction12, "", config14,
        path15);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.configuration.Config config19 = null;
    java.nio.file.Path path20 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl6.init(fileSystemAbstraction17,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config19, path20);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction22 = null;
    org.neo4j.configuration.Config config24 = null;
    java.nio.file.Path path25 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl6.init(fileSystemAbstraction22, "", config24,
        path25);
    boolean boolean27 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) diagnosticsOfflineReportProviderQueryLoggingImpl6);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction28 = null;
    org.neo4j.configuration.Config config30 = null;
    java.nio.file.Path path31 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl6.init(fileSystemAbstraction28,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config30, path31);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction33 = null;
    org.neo4j.configuration.Config config35 = null;
    java.nio.file.Path path36 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl6.init(fileSystemAbstraction33, "hi!", config35,
        path36);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
  }

  @Test
  public void test2968() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2968");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.faleForExTh(executingQuery23, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    java.lang.Throwable throwable27 = null;
    queryLoggingService0.rolcForKe(kernelTransaction26, throwable27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService0.faleForExTh(executingQuery29, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService0.sucsForEx(executingQuery32);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    java.lang.Throwable throwable35 = null;
    queryLoggingService0.faleForExTh(executingQuery34, throwable35);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction37 = null;
    queryLoggingService0.strForEx(kernelTransaction37);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2969() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2969");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.strForEx(executingQuery23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService0.faleForExTh(executingQuery25, "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2970() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2970");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.faleForExTh(executingQuery17, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20, "");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2971() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2971");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.faleForExTh(executingQuery12, throwable13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.strForEx(executingQuery15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.comForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.faleForExTh(executingQuery22, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService0.rolcForKe(kernelTransaction25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService0.comForKe(kernelTransaction27);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2972() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2972");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService5.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService5.strForEx(executingQuery15);
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery15);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService18 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService18.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService18.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService18.faleForExTh(executingQuery24, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService18.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService18.faleForExTh(executingQuery29, throwable30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService18.sucsForEx(executingQuery32);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService18);
    java.lang.String str35 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str36 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str37 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str38 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(queryLoggingService18);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertEquals(
        "'" + str35 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str35, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str36 + "' != '" + "query-logging" + "'", str36,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str37 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str37, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str38 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str38, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test2973() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2973");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService8.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService8.sucsForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery22);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService25 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService25.strForEx(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService25.faleForExTh(executingQuery28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService25.rolcForKe(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService25.sucsForEx(executingQuery33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService25.strForEx(executingQuery35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService25.sucsForEx(executingQuery37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService25.sucsForEx(executingQuery39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    queryLoggingService25.sucsForEx(executingQuery41);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService25.strForEx(executingQuery43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    java.lang.Throwable throwable46 = null;
    queryLoggingService25.rolcForKe(kernelTransaction45, throwable46);
    boolean boolean48 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService25);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService49 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery50 = null;
    queryLoggingService49.strForEx(executingQuery50);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery52 = null;
    java.lang.Throwable throwable53 = null;
    queryLoggingService49.faleForExTh(executingQuery52, throwable53);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    java.lang.Throwable throwable56 = null;
    queryLoggingService49.rolcForKe(kernelTransaction55, throwable56);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery58 = null;
    queryLoggingService49.faleForExTh(executingQuery58, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction61 = null;
    java.lang.Throwable throwable62 = null;
    queryLoggingService49.rolcForKe(kernelTransaction61, throwable62);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction64 = null;
    queryLoggingService49.comForKe(kernelTransaction64);
    boolean boolean66 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) kernelTransaction64);
    java.lang.String str67 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str68 = queryLoggingServiceExtensionFactory3.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService69 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction70 = null;
    queryLoggingService69.rolcForKe(kernelTransaction70);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction72 = null;
    java.lang.Throwable throwable73 = null;
    queryLoggingService69.rolcForKe(kernelTransaction72, throwable73);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction75 = null;
    java.lang.Throwable throwable76 = null;
    queryLoggingService69.rolcForKe(kernelTransaction75, throwable76);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery78 = null;
    java.lang.Throwable throwable79 = null;
    queryLoggingService69.faleForExTh(executingQuery78, throwable79);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction81 = null;
    queryLoggingService69.strForEx(kernelTransaction81);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery83 = null;
    queryLoggingService69.sucsForEx(executingQuery83);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery85 = null;
    java.lang.Throwable throwable86 = null;
    queryLoggingService69.faleForExTh(executingQuery85, throwable86);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction88 = null;
    queryLoggingService69.rolcForKe(kernelTransaction88);
    boolean boolean90 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) kernelTransaction88);
    java.lang.String str91 = queryLoggingServiceExtensionFactory3.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext92 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies93 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle94 = queryLoggingServiceExtensionFactory3.newInstance(
          extensionContext92, queryLoggingServiceDependencies93);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(queryLoggingService25);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    org.junit.Assert.assertNotNull(queryLoggingService49);
    org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    org.junit.Assert.assertEquals("'" + str67 + "' != '" + "query-logging" + "'", str67,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str68 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str68, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService69);
    org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    org.junit.Assert.assertEquals(
        "'" + str91 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str91, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test2974() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2974");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.strForEx(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.sucsForEx(executingQuery21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23, throwable24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2975() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2975");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.faleForExTh(executingQuery16, throwable17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.faleForExTh(executingQuery19,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService0.faleForExTh(executingQuery22, throwable23);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2976() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2976");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.strForEx(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.sucsForEx(executingQuery21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.comForKe(kernelTransaction23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService0.strForEx(executingQuery25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService0.faleForExTh(executingQuery27,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    java.lang.Throwable throwable31 = null;
    queryLoggingService0.rolcForKe(kernelTransaction30, throwable31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    java.lang.Throwable throwable34 = null;
    queryLoggingService0.faleForExTh(executingQuery33, throwable34);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService0.rolcForKe(kernelTransaction36, throwable37);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2977() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2977");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.faleForExTh(executingQuery16,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.faleForExTh(executingQuery19,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.faleForExTh(executingQuery22, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService0.sucsForEx(executingQuery25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    java.lang.Throwable throwable28 = null;
    queryLoggingService0.faleForExTh(executingQuery27, throwable28);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2978() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2978");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.comForKe(kernelTransaction21);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2979() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2979");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.faleForExTh(executingQuery17, throwable18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20, "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2980() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2980");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.sucsForEx(executingQuery10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    java.lang.Class<?> wildcardClass16 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass16);
  }

  @Test
  public void test2981() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2981");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str7 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory9 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory10 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean12 = queryLoggingServiceExtensionFactory10.equals((java.lang.Object) (-1L));
    boolean boolean13 = queryLoggingServiceExtensionFactory9.equals((java.lang.Object) boolean12);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService14 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService14.rolcForKe(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService14.rolcForKe(kernelTransaction17, throwable18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService14.rolcForKe(kernelTransaction20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService14.sucsForEx(executingQuery22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService14.strForEx(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService14.faleForExTh(executingQuery26,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    boolean boolean29 = queryLoggingServiceExtensionFactory9.equals(
        (java.lang.Object) "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService30 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryLoggingService30.faleForExTh(executingQuery31,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction34 = null;
    queryLoggingService30.rolcForKe(kernelTransaction34);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService30.rolcForKe(kernelTransaction36, throwable37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService30.strForEx(executingQuery39);
    boolean boolean41 = queryLoggingServiceExtensionFactory9.equals(
        (java.lang.Object) queryLoggingService30);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction42 = null;
    queryLoggingService30.comForKe(kernelTransaction42);
    boolean boolean44 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) kernelTransaction42);
    java.lang.String str45 = queryLoggingServiceExtensionFactory3.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService46 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction47 = null;
    java.lang.Throwable throwable48 = null;
    queryLoggingService46.rolcForKe(kernelTransaction47, throwable48);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery50 = null;
    java.lang.Throwable throwable51 = null;
    queryLoggingService46.faleForExTh(executingQuery50, throwable51);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery53 = null;
    java.lang.Throwable throwable54 = null;
    queryLoggingService46.faleForExTh(executingQuery53, throwable54);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction56 = null;
    java.lang.Throwable throwable57 = null;
    queryLoggingService46.rolcForKe(kernelTransaction56, throwable57);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction59 = null;
    queryLoggingService46.strForEx(kernelTransaction59);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery61 = null;
    queryLoggingService46.faleForExTh(executingQuery61, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery64 = null;
    queryLoggingService46.strForEx(executingQuery64);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery66 = null;
    queryLoggingService46.faleForExTh(executingQuery66, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery69 = null;
    java.lang.Throwable throwable70 = null;
    queryLoggingService46.faleForExTh(executingQuery69, throwable70);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction72 = null;
    java.lang.Throwable throwable73 = null;
    queryLoggingService46.rolcForKe(kernelTransaction72, throwable73);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction75 = null;
    queryLoggingService46.strForEx(kernelTransaction75);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction77 = null;
    java.lang.Throwable throwable78 = null;
    queryLoggingService46.rolcForKe(kernelTransaction77, throwable78);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction80 = null;
    queryLoggingService46.strForEx(kernelTransaction80);
    boolean boolean82 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) kernelTransaction80);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str6, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertNotNull(queryLoggingService14);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertNotNull(queryLoggingService30);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    org.junit.Assert.assertEquals("'" + str45 + "' != '" + "query-logging" + "'", str45,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService46);
    org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
  }

  @Test
  public void test2982() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2982");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str7 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory3.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService11 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService11.strForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService11.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService11.rolcForKe(kernelTransaction17, throwable18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService11.faleForExTh(executingQuery20, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService11.rolcForKe(kernelTransaction23, throwable24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService11.faleForExTh(executingQuery26, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    queryLoggingService11.comForKe(kernelTransaction29);
    boolean boolean31 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService11);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str6, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str10, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService11);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
  }

  @Test
  public void test2983() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2983");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.faleForExTh(executingQuery16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.comForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.strForEx(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.strForEx(kernelTransaction23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService0.sucsForEx(executingQuery25);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2984() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2984");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1.0d));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory4 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean6 = queryLoggingServiceExtensionFactory4.equals((java.lang.Object) (-1L));
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) boolean6);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    boolean boolean20 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery18);
    java.lang.String str21 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean22 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService23 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService23.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService23.comForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService23.sucsForEx(executingQuery29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService23.rolcForKe(kernelTransaction31);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    java.lang.Throwable throwable34 = null;
    queryLoggingService23.rolcForKe(kernelTransaction33, throwable34);
    boolean boolean36 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable34);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertEquals(
        "'" + str21 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str21, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    org.junit.Assert.assertNotNull(queryLoggingService23);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
  }

  @Test
  public void test2985() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2985");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.strForEx(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.sucsForEx(executingQuery21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.sucsForEx(executingQuery23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService0.faleForExTh(executingQuery25, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService0.rolcForKe(kernelTransaction28);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2986() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2986");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22, throwable23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService0.strForEx(executingQuery25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService0.strForEx(kernelTransaction27);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2987() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2987");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService8.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService8.sucsForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery22);
    java.lang.String str25 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str26 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str27 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str28 = queryLoggingServiceExtensionFactory3.toString();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertEquals(
        "'" + str25 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str25, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "query-logging" + "'", str26,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "query-logging" + "'", str27,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str28 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str28, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test2988() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2988");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    queryLoggingService0.strForEx(kernelTransaction3);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    queryLoggingService0.faleForExTh(executingQuery5, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8, throwable9);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2989() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2989");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.strForEx(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.strForEx(kernelTransaction23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService0.sucsForEx(executingQuery25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService0.strForEx(kernelTransaction27);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2990() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2990");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.comForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.strForEx(kernelTransaction11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.sucsForEx(executingQuery20);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2991() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2991");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory8 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean10 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) (-1L));
    boolean boolean11 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) boolean10);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService12 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService12.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService12.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService12.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService12.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService12.strForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) executingQuery22);
    boolean boolean25 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory26 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean28 = queryLoggingServiceExtensionFactory26.equals((java.lang.Object) (short) 1);
    java.lang.String str29 = queryLoggingServiceExtensionFactory26.toString();
    boolean boolean30 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory26);
    java.lang.String str31 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str32 = queryLoggingServiceExtensionFactory0.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext33 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies34 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle35 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext33, queryLoggingServiceDependencies34);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(queryLoggingService12);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertEquals(
        "'" + str29 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str29, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    org.junit.Assert.assertEquals(
        "'" + str31 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str31, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str32 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str32, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test2992() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2992");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.strForEx(executingQuery17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.strForEx(executingQuery21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService0.rolcForKe(kernelTransaction25, throwable26);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2993() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2993");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20, throwable21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23, throwable24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService0.faleForExTh(executingQuery26, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService0.rolcForKe(kernelTransaction29, throwable30);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction32 = null;
    queryLoggingService0.comForKe(kernelTransaction32);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2994() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2994");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.faleForExTh(executingQuery23, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService0.faleForExTh(executingQuery26,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService0.faleForExTh(executingQuery29, throwable30);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction32 = null;
    java.lang.Throwable throwable33 = null;
    queryLoggingService0.rolcForKe(kernelTransaction32, throwable33);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2995() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2995");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.comForKe(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.strForEx(kernelTransaction23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService0.rolcForKe(kernelTransaction25, throwable26);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2996() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2996");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.Object obj5 = new java.lang.Object();
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals(obj5);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService8.comForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService8.strForEx(executingQuery19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService8.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService8.comForKe(kernelTransaction24);
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService8);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService27 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService27.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryLoggingService27.sucsForEx(executingQuery31);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    queryLoggingService27.comForKe(kernelTransaction33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService27.faleForExTh(executingQuery35, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction38 = null;
    queryLoggingService27.strForEx(kernelTransaction38);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    java.lang.Throwable throwable41 = null;
    queryLoggingService27.rolcForKe(kernelTransaction40, throwable41);
    boolean boolean43 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction40);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService44 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    queryLoggingService44.rolcForKe(kernelTransaction45);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction47 = null;
    java.lang.Throwable throwable48 = null;
    queryLoggingService44.rolcForKe(kernelTransaction47, throwable48);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction50 = null;
    queryLoggingService44.rolcForKe(kernelTransaction50);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery52 = null;
    queryLoggingService44.sucsForEx(executingQuery52);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery54 = null;
    java.lang.Throwable throwable55 = null;
    queryLoggingService44.faleForExTh(executingQuery54, throwable55);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction57 = null;
    java.lang.Throwable throwable58 = null;
    queryLoggingService44.rolcForKe(kernelTransaction57, throwable58);
    boolean boolean60 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction57);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService61 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction62 = null;
    queryLoggingService61.rolcForKe(kernelTransaction62);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction64 = null;
    java.lang.Throwable throwable65 = null;
    queryLoggingService61.rolcForKe(kernelTransaction64, throwable65);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction67 = null;
    queryLoggingService61.rolcForKe(kernelTransaction67);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery69 = null;
    queryLoggingService61.sucsForEx(executingQuery69);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction71 = null;
    queryLoggingService61.strForEx(kernelTransaction71);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery73 = null;
    queryLoggingService61.faleForExTh(executingQuery73,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery76 = null;
    queryLoggingService61.faleForExTh(executingQuery76, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction79 = null;
    queryLoggingService61.rolcForKe(kernelTransaction79);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery81 = null;
    queryLoggingService61.strForEx(executingQuery81);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery83 = null;
    java.lang.Throwable throwable84 = null;
    queryLoggingService61.faleForExTh(executingQuery83, throwable84);
    java.lang.Class<?> wildcardClass86 = queryLoggingService61.getClass();
    boolean boolean87 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) wildcardClass86);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertNotNull(queryLoggingService27);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertNotNull(queryLoggingService44);
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    org.junit.Assert.assertNotNull(queryLoggingService61);
    org.junit.Assert.assertNotNull(wildcardClass86);
    org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
  }

  @Test
  public void test2997() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2997");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.faleForExTh(executingQuery16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.comForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.strForEx(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService0.faleForExTh(executingQuery25, throwable26);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2998() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2998");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.Object obj5 = new java.lang.Object();
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals(obj5);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService8.comForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService8.strForEx(executingQuery19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService8.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService8.comForKe(kernelTransaction24);
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService8.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService8.faleForExTh(executingQuery29, throwable30);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction32 = null;
    queryLoggingService8.rolcForKe(kernelTransaction32);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction34 = null;
    queryLoggingService8.comForKe(kernelTransaction34);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
  }

  @Test
  public void test2999() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test2999");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.Object obj5 = new java.lang.Object();
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals(obj5);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService8.comForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService8.strForEx(executingQuery19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService8.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService8.comForKe(kernelTransaction24);
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService8.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService8.faleForExTh(executingQuery29, throwable30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService8.faleForExTh(executingQuery32, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService8.sucsForEx(executingQuery35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService8.sucsForEx(executingQuery37);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
  }

  @Test
  public void test3000() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest5.test3000");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.comForKe(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23, throwable24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService0.faleForExTh(executingQuery26, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    queryLoggingService0.comForKe(kernelTransaction29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    java.lang.Throwable throwable32 = null;
    queryLoggingService0.faleForExTh(executingQuery31, throwable32);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }
}


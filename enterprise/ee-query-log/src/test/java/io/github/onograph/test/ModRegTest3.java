package io.github.onograph.test;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class ModRegTest3 {

  public static boolean debug = false;

  @Test
  public void test1501() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1501");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 1);
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService4 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    queryLoggingService4.strForEx(executingQuery5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService4.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService4.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService4.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService4.strForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService4.strForEx(executingQuery17);
    boolean boolean19 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery17);
    java.lang.String str20 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService21 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService21.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService21.faleForExTh(executingQuery24, "");
    java.lang.Class<?> wildcardClass27 = queryLoggingService21.getClass();
    boolean boolean28 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService21);
    java.lang.String str29 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService30 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    java.lang.Throwable throwable32 = null;
    queryLoggingService30.rolcForKe(kernelTransaction31, throwable32);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    queryLoggingService30.sucsForEx(executingQuery34);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery36 = null;
    queryLoggingService30.strForEx(executingQuery36);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery38 = null;
    queryLoggingService30.faleForExTh(executingQuery38, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction41 = null;
    java.lang.Throwable throwable42 = null;
    queryLoggingService30.rolcForKe(kernelTransaction41, throwable42);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery44 = null;
    queryLoggingService30.sucsForEx(executingQuery44);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction46 = null;
    queryLoggingService30.rolcForKe(kernelTransaction46);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction48 = null;
    java.lang.Throwable throwable49 = null;
    queryLoggingService30.rolcForKe(kernelTransaction48, throwable49);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction51 = null;
    queryLoggingService30.comForKe(kernelTransaction51);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery53 = null;
    queryLoggingService30.sucsForEx(executingQuery53);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery55 = null;
    queryLoggingService30.strForEx(executingQuery55);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery57 = null;
    java.lang.Throwable throwable58 = null;
    queryLoggingService30.faleForExTh(executingQuery57, throwable58);
    boolean boolean60 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery57);
    java.lang.String str61 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "query-logging" + "'", str3,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService4);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "query-logging" + "'", str20,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService21);
    org.junit.Assert.assertNotNull(wildcardClass27);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertEquals(
        "'" + str29 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str29, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService30);
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    org.junit.Assert.assertEquals(
        "'" + str61 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str61, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1502() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1502");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.comForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.strForEx(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    java.lang.Throwable throwable27 = null;
    queryLoggingService0.faleForExTh(executingQuery26, throwable27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService0.faleForExTh(executingQuery29, throwable30);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1503() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1503");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory3.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService7 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService7.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService7.faleForExTh(executingQuery10, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService7.faleForExTh(executingQuery13, throwable14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService7.faleForExTh(executingQuery16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService7.strForEx(kernelTransaction19);
    java.lang.Class<?> wildcardClass21 = queryLoggingService7.getClass();
    boolean boolean22 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService7);
    java.lang.String str23 = queryLoggingServiceExtensionFactory3.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext24 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies25 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle26 = queryLoggingServiceExtensionFactory3.newInstance(
          extensionContext24, queryLoggingServiceDependencies25);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str6, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService7);
    org.junit.Assert.assertNotNull(wildcardClass21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertEquals(
        "'" + str23 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str23, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1504() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1504");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.strForEx(executingQuery22);
    java.lang.Class<?> wildcardClass24 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass24);
  }

  @Test
  public void test1505() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1505");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.faleForExTh(executingQuery12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.comForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23, throwable24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    java.lang.Throwable throwable27 = null;
    queryLoggingService0.faleForExTh(executingQuery26, throwable27);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1506() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1506");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12, throwable13);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1507() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1507");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.comForKe(kernelTransaction11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.strForEx(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1508() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1508");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.faleForExTh(executingQuery9,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService8.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService8.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService8.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService8.faleForExTh(executingQuery19,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    boolean boolean22 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery19);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
  }

  @Test
  public void test1509() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1509");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config23, path24);
  }

  @Test
  public void test1510() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1510");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.comForKe(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.strForEx(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.strForEx(executingQuery19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1511() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1511");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.strForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.strForEx(executingQuery17);
    java.lang.Class<?> wildcardClass19 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass19);
  }

  @Test
  public void test1512() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1512");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.comForKe(kernelTransaction18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1513() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1513");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService8.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService8.sucsForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery22);
    java.lang.String str25 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str26 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str27 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str28 = queryLoggingServiceExtensionFactory3.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext29 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies30 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle31 = queryLoggingServiceExtensionFactory3.newInstance(
          extensionContext29, queryLoggingServiceDependencies30);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertEquals(
        "'" + str25 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str25, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "query-logging" + "'", str26,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "query-logging" + "'", str27,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str28 + "' != '" + "query-logging" + "'", str28,
        "query-logging");
  }

  @Test
  public void test1514() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1514");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.sucsForEx(executingQuery15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.strForEx(kernelTransaction19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1515() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1515");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.strForEx(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService0.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService0.faleForExTh(executingQuery27, "hi!");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1516() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1516");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService2 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService2.rolcForKe(kernelTransaction3, throwable4);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable4);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Class<?> wildcardClass9 = queryLoggingServiceExtensionFactory0.getClass();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService2);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass9);
  }

  @Test
  public void test1517() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1517");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.strForEx(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.faleForExTh(executingQuery13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1518() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1518");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.strForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1519() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1519");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext6 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies7 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle8 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext6, queryLoggingServiceDependencies7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1520() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1520");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj9 = new java.lang.Object();
    java.lang.Class<?> wildcardClass10 = obj9.getClass();
    boolean boolean11 = queryLoggingServiceExtensionFactory0.equals(obj9);
    java.lang.String str12 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj13 = null;
    boolean boolean14 = queryLoggingServiceExtensionFactory0.equals(obj13);
    java.lang.String str15 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory16 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean18 = queryLoggingServiceExtensionFactory16.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService19 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService19.rolcForKe(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService19.rolcForKe(kernelTransaction22, throwable23);
    boolean boolean25 = queryLoggingServiceExtensionFactory16.equals(
        (java.lang.Object) queryLoggingService19);
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory16);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext27 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies28 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle29 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext27, queryLoggingServiceDependencies28);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "query-logging" + "'", str12,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertEquals(
        "'" + str15 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str15, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    org.junit.Assert.assertNotNull(queryLoggingService19);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
  }

  @Test
  public void test1521() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1521");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj9 = new java.lang.Object();
    java.lang.Class<?> wildcardClass10 = obj9.getClass();
    boolean boolean11 = queryLoggingServiceExtensionFactory0.equals(obj9);
    java.lang.String str12 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj13 = null;
    boolean boolean14 = queryLoggingServiceExtensionFactory0.equals(obj13);
    java.lang.String str15 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory16 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean18 = queryLoggingServiceExtensionFactory16.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService19 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService19.rolcForKe(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService19.rolcForKe(kernelTransaction22, throwable23);
    boolean boolean25 = queryLoggingServiceExtensionFactory16.equals(
        (java.lang.Object) queryLoggingService19);
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory16);
    java.lang.String str27 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory28 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean30 = queryLoggingServiceExtensionFactory28.equals((java.lang.Object) (-1L));
    java.lang.String str31 = queryLoggingServiceExtensionFactory28.toString();
    boolean boolean32 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) str31);
    java.lang.String str33 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str34 = queryLoggingServiceExtensionFactory0.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext35 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies36 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle37 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext35, queryLoggingServiceDependencies36);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "query-logging" + "'", str12,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertEquals(
        "'" + str15 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str15, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    org.junit.Assert.assertNotNull(queryLoggingService19);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "query-logging" + "'", str27,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    org.junit.Assert.assertEquals(
        "'" + str31 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str31, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertEquals("'" + str33 + "' != '" + "query-logging" + "'", str33,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str34 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str34, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1522() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1522");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.comForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.strForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.faleForExTh(executingQuery21, throwable22);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1523() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1523");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.sucsForEx(executingQuery21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.strForEx(executingQuery23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService0.rolcForKe(kernelTransaction25, throwable26);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1524() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1524");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.faleForExTh(executingQuery11, throwable12);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1525() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1525");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.strForEx(kernelTransaction21);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1526() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1526");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.strForEx(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.faleForExTh(executingQuery11, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17, throwable18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.sucsForEx(executingQuery20);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1527() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1527");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.faleForExTh(executingQuery21,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService0.faleForExTh(executingQuery24, throwable25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService0.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService0.faleForExTh(executingQuery29, "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1528() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1528");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService10 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService10.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService10.comForKe(kernelTransaction14);
    boolean boolean16 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService10.faleForExTh(executingQuery17,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService10.comForKe(kernelTransaction20);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str9, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService10);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
  }

  @Test
  public void test1529() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1529");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "hi!", config13,
        path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "hi!", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config23, path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "query-logging",
        config28, path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config33, path34);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction36 = null;
    org.neo4j.configuration.Config config38 = null;
    java.nio.file.Path path39 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction36, "hi!", config38,
        path39);
  }

  @Test
  public void test1530() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1530");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.Object obj5 = new java.lang.Object();
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals(obj5);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory8 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean10 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) (-1L));
    boolean boolean11 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) boolean10);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService12 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService12.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService12.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService12.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService12.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService12.strForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) executingQuery22);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService25 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    queryLoggingService25.rolcForKe(kernelTransaction26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService25.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryLoggingService25.faleForExTh(executingQuery31, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction34 = null;
    queryLoggingService25.rolcForKe(kernelTransaction34);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService25.faleForExTh(executingQuery36, throwable37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService25.sucsForEx(executingQuery39);
    boolean boolean41 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingService25);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService42 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction43 = null;
    java.lang.Throwable throwable44 = null;
    queryLoggingService42.rolcForKe(kernelTransaction43, throwable44);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery46 = null;
    queryLoggingService42.sucsForEx(executingQuery46);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction48 = null;
    queryLoggingService42.comForKe(kernelTransaction48);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery50 = null;
    queryLoggingService42.faleForExTh(executingQuery50, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction53 = null;
    queryLoggingService42.strForEx(kernelTransaction53);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    queryLoggingService42.comForKe(kernelTransaction55);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery57 = null;
    queryLoggingService42.strForEx(executingQuery57);
    boolean boolean59 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingService42);
    boolean boolean60 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean59);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService61 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery62 = null;
    queryLoggingService61.strForEx(executingQuery62);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery64 = null;
    java.lang.Throwable throwable65 = null;
    queryLoggingService61.faleForExTh(executingQuery64, throwable65);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction67 = null;
    java.lang.Throwable throwable68 = null;
    queryLoggingService61.rolcForKe(kernelTransaction67, throwable68);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery70 = null;
    queryLoggingService61.faleForExTh(executingQuery70, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery73 = null;
    queryLoggingService61.sucsForEx(executingQuery73);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery75 = null;
    queryLoggingService61.sucsForEx(executingQuery75);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction77 = null;
    queryLoggingService61.strForEx(kernelTransaction77);
    boolean boolean79 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction77);
    java.lang.String str80 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str81 = queryLoggingServiceExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext82 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies83 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle84 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext82, queryLoggingServiceDependencies83);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(queryLoggingService12);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(queryLoggingService25);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    org.junit.Assert.assertNotNull(queryLoggingService42);
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    org.junit.Assert.assertNotNull(queryLoggingService61);
    org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    org.junit.Assert.assertEquals("'" + str80 + "' != '" + "query-logging" + "'", str80,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str81 + "' != '" + "query-logging" + "'", str81,
        "query-logging");
  }

  @Test
  public void test1531() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1531");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService2 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService2.rolcForKe(kernelTransaction3, throwable4);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable4);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl9 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction10 = null;
    org.neo4j.configuration.Config config12 = null;
    java.nio.file.Path path13 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl9.init(fileSystemAbstraction10, "hi!", config12,
        path13);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction15 = null;
    org.neo4j.configuration.Config config17 = null;
    java.nio.file.Path path18 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl9.init(fileSystemAbstraction15,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config17, path18);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.configuration.Config config22 = null;
    java.nio.file.Path path23 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl9.init(fileSystemAbstraction20,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config22, path23);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction25 = null;
    org.neo4j.configuration.Config config27 = null;
    java.nio.file.Path path28 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl9.init(fileSystemAbstraction25, "query-logging",
        config27, path28);
    boolean boolean30 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) fileSystemAbstraction25);
    boolean boolean32 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0.0f);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService33 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    queryLoggingService33.strForEx(executingQuery34);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService33.faleForExTh(executingQuery36, throwable37);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction39 = null;
    java.lang.Throwable throwable40 = null;
    queryLoggingService33.rolcForKe(kernelTransaction39, throwable40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    queryLoggingService33.faleForExTh(executingQuery42, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery45 = null;
    queryLoggingService33.sucsForEx(executingQuery45);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    java.lang.Throwable throwable48 = null;
    queryLoggingService33.faleForExTh(executingQuery47, throwable48);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery50 = null;
    queryLoggingService33.strForEx(executingQuery50);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction52 = null;
    java.lang.Throwable throwable53 = null;
    queryLoggingService33.rolcForKe(kernelTransaction52, throwable53);
    boolean boolean55 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable53);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService56 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction57 = null;
    java.lang.Throwable throwable58 = null;
    queryLoggingService56.rolcForKe(kernelTransaction57, throwable58);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction60 = null;
    queryLoggingService56.comForKe(kernelTransaction60);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery62 = null;
    java.lang.Throwable throwable63 = null;
    queryLoggingService56.faleForExTh(executingQuery62, throwable63);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery65 = null;
    queryLoggingService56.sucsForEx(executingQuery65);
    boolean boolean67 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery65);
    java.lang.String str68 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str69 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService2);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertNotNull(queryLoggingService33);
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    org.junit.Assert.assertNotNull(queryLoggingService56);
    org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    org.junit.Assert.assertEquals(
        "'" + str68 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str68, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str69 + "' != '" + "query-logging" + "'", str69,
        "query-logging");
  }

  @Test
  public void test1532() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1532");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str4 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str3, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "query-logging" + "'", str4,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "query-logging" + "'", str5,
        "query-logging");
  }

  @Test
  public void test1533() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1533");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.faleForExTh(executingQuery1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    java.lang.Class<?> wildcardClass8 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass8);
  }

  @Test
  public void test1534() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1534");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    boolean boolean10 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 100);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService11 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService11.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService11.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService11.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService11.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService11.sucsForEx(executingQuery22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService11.comForKe(kernelTransaction24);
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction24);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService27 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService27.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    java.lang.Throwable throwable32 = null;
    queryLoggingService27.rolcForKe(kernelTransaction31, throwable32);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction34 = null;
    queryLoggingService27.rolcForKe(kernelTransaction34);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService27.rolcForKe(kernelTransaction36, throwable37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService27.strForEx(executingQuery39);
    boolean boolean41 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService27);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction42 = null;
    queryLoggingService27.rolcForKe(kernelTransaction42);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertNotNull(queryLoggingService11);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertNotNull(queryLoggingService27);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
  }

  @Test
  public void test1535() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1535");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.strForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.faleForExTh(executingQuery22, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService0.strForEx(executingQuery25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService0.comForKe(kernelTransaction27);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService0.rolcForKe(kernelTransaction29, throwable30);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1536() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1536");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.rolcForKe(kernelTransaction4, throwable5);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.faleForExTh(executingQuery16, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.sucsForEx(executingQuery19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.comForKe(kernelTransaction21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.faleForExTh(executingQuery23, throwable24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1537() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1537");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.strForEx(kernelTransaction11);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1538() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1538");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    java.lang.Class<?> wildcardClass13 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass13);
  }

  @Test
  public void test1539() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1539");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 1);
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService4 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    queryLoggingService4.strForEx(executingQuery5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService4.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService4.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService4.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService4.strForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService4.strForEx(executingQuery17);
    boolean boolean19 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery17);
    java.lang.String str20 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str21 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str22 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str23 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService24 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService24.strForEx(executingQuery25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    java.lang.Throwable throwable28 = null;
    queryLoggingService24.faleForExTh(executingQuery27, throwable28);
    boolean boolean30 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable28);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory31 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory32 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean34 = queryLoggingServiceExtensionFactory32.equals((java.lang.Object) (-1L));
    boolean boolean35 = queryLoggingServiceExtensionFactory31.equals((java.lang.Object) boolean34);
    boolean boolean37 = queryLoggingServiceExtensionFactory31.equals((java.lang.Object) 0L);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory38 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory39 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean41 = queryLoggingServiceExtensionFactory39.equals((java.lang.Object) (-1L));
    boolean boolean42 = queryLoggingServiceExtensionFactory38.equals((java.lang.Object) boolean41);
    java.lang.Object obj43 = new java.lang.Object();
    boolean boolean44 = queryLoggingServiceExtensionFactory38.equals(obj43);
    java.lang.String str45 = queryLoggingServiceExtensionFactory38.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService46 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    queryLoggingService46.strForEx(executingQuery47);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery49 = null;
    java.lang.Throwable throwable50 = null;
    queryLoggingService46.faleForExTh(executingQuery49, throwable50);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction52 = null;
    java.lang.Throwable throwable53 = null;
    queryLoggingService46.rolcForKe(kernelTransaction52, throwable53);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    queryLoggingService46.comForKe(kernelTransaction55);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery57 = null;
    queryLoggingService46.strForEx(executingQuery57);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction59 = null;
    java.lang.Throwable throwable60 = null;
    queryLoggingService46.rolcForKe(kernelTransaction59, throwable60);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction62 = null;
    queryLoggingService46.comForKe(kernelTransaction62);
    boolean boolean64 = queryLoggingServiceExtensionFactory38.equals(
        (java.lang.Object) queryLoggingService46);
    boolean boolean65 = queryLoggingServiceExtensionFactory31.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory38);
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl66 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction67 = null;
    org.neo4j.configuration.Config config69 = null;
    java.nio.file.Path path70 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl66.init(fileSystemAbstraction67, "hi!",
        config69, path70);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction72 = null;
    org.neo4j.configuration.Config config74 = null;
    java.nio.file.Path path75 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl66.init(fileSystemAbstraction72,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config74, path75);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction77 = null;
    org.neo4j.configuration.Config config79 = null;
    java.nio.file.Path path80 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl66.init(fileSystemAbstraction77,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config79, path80);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction82 = null;
    org.neo4j.configuration.Config config84 = null;
    java.nio.file.Path path85 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl66.init(fileSystemAbstraction82,
        "query-logging", config84, path85);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction87 = null;
    org.neo4j.configuration.Config config89 = null;
    java.nio.file.Path path90 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl66.init(fileSystemAbstraction87,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config89, path90);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction92 = null;
    org.neo4j.configuration.Config config94 = null;
    java.nio.file.Path path95 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl66.init(fileSystemAbstraction92,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config94, path95);
    boolean boolean97 = queryLoggingServiceExtensionFactory38.equals(
        (java.lang.Object) diagnosticsOfflineReportProviderQueryLoggingImpl66);
    boolean boolean98 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory38);
    java.lang.String str99 = queryLoggingServiceExtensionFactory38.getName();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "query-logging" + "'", str3,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService4);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "query-logging" + "'", str20,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str21 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str21, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str22 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str22, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "query-logging" + "'", str23,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService24);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    org.junit.Assert.assertEquals("'" + str45 + "' != '" + "query-logging" + "'", str45,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService46);
    org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    org.junit.Assert.assertEquals("'" + str99 + "' != '" + "query-logging" + "'", str99,
        "query-logging");
  }

  @Test
  public void test1540() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1540");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "query-logging",
        config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config23, path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "hi!", config28,
        path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31, "hi!", config33,
        path34);
  }

  @Test
  public void test1541() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1541");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.strForEx(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.sucsForEx(executingQuery22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService0.faleForExTh(executingQuery24, "hi!");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1542() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1542");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService2 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService2.rolcForKe(kernelTransaction3, throwable4);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable4);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl9 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction10 = null;
    org.neo4j.configuration.Config config12 = null;
    java.nio.file.Path path13 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl9.init(fileSystemAbstraction10, "hi!", config12,
        path13);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction15 = null;
    org.neo4j.configuration.Config config17 = null;
    java.nio.file.Path path18 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl9.init(fileSystemAbstraction15,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config17, path18);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.configuration.Config config22 = null;
    java.nio.file.Path path23 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl9.init(fileSystemAbstraction20,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config22, path23);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction25 = null;
    org.neo4j.configuration.Config config27 = null;
    java.nio.file.Path path28 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl9.init(fileSystemAbstraction25, "query-logging",
        config27, path28);
    boolean boolean30 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) fileSystemAbstraction25);
    boolean boolean32 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0.0f);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService33 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    queryLoggingService33.strForEx(executingQuery34);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService33.faleForExTh(executingQuery36, throwable37);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction39 = null;
    java.lang.Throwable throwable40 = null;
    queryLoggingService33.rolcForKe(kernelTransaction39, throwable40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    queryLoggingService33.faleForExTh(executingQuery42, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery45 = null;
    queryLoggingService33.sucsForEx(executingQuery45);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    java.lang.Throwable throwable48 = null;
    queryLoggingService33.faleForExTh(executingQuery47, throwable48);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery50 = null;
    queryLoggingService33.strForEx(executingQuery50);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction52 = null;
    java.lang.Throwable throwable53 = null;
    queryLoggingService33.rolcForKe(kernelTransaction52, throwable53);
    boolean boolean55 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable53);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService56 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction57 = null;
    java.lang.Throwable throwable58 = null;
    queryLoggingService56.rolcForKe(kernelTransaction57, throwable58);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction60 = null;
    queryLoggingService56.comForKe(kernelTransaction60);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery62 = null;
    java.lang.Throwable throwable63 = null;
    queryLoggingService56.faleForExTh(executingQuery62, throwable63);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery65 = null;
    queryLoggingService56.sucsForEx(executingQuery65);
    boolean boolean67 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery65);
    java.lang.Object obj68 = null;
    boolean boolean69 = queryLoggingServiceExtensionFactory0.equals(obj68);
    java.lang.String str70 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService71 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery72 = null;
    queryLoggingService71.strForEx(executingQuery72);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery74 = null;
    java.lang.Throwable throwable75 = null;
    queryLoggingService71.faleForExTh(executingQuery74, throwable75);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction77 = null;
    queryLoggingService71.rolcForKe(kernelTransaction77);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery79 = null;
    queryLoggingService71.sucsForEx(executingQuery79);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction81 = null;
    queryLoggingService71.strForEx(kernelTransaction81);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery83 = null;
    java.lang.Throwable throwable84 = null;
    queryLoggingService71.faleForExTh(executingQuery83, throwable84);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction86 = null;
    queryLoggingService71.strForEx(kernelTransaction86);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction88 = null;
    java.lang.Throwable throwable89 = null;
    queryLoggingService71.rolcForKe(kernelTransaction88, throwable89);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction91 = null;
    queryLoggingService71.strForEx(kernelTransaction91);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery93 = null;
    queryLoggingService71.sucsForEx(executingQuery93);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction95 = null;
    java.lang.Throwable throwable96 = null;
    queryLoggingService71.rolcForKe(kernelTransaction95, throwable96);
    boolean boolean98 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService71);
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService2);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertNotNull(queryLoggingService33);
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    org.junit.Assert.assertNotNull(queryLoggingService56);
    org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    org.junit.Assert.assertEquals(
        "'" + str70 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str70, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService71);
    org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
  }

  @Test
  public void test1543() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1543");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.strForEx(kernelTransaction21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.faleForExTh(executingQuery23,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1544() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1544");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.faleForExTh(executingQuery13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16, throwable17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.strForEx(executingQuery19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1545() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1545");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.comForKe(kernelTransaction19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1546() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1546");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.strForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20, throwable21);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1547() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1547");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "hi!", config13,
        path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "hi!", config23,
        path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "", config28,
        path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31, "query-logging",
        config33, path34);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction36 = null;
    org.neo4j.configuration.Config config38 = null;
    java.nio.file.Path path39 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction36,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config38, path39);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction41 = null;
    org.neo4j.configuration.Config config43 = null;
    java.nio.file.Path path44 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction41, "query-logging",
        config43, path44);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction46 = null;
    org.neo4j.configuration.Config config48 = null;
    java.nio.file.Path path49 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction46, "", config48,
        path49);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction51 = null;
    org.neo4j.configuration.Config config53 = null;
    java.nio.file.Path path54 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction51, "", config53,
        path54);
  }

  @Test
  public void test1548() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1548");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str11 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str12 = queryLoggingServiceExtensionFactory3.getName();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "query-logging" + "'", str10,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "query-logging" + "'", str12,
        "query-logging");
  }

  @Test
  public void test1549() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1549");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.comForKe(kernelTransaction20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.faleForExTh(executingQuery22, "hi!");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1550() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1550");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService8.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService8.sucsForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery22);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService25 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService25.strForEx(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService25.faleForExTh(executingQuery28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService25.rolcForKe(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService25.sucsForEx(executingQuery33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService25.strForEx(executingQuery35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService25.sucsForEx(executingQuery37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService25.sucsForEx(executingQuery39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    queryLoggingService25.sucsForEx(executingQuery41);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService25.strForEx(executingQuery43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    java.lang.Throwable throwable46 = null;
    queryLoggingService25.rolcForKe(kernelTransaction45, throwable46);
    boolean boolean48 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery49 = null;
    java.lang.Throwable throwable50 = null;
    queryLoggingService25.faleForExTh(executingQuery49, throwable50);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction52 = null;
    java.lang.Throwable throwable53 = null;
    queryLoggingService25.rolcForKe(kernelTransaction52, throwable53);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    java.lang.Throwable throwable56 = null;
    queryLoggingService25.rolcForKe(kernelTransaction55, throwable56);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery58 = null;
    queryLoggingService25.faleForExTh(executingQuery58, "");
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(queryLoggingService25);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
  }

  @Test
  public void test1551() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1551");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService8.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService8.sucsForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery22);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService25 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService25.strForEx(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService25.faleForExTh(executingQuery28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService25.rolcForKe(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService25.sucsForEx(executingQuery33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService25.strForEx(executingQuery35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService25.sucsForEx(executingQuery37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService25.sucsForEx(executingQuery39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    queryLoggingService25.sucsForEx(executingQuery41);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService25.strForEx(executingQuery43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    java.lang.Throwable throwable46 = null;
    queryLoggingService25.rolcForKe(kernelTransaction45, throwable46);
    boolean boolean48 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService25);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService49 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery50 = null;
    queryLoggingService49.strForEx(executingQuery50);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery52 = null;
    java.lang.Throwable throwable53 = null;
    queryLoggingService49.faleForExTh(executingQuery52, throwable53);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    java.lang.Throwable throwable56 = null;
    queryLoggingService49.rolcForKe(kernelTransaction55, throwable56);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery58 = null;
    queryLoggingService49.faleForExTh(executingQuery58, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction61 = null;
    java.lang.Throwable throwable62 = null;
    queryLoggingService49.rolcForKe(kernelTransaction61, throwable62);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction64 = null;
    queryLoggingService49.comForKe(kernelTransaction64);
    boolean boolean66 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) kernelTransaction64);
    java.lang.String str67 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str68 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str69 = queryLoggingServiceExtensionFactory3.getName();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(queryLoggingService25);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    org.junit.Assert.assertNotNull(queryLoggingService49);
    org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    org.junit.Assert.assertEquals("'" + str67 + "' != '" + "query-logging" + "'", str67,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str68 + "' != '" + "query-logging" + "'", str68,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str69 + "' != '" + "query-logging" + "'", str69,
        "query-logging");
  }

  @Test
  public void test1552() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1552");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService2 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService2.rolcForKe(kernelTransaction3, throwable4);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable4);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService11 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService11.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService11.sucsForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService11.strForEx(executingQuery17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService11.faleForExTh(executingQuery19, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService11.rolcForKe(kernelTransaction22, throwable23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService11.sucsForEx(executingQuery25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    java.lang.Throwable throwable28 = null;
    queryLoggingService11.faleForExTh(executingQuery27, throwable28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    java.lang.Throwable throwable31 = null;
    queryLoggingService11.faleForExTh(executingQuery30, throwable31);
    boolean boolean33 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable31);
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService2);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str10, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService11);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
  }

  @Test
  public void test1553() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1553");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.faleForExTh(executingQuery17, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.faleForExTh(executingQuery20, throwable21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23, throwable24);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    queryLoggingService0.comForKe(kernelTransaction26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService0.strForEx(kernelTransaction28);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1554() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1554");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.strForEx(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.sucsForEx(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.sucsForEx(executingQuery21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1555() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1555");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.rolcForKe(kernelTransaction4, throwable5);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.strForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1556() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1556");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService3 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService3.rolcForKe(kernelTransaction4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService3.rolcForKe(kernelTransaction6, throwable7);
    boolean boolean9 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService3);
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str11 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str12 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str13 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str14 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService15 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService15.rolcForKe(kernelTransaction16, throwable17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService15.faleForExTh(executingQuery19, throwable20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService15.faleForExTh(executingQuery22, throwable23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService15.comForKe(kernelTransaction25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    java.lang.Throwable throwable28 = null;
    queryLoggingService15.rolcForKe(kernelTransaction27, throwable28);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    queryLoggingService15.strForEx(kernelTransaction30);
    boolean boolean32 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction30);
    java.lang.String str33 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str34 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(queryLoggingService3);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "query-logging" + "'", str10,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "query-logging" + "'", str11,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str12 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str12, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str13 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str13, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str14 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str14, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService15);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertEquals("'" + str33 + "' != '" + "query-logging" + "'", str33,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str34 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str34, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1557() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1557");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService0.strForEx(kernelTransaction8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.sucsForEx(executingQuery10);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1558() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1558");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.strForEx(executingQuery17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.strForEx(kernelTransaction21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.faleForExTh(executingQuery23, "hi!");
    java.lang.Class<?> wildcardClass26 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass26);
  }

  @Test
  public void test1559() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1559");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.comForKe(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.strForEx(executingQuery15);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1560() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1560");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.faleForExTh(executingQuery16, throwable17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.faleForExTh(executingQuery19,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.strForEx(kernelTransaction22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService0.faleForExTh(executingQuery24,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1561() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1561");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1562() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1562");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 1);
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str4 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService5.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService5.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService5.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService5.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService5.faleForExTh(executingQuery16, throwable17);
    java.lang.Class<?> wildcardClass19 = queryLoggingService5.getClass();
    boolean boolean20 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) wildcardClass19);
    java.lang.String str21 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str22 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory23 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean25 = queryLoggingServiceExtensionFactory23.equals((java.lang.Object) (short) 1);
    java.lang.String str26 = queryLoggingServiceExtensionFactory23.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService27 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService27.strForEx(executingQuery28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    java.lang.Throwable throwable31 = null;
    queryLoggingService27.faleForExTh(executingQuery30, throwable31);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    java.lang.Throwable throwable34 = null;
    queryLoggingService27.rolcForKe(kernelTransaction33, throwable34);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    queryLoggingService27.comForKe(kernelTransaction36);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery38 = null;
    queryLoggingService27.strForEx(executingQuery38);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery40 = null;
    queryLoggingService27.strForEx(executingQuery40);
    boolean boolean42 = queryLoggingServiceExtensionFactory23.equals(
        (java.lang.Object) executingQuery40);
    java.lang.String str43 = queryLoggingServiceExtensionFactory23.getName();
    java.lang.String str44 = queryLoggingServiceExtensionFactory23.toString();
    java.lang.String str45 = queryLoggingServiceExtensionFactory23.toString();
    java.lang.String str46 = queryLoggingServiceExtensionFactory23.getName();
    java.lang.String str47 = queryLoggingServiceExtensionFactory23.getName();
    java.lang.String str48 = queryLoggingServiceExtensionFactory23.toString();
    boolean boolean49 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory23);
    java.lang.String str50 = queryLoggingServiceExtensionFactory23.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext51 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies52 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle53 = queryLoggingServiceExtensionFactory23.newInstance(
          extensionContext51, queryLoggingServiceDependencies52);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str3, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "query-logging" + "'", str4,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertNotNull(wildcardClass19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertEquals("'" + str21 + "' != '" + "query-logging" + "'", str21,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str22 + "' != '" + "query-logging" + "'", str22,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "query-logging" + "'", str26,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService27);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertEquals("'" + str43 + "' != '" + "query-logging" + "'", str43,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str44 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str44, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str45 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str45, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str46 + "' != '" + "query-logging" + "'", str46,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str47 + "' != '" + "query-logging" + "'", str47,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str48 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str48, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    org.junit.Assert.assertEquals(
        "'" + str50 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str50, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1563() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1563");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14);
    java.lang.Class<?> wildcardClass16 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass16);
  }

  @Test
  public void test1564() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1564");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService5.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService5.strForEx(executingQuery15);
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery15);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService18 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService18.strForEx(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService18.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService18.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService18.comForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService18.faleForExTh(executingQuery29, "");
    boolean boolean32 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) "");
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 'a');
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext35 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies36 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle37 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext35, queryLoggingServiceDependencies36);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(queryLoggingService18);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
  }

  @Test
  public void test1565() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1565");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 1);
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService4 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    queryLoggingService4.strForEx(executingQuery5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService4.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService4.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService4.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService4.strForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService4.strForEx(executingQuery17);
    boolean boolean19 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery17);
    java.lang.String str20 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str21 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str22 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str23 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str24 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str25 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl26 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction27 = null;
    org.neo4j.configuration.Config config29 = null;
    java.nio.file.Path path30 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl26.init(fileSystemAbstraction27, "hi!",
        config29, path30);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction32 = null;
    org.neo4j.configuration.Config config34 = null;
    java.nio.file.Path path35 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl26.init(fileSystemAbstraction32,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config34, path35);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction37 = null;
    org.neo4j.configuration.Config config39 = null;
    java.nio.file.Path path40 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl26.init(fileSystemAbstraction37, "", config39,
        path40);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction42 = null;
    org.neo4j.configuration.Config config44 = null;
    java.nio.file.Path path45 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl26.init(fileSystemAbstraction42, "hi!",
        config44, path45);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction47 = null;
    org.neo4j.configuration.Config config49 = null;
    java.nio.file.Path path50 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl26.init(fileSystemAbstraction47, "", config49,
        path50);
    boolean boolean52 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) "");
    java.lang.String str53 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory54 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory55 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean57 = queryLoggingServiceExtensionFactory55.equals((java.lang.Object) (-1L));
    boolean boolean58 = queryLoggingServiceExtensionFactory54.equals((java.lang.Object) boolean57);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService59 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery60 = null;
    queryLoggingService59.strForEx(executingQuery60);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery62 = null;
    java.lang.Throwable throwable63 = null;
    queryLoggingService59.faleForExTh(executingQuery62, throwable63);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction65 = null;
    queryLoggingService59.rolcForKe(kernelTransaction65);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery67 = null;
    queryLoggingService59.sucsForEx(executingQuery67);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery69 = null;
    queryLoggingService59.strForEx(executingQuery69);
    boolean boolean71 = queryLoggingServiceExtensionFactory54.equals(
        (java.lang.Object) executingQuery69);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService72 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery73 = null;
    queryLoggingService72.strForEx(executingQuery73);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery75 = null;
    java.lang.Throwable throwable76 = null;
    queryLoggingService72.faleForExTh(executingQuery75, throwable76);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction78 = null;
    java.lang.Throwable throwable79 = null;
    queryLoggingService72.rolcForKe(kernelTransaction78, throwable79);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction81 = null;
    queryLoggingService72.comForKe(kernelTransaction81);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery83 = null;
    queryLoggingService72.faleForExTh(executingQuery83, "");
    boolean boolean86 = queryLoggingServiceExtensionFactory54.equals((java.lang.Object) "");
    java.lang.String str87 = queryLoggingServiceExtensionFactory54.toString();
    boolean boolean88 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) str87);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory89 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str90 = queryLoggingServiceExtensionFactory89.toString();
    java.lang.String str91 = queryLoggingServiceExtensionFactory89.getName();
    java.lang.String str92 = queryLoggingServiceExtensionFactory89.getName();
    boolean boolean93 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) str92);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext94 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies95 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle96 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext94, queryLoggingServiceDependencies95);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "query-logging" + "'", str3,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService4);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "query-logging" + "'", str20,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str21 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str21, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str22 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str22, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "query-logging" + "'", str23,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "query-logging" + "'", str24,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str25 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str25, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    org.junit.Assert.assertEquals("'" + str53 + "' != '" + "query-logging" + "'", str53,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    org.junit.Assert.assertNotNull(queryLoggingService59);
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    org.junit.Assert.assertNotNull(queryLoggingService72);
    org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    org.junit.Assert.assertEquals(
        "'" + str87 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str87, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    org.junit.Assert.assertEquals(
        "'" + str90 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str90, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str91 + "' != '" + "query-logging" + "'", str91,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str92 + "' != '" + "query-logging" + "'", str92,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
  }

  @Test
  public void test1566() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1566");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.comForKe(kernelTransaction17);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1567() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1567");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.comForKe(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.sucsForEx(executingQuery17);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1568() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1568");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.sucsForEx(executingQuery11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.sucsForEx(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService0.strForEx(executingQuery24);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    queryLoggingService0.comForKe(kernelTransaction26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService0.sucsForEx(executingQuery28);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1569() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1569");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "hi!", config13,
        path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config23, path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config28, path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config33, path34);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction36 = null;
    org.neo4j.configuration.Config config38 = null;
    java.nio.file.Path path39 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction36, "query-logging",
        config38, path39);
  }

  @Test
  public void test1570() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1570");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.rolcForKe(kernelTransaction4, throwable5);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction7 = null;
    queryLoggingService0.comForKe(kernelTransaction7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.sucsForEx(executingQuery9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.comForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.faleForExTh(executingQuery15, throwable16);
    java.lang.Class<?> wildcardClass18 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass18);
  }

  @Test
  public void test1571() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1571");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.strForEx(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.strForEx(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.faleForExTh(executingQuery13, throwable14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.faleForExTh(executingQuery16, "");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1572() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1572");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.strForEx(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1573() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1573");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService0.comForKe(kernelTransaction8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1574() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1574");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService5.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService5.strForEx(executingQuery15);
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery15);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService18 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService18.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService18.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService18.faleForExTh(executingQuery24, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService18.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService18.faleForExTh(executingQuery29, throwable30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService18.sucsForEx(executingQuery32);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService18);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService35 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService35.rolcForKe(kernelTransaction36, throwable37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    java.lang.Throwable throwable40 = null;
    queryLoggingService35.faleForExTh(executingQuery39, throwable40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    java.lang.Throwable throwable43 = null;
    queryLoggingService35.faleForExTh(executingQuery42, throwable43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    queryLoggingService35.strForEx(kernelTransaction45);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    java.lang.Throwable throwable48 = null;
    queryLoggingService35.faleForExTh(executingQuery47, throwable48);
    java.lang.Class<?> wildcardClass50 = queryLoggingService35.getClass();
    boolean boolean51 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) wildcardClass50);
    java.lang.String str52 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService53 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction54 = null;
    queryLoggingService53.rolcForKe(kernelTransaction54);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction56 = null;
    java.lang.Throwable throwable57 = null;
    queryLoggingService53.rolcForKe(kernelTransaction56, throwable57);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction59 = null;
    queryLoggingService53.rolcForKe(kernelTransaction59);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery61 = null;
    queryLoggingService53.sucsForEx(executingQuery61);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction63 = null;
    queryLoggingService53.strForEx(kernelTransaction63);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery65 = null;
    queryLoggingService53.faleForExTh(executingQuery65,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery68 = null;
    queryLoggingService53.faleForExTh(executingQuery68, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction71 = null;
    queryLoggingService53.rolcForKe(kernelTransaction71);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery73 = null;
    queryLoggingService53.strForEx(executingQuery73);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery75 = null;
    queryLoggingService53.faleForExTh(executingQuery75, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction78 = null;
    queryLoggingService53.strForEx(kernelTransaction78);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery80 = null;
    queryLoggingService53.strForEx(executingQuery80);
    java.lang.Class<?> wildcardClass82 = queryLoggingService53.getClass();
    boolean boolean83 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) wildcardClass82);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(queryLoggingService18);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertNotNull(queryLoggingService35);
    org.junit.Assert.assertNotNull(wildcardClass50);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    org.junit.Assert.assertEquals("'" + str52 + "' != '" + "query-logging" + "'", str52,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService53);
    org.junit.Assert.assertNotNull(wildcardClass82);
    org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
  }

  @Test
  public void test1575() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1575");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.comForKe(kernelTransaction22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService0.sucsForEx(executingQuery24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService0.faleForExTh(executingQuery26, "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1576() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1576");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService10 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService10.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService10.comForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService10.faleForExTh(executingQuery16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService10.comForKe(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService10.strForEx(executingQuery21);
    boolean boolean23 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService10);
    java.lang.String str24 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str25 = queryLoggingServiceExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext26 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies27 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle28 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext26, queryLoggingServiceDependencies27);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService10);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "query-logging" + "'", str24,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str25 + "' != '" + "query-logging" + "'", str25,
        "query-logging");
  }

  @Test
  public void test1577() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1577");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService8.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService8.sucsForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery22);
    java.lang.String str25 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str26 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str27 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str28 = queryLoggingServiceExtensionFactory3.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService29 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    queryLoggingService29.rolcForKe(kernelTransaction30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService29.faleForExTh(executingQuery32, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    java.lang.Throwable throwable36 = null;
    queryLoggingService29.faleForExTh(executingQuery35, throwable36);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction38 = null;
    queryLoggingService29.rolcForKe(kernelTransaction38);
    boolean boolean40 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    java.lang.Throwable throwable42 = null;
    queryLoggingService29.faleForExTh(executingQuery41, throwable42);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery44 = null;
    queryLoggingService29.faleForExTh(executingQuery44, "query-logging");
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertEquals(
        "'" + str25 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str25, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "query-logging" + "'", str26,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str27 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str27, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str28 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str28, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService29);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
  }

  @Test
  public void test1578() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1578");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1.0d));
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService3 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService3.rolcForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService3.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService3.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService3.faleForExTh(executingQuery12, throwable13);
    boolean boolean15 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery12);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService16 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService16.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService16.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService16.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService16.sucsForEx(executingQuery24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService16.faleForExTh(executingQuery26, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    queryLoggingService16.strForEx(kernelTransaction29);
    boolean boolean31 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction29);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext32 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies33 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle34 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext32, queryLoggingServiceDependencies33);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(queryLoggingService3);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertNotNull(queryLoggingService16);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
  }

  @Test
  public void test1579() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1579");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.faleForExTh(executingQuery16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.comForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.strForEx(kernelTransaction21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.faleForExTh(executingQuery23, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    queryLoggingService0.strForEx(kernelTransaction26);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1580() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1580");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean9 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory10 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str11 = queryLoggingServiceExtensionFactory10.toString();
    boolean boolean12 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory10);
    boolean boolean13 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService14 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService14.rolcForKe(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService14.rolcForKe(kernelTransaction17, throwable18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService14.faleForExTh(executingQuery20, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService14.rolcForKe(kernelTransaction23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService14.faleForExTh(executingQuery25, throwable26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService14.strForEx(executingQuery28);
    boolean boolean30 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingService14);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory31 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean33 = queryLoggingServiceExtensionFactory31.equals((java.lang.Object) (-1L));
    java.lang.String str34 = queryLoggingServiceExtensionFactory31.getName();
    boolean boolean35 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) str34);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(queryLoggingService14);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertEquals("'" + str34 + "' != '" + "query-logging" + "'", str34,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
  }

  @Test
  public void test1581() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1581");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    boolean boolean8 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService10 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService10.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService10.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService10.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService10.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService10.strForEx(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService10.rolcForKe(kernelTransaction22, throwable23);
    boolean boolean25 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable23);
    java.lang.String str26 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService27 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService27.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    java.lang.Throwable throwable32 = null;
    queryLoggingService27.faleForExTh(executingQuery31, throwable32);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    java.lang.Throwable throwable35 = null;
    queryLoggingService27.faleForExTh(executingQuery34, throwable35);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction37 = null;
    java.lang.Throwable throwable38 = null;
    queryLoggingService27.rolcForKe(kernelTransaction37, throwable38);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    queryLoggingService27.strForEx(kernelTransaction40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    queryLoggingService27.faleForExTh(executingQuery42, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery45 = null;
    queryLoggingService27.strForEx(executingQuery45);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction47 = null;
    java.lang.Throwable throwable48 = null;
    queryLoggingService27.rolcForKe(kernelTransaction47, throwable48);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction50 = null;
    queryLoggingService27.comForKe(kernelTransaction50);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction52 = null;
    queryLoggingService27.comForKe(kernelTransaction52);
    boolean boolean54 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService27);
    java.lang.String str55 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str56 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str9, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService10);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertEquals(
        "'" + str26 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str26, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService27);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    org.junit.Assert.assertEquals(
        "'" + str55 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str55, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str56 + "' != '" + "query-logging" + "'", str56,
        "query-logging");
  }

  @Test
  public void test1582() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1582");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "hi!", config13,
        path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "hi!", config23,
        path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "hi!", config28,
        path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31, "hi!", config33,
        path34);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction36 = null;
    org.neo4j.configuration.Config config38 = null;
    java.nio.file.Path path39 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction36, "hi!", config38,
        path39);
  }

  @Test
  public void test1583() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1583");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.comForKe(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.comForKe(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.faleForExTh(executingQuery17, "hi!");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1584() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1584");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.faleForExTh(executingQuery12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17, throwable18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20, throwable21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.strForEx(kernelTransaction23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService0.faleForExTh(executingQuery25, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService0.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService0.strForEx(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService0.sucsForEx(executingQuery33);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1585() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1585");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.strForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.faleForExTh(executingQuery13, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18, "hi!");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1586() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1586");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str2 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService3 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService3.rolcForKe(kernelTransaction4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    queryLoggingService3.sucsForEx(executingQuery7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService3.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService3.faleForExTh(executingQuery11, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService3.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService3.sucsForEx(executingQuery17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService3.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService3.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService3.comForKe(kernelTransaction24);
    java.lang.Class<?> wildcardClass26 = queryLoggingService3.getClass();
    boolean boolean27 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) wildcardClass26);
    java.lang.String str28 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService29 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    queryLoggingService29.rolcForKe(kernelTransaction30);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction32 = null;
    java.lang.Throwable throwable33 = null;
    queryLoggingService29.rolcForKe(kernelTransaction32, throwable33);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction35 = null;
    queryLoggingService29.rolcForKe(kernelTransaction35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService29.sucsForEx(executingQuery37);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction39 = null;
    queryLoggingService29.strForEx(kernelTransaction39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    queryLoggingService29.faleForExTh(executingQuery41,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery44 = null;
    queryLoggingService29.faleForExTh(executingQuery44, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    queryLoggingService29.faleForExTh(executingQuery47, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery50 = null;
    queryLoggingService29.faleForExTh(executingQuery50, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery53 = null;
    java.lang.Throwable throwable54 = null;
    queryLoggingService29.faleForExTh(executingQuery53, throwable54);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction56 = null;
    java.lang.Throwable throwable57 = null;
    queryLoggingService29.rolcForKe(kernelTransaction56, throwable57);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction59 = null;
    java.lang.Throwable throwable60 = null;
    queryLoggingService29.rolcForKe(kernelTransaction59, throwable60);
    boolean boolean62 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction59);
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str2, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService3);
    org.junit.Assert.assertNotNull(wildcardClass26);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertEquals(
        "'" + str28 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str28, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService29);
    org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
  }

  @Test
  public void test1587() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1587");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.strForEx(executingQuery15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17, throwable18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.comForKe(kernelTransaction20);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1588() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1588");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.sucsForEx(executingQuery21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23, throwable24);
    java.lang.Class<?> wildcardClass26 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass26);
  }

  @Test
  public void test1589() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1589");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.strForEx(executingQuery12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.comForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.strForEx(kernelTransaction18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1590() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1590");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService0.faleForExTh(executingQuery22, throwable23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService0.comForKe(kernelTransaction25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService0.comForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService0.sucsForEx(executingQuery29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService0.rolcForKe(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService0.faleForExTh(executingQuery33, "");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1591() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1591");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.strForEx(executingQuery12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.comForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1592() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1592");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16, throwable17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.sucsForEx(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.sucsForEx(executingQuery21);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1593() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1593");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean9 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory10 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str11 = queryLoggingServiceExtensionFactory10.toString();
    boolean boolean12 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory10);
    boolean boolean13 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    java.lang.String str14 = queryLoggingServiceExtensionFactory7.getName();
    java.lang.String str15 = queryLoggingServiceExtensionFactory7.toString();
    java.lang.String str16 = queryLoggingServiceExtensionFactory7.toString();
    java.lang.String str17 = queryLoggingServiceExtensionFactory7.getName();
    java.lang.String str18 = queryLoggingServiceExtensionFactory7.toString();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "query-logging" + "'", str14,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str15 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str15, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str16 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str16, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "query-logging" + "'", str17,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str18 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str18, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1594() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1594");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20, throwable21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23, throwable24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService0.faleForExTh(executingQuery26, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService0.sucsForEx(executingQuery29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService0.rolcForKe(kernelTransaction31);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1595() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1595");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.strForEx(executingQuery17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.faleForExTh(executingQuery19, throwable20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService0.faleForExTh(executingQuery22, throwable23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService0.rolcForKe(kernelTransaction25, throwable26);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1596() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1596");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.comForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.faleForExTh(executingQuery23, throwable24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1597() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1597");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean9 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory10 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str11 = queryLoggingServiceExtensionFactory10.toString();
    boolean boolean12 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory10);
    boolean boolean13 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    java.lang.Object obj14 = null;
    boolean boolean15 = queryLoggingServiceExtensionFactory0.equals(obj14);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory16 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory17 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean19 = queryLoggingServiceExtensionFactory17.equals((java.lang.Object) (-1L));
    boolean boolean20 = queryLoggingServiceExtensionFactory16.equals((java.lang.Object) boolean19);
    boolean boolean22 = queryLoggingServiceExtensionFactory16.equals((java.lang.Object) 0L);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory23 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory24 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean26 = queryLoggingServiceExtensionFactory24.equals((java.lang.Object) (-1L));
    boolean boolean27 = queryLoggingServiceExtensionFactory23.equals((java.lang.Object) boolean26);
    java.lang.Object obj28 = new java.lang.Object();
    boolean boolean29 = queryLoggingServiceExtensionFactory23.equals(obj28);
    java.lang.String str30 = queryLoggingServiceExtensionFactory23.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService31 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService31.strForEx(executingQuery32);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    java.lang.Throwable throwable35 = null;
    queryLoggingService31.faleForExTh(executingQuery34, throwable35);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction37 = null;
    java.lang.Throwable throwable38 = null;
    queryLoggingService31.rolcForKe(kernelTransaction37, throwable38);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    queryLoggingService31.comForKe(kernelTransaction40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    queryLoggingService31.strForEx(executingQuery42);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    java.lang.Throwable throwable45 = null;
    queryLoggingService31.rolcForKe(kernelTransaction44, throwable45);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction47 = null;
    queryLoggingService31.comForKe(kernelTransaction47);
    boolean boolean49 = queryLoggingServiceExtensionFactory23.equals(
        (java.lang.Object) queryLoggingService31);
    boolean boolean50 = queryLoggingServiceExtensionFactory16.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory23);
    boolean boolean51 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory23);
    java.lang.String str52 = queryLoggingServiceExtensionFactory23.toString();
    java.lang.String str53 = queryLoggingServiceExtensionFactory23.getName();
    java.lang.String str54 = queryLoggingServiceExtensionFactory23.toString();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertEquals("'" + str30 + "' != '" + "query-logging" + "'", str30,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService31);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    org.junit.Assert.assertEquals(
        "'" + str52 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str52, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str53 + "' != '" + "query-logging" + "'", str53,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str54 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str54, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1598() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1598");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16, throwable17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.strForEx(executingQuery19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.sucsForEx(executingQuery23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService0.sucsForEx(executingQuery25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService0.sucsForEx(executingQuery27);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    queryLoggingService0.strForEx(kernelTransaction29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryLoggingService0.faleForExTh(executingQuery31,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1599() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1599");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16, throwable17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.sucsForEx(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.faleForExTh(executingQuery21, "");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1600() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1600");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1601() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1601");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "hi!", config13,
        path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "hi!", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config23, path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "hi!", config28,
        path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config33, path34);
  }

  @Test
  public void test1602() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1602");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.strForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.strForEx(executingQuery17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.strForEx(executingQuery21);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1603() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1603");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory8 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean10 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) (-1L));
    boolean boolean11 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) boolean10);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService12 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService12.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService12.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService12.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService12.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService12.strForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) executingQuery22);
    boolean boolean25 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory26 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean28 = queryLoggingServiceExtensionFactory26.equals((java.lang.Object) (short) 1);
    java.lang.String str29 = queryLoggingServiceExtensionFactory26.toString();
    boolean boolean30 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory26);
    java.lang.String str31 = queryLoggingServiceExtensionFactory26.toString();
    java.lang.String str32 = queryLoggingServiceExtensionFactory26.toString();
    java.lang.String str33 = queryLoggingServiceExtensionFactory26.toString();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(queryLoggingService12);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertEquals(
        "'" + str29 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str29, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    org.junit.Assert.assertEquals(
        "'" + str31 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str31, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str32 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str32, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str33 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str33, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1604() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1604");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService7 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService7.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService7.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService7.rolcForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService7.sucsForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService7.faleForExTh(executingQuery17, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService7.strForEx(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService7.rolcForKe(kernelTransaction22);
    boolean boolean24 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService7);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService25 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    java.lang.Throwable throwable27 = null;
    queryLoggingService25.rolcForKe(kernelTransaction26, throwable27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService25.sucsForEx(executingQuery29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryLoggingService25.strForEx(executingQuery31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService25.strForEx(executingQuery33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService25.strForEx(executingQuery35);
    boolean boolean37 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery35);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext38 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies39 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle40 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext38, queryLoggingServiceDependencies39);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService7);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(queryLoggingService25);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
  }

  @Test
  public void test1605() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1605");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.strForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17, throwable18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20, throwable21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.strForEx(executingQuery23);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1606() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1606");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.sucsForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.strForEx(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1607() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1607");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.sucsForEx(executingQuery10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.comForKe(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.faleForExTh(executingQuery17, throwable18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1608() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1608");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.strForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.faleForExTh(executingQuery10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.sucsForEx(executingQuery17);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1609() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1609");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService10 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService10.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService10.comForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService10.faleForExTh(executingQuery16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService10.comForKe(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService10.strForEx(executingQuery21);
    boolean boolean23 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService10);
    java.lang.String str24 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory25 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean27 = queryLoggingServiceExtensionFactory25.equals((java.lang.Object) (-1L));
    java.lang.String str28 = queryLoggingServiceExtensionFactory25.getName();
    boolean boolean29 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory25);
    java.lang.String str30 = queryLoggingServiceExtensionFactory25.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory31 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory32 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean34 = queryLoggingServiceExtensionFactory32.equals((java.lang.Object) (-1L));
    boolean boolean35 = queryLoggingServiceExtensionFactory31.equals((java.lang.Object) boolean34);
    java.lang.String str36 = queryLoggingServiceExtensionFactory31.toString();
    java.lang.String str37 = queryLoggingServiceExtensionFactory31.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory38 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean40 = queryLoggingServiceExtensionFactory38.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory41 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str42 = queryLoggingServiceExtensionFactory41.toString();
    boolean boolean43 = queryLoggingServiceExtensionFactory38.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory41);
    boolean boolean44 = queryLoggingServiceExtensionFactory31.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory38);
    java.lang.Object obj45 = null;
    boolean boolean46 = queryLoggingServiceExtensionFactory31.equals(obj45);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory47 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory48 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean50 = queryLoggingServiceExtensionFactory48.equals((java.lang.Object) (-1L));
    boolean boolean51 = queryLoggingServiceExtensionFactory47.equals((java.lang.Object) boolean50);
    boolean boolean53 = queryLoggingServiceExtensionFactory47.equals((java.lang.Object) 0L);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory54 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory55 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean57 = queryLoggingServiceExtensionFactory55.equals((java.lang.Object) (-1L));
    boolean boolean58 = queryLoggingServiceExtensionFactory54.equals((java.lang.Object) boolean57);
    java.lang.Object obj59 = new java.lang.Object();
    boolean boolean60 = queryLoggingServiceExtensionFactory54.equals(obj59);
    java.lang.String str61 = queryLoggingServiceExtensionFactory54.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService62 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery63 = null;
    queryLoggingService62.strForEx(executingQuery63);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery65 = null;
    java.lang.Throwable throwable66 = null;
    queryLoggingService62.faleForExTh(executingQuery65, throwable66);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction68 = null;
    java.lang.Throwable throwable69 = null;
    queryLoggingService62.rolcForKe(kernelTransaction68, throwable69);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction71 = null;
    queryLoggingService62.comForKe(kernelTransaction71);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery73 = null;
    queryLoggingService62.strForEx(executingQuery73);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction75 = null;
    java.lang.Throwable throwable76 = null;
    queryLoggingService62.rolcForKe(kernelTransaction75, throwable76);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction78 = null;
    queryLoggingService62.comForKe(kernelTransaction78);
    boolean boolean80 = queryLoggingServiceExtensionFactory54.equals(
        (java.lang.Object) queryLoggingService62);
    boolean boolean81 = queryLoggingServiceExtensionFactory47.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory54);
    boolean boolean82 = queryLoggingServiceExtensionFactory31.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory54);
    java.lang.String str83 = queryLoggingServiceExtensionFactory54.toString();
    java.lang.String str84 = queryLoggingServiceExtensionFactory54.toString();
    java.lang.String str85 = queryLoggingServiceExtensionFactory54.getName();
    boolean boolean86 = queryLoggingServiceExtensionFactory25.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory54);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService10);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "query-logging" + "'", str24,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertEquals("'" + str28 + "' != '" + "query-logging" + "'", str28,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    org.junit.Assert.assertEquals(
        "'" + str30 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str30, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    org.junit.Assert.assertEquals(
        "'" + str36 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str36, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str37 + "' != '" + "query-logging" + "'", str37,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    org.junit.Assert.assertEquals(
        "'" + str42 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str42, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    org.junit.Assert.assertEquals("'" + str61 + "' != '" + "query-logging" + "'", str61,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService62);
    org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    org.junit.Assert.assertEquals(
        "'" + str83 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str83, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str84 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str84, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str85 + "' != '" + "query-logging" + "'", str85,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
  }

  @Test
  public void test1610() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1610");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.faleForExTh(executingQuery16,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.strForEx(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.sucsForEx(executingQuery21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.faleForExTh(executingQuery23, "");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1611() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1611");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6, "query-logging",
        config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "hi!", config23,
        path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "hi!", config28,
        path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31, "hi!", config33,
        path34);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction36 = null;
    org.neo4j.configuration.Config config38 = null;
    java.nio.file.Path path39 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction36, "", config38,
        path39);
  }

  @Test
  public void test1612() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1612");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20, throwable21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService0.strForEx(executingQuery25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    java.lang.Throwable throwable28 = null;
    queryLoggingService0.faleForExTh(executingQuery27, throwable28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryLoggingService0.strForEx(executingQuery30);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1613() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1613");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.strForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.sucsForEx(executingQuery20);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1614() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1614");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 1);
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str4 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService6 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    queryLoggingService6.strForEx(executingQuery7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService6.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService6.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService6.rolcForKe(kernelTransaction15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService6.comForKe(kernelTransaction18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService6.comForKe(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService6.comForKe(kernelTransaction22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService6.sucsForEx(executingQuery24);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    java.lang.Throwable throwable27 = null;
    queryLoggingService6.rolcForKe(kernelTransaction26, throwable27);
    boolean boolean29 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryLoggingService6.faleForExTh(executingQuery30, "");
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str3, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "query-logging" + "'", str5,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService6);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
  }

  @Test
  public void test1615() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1615");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    queryLoggingService0.strForEx(kernelTransaction3);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction5 = null;
    queryLoggingService0.strForEx(kernelTransaction5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1616() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1616");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.faleForExTh(executingQuery12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17, throwable18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.strForEx(kernelTransaction20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.faleForExTh(executingQuery22, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService0.faleForExTh(executingQuery25, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService0.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    java.lang.Throwable throwable32 = null;
    queryLoggingService0.rolcForKe(kernelTransaction31, throwable32);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1617() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1617");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str2 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService3 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService3.faleForExTh(executingQuery4,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    queryLoggingService3.faleForExTh(executingQuery7,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService3.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService3.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService3.faleForExTh(executingQuery14,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory18 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean20 = queryLoggingServiceExtensionFactory18.equals((java.lang.Object) (short) 1);
    java.lang.String str21 = queryLoggingServiceExtensionFactory18.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService22 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService22.strForEx(executingQuery23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService22.faleForExTh(executingQuery25, throwable26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService22.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService22.comForKe(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService22.strForEx(executingQuery33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService22.strForEx(executingQuery35);
    boolean boolean37 = queryLoggingServiceExtensionFactory18.equals(
        (java.lang.Object) executingQuery35);
    java.lang.Class<?> wildcardClass38 = queryLoggingServiceExtensionFactory18.getClass();
    boolean boolean39 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) wildcardClass38);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService40 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction41 = null;
    queryLoggingService40.rolcForKe(kernelTransaction41);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction43 = null;
    java.lang.Throwable throwable44 = null;
    queryLoggingService40.rolcForKe(kernelTransaction43, throwable44);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction46 = null;
    java.lang.Throwable throwable47 = null;
    queryLoggingService40.rolcForKe(kernelTransaction46, throwable47);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction49 = null;
    java.lang.Throwable throwable50 = null;
    queryLoggingService40.rolcForKe(kernelTransaction49, throwable50);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction52 = null;
    queryLoggingService40.rolcForKe(kernelTransaction52);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction54 = null;
    queryLoggingService40.rolcForKe(kernelTransaction54);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction56 = null;
    queryLoggingService40.rolcForKe(kernelTransaction56);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction58 = null;
    java.lang.Throwable throwable59 = null;
    queryLoggingService40.rolcForKe(kernelTransaction58, throwable59);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery61 = null;
    queryLoggingService40.strForEx(executingQuery61);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery63 = null;
    queryLoggingService40.sucsForEx(executingQuery63);
    boolean boolean65 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService40);
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str2, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService3);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertEquals("'" + str21 + "' != '" + "query-logging" + "'", str21,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService22);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertNotNull(wildcardClass38);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertNotNull(queryLoggingService40);
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
  }

  @Test
  public void test1618() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1618");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20, throwable21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23, throwable24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1619() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1619");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.faleForExTh(executingQuery23, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    java.lang.Throwable throwable27 = null;
    queryLoggingService0.rolcForKe(kernelTransaction26, throwable27);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService0.rolcForKe(kernelTransaction29, throwable30);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction32 = null;
    queryLoggingService0.comForKe(kernelTransaction32);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1620() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1620");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.strForEx(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.sucsForEx(executingQuery19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1621() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1621");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService3 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService3.rolcForKe(kernelTransaction4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService3.rolcForKe(kernelTransaction6, throwable7);
    boolean boolean9 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService3);
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str11 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str12 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str13 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory14 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory15 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean17 = queryLoggingServiceExtensionFactory15.equals((java.lang.Object) (-1L));
    boolean boolean18 = queryLoggingServiceExtensionFactory14.equals((java.lang.Object) boolean17);
    boolean boolean20 = queryLoggingServiceExtensionFactory14.equals((java.lang.Object) 0L);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory21 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory22 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean24 = queryLoggingServiceExtensionFactory22.equals((java.lang.Object) (-1L));
    boolean boolean25 = queryLoggingServiceExtensionFactory21.equals((java.lang.Object) boolean24);
    java.lang.Object obj26 = new java.lang.Object();
    boolean boolean27 = queryLoggingServiceExtensionFactory21.equals(obj26);
    java.lang.String str28 = queryLoggingServiceExtensionFactory21.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService29 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryLoggingService29.strForEx(executingQuery30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    java.lang.Throwable throwable33 = null;
    queryLoggingService29.faleForExTh(executingQuery32, throwable33);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction35 = null;
    java.lang.Throwable throwable36 = null;
    queryLoggingService29.rolcForKe(kernelTransaction35, throwable36);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction38 = null;
    queryLoggingService29.comForKe(kernelTransaction38);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery40 = null;
    queryLoggingService29.strForEx(executingQuery40);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction42 = null;
    java.lang.Throwable throwable43 = null;
    queryLoggingService29.rolcForKe(kernelTransaction42, throwable43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    queryLoggingService29.comForKe(kernelTransaction45);
    boolean boolean47 = queryLoggingServiceExtensionFactory21.equals(
        (java.lang.Object) queryLoggingService29);
    boolean boolean48 = queryLoggingServiceExtensionFactory14.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory21);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService49 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction50 = null;
    java.lang.Throwable throwable51 = null;
    queryLoggingService49.rolcForKe(kernelTransaction50, throwable51);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction53 = null;
    queryLoggingService49.comForKe(kernelTransaction53);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery55 = null;
    java.lang.Throwable throwable56 = null;
    queryLoggingService49.faleForExTh(executingQuery55, throwable56);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction58 = null;
    queryLoggingService49.rolcForKe(kernelTransaction58);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction60 = null;
    queryLoggingService49.comForKe(kernelTransaction60);
    boolean boolean62 = queryLoggingServiceExtensionFactory21.equals(
        (java.lang.Object) queryLoggingService49);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery63 = null;
    queryLoggingService49.sucsForEx(executingQuery63);
    java.lang.Class<?> wildcardClass65 = queryLoggingService49.getClass();
    boolean boolean66 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) wildcardClass65);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext67 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies68 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle69 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext67, queryLoggingServiceDependencies68);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(queryLoggingService3);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "query-logging" + "'", str10,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "query-logging" + "'", str11,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str12 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str12, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str13 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str13, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertEquals("'" + str28 + "' != '" + "query-logging" + "'", str28,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService29);
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    org.junit.Assert.assertNotNull(queryLoggingService49);
    org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    org.junit.Assert.assertNotNull(wildcardClass65);
    org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
  }

  @Test
  public void test1622() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1622");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean9 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory10 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str11 = queryLoggingServiceExtensionFactory10.toString();
    boolean boolean12 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory10);
    boolean boolean13 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    java.lang.String str14 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService15 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService15.rolcForKe(kernelTransaction16, throwable17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService15.sucsForEx(executingQuery19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService15.comForKe(kernelTransaction21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService15.faleForExTh(executingQuery23, throwable24);
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable24);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService27 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService27.rolcForKe(kernelTransaction28);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    java.lang.Throwable throwable31 = null;
    queryLoggingService27.rolcForKe(kernelTransaction30, throwable31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService27.faleForExTh(executingQuery33, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    queryLoggingService27.comForKe(kernelTransaction36);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery38 = null;
    queryLoggingService27.sucsForEx(executingQuery38);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery40 = null;
    queryLoggingService27.sucsForEx(executingQuery40);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction42 = null;
    queryLoggingService27.comForKe(kernelTransaction42);
    boolean boolean44 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService27);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    java.lang.Throwable throwable46 = null;
    queryLoggingService27.rolcForKe(kernelTransaction45, throwable46);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "query-logging" + "'", str14,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService15);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertNotNull(queryLoggingService27);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
  }

  @Test
  public void test1623() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1623");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory2 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean4 = queryLoggingServiceExtensionFactory2.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory5 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str6 = queryLoggingServiceExtensionFactory5.toString();
    boolean boolean7 = queryLoggingServiceExtensionFactory2.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory5);
    java.lang.String str8 = queryLoggingServiceExtensionFactory2.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory2.getName();
    boolean boolean10 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory2);
    java.lang.String str11 = queryLoggingServiceExtensionFactory2.toString();
    java.lang.String str12 = queryLoggingServiceExtensionFactory2.getName();
    java.lang.String str13 = queryLoggingServiceExtensionFactory2.getName();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str6, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "query-logging" + "'", str12,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "query-logging" + "'", str13,
        "query-logging");
  }

  @Test
  public void test1624() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1624");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.strForEx(executingQuery3);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    queryLoggingService0.sucsForEx(executingQuery5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    queryLoggingService0.faleForExTh(executingQuery7, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.faleForExTh(executingQuery10, throwable11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15, throwable16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18, "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1625() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1625");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.Object obj10 = null;
    boolean boolean11 = queryLoggingServiceExtensionFactory3.equals(obj10);
    java.lang.String str12 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str13 = queryLoggingServiceExtensionFactory3.getName();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "query-logging" + "'", str12,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "query-logging" + "'", str13,
        "query-logging");
  }

  @Test
  public void test1626() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1626");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1627() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1627");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.strForEx(executingQuery16);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1628() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1628");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory3.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService7 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService7.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService7.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService7.faleForExTh(executingQuery13, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService7.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService7.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService7.strForEx(executingQuery21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService7.faleForExTh(executingQuery23,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    boolean boolean26 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService27 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService27.rolcForKe(kernelTransaction28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryLoggingService27.faleForExTh(executingQuery30, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    java.lang.Throwable throwable34 = null;
    queryLoggingService27.faleForExTh(executingQuery33, throwable34);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService27.faleForExTh(executingQuery36, throwable37);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction39 = null;
    queryLoggingService27.strForEx(kernelTransaction39);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction41 = null;
    queryLoggingService27.strForEx(kernelTransaction41);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction43 = null;
    java.lang.Throwable throwable44 = null;
    queryLoggingService27.rolcForKe(kernelTransaction43, throwable44);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery46 = null;
    java.lang.Throwable throwable47 = null;
    queryLoggingService27.faleForExTh(executingQuery46, throwable47);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction49 = null;
    queryLoggingService27.strForEx(kernelTransaction49);
    boolean boolean51 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService27);
    java.lang.Object obj52 = null;
    boolean boolean53 = queryLoggingServiceExtensionFactory3.equals(obj52);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str6, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService7);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertNotNull(queryLoggingService27);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
  }

  @Test
  public void test1629() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1629");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1630() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1630");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService0.rolcForKe(kernelTransaction25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService0.strForEx(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService0.sucsForEx(executingQuery29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    java.lang.Throwable throwable32 = null;
    queryLoggingService0.faleForExTh(executingQuery31, throwable32);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1631() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1631");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean9 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory10 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str11 = queryLoggingServiceExtensionFactory10.toString();
    boolean boolean12 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory10);
    boolean boolean13 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    java.lang.String str14 = queryLoggingServiceExtensionFactory7.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService15 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService15.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService15.faleForExTh(executingQuery18, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService15.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService15.strForEx(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService15.strForEx(executingQuery26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService15.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryLoggingService15.strForEx(executingQuery31);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    queryLoggingService15.comForKe(kernelTransaction33);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction35 = null;
    java.lang.Throwable throwable36 = null;
    queryLoggingService15.rolcForKe(kernelTransaction35, throwable36);
    boolean boolean38 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) kernelTransaction35);
    java.lang.Class<?> wildcardClass39 = queryLoggingServiceExtensionFactory7.getClass();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "query-logging" + "'", str14,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService15);
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    org.junit.Assert.assertNotNull(wildcardClass39);
  }

  @Test
  public void test1632() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1632");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService10 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService10.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService10.comForKe(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService10.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService10.strForEx(kernelTransaction18);
    boolean boolean20 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService10.rolcForKe(kernelTransaction21, throwable22);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService10);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
  }

  @Test
  public void test1633() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1633");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.faleForExTh(executingQuery12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17, throwable18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.strForEx(kernelTransaction20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.sucsForEx(executingQuery22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService0.sucsForEx(executingQuery24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1634() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1634");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.strForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.faleForExTh(executingQuery22, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService0.strForEx(executingQuery25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService0.comForKe(kernelTransaction27);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    queryLoggingService0.comForKe(kernelTransaction29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService0.comForKe(kernelTransaction31);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    queryLoggingService0.rolcForKe(kernelTransaction33);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1635() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1635");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.strForEx(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.faleForExTh(executingQuery13, throwable14);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1636() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1636");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1.0d));
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService3 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService3.rolcForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService3.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService3.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService3.faleForExTh(executingQuery12, throwable13);
    boolean boolean15 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery12);
    java.lang.String str16 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str17 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(queryLoggingService3);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertEquals(
        "'" + str16 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str16, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str17 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str17, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1637() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1637");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.rolcForKe(kernelTransaction4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    queryLoggingService0.strForEx(executingQuery7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1638() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1638");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.faleForExTh(executingQuery19, "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1639() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1639");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.comForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.faleForExTh(executingQuery13, "");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1640() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1640");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.strForEx(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.faleForExTh(executingQuery21, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.comForKe(kernelTransaction24);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    queryLoggingService0.comForKe(kernelTransaction26);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1641() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1641");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.Object obj5 = new java.lang.Object();
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals(obj5);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory8 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean10 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) (-1L));
    boolean boolean11 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) boolean10);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService12 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService12.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService12.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService12.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService12.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService12.strForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) executingQuery22);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService25 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    queryLoggingService25.rolcForKe(kernelTransaction26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService25.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryLoggingService25.faleForExTh(executingQuery31, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction34 = null;
    queryLoggingService25.rolcForKe(kernelTransaction34);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService25.faleForExTh(executingQuery36, throwable37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService25.sucsForEx(executingQuery39);
    boolean boolean41 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingService25);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService42 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction43 = null;
    java.lang.Throwable throwable44 = null;
    queryLoggingService42.rolcForKe(kernelTransaction43, throwable44);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery46 = null;
    queryLoggingService42.sucsForEx(executingQuery46);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction48 = null;
    queryLoggingService42.comForKe(kernelTransaction48);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery50 = null;
    queryLoggingService42.faleForExTh(executingQuery50, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction53 = null;
    queryLoggingService42.strForEx(kernelTransaction53);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    queryLoggingService42.comForKe(kernelTransaction55);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery57 = null;
    queryLoggingService42.strForEx(executingQuery57);
    boolean boolean59 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingService42);
    boolean boolean60 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean59);
    java.lang.String str61 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl62 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction63 = null;
    org.neo4j.configuration.Config config65 = null;
    java.nio.file.Path path66 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl62.init(fileSystemAbstraction63, "hi!",
        config65, path66);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction68 = null;
    org.neo4j.configuration.Config config70 = null;
    java.nio.file.Path path71 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl62.init(fileSystemAbstraction68, "", config70,
        path71);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction73 = null;
    org.neo4j.configuration.Config config75 = null;
    java.nio.file.Path path76 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl62.init(fileSystemAbstraction73,
        "query-logging", config75, path76);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction78 = null;
    org.neo4j.configuration.Config config80 = null;
    java.nio.file.Path path81 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl62.init(fileSystemAbstraction78,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config80, path81);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction83 = null;
    org.neo4j.configuration.Config config85 = null;
    java.nio.file.Path path86 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl62.init(fileSystemAbstraction83, "", config85,
        path86);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction88 = null;
    org.neo4j.configuration.Config config90 = null;
    java.nio.file.Path path91 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl62.init(fileSystemAbstraction88,
        "query-logging", config90, path91);
    boolean boolean93 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) path91);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(queryLoggingService12);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(queryLoggingService25);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    org.junit.Assert.assertNotNull(queryLoggingService42);
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    org.junit.Assert.assertEquals(
        "'" + str61 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str61, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
  }

  @Test
  public void test1642() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1642");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService10 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService10.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService10.comForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService10.faleForExTh(executingQuery16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService10.comForKe(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService10.strForEx(executingQuery21);
    boolean boolean23 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService10);
    java.lang.String str24 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory25 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean27 = queryLoggingServiceExtensionFactory25.equals((java.lang.Object) (-1L));
    java.lang.String str28 = queryLoggingServiceExtensionFactory25.getName();
    boolean boolean29 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory25);
    java.lang.String str30 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Class<?> wildcardClass31 = queryLoggingServiceExtensionFactory0.getClass();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService10);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "query-logging" + "'", str24,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertEquals("'" + str28 + "' != '" + "query-logging" + "'", str28,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    org.junit.Assert.assertEquals("'" + str30 + "' != '" + "query-logging" + "'", str30,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass31);
  }

  @Test
  public void test1643() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1643");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.faleForExTh(executingQuery12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17, throwable18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20, throwable21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.strForEx(kernelTransaction23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService0.rolcForKe(kernelTransaction25, throwable26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService0.sucsForEx(executingQuery28);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1644() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1644");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.strForEx(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14, "");
    java.lang.Class<?> wildcardClass17 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass17);
  }

  @Test
  public void test1645() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1645");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory2 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean4 = queryLoggingServiceExtensionFactory2.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory5 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str6 = queryLoggingServiceExtensionFactory5.toString();
    boolean boolean7 = queryLoggingServiceExtensionFactory2.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory5);
    java.lang.String str8 = queryLoggingServiceExtensionFactory2.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory2.getName();
    boolean boolean10 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory2);
    java.lang.String str11 = queryLoggingServiceExtensionFactory2.toString();
    java.lang.Object obj12 = null;
    boolean boolean13 = queryLoggingServiceExtensionFactory2.equals(obj12);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext14 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies15 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle16 = queryLoggingServiceExtensionFactory2.newInstance(
          extensionContext14, queryLoggingServiceDependencies15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str6, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
  }

  @Test
  public void test1646() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1646");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.Object obj10 = null;
    boolean boolean11 = queryLoggingServiceExtensionFactory3.equals(obj10);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService12 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService12.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService12.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService12.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService12.comForKe(kernelTransaction20);
    boolean boolean22 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService12);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory23 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory24 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean26 = queryLoggingServiceExtensionFactory24.equals((java.lang.Object) (-1L));
    boolean boolean27 = queryLoggingServiceExtensionFactory23.equals((java.lang.Object) boolean26);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService28 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService28.strForEx(executingQuery29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    java.lang.Throwable throwable32 = null;
    queryLoggingService28.faleForExTh(executingQuery31, throwable32);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction34 = null;
    queryLoggingService28.rolcForKe(kernelTransaction34);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery36 = null;
    queryLoggingService28.sucsForEx(executingQuery36);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery38 = null;
    queryLoggingService28.strForEx(executingQuery38);
    boolean boolean40 = queryLoggingServiceExtensionFactory23.equals(
        (java.lang.Object) executingQuery38);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService41 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction42 = null;
    queryLoggingService41.rolcForKe(kernelTransaction42);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    java.lang.Throwable throwable45 = null;
    queryLoggingService41.rolcForKe(kernelTransaction44, throwable45);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    queryLoggingService41.faleForExTh(executingQuery47, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction50 = null;
    queryLoggingService41.rolcForKe(kernelTransaction50);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery52 = null;
    java.lang.Throwable throwable53 = null;
    queryLoggingService41.faleForExTh(executingQuery52, throwable53);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery55 = null;
    queryLoggingService41.sucsForEx(executingQuery55);
    boolean boolean57 = queryLoggingServiceExtensionFactory23.equals(
        (java.lang.Object) queryLoggingService41);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction58 = null;
    queryLoggingService41.strForEx(kernelTransaction58);
    boolean boolean60 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) kernelTransaction58);
    java.lang.String str61 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str62 = queryLoggingServiceExtensionFactory3.getName();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(queryLoggingService12);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertNotNull(queryLoggingService28);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    org.junit.Assert.assertNotNull(queryLoggingService41);
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    org.junit.Assert.assertEquals(
        "'" + str61 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str61, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str62 + "' != '" + "query-logging" + "'", str62,
        "query-logging");
  }

  @Test
  public void test1647() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1647");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.Object obj5 = new java.lang.Object();
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals(obj5);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService8.comForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService8.strForEx(executingQuery19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService8.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService8.comForKe(kernelTransaction24);
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    java.lang.Throwable throwable28 = null;
    queryLoggingService8.rolcForKe(kernelTransaction27, throwable28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryLoggingService8.strForEx(executingQuery30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    java.lang.Throwable throwable33 = null;
    queryLoggingService8.faleForExTh(executingQuery32, throwable33);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
  }

  @Test
  public void test1648() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1648");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.strForEx(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.faleForExTh(executingQuery13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.comForKe(kernelTransaction18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.comForKe(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22, throwable23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService0.comForKe(kernelTransaction25);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1649() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1649");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.strForEx(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.faleForExTh(executingQuery21, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1650() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1650");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1651() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1651");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.Object obj5 = new java.lang.Object();
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals(obj5);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService8.comForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService8.strForEx(executingQuery19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService8.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService8.comForKe(kernelTransaction24);
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService8);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService27 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService27.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryLoggingService27.sucsForEx(executingQuery31);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    queryLoggingService27.comForKe(kernelTransaction33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService27.faleForExTh(executingQuery35, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction38 = null;
    queryLoggingService27.strForEx(kernelTransaction38);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    java.lang.Throwable throwable41 = null;
    queryLoggingService27.rolcForKe(kernelTransaction40, throwable41);
    boolean boolean43 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction40);
    java.lang.String str44 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str45 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str46 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str47 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertNotNull(queryLoggingService27);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertEquals("'" + str44 + "' != '" + "query-logging" + "'", str44,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str45 + "' != '" + "query-logging" + "'", str45,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str46 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str46, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str47 + "' != '" + "query-logging" + "'", str47,
        "query-logging");
  }

  @Test
  public void test1652() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1652");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.strForEx(executingQuery22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.strForEx(kernelTransaction24);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    queryLoggingService0.comForKe(kernelTransaction26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService0.strForEx(executingQuery28);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    queryLoggingService0.strForEx(kernelTransaction30);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1653() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1653");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.strForEx(executingQuery17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService0.faleForExTh(executingQuery24, throwable25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService0.strForEx(kernelTransaction27);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1654() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1654");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService8.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService8.sucsForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery22);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService25 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService25.strForEx(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService25.faleForExTh(executingQuery28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService25.rolcForKe(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService25.sucsForEx(executingQuery33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService25.strForEx(executingQuery35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService25.sucsForEx(executingQuery37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService25.sucsForEx(executingQuery39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    queryLoggingService25.sucsForEx(executingQuery41);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService25.strForEx(executingQuery43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    java.lang.Throwable throwable46 = null;
    queryLoggingService25.rolcForKe(kernelTransaction45, throwable46);
    boolean boolean48 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery49 = null;
    java.lang.Throwable throwable50 = null;
    queryLoggingService25.faleForExTh(executingQuery49, throwable50);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction52 = null;
    java.lang.Throwable throwable53 = null;
    queryLoggingService25.rolcForKe(kernelTransaction52, throwable53);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery55 = null;
    queryLoggingService25.faleForExTh(executingQuery55, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery58 = null;
    queryLoggingService25.sucsForEx(executingQuery58);
    java.lang.Class<?> wildcardClass60 = queryLoggingService25.getClass();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(queryLoggingService25);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    org.junit.Assert.assertNotNull(wildcardClass60);
  }

  @Test
  public void test1655() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1655");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.strForEx(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.faleForExTh(executingQuery13, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.comForKe(kernelTransaction20);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1656() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1656");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.rolcForKe(kernelTransaction4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    queryLoggingService0.faleForExTh(executingQuery7, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16, throwable17);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1657() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1657");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory8 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean10 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) (-1L));
    boolean boolean11 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) boolean10);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService12 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService12.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService12.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService12.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService12.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService12.strForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) executingQuery22);
    boolean boolean25 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    java.lang.String str26 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService27 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService27.strForEx(executingQuery28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    java.lang.Throwable throwable31 = null;
    queryLoggingService27.faleForExTh(executingQuery30, throwable31);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    queryLoggingService27.rolcForKe(kernelTransaction33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService27.sucsForEx(executingQuery35);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction37 = null;
    queryLoggingService27.strForEx(kernelTransaction37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    java.lang.Throwable throwable40 = null;
    queryLoggingService27.faleForExTh(executingQuery39, throwable40);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction42 = null;
    queryLoggingService27.strForEx(kernelTransaction42);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    queryLoggingService27.strForEx(kernelTransaction44);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction46 = null;
    java.lang.Throwable throwable47 = null;
    queryLoggingService27.rolcForKe(kernelTransaction46, throwable47);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction49 = null;
    java.lang.Throwable throwable50 = null;
    queryLoggingService27.rolcForKe(kernelTransaction49, throwable50);
    boolean boolean52 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService27);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction53 = null;
    queryLoggingService27.rolcForKe(kernelTransaction53);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(queryLoggingService12);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "query-logging" + "'", str26,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService27);
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
  }

  @Test
  public void test1658() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1658");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.strForEx(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService0.strForEx(kernelTransaction8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1659() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1659");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.comForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.strForEx(executingQuery16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.strForEx(kernelTransaction18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1660() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1660");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.comForKe(kernelTransaction21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.faleForExTh(executingQuery23,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1661() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1661");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "hi!");
    java.lang.Class<?> wildcardClass18 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass18);
  }

  @Test
  public void test1662() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1662");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj9 = new java.lang.Object();
    java.lang.Class<?> wildcardClass10 = obj9.getClass();
    boolean boolean11 = queryLoggingServiceExtensionFactory0.equals(obj9);
    java.lang.String str12 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj13 = null;
    boolean boolean14 = queryLoggingServiceExtensionFactory0.equals(obj13);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService15 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService15.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService15.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService15.rolcForKe(kernelTransaction21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService15.sucsForEx(executingQuery23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService15.strForEx(kernelTransaction25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    java.lang.Throwable throwable28 = null;
    queryLoggingService15.rolcForKe(kernelTransaction27, throwable28);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    queryLoggingService15.strForEx(kernelTransaction30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService15.sucsForEx(executingQuery32);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery32);
    java.lang.String str35 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "query-logging" + "'", str12,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertNotNull(queryLoggingService15);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertEquals(
        "'" + str35 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str35, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1663() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1663");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService8.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService8.faleForExTh(executingQuery14, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService8.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService8.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService8.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService8.comForKe(kernelTransaction24);
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService8);
    java.lang.String str27 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "query-logging" + "'", str27,
        "query-logging");
  }

  @Test
  public void test1664() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1664");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.strForEx(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.comForKe(kernelTransaction23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService0.faleForExTh(executingQuery25, throwable26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService0.comForKe(kernelTransaction28);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1665() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1665");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService0.strForEx(kernelTransaction8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.faleForExTh(executingQuery10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.faleForExTh(executingQuery21, throwable22);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1666() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1666");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.strForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1667() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1667");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.comForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.strForEx(kernelTransaction17);
    java.lang.Class<?> wildcardClass19 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass19);
  }

  @Test
  public void test1668() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1668");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.rolcForKe(kernelTransaction4, throwable5);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.rolcForKe(kernelTransaction7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1669() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1669");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.faleForExTh(executingQuery12, throwable13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.strForEx(executingQuery15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.comForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.sucsForEx(executingQuery22);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1670() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1670");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.comForKe(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService0.faleForExTh(executingQuery25,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService0.comForKe(kernelTransaction28);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    queryLoggingService0.rolcForKe(kernelTransaction30);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1671() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1671");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1672() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1672");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.comForKe(kernelTransaction21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.sucsForEx(executingQuery23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService0.strForEx(executingQuery25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    java.lang.Throwable throwable28 = null;
    queryLoggingService0.faleForExTh(executingQuery27, throwable28);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    queryLoggingService0.strForEx(kernelTransaction30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    java.lang.Throwable throwable33 = null;
    queryLoggingService0.faleForExTh(executingQuery32, throwable33);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction35 = null;
    queryLoggingService0.rolcForKe(kernelTransaction35);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1673() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1673");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.strForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.faleForExTh(executingQuery13, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16, throwable17);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1674() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1674");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1.0d));
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService3 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService3.rolcForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService3.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService3.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService3.faleForExTh(executingQuery12, throwable13);
    boolean boolean15 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery12);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService16 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService16.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService16.faleForExTh(executingQuery19, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService16.rolcForKe(kernelTransaction22);
    boolean boolean24 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService16);
    java.lang.Class<?> wildcardClass25 = queryLoggingService16.getClass();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(queryLoggingService3);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertNotNull(queryLoggingService16);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(wildcardClass25);
  }

  @Test
  public void test1675() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1675");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.comForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1676() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1676");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.faleForExTh(executingQuery12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19);
    java.lang.Class<?> wildcardClass21 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass21);
  }

  @Test
  public void test1677() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1677");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config3, path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "", config13,
        path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "query-logging",
        config23, path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "", config28,
        path29);
  }

  @Test
  public void test1678() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1678");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.faleForExTh(executingQuery1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.faleForExTh(executingQuery4,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.rolcForKe(kernelTransaction7, throwable8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.comForKe(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.comForKe(kernelTransaction17);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1679() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1679");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.strForEx(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.faleForExTh(executingQuery16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.strForEx(kernelTransaction19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1680() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1680");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.strForEx(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService0.strForEx(kernelTransaction8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.comForKe(kernelTransaction18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1681() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1681");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.faleForExTh(executingQuery6, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.faleForExTh(executingQuery16,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1682() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1682");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22, throwable23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService0.sucsForEx(executingQuery25);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1683() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1683");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 1);
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService4 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    queryLoggingService4.strForEx(executingQuery5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService4.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService4.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService4.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService4.strForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService4.strForEx(executingQuery17);
    boolean boolean19 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery17);
    java.lang.String str20 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str21 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService22 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService22.rolcForKe(kernelTransaction23, throwable24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    java.lang.Throwable throwable27 = null;
    queryLoggingService22.faleForExTh(executingQuery26, throwable27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService22.faleForExTh(executingQuery29, throwable30);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction32 = null;
    java.lang.Throwable throwable33 = null;
    queryLoggingService22.rolcForKe(kernelTransaction32, throwable33);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction35 = null;
    queryLoggingService22.strForEx(kernelTransaction35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService22.faleForExTh(executingQuery37, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery40 = null;
    queryLoggingService22.strForEx(executingQuery40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    queryLoggingService22.faleForExTh(executingQuery42, "hi!");
    boolean boolean45 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService22);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService46 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction47 = null;
    queryLoggingService46.rolcForKe(kernelTransaction47);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction49 = null;
    java.lang.Throwable throwable50 = null;
    queryLoggingService46.rolcForKe(kernelTransaction49, throwable50);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction52 = null;
    queryLoggingService46.rolcForKe(kernelTransaction52);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery54 = null;
    queryLoggingService46.sucsForEx(executingQuery54);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction56 = null;
    queryLoggingService46.strForEx(kernelTransaction56);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery58 = null;
    queryLoggingService46.faleForExTh(executingQuery58,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery61 = null;
    queryLoggingService46.faleForExTh(executingQuery61, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery64 = null;
    queryLoggingService46.faleForExTh(executingQuery64, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery67 = null;
    queryLoggingService46.sucsForEx(executingQuery67);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery69 = null;
    queryLoggingService46.strForEx(executingQuery69);
    boolean boolean71 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery69);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "query-logging" + "'", str3,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService4);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "query-logging" + "'", str20,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str21 + "' != '" + "query-logging" + "'", str21,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService22);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    org.junit.Assert.assertNotNull(queryLoggingService46);
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
  }

  @Test
  public void test1684() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1684");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.strForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12, "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1685() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1685");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService0.strForEx(kernelTransaction8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.strForEx(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1686() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1686");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1.0f));
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService9 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService9.rolcForKe(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService9.strForEx(kernelTransaction12);
    java.lang.Class<?> wildcardClass14 = queryLoggingService9.getClass();
    boolean boolean15 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService9);
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl16 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.configuration.Config config19 = null;
    java.nio.file.Path path20 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl16.init(fileSystemAbstraction17, "hi!",
        config19, path20);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction22 = null;
    org.neo4j.configuration.Config config24 = null;
    java.nio.file.Path path25 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl16.init(fileSystemAbstraction22,
        "query-logging", config24, path25);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction27 = null;
    org.neo4j.configuration.Config config29 = null;
    java.nio.file.Path path30 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl16.init(fileSystemAbstraction27,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config29, path30);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction32 = null;
    org.neo4j.configuration.Config config34 = null;
    java.nio.file.Path path35 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl16.init(fileSystemAbstraction32, "", config34,
        path35);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction37 = null;
    org.neo4j.configuration.Config config39 = null;
    java.nio.file.Path path40 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl16.init(fileSystemAbstraction37, "hi!",
        config39, path40);
    java.lang.Class<?> wildcardClass42 = diagnosticsOfflineReportProviderQueryLoggingImpl16.getClass();
    boolean boolean43 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) wildcardClass42);
    java.lang.String str44 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService9);
    org.junit.Assert.assertNotNull(wildcardClass14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertNotNull(wildcardClass42);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertEquals(
        "'" + str44 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str44, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1687() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1687");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.strForEx(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23, throwable24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService0.faleForExTh(executingQuery26, "");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1688() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1688");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.strForEx(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.faleForExTh(executingQuery13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.comForKe(kernelTransaction18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.comForKe(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService0.faleForExTh(executingQuery24, "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1689() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1689");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.strForEx(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.faleForExTh(executingQuery16,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.strForEx(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.sucsForEx(executingQuery21);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1690() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1690");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.faleForExTh(executingQuery12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.comForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23);
    java.lang.Class<?> wildcardClass25 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass25);
  }

  @Test
  public void test1691() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1691");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "hi!", config13,
        path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "hi!", config23,
        path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "", config28,
        path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31, "query-logging",
        config33, path34);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction36 = null;
    org.neo4j.configuration.Config config38 = null;
    java.nio.file.Path path39 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction36,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config38, path39);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction41 = null;
    org.neo4j.configuration.Config config43 = null;
    java.nio.file.Path path44 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction41,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config43, path44);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction46 = null;
    org.neo4j.configuration.Config config48 = null;
    java.nio.file.Path path49 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction46, "query-logging",
        config48, path49);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction51 = null;
    org.neo4j.configuration.Config config53 = null;
    java.nio.file.Path path54 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction51,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config53, path54);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction56 = null;
    org.neo4j.configuration.Config config58 = null;
    java.nio.file.Path path59 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction56, "query-logging",
        config58, path59);
    java.lang.Class<?> wildcardClass61 = diagnosticsOfflineReportProviderQueryLoggingImpl0.getClass();
    org.junit.Assert.assertNotNull(wildcardClass61);
  }

  @Test
  public void test1692() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1692");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.strForEx(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.faleForExTh(executingQuery17, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.comForKe(kernelTransaction20);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1693() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1693");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.faleForExTh(executingQuery21,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.strForEx(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService0.sucsForEx(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService0.faleForExTh(executingQuery28,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    java.lang.Throwable throwable32 = null;
    queryLoggingService0.rolcForKe(kernelTransaction31, throwable32);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1694() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1694");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.faleForExTh(executingQuery1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15, throwable16);
    java.lang.Class<?> wildcardClass18 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass18);
  }

  @Test
  public void test1695() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1695");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.faleForExTh(executingQuery1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.faleForExTh(executingQuery4,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.rolcForKe(kernelTransaction7, throwable8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.comForKe(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17, throwable18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.strForEx(executingQuery23);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1696() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1696");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.strForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1697() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1697");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18, "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1698() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1698");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.faleForExTh(executingQuery16, throwable17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.faleForExTh(executingQuery19, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.comForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.comForKe(kernelTransaction24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1699() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1699");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.comForKe(kernelTransaction18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20, throwable21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.faleForExTh(executingQuery23, throwable24);
    java.lang.Class<?> wildcardClass26 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass26);
  }

  @Test
  public void test1700() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1700");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 1);
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService4 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    queryLoggingService4.strForEx(executingQuery5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService4.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService4.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService4.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService4.strForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService4.strForEx(executingQuery17);
    boolean boolean19 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery17);
    java.lang.String str20 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory21 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean23 = queryLoggingServiceExtensionFactory21.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory24 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str25 = queryLoggingServiceExtensionFactory24.toString();
    boolean boolean26 = queryLoggingServiceExtensionFactory21.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory24);
    java.lang.String str27 = queryLoggingServiceExtensionFactory21.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory28 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory29 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean31 = queryLoggingServiceExtensionFactory29.equals((java.lang.Object) (-1L));
    boolean boolean32 = queryLoggingServiceExtensionFactory28.equals((java.lang.Object) boolean31);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService33 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    queryLoggingService33.strForEx(executingQuery34);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService33.faleForExTh(executingQuery36, throwable37);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction39 = null;
    queryLoggingService33.rolcForKe(kernelTransaction39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    queryLoggingService33.sucsForEx(executingQuery41);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService33.strForEx(executingQuery43);
    boolean boolean45 = queryLoggingServiceExtensionFactory28.equals(
        (java.lang.Object) executingQuery43);
    boolean boolean46 = queryLoggingServiceExtensionFactory21.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory28);
    java.lang.String str47 = queryLoggingServiceExtensionFactory21.getName();
    java.lang.String str48 = queryLoggingServiceExtensionFactory21.toString();
    boolean boolean49 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory21);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "query-logging" + "'", str3,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService4);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "query-logging" + "'", str20,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertEquals(
        "'" + str25 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str25, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "query-logging" + "'", str27,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertNotNull(queryLoggingService33);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    org.junit.Assert.assertEquals("'" + str47 + "' != '" + "query-logging" + "'", str47,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str48 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str48, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
  }

  @Test
  public void test1701() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1701");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    boolean boolean10 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 100);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService11 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService11.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService11.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService11.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService11.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService11.sucsForEx(executingQuery22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService11.comForKe(kernelTransaction24);
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction24);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService27 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService27.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    java.lang.Throwable throwable32 = null;
    queryLoggingService27.rolcForKe(kernelTransaction31, throwable32);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction34 = null;
    queryLoggingService27.rolcForKe(kernelTransaction34);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService27.rolcForKe(kernelTransaction36, throwable37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService27.strForEx(executingQuery39);
    boolean boolean41 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService27);
    java.lang.String str42 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService43 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery44 = null;
    queryLoggingService43.strForEx(executingQuery44);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery46 = null;
    java.lang.Throwable throwable47 = null;
    queryLoggingService43.faleForExTh(executingQuery46, throwable47);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction49 = null;
    java.lang.Throwable throwable50 = null;
    queryLoggingService43.rolcForKe(kernelTransaction49, throwable50);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery52 = null;
    queryLoggingService43.faleForExTh(executingQuery52, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery55 = null;
    queryLoggingService43.sucsForEx(executingQuery55);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery57 = null;
    queryLoggingService43.faleForExTh(executingQuery57, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction60 = null;
    queryLoggingService43.comForKe(kernelTransaction60);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction62 = null;
    queryLoggingService43.rolcForKe(kernelTransaction62);
    boolean boolean64 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService43);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertNotNull(queryLoggingService11);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertNotNull(queryLoggingService27);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    org.junit.Assert.assertEquals(
        "'" + str42 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str42, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService43);
    org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
  }

  @Test
  public void test1702() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1702");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.faleForExTh(executingQuery1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.comForKe(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.comForKe(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1703() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1703");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22, throwable23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService0.rolcForKe(kernelTransaction25, throwable26);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1704() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1704");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.comForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.strForEx(kernelTransaction11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    java.lang.Class<?> wildcardClass18 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass18);
  }

  @Test
  public void test1705() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1705");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.faleForExTh(executingQuery11, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16, throwable17);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1706() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1706");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str2 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService3 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService3.rolcForKe(kernelTransaction4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService3.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService3.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService3.sucsForEx(executingQuery11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService3.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService3.rolcForKe(kernelTransaction15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService3.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService3.rolcForKe(kernelTransaction21);
    boolean boolean23 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction21);
    java.lang.String str24 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory25 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory26 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean28 = queryLoggingServiceExtensionFactory26.equals((java.lang.Object) (-1L));
    boolean boolean29 = queryLoggingServiceExtensionFactory25.equals((java.lang.Object) boolean28);
    java.lang.String str30 = queryLoggingServiceExtensionFactory25.toString();
    java.lang.String str31 = queryLoggingServiceExtensionFactory25.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory32 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean34 = queryLoggingServiceExtensionFactory32.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory35 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str36 = queryLoggingServiceExtensionFactory35.toString();
    boolean boolean37 = queryLoggingServiceExtensionFactory32.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory35);
    boolean boolean38 = queryLoggingServiceExtensionFactory25.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory32);
    java.lang.String str39 = queryLoggingServiceExtensionFactory32.getName();
    java.lang.String str40 = queryLoggingServiceExtensionFactory32.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService41 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction42 = null;
    queryLoggingService41.rolcForKe(kernelTransaction42);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    java.lang.Throwable throwable45 = null;
    queryLoggingService41.rolcForKe(kernelTransaction44, throwable45);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction47 = null;
    queryLoggingService41.rolcForKe(kernelTransaction47);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction49 = null;
    java.lang.Throwable throwable50 = null;
    queryLoggingService41.rolcForKe(kernelTransaction49, throwable50);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery52 = null;
    queryLoggingService41.faleForExTh(executingQuery52, "hi!");
    boolean boolean55 = queryLoggingServiceExtensionFactory32.equals(
        (java.lang.Object) queryLoggingService41);
    java.lang.String str56 = queryLoggingServiceExtensionFactory32.getName();
    boolean boolean57 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) str56);
    java.lang.String str58 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str59 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str60 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str2, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService3);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertEquals(
        "'" + str24 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str24, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertEquals(
        "'" + str30 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str30, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str31 + "' != '" + "query-logging" + "'", str31,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertEquals(
        "'" + str36 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str36, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    org.junit.Assert.assertEquals("'" + str39 + "' != '" + "query-logging" + "'", str39,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str40 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str40, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService41);
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    org.junit.Assert.assertEquals("'" + str56 + "' != '" + "query-logging" + "'", str56,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    org.junit.Assert.assertEquals(
        "'" + str58 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str58, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str59 + "' != '" + "query-logging" + "'", str59,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str60 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str60, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1707() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1707");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService7 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService7.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService7.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService7.rolcForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService7.sucsForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService7.faleForExTh(executingQuery17, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService7.strForEx(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService7.rolcForKe(kernelTransaction22);
    boolean boolean24 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService7.sucsForEx(executingQuery25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService7.strForEx(executingQuery27);
    java.lang.Class<?> wildcardClass29 = queryLoggingService7.getClass();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService7);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(wildcardClass29);
  }

  @Test
  public void test1708() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1708");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "hi!", config13,
        path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "hi!", config23,
        path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "", config28,
        path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config33, path34);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction36 = null;
    org.neo4j.configuration.Config config38 = null;
    java.nio.file.Path path39 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction36,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config38, path39);
  }

  @Test
  public void test1709() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1709");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str11 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str12 = queryLoggingServiceExtensionFactory3.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory13 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory14 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean16 = queryLoggingServiceExtensionFactory14.equals((java.lang.Object) (-1L));
    boolean boolean17 = queryLoggingServiceExtensionFactory13.equals((java.lang.Object) boolean16);
    java.lang.String str18 = queryLoggingServiceExtensionFactory13.toString();
    java.lang.String str19 = queryLoggingServiceExtensionFactory13.getName();
    java.lang.String str20 = queryLoggingServiceExtensionFactory13.getName();
    boolean boolean21 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory13);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService22 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService22.rolcForKe(kernelTransaction23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService22.rolcForKe(kernelTransaction25, throwable26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService22.rolcForKe(kernelTransaction28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryLoggingService22.sucsForEx(executingQuery30);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction32 = null;
    queryLoggingService22.strForEx(kernelTransaction32);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction34 = null;
    java.lang.Throwable throwable35 = null;
    queryLoggingService22.rolcForKe(kernelTransaction34, throwable35);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction37 = null;
    java.lang.Throwable throwable38 = null;
    queryLoggingService22.rolcForKe(kernelTransaction37, throwable38);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    queryLoggingService22.rolcForKe(kernelTransaction40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    queryLoggingService22.faleForExTh(executingQuery42, "");
    java.lang.Class<?> wildcardClass45 = queryLoggingService22.getClass();
    boolean boolean46 = queryLoggingServiceExtensionFactory13.equals(
        (java.lang.Object) wildcardClass45);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext47 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies48 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle49 = queryLoggingServiceExtensionFactory13.newInstance(
          extensionContext47, queryLoggingServiceDependencies48);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "query-logging" + "'", str10,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "query-logging" + "'", str11,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "query-logging" + "'", str12,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertEquals(
        "'" + str18 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str18, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "query-logging" + "'", str19,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "query-logging" + "'", str20,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    org.junit.Assert.assertNotNull(queryLoggingService22);
    org.junit.Assert.assertNotNull(wildcardClass45);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
  }

  @Test
  public void test1710() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1710");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1.0d));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory4 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean6 = queryLoggingServiceExtensionFactory4.equals((java.lang.Object) (-1L));
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) boolean6);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    boolean boolean20 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery18);
    java.lang.String str21 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean22 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory23 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory24 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean26 = queryLoggingServiceExtensionFactory24.equals((java.lang.Object) (-1L));
    boolean boolean27 = queryLoggingServiceExtensionFactory23.equals((java.lang.Object) boolean26);
    boolean boolean29 = queryLoggingServiceExtensionFactory23.equals((java.lang.Object) 0L);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory30 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory31 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean33 = queryLoggingServiceExtensionFactory31.equals((java.lang.Object) (-1L));
    boolean boolean34 = queryLoggingServiceExtensionFactory30.equals((java.lang.Object) boolean33);
    java.lang.Object obj35 = new java.lang.Object();
    boolean boolean36 = queryLoggingServiceExtensionFactory30.equals(obj35);
    java.lang.String str37 = queryLoggingServiceExtensionFactory30.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService38 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService38.strForEx(executingQuery39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    java.lang.Throwable throwable42 = null;
    queryLoggingService38.faleForExTh(executingQuery41, throwable42);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    java.lang.Throwable throwable45 = null;
    queryLoggingService38.rolcForKe(kernelTransaction44, throwable45);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction47 = null;
    queryLoggingService38.comForKe(kernelTransaction47);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery49 = null;
    queryLoggingService38.strForEx(executingQuery49);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction51 = null;
    java.lang.Throwable throwable52 = null;
    queryLoggingService38.rolcForKe(kernelTransaction51, throwable52);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction54 = null;
    queryLoggingService38.comForKe(kernelTransaction54);
    boolean boolean56 = queryLoggingServiceExtensionFactory30.equals(
        (java.lang.Object) queryLoggingService38);
    boolean boolean57 = queryLoggingServiceExtensionFactory23.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory30);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory58 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean60 = queryLoggingServiceExtensionFactory58.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory61 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str62 = queryLoggingServiceExtensionFactory61.toString();
    boolean boolean63 = queryLoggingServiceExtensionFactory58.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory61);
    boolean boolean65 = queryLoggingServiceExtensionFactory61.equals((java.lang.Object) 100.0d);
    java.lang.String str66 = queryLoggingServiceExtensionFactory61.toString();
    java.lang.String str67 = queryLoggingServiceExtensionFactory61.getName();
    java.lang.Object obj68 = null;
    boolean boolean69 = queryLoggingServiceExtensionFactory61.equals(obj68);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService70 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction71 = null;
    java.lang.Throwable throwable72 = null;
    queryLoggingService70.rolcForKe(kernelTransaction71, throwable72);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction74 = null;
    queryLoggingService70.comForKe(kernelTransaction74);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery76 = null;
    queryLoggingService70.sucsForEx(executingQuery76);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction78 = null;
    queryLoggingService70.comForKe(kernelTransaction78);
    boolean boolean80 = queryLoggingServiceExtensionFactory61.equals(
        (java.lang.Object) queryLoggingService70);
    java.lang.Class<?> wildcardClass81 = queryLoggingServiceExtensionFactory61.getClass();
    boolean boolean82 = queryLoggingServiceExtensionFactory23.equals(
        (java.lang.Object) wildcardClass81);
    boolean boolean83 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) boolean82);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext84 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies85 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle86 = queryLoggingServiceExtensionFactory3.newInstance(
          extensionContext84, queryLoggingServiceDependencies85);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertEquals(
        "'" + str21 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str21, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertEquals("'" + str37 + "' != '" + "query-logging" + "'", str37,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService38);
    org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    org.junit.Assert.assertEquals(
        "'" + str62 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str62, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    org.junit.Assert.assertEquals(
        "'" + str66 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str66, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str67 + "' != '" + "query-logging" + "'", str67,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    org.junit.Assert.assertNotNull(queryLoggingService70);
    org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    org.junit.Assert.assertNotNull(wildcardClass81);
    org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
  }

  @Test
  public void test1711() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1711");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.strForEx(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.comForKe(kernelTransaction24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1712() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1712");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.strForEx(executingQuery17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.faleForExTh(executingQuery19, throwable20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService0.faleForExTh(executingQuery22, throwable23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService0.strForEx(kernelTransaction25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    java.lang.Throwable throwable28 = null;
    queryLoggingService0.rolcForKe(kernelTransaction27, throwable28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryLoggingService0.strForEx(executingQuery30);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1713() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1713");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "hi!", config13,
        path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "hi!", config23,
        path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "", config28,
        path29);
    java.lang.Class<?> wildcardClass31 = diagnosticsOfflineReportProviderQueryLoggingImpl0.getClass();
    org.junit.Assert.assertNotNull(wildcardClass31);
  }

  @Test
  public void test1714() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1714");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.Object obj10 = null;
    boolean boolean11 = queryLoggingServiceExtensionFactory3.equals(obj10);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService12 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService12.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService12.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService12.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService12.comForKe(kernelTransaction20);
    boolean boolean22 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService12);
    java.lang.String str23 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str24 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str25 = queryLoggingServiceExtensionFactory3.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService26 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService26.strForEx(executingQuery27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService26.faleForExTh(executingQuery29, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction32 = null;
    queryLoggingService26.strForEx(kernelTransaction32);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction34 = null;
    queryLoggingService26.strForEx(kernelTransaction34);
    boolean boolean36 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService26.sucsForEx(executingQuery37);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(queryLoggingService12);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "query-logging" + "'", str23,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str24 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str24, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str25 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str25, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService26);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
  }

  @Test
  public void test1715() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1715");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.comForKe(kernelTransaction11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1716() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1716");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1717() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1717");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService5.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService5.strForEx(executingQuery15);
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery15);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService18 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService18.strForEx(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService18.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService18.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService18.comForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService18.faleForExTh(executingQuery29, "");
    boolean boolean32 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) "");
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl33 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction34 = null;
    org.neo4j.configuration.Config config36 = null;
    java.nio.file.Path path37 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl33.init(fileSystemAbstraction34, "hi!",
        config36, path37);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction39 = null;
    org.neo4j.configuration.Config config41 = null;
    java.nio.file.Path path42 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl33.init(fileSystemAbstraction39,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config41, path42);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction44 = null;
    org.neo4j.configuration.Config config46 = null;
    java.nio.file.Path path47 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl33.init(fileSystemAbstraction44, "", config46,
        path47);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction49 = null;
    org.neo4j.configuration.Config config51 = null;
    java.nio.file.Path path52 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl33.init(fileSystemAbstraction49, "hi!",
        config51, path52);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction54 = null;
    org.neo4j.configuration.Config config56 = null;
    java.nio.file.Path path57 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl33.init(fileSystemAbstraction54, "", config56,
        path57);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction59 = null;
    org.neo4j.configuration.Config config61 = null;
    java.nio.file.Path path62 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl33.init(fileSystemAbstraction59, "hi!",
        config61, path62);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction64 = null;
    org.neo4j.configuration.Config config66 = null;
    java.nio.file.Path path67 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl33.init(fileSystemAbstraction64,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config66, path67);
    boolean boolean69 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    java.lang.String str70 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(queryLoggingService18);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    org.junit.Assert.assertEquals("'" + str70 + "' != '" + "query-logging" + "'", str70,
        "query-logging");
  }

  @Test
  public void test1718() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1718");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.strForEx(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService0.strForEx(kernelTransaction8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.strForEx(executingQuery17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.faleForExTh(executingQuery19,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1719() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1719");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.faleForExTh(executingQuery17, throwable18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1720() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1720");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.comForKe(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23, throwable24);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    queryLoggingService0.comForKe(kernelTransaction26);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1721() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1721");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.comForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.comForKe(kernelTransaction22);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1722() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1722");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.strForEx(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16, throwable17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.strForEx(executingQuery19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1723() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1723");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean9 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory10 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str11 = queryLoggingServiceExtensionFactory10.toString();
    boolean boolean12 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory10);
    boolean boolean13 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    java.lang.Object obj14 = null;
    boolean boolean15 = queryLoggingServiceExtensionFactory0.equals(obj14);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory16 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory17 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean19 = queryLoggingServiceExtensionFactory17.equals((java.lang.Object) (-1L));
    boolean boolean20 = queryLoggingServiceExtensionFactory16.equals((java.lang.Object) boolean19);
    boolean boolean22 = queryLoggingServiceExtensionFactory16.equals((java.lang.Object) 0L);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory23 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory24 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean26 = queryLoggingServiceExtensionFactory24.equals((java.lang.Object) (-1L));
    boolean boolean27 = queryLoggingServiceExtensionFactory23.equals((java.lang.Object) boolean26);
    java.lang.Object obj28 = new java.lang.Object();
    boolean boolean29 = queryLoggingServiceExtensionFactory23.equals(obj28);
    java.lang.String str30 = queryLoggingServiceExtensionFactory23.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService31 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService31.strForEx(executingQuery32);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    java.lang.Throwable throwable35 = null;
    queryLoggingService31.faleForExTh(executingQuery34, throwable35);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction37 = null;
    java.lang.Throwable throwable38 = null;
    queryLoggingService31.rolcForKe(kernelTransaction37, throwable38);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    queryLoggingService31.comForKe(kernelTransaction40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    queryLoggingService31.strForEx(executingQuery42);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    java.lang.Throwable throwable45 = null;
    queryLoggingService31.rolcForKe(kernelTransaction44, throwable45);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction47 = null;
    queryLoggingService31.comForKe(kernelTransaction47);
    boolean boolean49 = queryLoggingServiceExtensionFactory23.equals(
        (java.lang.Object) queryLoggingService31);
    boolean boolean50 = queryLoggingServiceExtensionFactory16.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory23);
    boolean boolean51 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory23);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService52 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction53 = null;
    java.lang.Throwable throwable54 = null;
    queryLoggingService52.rolcForKe(kernelTransaction53, throwable54);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction56 = null;
    queryLoggingService52.comForKe(kernelTransaction56);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery58 = null;
    queryLoggingService52.sucsForEx(executingQuery58);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction60 = null;
    java.lang.Throwable throwable61 = null;
    queryLoggingService52.rolcForKe(kernelTransaction60, throwable61);
    boolean boolean63 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService52);
    java.lang.String str64 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService65 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction66 = null;
    java.lang.Throwable throwable67 = null;
    queryLoggingService65.rolcForKe(kernelTransaction66, throwable67);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery69 = null;
    java.lang.Throwable throwable70 = null;
    queryLoggingService65.faleForExTh(executingQuery69, throwable70);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery72 = null;
    java.lang.Throwable throwable73 = null;
    queryLoggingService65.faleForExTh(executingQuery72, throwable73);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction75 = null;
    queryLoggingService65.strForEx(kernelTransaction75);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction77 = null;
    queryLoggingService65.strForEx(kernelTransaction77);
    boolean boolean79 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction77);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertEquals("'" + str30 + "' != '" + "query-logging" + "'", str30,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService31);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    org.junit.Assert.assertNotNull(queryLoggingService52);
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    org.junit.Assert.assertEquals("'" + str64 + "' != '" + "query-logging" + "'", str64,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService65);
    org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
  }

  @Test
  public void test1724() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1724");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1.0d));
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl4 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction5 = null;
    org.neo4j.configuration.Config config7 = null;
    java.nio.file.Path path8 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl4.init(fileSystemAbstraction5, "", config7,
        path8);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction10 = null;
    org.neo4j.configuration.Config config12 = null;
    java.nio.file.Path path13 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl4.init(fileSystemAbstraction10, "hi!", config12,
        path13);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction15 = null;
    org.neo4j.configuration.Config config17 = null;
    java.nio.file.Path path18 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl4.init(fileSystemAbstraction15, "query-logging",
        config17, path18);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.configuration.Config config22 = null;
    java.nio.file.Path path23 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl4.init(fileSystemAbstraction20, "", config22,
        path23);
    boolean boolean25 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) fileSystemAbstraction20);
    java.lang.String str26 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory27 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str28 = queryLoggingServiceExtensionFactory27.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService29 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    java.lang.Throwable throwable31 = null;
    queryLoggingService29.rolcForKe(kernelTransaction30, throwable31);
    boolean boolean33 = queryLoggingServiceExtensionFactory27.equals(
        (java.lang.Object) throwable31);
    java.lang.String str34 = queryLoggingServiceExtensionFactory27.getName();
    java.lang.String str35 = queryLoggingServiceExtensionFactory27.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService36 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction37 = null;
    queryLoggingService36.rolcForKe(kernelTransaction37);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction39 = null;
    java.lang.Throwable throwable40 = null;
    queryLoggingService36.rolcForKe(kernelTransaction39, throwable40);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction42 = null;
    java.lang.Throwable throwable43 = null;
    queryLoggingService36.rolcForKe(kernelTransaction42, throwable43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    queryLoggingService36.comForKe(kernelTransaction45);
    boolean boolean47 = queryLoggingServiceExtensionFactory27.equals(
        (java.lang.Object) queryLoggingService36);
    boolean boolean48 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService36);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "query-logging" + "'", str3,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "query-logging" + "'", str26,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str28 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str28, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService29);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertEquals("'" + str34 + "' != '" + "query-logging" + "'", str34,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str35 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str35, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService36);
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
  }

  @Test
  public void test1725() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1725");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.strForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.faleForExTh(executingQuery13, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.faleForExTh(executingQuery21, "");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1726() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1726");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config3, path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "", config13,
        path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config23, path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "", config28,
        path29);
  }

  @Test
  public void test1727() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1727");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 1);
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService4 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    queryLoggingService4.strForEx(executingQuery5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService4.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService4.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService4.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService4.strForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService4.strForEx(executingQuery17);
    boolean boolean19 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery17);
    java.lang.String str20 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str21 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService22 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService22.rolcForKe(kernelTransaction23, throwable24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    java.lang.Throwable throwable27 = null;
    queryLoggingService22.faleForExTh(executingQuery26, throwable27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService22.faleForExTh(executingQuery29, throwable30);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction32 = null;
    java.lang.Throwable throwable33 = null;
    queryLoggingService22.rolcForKe(kernelTransaction32, throwable33);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction35 = null;
    queryLoggingService22.strForEx(kernelTransaction35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService22.faleForExTh(executingQuery37, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery40 = null;
    queryLoggingService22.strForEx(executingQuery40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    queryLoggingService22.faleForExTh(executingQuery42, "hi!");
    boolean boolean45 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService22);
    java.lang.String str46 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str47 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "query-logging" + "'", str3,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService4);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "query-logging" + "'", str20,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str21 + "' != '" + "query-logging" + "'", str21,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService22);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    org.junit.Assert.assertEquals("'" + str46 + "' != '" + "query-logging" + "'", str46,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str47 + "' != '" + "query-logging" + "'", str47,
        "query-logging");
  }

  @Test
  public void test1728() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1728");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService11 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService11.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService11.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService11.faleForExTh(executingQuery17, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService11.rolcForKe(kernelTransaction20, throwable21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService11.rolcForKe(kernelTransaction23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService11.faleForExTh(executingQuery25, throwable26);
    boolean boolean28 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable26);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory29 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory30 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean32 = queryLoggingServiceExtensionFactory30.equals((java.lang.Object) (-1L));
    boolean boolean33 = queryLoggingServiceExtensionFactory29.equals((java.lang.Object) boolean32);
    java.lang.String str34 = queryLoggingServiceExtensionFactory29.toString();
    java.lang.String str35 = queryLoggingServiceExtensionFactory29.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService36 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction37 = null;
    queryLoggingService36.rolcForKe(kernelTransaction37);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction39 = null;
    java.lang.Throwable throwable40 = null;
    queryLoggingService36.rolcForKe(kernelTransaction39, throwable40);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction42 = null;
    queryLoggingService36.rolcForKe(kernelTransaction42);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery44 = null;
    queryLoggingService36.sucsForEx(executingQuery44);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery46 = null;
    queryLoggingService36.faleForExTh(executingQuery46, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction49 = null;
    queryLoggingService36.strForEx(kernelTransaction49);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction51 = null;
    queryLoggingService36.rolcForKe(kernelTransaction51);
    boolean boolean53 = queryLoggingServiceExtensionFactory29.equals(
        (java.lang.Object) queryLoggingService36);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction54 = null;
    queryLoggingService36.rolcForKe(kernelTransaction54);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction56 = null;
    queryLoggingService36.strForEx(kernelTransaction56);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction58 = null;
    queryLoggingService36.rolcForKe(kernelTransaction58);
    boolean boolean60 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction58);
    java.lang.Class<?> wildcardClass61 = queryLoggingServiceExtensionFactory0.getClass();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str10, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService11);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertEquals(
        "'" + str34 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str34, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str35 + "' != '" + "query-logging" + "'", str35,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService36);
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    org.junit.Assert.assertNotNull(wildcardClass61);
  }

  @Test
  public void test1729() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1729");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService2 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService2.rolcForKe(kernelTransaction3, throwable4);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable4);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService9 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService9.rolcForKe(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService9.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService9.rolcForKe(kernelTransaction15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService9.comForKe(kernelTransaction18);
    boolean boolean20 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService9.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService9.comForKe(kernelTransaction24);
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService2);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService9);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
  }

  @Test
  public void test1730() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1730");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.faleForExTh(executingQuery23, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    java.lang.Throwable throwable27 = null;
    queryLoggingService0.rolcForKe(kernelTransaction26, throwable27);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    queryLoggingService0.rolcForKe(kernelTransaction29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryLoggingService0.faleForExTh(executingQuery31, "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1731() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1731");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 1);
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str4 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService5.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService5.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService5.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService5.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService5.faleForExTh(executingQuery16, throwable17);
    java.lang.Class<?> wildcardClass19 = queryLoggingService5.getClass();
    boolean boolean20 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) wildcardClass19);
    java.lang.String str21 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str22 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory23 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean25 = queryLoggingServiceExtensionFactory23.equals((java.lang.Object) (short) 1);
    java.lang.String str26 = queryLoggingServiceExtensionFactory23.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService27 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService27.strForEx(executingQuery28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    java.lang.Throwable throwable31 = null;
    queryLoggingService27.faleForExTh(executingQuery30, throwable31);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    java.lang.Throwable throwable34 = null;
    queryLoggingService27.rolcForKe(kernelTransaction33, throwable34);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    queryLoggingService27.comForKe(kernelTransaction36);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery38 = null;
    queryLoggingService27.strForEx(executingQuery38);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery40 = null;
    queryLoggingService27.strForEx(executingQuery40);
    boolean boolean42 = queryLoggingServiceExtensionFactory23.equals(
        (java.lang.Object) executingQuery40);
    java.lang.String str43 = queryLoggingServiceExtensionFactory23.getName();
    java.lang.String str44 = queryLoggingServiceExtensionFactory23.toString();
    java.lang.String str45 = queryLoggingServiceExtensionFactory23.toString();
    java.lang.String str46 = queryLoggingServiceExtensionFactory23.getName();
    java.lang.String str47 = queryLoggingServiceExtensionFactory23.getName();
    java.lang.String str48 = queryLoggingServiceExtensionFactory23.toString();
    boolean boolean49 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory23);
    java.lang.String str50 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str3, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "query-logging" + "'", str4,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertNotNull(wildcardClass19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertEquals("'" + str21 + "' != '" + "query-logging" + "'", str21,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str22 + "' != '" + "query-logging" + "'", str22,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "query-logging" + "'", str26,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService27);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertEquals("'" + str43 + "' != '" + "query-logging" + "'", str43,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str44 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str44, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str45 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str45, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str46 + "' != '" + "query-logging" + "'", str46,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str47 + "' != '" + "query-logging" + "'", str47,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str48 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str48, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    org.junit.Assert.assertEquals("'" + str50 + "' != '" + "query-logging" + "'", str50,
        "query-logging");
  }

  @Test
  public void test1732() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1732");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.Object obj5 = new java.lang.Object();
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals(obj5);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService8.comForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService8.strForEx(executingQuery19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService8.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService8.comForKe(kernelTransaction24);
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService8.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService8.faleForExTh(executingQuery29, throwable30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService8.faleForExTh(executingQuery32, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService8.sucsForEx(executingQuery35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService8.faleForExTh(executingQuery37,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery40 = null;
    queryLoggingService8.faleForExTh(executingQuery40, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction43 = null;
    queryLoggingService8.strForEx(kernelTransaction43);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
  }

  @Test
  public void test1733() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1733");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.strForEx(kernelTransaction19);
    java.lang.Class<?> wildcardClass21 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass21);
  }

  @Test
  public void test1734() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1734");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    queryLoggingService0.comForKe(kernelTransaction3);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    queryLoggingService0.faleForExTh(executingQuery5, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.strForEx(executingQuery8);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1735() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1735");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.strForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1736() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1736");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.faleForExTh(executingQuery17,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20, throwable21);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1737() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1737");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.comForKe(kernelTransaction18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20, throwable21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.faleForExTh(executingQuery23, throwable24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService0.strForEx(executingQuery26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService0.rolcForKe(kernelTransaction28);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1738() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1738");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.sucsForEx(executingQuery22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService0.faleForExTh(executingQuery24, throwable25);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1739() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1739");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6, "query-logging",
        config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config23, path24);
  }

  @Test
  public void test1740() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1740");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.strForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.strForEx(executingQuery17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.sucsForEx(executingQuery19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1741() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1741");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory8 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean10 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) (-1L));
    boolean boolean11 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) boolean10);
    java.lang.Object obj12 = new java.lang.Object();
    boolean boolean13 = queryLoggingServiceExtensionFactory7.equals(obj12);
    java.lang.String str14 = queryLoggingServiceExtensionFactory7.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService15 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService15.strForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService15.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService15.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService15.comForKe(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService15.strForEx(executingQuery26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService15.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService15.comForKe(kernelTransaction31);
    boolean boolean33 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingService15);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory35 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean37 = queryLoggingServiceExtensionFactory35.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory38 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str39 = queryLoggingServiceExtensionFactory38.toString();
    boolean boolean40 = queryLoggingServiceExtensionFactory35.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory38);
    boolean boolean42 = queryLoggingServiceExtensionFactory38.equals((java.lang.Object) 100.0d);
    java.lang.String str43 = queryLoggingServiceExtensionFactory38.toString();
    java.lang.String str44 = queryLoggingServiceExtensionFactory38.getName();
    java.lang.Object obj45 = null;
    boolean boolean46 = queryLoggingServiceExtensionFactory38.equals(obj45);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService47 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction48 = null;
    java.lang.Throwable throwable49 = null;
    queryLoggingService47.rolcForKe(kernelTransaction48, throwable49);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction51 = null;
    queryLoggingService47.comForKe(kernelTransaction51);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery53 = null;
    queryLoggingService47.sucsForEx(executingQuery53);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    queryLoggingService47.comForKe(kernelTransaction55);
    boolean boolean57 = queryLoggingServiceExtensionFactory38.equals(
        (java.lang.Object) queryLoggingService47);
    java.lang.Class<?> wildcardClass58 = queryLoggingServiceExtensionFactory38.getClass();
    boolean boolean59 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) wildcardClass58);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext60 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies61 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle62 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext60, queryLoggingServiceDependencies61);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "query-logging" + "'", str14,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService15);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertEquals(
        "'" + str39 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str39, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertEquals(
        "'" + str43 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str43, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str44 + "' != '" + "query-logging" + "'", str44,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    org.junit.Assert.assertNotNull(queryLoggingService47);
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    org.junit.Assert.assertNotNull(wildcardClass58);
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
  }

  @Test
  public void test1742() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1742");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.strForEx(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16, throwable17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.faleForExTh(executingQuery19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22, throwable23);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1743() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1743");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 1);
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str4 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService5.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService5.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService5.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService5.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService5.faleForExTh(executingQuery16, throwable17);
    java.lang.Class<?> wildcardClass19 = queryLoggingService5.getClass();
    boolean boolean20 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) wildcardClass19);
    java.lang.String str21 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str22 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory23 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean25 = queryLoggingServiceExtensionFactory23.equals((java.lang.Object) (short) 1);
    java.lang.String str26 = queryLoggingServiceExtensionFactory23.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService27 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService27.strForEx(executingQuery28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    java.lang.Throwable throwable31 = null;
    queryLoggingService27.faleForExTh(executingQuery30, throwable31);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    java.lang.Throwable throwable34 = null;
    queryLoggingService27.rolcForKe(kernelTransaction33, throwable34);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    queryLoggingService27.comForKe(kernelTransaction36);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery38 = null;
    queryLoggingService27.strForEx(executingQuery38);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery40 = null;
    queryLoggingService27.strForEx(executingQuery40);
    boolean boolean42 = queryLoggingServiceExtensionFactory23.equals(
        (java.lang.Object) executingQuery40);
    java.lang.String str43 = queryLoggingServiceExtensionFactory23.getName();
    java.lang.String str44 = queryLoggingServiceExtensionFactory23.toString();
    java.lang.String str45 = queryLoggingServiceExtensionFactory23.toString();
    java.lang.String str46 = queryLoggingServiceExtensionFactory23.getName();
    java.lang.String str47 = queryLoggingServiceExtensionFactory23.getName();
    java.lang.String str48 = queryLoggingServiceExtensionFactory23.toString();
    boolean boolean49 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory23);
    java.lang.Class<?> wildcardClass50 = queryLoggingServiceExtensionFactory0.getClass();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str3, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "query-logging" + "'", str4,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertNotNull(wildcardClass19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertEquals("'" + str21 + "' != '" + "query-logging" + "'", str21,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str22 + "' != '" + "query-logging" + "'", str22,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "query-logging" + "'", str26,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService27);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertEquals("'" + str43 + "' != '" + "query-logging" + "'", str43,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str44 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str44, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str45 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str45, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str46 + "' != '" + "query-logging" + "'", str46,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str47 + "' != '" + "query-logging" + "'", str47,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str48 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str48, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    org.junit.Assert.assertNotNull(wildcardClass50);
  }

  @Test
  public void test1744() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1744");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6, "query-logging",
        config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "query-logging",
        config18, path19);
  }

  @Test
  public void test1745() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1745");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.faleForExTh(executingQuery11, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.comForKe(kernelTransaction14);
    java.lang.Class<?> wildcardClass16 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass16);
  }

  @Test
  public void test1746() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1746");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService5.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService5.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService5.faleForExTh(executingQuery17,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    boolean boolean20 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService21 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService21.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService21.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService21.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService21.sucsForEx(executingQuery29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService21.strForEx(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService21.faleForExTh(executingQuery33,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService21.rolcForKe(kernelTransaction36, throwable37);
    boolean boolean39 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService21);
    java.lang.String str40 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str41 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertNotNull(queryLoggingService21);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertEquals("'" + str40 + "' != '" + "query-logging" + "'", str40,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str41 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str41, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1747() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1747");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "hi!", config13,
        path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "hi!", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config23, path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config28, path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31, "hi!", config33,
        path34);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction36 = null;
    org.neo4j.configuration.Config config38 = null;
    java.nio.file.Path path39 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction36,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config38, path39);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction41 = null;
    org.neo4j.configuration.Config config43 = null;
    java.nio.file.Path path44 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction41,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config43, path44);
  }

  @Test
  public void test1748() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1748");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.comForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20, "");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1749() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1749");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.strForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1750() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1750");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str7 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext10 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies11 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle12 = queryLoggingServiceExtensionFactory3.newInstance(
          extensionContext10, queryLoggingServiceDependencies11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str6, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
  }

  @Test
  public void test1751() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1751");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.sucsForEx(executingQuery21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService0.sucsForEx(executingQuery25);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1752() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1752");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20, throwable21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23, throwable24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService0.faleForExTh(executingQuery26, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    queryLoggingService0.rolcForKe(kernelTransaction29);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1753() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1753");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.strForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.faleForExTh(executingQuery22, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService0.strForEx(executingQuery25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService0.comForKe(kernelTransaction27);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    queryLoggingService0.comForKe(kernelTransaction29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService0.comForKe(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService0.sucsForEx(executingQuery33);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1754() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1754");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.strForEx(kernelTransaction11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.comForKe(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.strForEx(executingQuery17);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1755() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1755");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.comForKe(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.faleForExTh(executingQuery21, throwable22);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1756() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1756");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService5.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService5.strForEx(kernelTransaction8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService5.strForEx(kernelTransaction10);
    boolean boolean12 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService5);
    java.lang.String str13 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "query-logging" + "'", str13,
        "query-logging");
  }

  @Test
  public void test1757() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1757");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    boolean boolean10 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 100);
    java.lang.String str11 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str12 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService13 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService13.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService13.sucsForEx(executingQuery17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService13.sucsForEx(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService13.sucsForEx(executingQuery21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService13.sucsForEx(executingQuery23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService13.comForKe(kernelTransaction25);
    boolean boolean27 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService13);
    java.lang.String str28 = queryLoggingServiceExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext29 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies30 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle31 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext29, queryLoggingServiceDependencies30);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "query-logging" + "'", str11,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str12 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str12, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService13);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertEquals("'" + str28 + "' != '" + "query-logging" + "'", str28,
        "query-logging");
  }

  @Test
  public void test1758() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1758");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20, throwable21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23, throwable24);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    queryLoggingService0.comForKe(kernelTransaction26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService0.strForEx(kernelTransaction28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    java.lang.Throwable throwable31 = null;
    queryLoggingService0.faleForExTh(executingQuery30, throwable31);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1759() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1759");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "hi!");
    java.lang.Class<?> wildcardClass12 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass12);
  }

  @Test
  public void test1760() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1760");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService8.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService8.sucsForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery22);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService25 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService25.strForEx(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService25.faleForExTh(executingQuery28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService25.rolcForKe(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService25.sucsForEx(executingQuery33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService25.strForEx(executingQuery35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService25.sucsForEx(executingQuery37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService25.sucsForEx(executingQuery39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    queryLoggingService25.sucsForEx(executingQuery41);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService25.strForEx(executingQuery43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    java.lang.Throwable throwable46 = null;
    queryLoggingService25.rolcForKe(kernelTransaction45, throwable46);
    boolean boolean48 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService25);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService49 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction50 = null;
    queryLoggingService49.rolcForKe(kernelTransaction50);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery52 = null;
    queryLoggingService49.faleForExTh(executingQuery52, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery55 = null;
    java.lang.Throwable throwable56 = null;
    queryLoggingService49.faleForExTh(executingQuery55, throwable56);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction58 = null;
    queryLoggingService49.strForEx(kernelTransaction58);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery60 = null;
    queryLoggingService49.strForEx(executingQuery60);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction62 = null;
    java.lang.Throwable throwable63 = null;
    queryLoggingService49.rolcForKe(kernelTransaction62, throwable63);
    boolean boolean65 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) kernelTransaction62);
    java.lang.Object obj66 = null;
    boolean boolean67 = queryLoggingServiceExtensionFactory3.equals(obj66);
    java.lang.String str68 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str69 = queryLoggingServiceExtensionFactory3.toString();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(queryLoggingService25);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    org.junit.Assert.assertNotNull(queryLoggingService49);
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    org.junit.Assert.assertEquals(
        "'" + str68 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str68, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str69 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str69, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1761() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1761");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService5.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService5.strForEx(executingQuery15);
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery15);
    java.lang.String str18 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService19 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService19.rolcForKe(kernelTransaction20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService19.strForEx(executingQuery22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService19.faleForExTh(executingQuery24, throwable25);
    boolean boolean27 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService19);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService28 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    queryLoggingService28.rolcForKe(kernelTransaction29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryLoggingService28.faleForExTh(executingQuery31, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    java.lang.Throwable throwable35 = null;
    queryLoggingService28.faleForExTh(executingQuery34, throwable35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    java.lang.Throwable throwable38 = null;
    queryLoggingService28.faleForExTh(executingQuery37, throwable38);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    queryLoggingService28.strForEx(kernelTransaction40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    queryLoggingService28.faleForExTh(executingQuery42, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    queryLoggingService28.rolcForKe(kernelTransaction45);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction47 = null;
    queryLoggingService28.rolcForKe(kernelTransaction47);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery49 = null;
    java.lang.Throwable throwable50 = null;
    queryLoggingService28.faleForExTh(executingQuery49, throwable50);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction52 = null;
    queryLoggingService28.strForEx(kernelTransaction52);
    boolean boolean54 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction52);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService55 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery56 = null;
    queryLoggingService55.strForEx(executingQuery56);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery58 = null;
    java.lang.Throwable throwable59 = null;
    queryLoggingService55.faleForExTh(executingQuery58, throwable59);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction61 = null;
    java.lang.Throwable throwable62 = null;
    queryLoggingService55.rolcForKe(kernelTransaction61, throwable62);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery64 = null;
    queryLoggingService55.faleForExTh(executingQuery64, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery67 = null;
    queryLoggingService55.sucsForEx(executingQuery67);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery69 = null;
    queryLoggingService55.sucsForEx(executingQuery69);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery71 = null;
    java.lang.Throwable throwable72 = null;
    queryLoggingService55.faleForExTh(executingQuery71, throwable72);
    boolean boolean74 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable72);
    java.lang.String str75 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertEquals(
        "'" + str18 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str18, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService19);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertNotNull(queryLoggingService28);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    org.junit.Assert.assertNotNull(queryLoggingService55);
    org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    org.junit.Assert.assertEquals("'" + str75 + "' != '" + "query-logging" + "'", str75,
        "query-logging");
  }

  @Test
  public void test1762() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1762");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.faleForExTh(executingQuery1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.faleForExTh(executingQuery4,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.rolcForKe(kernelTransaction7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.comForKe(kernelTransaction12);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1763() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1763");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    java.lang.Class<?> wildcardClass15 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass15);
  }

  @Test
  public void test1764() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1764");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.faleForExTh(executingQuery1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.faleForExTh(executingQuery4,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction7 = null;
    queryLoggingService0.strForEx(kernelTransaction7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1765() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1765");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.strForEx(executingQuery17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService0.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService0.strForEx(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService0.faleForExTh(executingQuery29, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService0.faleForExTh(executingQuery32, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction35 = null;
    queryLoggingService0.comForKe(kernelTransaction35);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1766() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1766");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.sucsForEx(executingQuery11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    java.lang.Class<?> wildcardClass15 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass15);
  }

  @Test
  public void test1767() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1767");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService5.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService5.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService5.faleForExTh(executingQuery17,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    boolean boolean20 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    java.lang.Class<?> wildcardClass21 = queryLoggingServiceExtensionFactory0.getClass();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertNotNull(wildcardClass21);
  }

  @Test
  public void test1768() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1768");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.faleForExTh(executingQuery19, throwable20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.sucsForEx(executingQuery22);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1769() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1769");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.strForEx(executingQuery15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.comForKe(kernelTransaction17);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1770() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1770");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.strForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.comForKe(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.faleForExTh(executingQuery14, throwable15);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1771() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1771");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1772() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1772");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 1);
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str4 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService5.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService5.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService5.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService5.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService5.faleForExTh(executingQuery16, throwable17);
    java.lang.Class<?> wildcardClass19 = queryLoggingService5.getClass();
    boolean boolean20 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) wildcardClass19);
    java.lang.String str21 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.Class<?> wildcardClass22 = queryLoggingServiceExtensionFactory0.getClass();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str3, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "query-logging" + "'", str4,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertNotNull(wildcardClass19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertEquals(
        "'" + str21 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str21, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(wildcardClass22);
  }

  @Test
  public void test1773() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1773");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str4 = queryLoggingServiceExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext5 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies6 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle7 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext5, queryLoggingServiceDependencies6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "query-logging" + "'", str3,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "query-logging" + "'", str4,
        "query-logging");
  }

  @Test
  public void test1774() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1774");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1.0d));
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService3 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService3.rolcForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService3.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService3.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService3.faleForExTh(executingQuery12, throwable13);
    boolean boolean15 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery12);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory16 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean18 = queryLoggingServiceExtensionFactory16.equals((java.lang.Object) (short) 1);
    java.lang.String str19 = queryLoggingServiceExtensionFactory16.getName();
    boolean boolean20 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory16);
    java.lang.String str21 = queryLoggingServiceExtensionFactory16.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext22 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies23 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle24 = queryLoggingServiceExtensionFactory16.newInstance(
          extensionContext22, queryLoggingServiceDependencies23);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(queryLoggingService3);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "query-logging" + "'", str19,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    org.junit.Assert.assertEquals("'" + str21 + "' != '" + "query-logging" + "'", str21,
        "query-logging");
  }

  @Test
  public void test1775() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1775");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.strForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.strForEx(executingQuery12);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1776() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1776");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService0.strForEx(kernelTransaction8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.comForKe(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.comForKe(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.comForKe(kernelTransaction14);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1777() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1777");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str2 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService3 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService3.rolcForKe(kernelTransaction4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    queryLoggingService3.sucsForEx(executingQuery7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService3.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService3.sucsForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService3.faleForExTh(executingQuery13, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService3.strForEx(executingQuery16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService3.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService3.comForKe(kernelTransaction21);
    boolean boolean23 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction21);
    java.lang.String str24 = queryLoggingServiceExtensionFactory0.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext25 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies26 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle27 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext25, queryLoggingServiceDependencies26);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str2, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService3);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertEquals(
        "'" + str24 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str24, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1778() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1778");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.strForEx(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    java.lang.Class<?> wildcardClass23 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass23);
  }

  @Test
  public void test1779() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1779");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.strForEx(kernelTransaction18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1780() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1780");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.faleForExTh(executingQuery11, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    java.lang.Class<?> wildcardClass16 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass16);
  }

  @Test
  public void test1781() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1781");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.strForEx(kernelTransaction23);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1782() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1782");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory3.getName();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "query-logging" + "'", str10,
        "query-logging");
  }

  @Test
  public void test1783() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1783");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.strForEx(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.faleForExTh(executingQuery13, throwable14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.faleForExTh(executingQuery16, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.strForEx(executingQuery19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.strForEx(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.strForEx(kernelTransaction23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService0.sucsForEx(executingQuery25);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1784() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1784");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    queryLoggingService0.comForKe(kernelTransaction3);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction5 = null;
    queryLoggingService0.rolcForKe(kernelTransaction5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    queryLoggingService0.strForEx(executingQuery7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.strForEx(executingQuery12);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1785() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1785");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService0.strForEx(kernelTransaction8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.faleForExTh(executingQuery10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1786() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1786");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.strForEx(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.strForEx(executingQuery16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService0.sucsForEx(executingQuery24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1787() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1787");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory10 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean12 = queryLoggingServiceExtensionFactory10.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory13 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str14 = queryLoggingServiceExtensionFactory13.toString();
    boolean boolean15 = queryLoggingServiceExtensionFactory10.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory13);
    boolean boolean17 = queryLoggingServiceExtensionFactory13.equals((java.lang.Object) 100.0d);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService18 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService18.strForEx(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService18.faleForExTh(executingQuery21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService18.rolcForKe(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService18.sucsForEx(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService18.strForEx(executingQuery28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryLoggingService18.sucsForEx(executingQuery30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService18.sucsForEx(executingQuery32);
    boolean boolean34 = queryLoggingServiceExtensionFactory13.equals(
        (java.lang.Object) executingQuery32);
    java.lang.String str35 = queryLoggingServiceExtensionFactory13.toString();
    java.lang.String str36 = queryLoggingServiceExtensionFactory13.getName();
    java.lang.String str37 = queryLoggingServiceExtensionFactory13.toString();
    java.lang.String str38 = queryLoggingServiceExtensionFactory13.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService39 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    queryLoggingService39.rolcForKe(kernelTransaction40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    queryLoggingService39.faleForExTh(executingQuery42, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery45 = null;
    java.lang.Throwable throwable46 = null;
    queryLoggingService39.faleForExTh(executingQuery45, throwable46);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction48 = null;
    queryLoggingService39.rolcForKe(kernelTransaction48);
    boolean boolean50 = queryLoggingServiceExtensionFactory13.equals(
        (java.lang.Object) queryLoggingService39);
    boolean boolean51 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory13);
    java.lang.String str52 = queryLoggingServiceExtensionFactory0.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext53 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies54 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle55 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext53, queryLoggingServiceDependencies54);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str6, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str9, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    org.junit.Assert.assertEquals(
        "'" + str14 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str14, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(queryLoggingService18);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertEquals(
        "'" + str35 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str35, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str36 + "' != '" + "query-logging" + "'", str36,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str37 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str37, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str38 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str38, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService39);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    org.junit.Assert.assertEquals(
        "'" + str52 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str52, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1788() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1788");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.comForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.faleForExTh(executingQuery13,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1789() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1789");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService7 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService7.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService7.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService7.rolcForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService7.sucsForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService7.faleForExTh(executingQuery17, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService7.strForEx(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService7.rolcForKe(kernelTransaction22);
    boolean boolean24 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService7.faleForExTh(executingQuery25, throwable26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService7.strForEx(kernelTransaction28);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService7);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
  }

  @Test
  public void test1790() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1790");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20, throwable21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.strForEx(executingQuery23);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1791() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1791");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService8.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService8.sucsForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery22);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService25 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService25.strForEx(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService25.faleForExTh(executingQuery28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService25.rolcForKe(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService25.sucsForEx(executingQuery33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService25.strForEx(executingQuery35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService25.sucsForEx(executingQuery37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService25.sucsForEx(executingQuery39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    queryLoggingService25.sucsForEx(executingQuery41);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService25.strForEx(executingQuery43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    java.lang.Throwable throwable46 = null;
    queryLoggingService25.rolcForKe(kernelTransaction45, throwable46);
    boolean boolean48 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction49 = null;
    queryLoggingService25.comForKe(kernelTransaction49);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction51 = null;
    queryLoggingService25.comForKe(kernelTransaction51);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction53 = null;
    queryLoggingService25.strForEx(kernelTransaction53);
    java.lang.Class<?> wildcardClass55 = queryLoggingService25.getClass();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(queryLoggingService25);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    org.junit.Assert.assertNotNull(wildcardClass55);
  }

  @Test
  public void test1792() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1792");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.sucsForEx(executingQuery10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.comForKe(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16, throwable17);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1793() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1793");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.strForEx(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.sucsForEx(executingQuery22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.strForEx(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService0.strForEx(executingQuery26);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1794() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1794");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.faleForExTh(executingQuery12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17, throwable18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.strForEx(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.comForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.strForEx(kernelTransaction24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1795() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1795");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str2 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str4 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "query-logging" + "'", str2,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str3, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "query-logging" + "'", str4,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "query-logging" + "'", str5,
        "query-logging");
  }

  @Test
  public void test1796() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1796");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService2 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService2.rolcForKe(kernelTransaction3, throwable4);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable4);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService7 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService7.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService7.sucsForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService7.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService7.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService7.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService7.sucsForEx(executingQuery21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService7.faleForExTh(executingQuery23, throwable24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    java.lang.Throwable throwable27 = null;
    queryLoggingService7.faleForExTh(executingQuery26, throwable27);
    boolean boolean29 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService7);
    java.lang.String str30 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService2);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNotNull(queryLoggingService7);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertEquals(
        "'" + str30 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str30, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1797() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1797");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.faleForExTh(executingQuery21,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService0.sucsForEx(executingQuery24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1798() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1798");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService2 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService2.rolcForKe(kernelTransaction3, throwable4);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable4);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory11 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean13 = queryLoggingServiceExtensionFactory11.equals((java.lang.Object) (short) 1);
    java.lang.String str14 = queryLoggingServiceExtensionFactory11.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService15 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService15.strForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService15.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService15.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService15.comForKe(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService15.strForEx(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService15.strForEx(executingQuery28);
    boolean boolean30 = queryLoggingServiceExtensionFactory11.equals(
        (java.lang.Object) executingQuery28);
    java.lang.String str31 = queryLoggingServiceExtensionFactory11.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService32 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    queryLoggingService32.rolcForKe(kernelTransaction33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService32.faleForExTh(executingQuery35, "");
    java.lang.Class<?> wildcardClass38 = queryLoggingService32.getClass();
    boolean boolean39 = queryLoggingServiceExtensionFactory11.equals(
        (java.lang.Object) queryLoggingService32);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory40 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory41 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean43 = queryLoggingServiceExtensionFactory41.equals((java.lang.Object) (-1L));
    boolean boolean44 = queryLoggingServiceExtensionFactory40.equals((java.lang.Object) boolean43);
    java.lang.String str45 = queryLoggingServiceExtensionFactory40.toString();
    java.lang.String str46 = queryLoggingServiceExtensionFactory40.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory47 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean49 = queryLoggingServiceExtensionFactory47.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory50 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str51 = queryLoggingServiceExtensionFactory50.toString();
    boolean boolean52 = queryLoggingServiceExtensionFactory47.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory50);
    boolean boolean53 = queryLoggingServiceExtensionFactory40.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory47);
    java.lang.String str54 = queryLoggingServiceExtensionFactory40.getName();
    boolean boolean55 = queryLoggingServiceExtensionFactory11.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory40);
    boolean boolean56 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory11);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService57 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery58 = null;
    queryLoggingService57.strForEx(executingQuery58);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery60 = null;
    java.lang.Throwable throwable61 = null;
    queryLoggingService57.faleForExTh(executingQuery60, throwable61);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction63 = null;
    java.lang.Throwable throwable64 = null;
    queryLoggingService57.rolcForKe(kernelTransaction63, throwable64);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery66 = null;
    queryLoggingService57.faleForExTh(executingQuery66, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery69 = null;
    queryLoggingService57.sucsForEx(executingQuery69);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery71 = null;
    java.lang.Throwable throwable72 = null;
    queryLoggingService57.faleForExTh(executingQuery71, throwable72);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery74 = null;
    queryLoggingService57.strForEx(executingQuery74);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery76 = null;
    java.lang.Throwable throwable77 = null;
    queryLoggingService57.faleForExTh(executingQuery76, throwable77);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery79 = null;
    java.lang.Throwable throwable80 = null;
    queryLoggingService57.faleForExTh(executingQuery79, throwable80);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction82 = null;
    queryLoggingService57.strForEx(kernelTransaction82);
    boolean boolean84 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction82);
    java.lang.String str85 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService86 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction87 = null;
    java.lang.Throwable throwable88 = null;
    queryLoggingService86.rolcForKe(kernelTransaction87, throwable88);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery90 = null;
    queryLoggingService86.sucsForEx(executingQuery90);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction92 = null;
    queryLoggingService86.rolcForKe(kernelTransaction92);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction94 = null;
    queryLoggingService86.strForEx(kernelTransaction94);
    boolean boolean96 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService86);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery97 = null;
    queryLoggingService86.strForEx(executingQuery97);
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService2);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str10, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "query-logging" + "'", str14,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService15);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    org.junit.Assert.assertEquals("'" + str31 + "' != '" + "query-logging" + "'", str31,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService32);
    org.junit.Assert.assertNotNull(wildcardClass38);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    org.junit.Assert.assertEquals(
        "'" + str45 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str45, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str46 + "' != '" + "query-logging" + "'", str46,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertEquals(
        "'" + str51 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str51, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    org.junit.Assert.assertEquals("'" + str54 + "' != '" + "query-logging" + "'", str54,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    org.junit.Assert.assertNotNull(queryLoggingService57);
    org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    org.junit.Assert.assertEquals("'" + str85 + "' != '" + "query-logging" + "'", str85,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService86);
    org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
  }

  @Test
  public void test1799() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1799");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.strForEx(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService0.strForEx(kernelTransaction8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.faleForExTh(executingQuery12, throwable13);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1800() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1800");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.faleForExTh(executingQuery13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16, throwable17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.faleForExTh(executingQuery19, throwable20);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1801() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1801");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1802() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1802");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.strForEx(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.sucsForEx(executingQuery20);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1803() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1803");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1.0d));
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService3 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService3.rolcForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService3.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService3.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService3.faleForExTh(executingQuery12, throwable13);
    boolean boolean15 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery12);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService16 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService16.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService16.faleForExTh(executingQuery19, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService16.rolcForKe(kernelTransaction22);
    boolean boolean24 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService16.comForKe(kernelTransaction25);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(queryLoggingService3);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertNotNull(queryLoggingService16);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
  }

  @Test
  public void test1804() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1804");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory8 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean10 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) (-1L));
    boolean boolean11 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) boolean10);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService12 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService12.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService12.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService12.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService12.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService12.strForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) executingQuery22);
    boolean boolean25 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext26 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies27 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle28 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext26, queryLoggingServiceDependencies27);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(queryLoggingService12);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
  }

  @Test
  public void test1805() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1805");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.faleForExTh(executingQuery13, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.faleForExTh(executingQuery16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22, throwable23);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1806() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1806");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService5.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService5.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService5.faleForExTh(executingQuery17,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    boolean boolean20 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService21 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService21.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService21.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService21.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService21.sucsForEx(executingQuery29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService21.strForEx(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService21.faleForExTh(executingQuery33,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService21.rolcForKe(kernelTransaction36, throwable37);
    boolean boolean39 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService21);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory40 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory41 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean43 = queryLoggingServiceExtensionFactory41.equals((java.lang.Object) (-1L));
    boolean boolean44 = queryLoggingServiceExtensionFactory40.equals((java.lang.Object) boolean43);
    boolean boolean46 = queryLoggingServiceExtensionFactory40.equals((java.lang.Object) 0L);
    java.lang.String str47 = queryLoggingServiceExtensionFactory40.toString();
    java.lang.String str48 = queryLoggingServiceExtensionFactory40.getName();
    boolean boolean49 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) str48);
    java.lang.String str50 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str51 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService52 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction53 = null;
    queryLoggingService52.rolcForKe(kernelTransaction53);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    java.lang.Throwable throwable56 = null;
    queryLoggingService52.rolcForKe(kernelTransaction55, throwable56);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction58 = null;
    queryLoggingService52.rolcForKe(kernelTransaction58);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery60 = null;
    queryLoggingService52.sucsForEx(executingQuery60);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction62 = null;
    queryLoggingService52.strForEx(kernelTransaction62);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery64 = null;
    queryLoggingService52.faleForExTh(executingQuery64,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery67 = null;
    queryLoggingService52.faleForExTh(executingQuery67, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction70 = null;
    queryLoggingService52.rolcForKe(kernelTransaction70);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction72 = null;
    queryLoggingService52.rolcForKe(kernelTransaction72);
    boolean boolean74 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService52);
    java.lang.String str75 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str76 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService77 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction78 = null;
    java.lang.Throwable throwable79 = null;
    queryLoggingService77.rolcForKe(kernelTransaction78, throwable79);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery81 = null;
    java.lang.Throwable throwable82 = null;
    queryLoggingService77.faleForExTh(executingQuery81, throwable82);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery84 = null;
    java.lang.Throwable throwable85 = null;
    queryLoggingService77.faleForExTh(executingQuery84, throwable85);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction87 = null;
    queryLoggingService77.strForEx(kernelTransaction87);
    java.lang.Class<?> wildcardClass89 = queryLoggingService77.getClass();
    boolean boolean90 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService77);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext91 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies92 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle93 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext91, queryLoggingServiceDependencies92);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertNotNull(queryLoggingService21);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    org.junit.Assert.assertEquals(
        "'" + str47 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str47, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str48 + "' != '" + "query-logging" + "'", str48,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertEquals("'" + str50 + "' != '" + "query-logging" + "'", str50,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str51 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str51, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService52);
    org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    org.junit.Assert.assertEquals("'" + str75 + "' != '" + "query-logging" + "'", str75,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str76 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str76, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService77);
    org.junit.Assert.assertNotNull(wildcardClass89);
    org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
  }

  @Test
  public void test1807() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1807");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService3 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService3.rolcForKe(kernelTransaction4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService3.rolcForKe(kernelTransaction6, throwable7);
    boolean boolean9 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService3);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService3.faleForExTh(executingQuery10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService3.rolcForKe(kernelTransaction13);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(queryLoggingService3);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1808() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1808");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory2 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean4 = queryLoggingServiceExtensionFactory2.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory5 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str6 = queryLoggingServiceExtensionFactory5.toString();
    boolean boolean7 = queryLoggingServiceExtensionFactory2.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory5);
    java.lang.String str8 = queryLoggingServiceExtensionFactory2.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory2.getName();
    boolean boolean10 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory2);
    java.lang.String str11 = queryLoggingServiceExtensionFactory2.toString();
    java.lang.String str12 = queryLoggingServiceExtensionFactory2.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService13 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService13.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService13.rolcForKe(kernelTransaction16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService13.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService13.rolcForKe(kernelTransaction22, throwable23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService13.rolcForKe(kernelTransaction25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService13.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService13.rolcForKe(kernelTransaction29, throwable30);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction32 = null;
    java.lang.Throwable throwable33 = null;
    queryLoggingService13.rolcForKe(kernelTransaction32, throwable33);
    boolean boolean35 = queryLoggingServiceExtensionFactory2.equals(
        (java.lang.Object) queryLoggingService13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    queryLoggingService13.strForEx(kernelTransaction36);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery38 = null;
    queryLoggingService13.strForEx(executingQuery38);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    queryLoggingService13.strForEx(kernelTransaction40);
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str6, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "query-logging" + "'", str12,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService13);
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
  }

  @Test
  public void test1809() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1809");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 1);
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService4 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    queryLoggingService4.strForEx(executingQuery5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService4.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService4.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService4.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService4.strForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService4.strForEx(executingQuery17);
    boolean boolean19 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery17);
    java.lang.String str20 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str21 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str22 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str23 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService24 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService24.strForEx(executingQuery25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    java.lang.Throwable throwable28 = null;
    queryLoggingService24.faleForExTh(executingQuery27, throwable28);
    boolean boolean30 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable28);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory31 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory32 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean34 = queryLoggingServiceExtensionFactory32.equals((java.lang.Object) (-1L));
    boolean boolean35 = queryLoggingServiceExtensionFactory31.equals((java.lang.Object) boolean34);
    boolean boolean37 = queryLoggingServiceExtensionFactory31.equals((java.lang.Object) 0L);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory38 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory39 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean41 = queryLoggingServiceExtensionFactory39.equals((java.lang.Object) (-1L));
    boolean boolean42 = queryLoggingServiceExtensionFactory38.equals((java.lang.Object) boolean41);
    java.lang.Object obj43 = new java.lang.Object();
    boolean boolean44 = queryLoggingServiceExtensionFactory38.equals(obj43);
    java.lang.String str45 = queryLoggingServiceExtensionFactory38.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService46 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    queryLoggingService46.strForEx(executingQuery47);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery49 = null;
    java.lang.Throwable throwable50 = null;
    queryLoggingService46.faleForExTh(executingQuery49, throwable50);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction52 = null;
    java.lang.Throwable throwable53 = null;
    queryLoggingService46.rolcForKe(kernelTransaction52, throwable53);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    queryLoggingService46.comForKe(kernelTransaction55);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery57 = null;
    queryLoggingService46.strForEx(executingQuery57);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction59 = null;
    java.lang.Throwable throwable60 = null;
    queryLoggingService46.rolcForKe(kernelTransaction59, throwable60);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction62 = null;
    queryLoggingService46.comForKe(kernelTransaction62);
    boolean boolean64 = queryLoggingServiceExtensionFactory38.equals(
        (java.lang.Object) queryLoggingService46);
    boolean boolean65 = queryLoggingServiceExtensionFactory31.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory38);
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl66 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction67 = null;
    org.neo4j.configuration.Config config69 = null;
    java.nio.file.Path path70 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl66.init(fileSystemAbstraction67, "hi!",
        config69, path70);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction72 = null;
    org.neo4j.configuration.Config config74 = null;
    java.nio.file.Path path75 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl66.init(fileSystemAbstraction72,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config74, path75);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction77 = null;
    org.neo4j.configuration.Config config79 = null;
    java.nio.file.Path path80 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl66.init(fileSystemAbstraction77,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config79, path80);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction82 = null;
    org.neo4j.configuration.Config config84 = null;
    java.nio.file.Path path85 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl66.init(fileSystemAbstraction82,
        "query-logging", config84, path85);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction87 = null;
    org.neo4j.configuration.Config config89 = null;
    java.nio.file.Path path90 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl66.init(fileSystemAbstraction87,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config89, path90);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction92 = null;
    org.neo4j.configuration.Config config94 = null;
    java.nio.file.Path path95 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl66.init(fileSystemAbstraction92,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config94, path95);
    boolean boolean97 = queryLoggingServiceExtensionFactory38.equals(
        (java.lang.Object) diagnosticsOfflineReportProviderQueryLoggingImpl66);
    boolean boolean98 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory38);
    java.lang.String str99 = queryLoggingServiceExtensionFactory38.toString();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "query-logging" + "'", str3,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService4);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "query-logging" + "'", str20,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str21 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str21, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str22 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str22, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "query-logging" + "'", str23,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService24);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    org.junit.Assert.assertEquals("'" + str45 + "' != '" + "query-logging" + "'", str45,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService46);
    org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    org.junit.Assert.assertEquals(
        "'" + str99 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str99, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1810() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1810");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.faleForExTh(executingQuery1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.faleForExTh(executingQuery10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.strForEx(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.sucsForEx(executingQuery20);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1811() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1811");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService8.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService8.sucsForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery22);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService25 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService25.strForEx(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService25.faleForExTh(executingQuery28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService25.rolcForKe(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService25.sucsForEx(executingQuery33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService25.strForEx(executingQuery35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService25.sucsForEx(executingQuery37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService25.sucsForEx(executingQuery39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    queryLoggingService25.sucsForEx(executingQuery41);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService25.strForEx(executingQuery43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    java.lang.Throwable throwable46 = null;
    queryLoggingService25.rolcForKe(kernelTransaction45, throwable46);
    boolean boolean48 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction49 = null;
    queryLoggingService25.comForKe(kernelTransaction49);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery51 = null;
    queryLoggingService25.faleForExTh(executingQuery51, "query-logging");
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(queryLoggingService25);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
  }

  @Test
  public void test1812() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1812");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService10 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService10.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService10.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService10.faleForExTh(executingQuery17, throwable18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService10.strForEx(kernelTransaction20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService10.faleForExTh(executingQuery22, throwable23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService10.rolcForKe(kernelTransaction25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService10.comForKe(kernelTransaction27);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    queryLoggingService10.rolcForKe(kernelTransaction29);
    java.lang.Class<?> wildcardClass31 = queryLoggingService10.getClass();
    boolean boolean32 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService10);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory33 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean35 = queryLoggingServiceExtensionFactory33.equals((java.lang.Object) (short) 1);
    java.lang.String str36 = queryLoggingServiceExtensionFactory33.toString();
    java.lang.String str37 = queryLoggingServiceExtensionFactory33.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService38 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction39 = null;
    java.lang.Throwable throwable40 = null;
    queryLoggingService38.rolcForKe(kernelTransaction39, throwable40);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction42 = null;
    queryLoggingService38.comForKe(kernelTransaction42);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery44 = null;
    java.lang.Throwable throwable45 = null;
    queryLoggingService38.faleForExTh(executingQuery44, throwable45);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction47 = null;
    queryLoggingService38.rolcForKe(kernelTransaction47);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery49 = null;
    java.lang.Throwable throwable50 = null;
    queryLoggingService38.faleForExTh(executingQuery49, throwable50);
    java.lang.Class<?> wildcardClass52 = queryLoggingService38.getClass();
    boolean boolean53 = queryLoggingServiceExtensionFactory33.equals(
        (java.lang.Object) wildcardClass52);
    java.lang.String str54 = queryLoggingServiceExtensionFactory33.toString();
    boolean boolean55 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) str54);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext56 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies57 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle58 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext56, queryLoggingServiceDependencies57);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str6, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str9, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService10);
    org.junit.Assert.assertNotNull(wildcardClass31);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    org.junit.Assert.assertEquals(
        "'" + str36 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str36, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str37 + "' != '" + "query-logging" + "'", str37,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService38);
    org.junit.Assert.assertNotNull(wildcardClass52);
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    org.junit.Assert.assertEquals(
        "'" + str54 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str54, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
  }

  @Test
  public void test1813() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1813");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.strForEx(executingQuery12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.strForEx(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.comForKe(kernelTransaction18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.comForKe(kernelTransaction20);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1814() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1814");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.sucsForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.sucsForEx(executingQuery17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.faleForExTh(executingQuery19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.strForEx(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService0.sucsForEx(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService0.sucsForEx(executingQuery28);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    java.lang.Throwable throwable31 = null;
    queryLoggingService0.rolcForKe(kernelTransaction30, throwable31);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1815() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1815");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService2 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService2.rolcForKe(kernelTransaction3, throwable4);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable4);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory11 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean13 = queryLoggingServiceExtensionFactory11.equals((java.lang.Object) (short) 1);
    java.lang.String str14 = queryLoggingServiceExtensionFactory11.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService15 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService15.strForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService15.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService15.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService15.comForKe(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService15.strForEx(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService15.strForEx(executingQuery28);
    boolean boolean30 = queryLoggingServiceExtensionFactory11.equals(
        (java.lang.Object) executingQuery28);
    java.lang.String str31 = queryLoggingServiceExtensionFactory11.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService32 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    queryLoggingService32.rolcForKe(kernelTransaction33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService32.faleForExTh(executingQuery35, "");
    java.lang.Class<?> wildcardClass38 = queryLoggingService32.getClass();
    boolean boolean39 = queryLoggingServiceExtensionFactory11.equals(
        (java.lang.Object) queryLoggingService32);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory40 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory41 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean43 = queryLoggingServiceExtensionFactory41.equals((java.lang.Object) (-1L));
    boolean boolean44 = queryLoggingServiceExtensionFactory40.equals((java.lang.Object) boolean43);
    java.lang.String str45 = queryLoggingServiceExtensionFactory40.toString();
    java.lang.String str46 = queryLoggingServiceExtensionFactory40.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory47 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean49 = queryLoggingServiceExtensionFactory47.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory50 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str51 = queryLoggingServiceExtensionFactory50.toString();
    boolean boolean52 = queryLoggingServiceExtensionFactory47.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory50);
    boolean boolean53 = queryLoggingServiceExtensionFactory40.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory47);
    java.lang.String str54 = queryLoggingServiceExtensionFactory40.getName();
    boolean boolean55 = queryLoggingServiceExtensionFactory11.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory40);
    boolean boolean56 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory11);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService57 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery58 = null;
    queryLoggingService57.strForEx(executingQuery58);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery60 = null;
    java.lang.Throwable throwable61 = null;
    queryLoggingService57.faleForExTh(executingQuery60, throwable61);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction63 = null;
    java.lang.Throwable throwable64 = null;
    queryLoggingService57.rolcForKe(kernelTransaction63, throwable64);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery66 = null;
    queryLoggingService57.faleForExTh(executingQuery66, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery69 = null;
    queryLoggingService57.sucsForEx(executingQuery69);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery71 = null;
    java.lang.Throwable throwable72 = null;
    queryLoggingService57.faleForExTh(executingQuery71, throwable72);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery74 = null;
    queryLoggingService57.strForEx(executingQuery74);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery76 = null;
    java.lang.Throwable throwable77 = null;
    queryLoggingService57.faleForExTh(executingQuery76, throwable77);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery79 = null;
    java.lang.Throwable throwable80 = null;
    queryLoggingService57.faleForExTh(executingQuery79, throwable80);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction82 = null;
    queryLoggingService57.strForEx(kernelTransaction82);
    boolean boolean84 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction82);
    java.lang.String str85 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService86 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction87 = null;
    java.lang.Throwable throwable88 = null;
    queryLoggingService86.rolcForKe(kernelTransaction87, throwable88);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery90 = null;
    queryLoggingService86.sucsForEx(executingQuery90);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction92 = null;
    queryLoggingService86.rolcForKe(kernelTransaction92);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction94 = null;
    queryLoggingService86.strForEx(kernelTransaction94);
    boolean boolean96 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService86);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext97 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies98 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle99 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext97, queryLoggingServiceDependencies98);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService2);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str10, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "query-logging" + "'", str14,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService15);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    org.junit.Assert.assertEquals("'" + str31 + "' != '" + "query-logging" + "'", str31,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService32);
    org.junit.Assert.assertNotNull(wildcardClass38);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    org.junit.Assert.assertEquals(
        "'" + str45 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str45, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str46 + "' != '" + "query-logging" + "'", str46,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertEquals(
        "'" + str51 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str51, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    org.junit.Assert.assertEquals("'" + str54 + "' != '" + "query-logging" + "'", str54,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    org.junit.Assert.assertNotNull(queryLoggingService57);
    org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    org.junit.Assert.assertEquals("'" + str85 + "' != '" + "query-logging" + "'", str85,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService86);
    org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
  }

  @Test
  public void test1816() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1816");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.sucsForEx(executingQuery17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.faleForExTh(executingQuery19, throwable20);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1817() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1817");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.faleForExTh(executingQuery12, throwable13);
    java.lang.Class<?> wildcardClass15 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass15);
  }

  @Test
  public void test1818() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1818");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService0.strForEx(kernelTransaction8);
    java.lang.Class<?> wildcardClass10 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass10);
  }

  @Test
  public void test1819() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1819");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.Object obj5 = new java.lang.Object();
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals(obj5);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService10 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService10.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService10.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService10.strForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService10.faleForExTh(executingQuery18, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService10.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService10.sucsForEx(executingQuery24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService10.sucsForEx(executingQuery26);
    boolean boolean28 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService10);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService29 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryLoggingService29.strForEx(executingQuery30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    java.lang.Throwable throwable33 = null;
    queryLoggingService29.faleForExTh(executingQuery32, throwable33);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction35 = null;
    queryLoggingService29.rolcForKe(kernelTransaction35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService29.sucsForEx(executingQuery37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService29.strForEx(executingQuery39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    queryLoggingService29.sucsForEx(executingQuery41);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction43 = null;
    queryLoggingService29.comForKe(kernelTransaction43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    queryLoggingService29.rolcForKe(kernelTransaction45);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    queryLoggingService29.strForEx(executingQuery47);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction49 = null;
    java.lang.Throwable throwable50 = null;
    queryLoggingService29.rolcForKe(kernelTransaction49, throwable50);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery52 = null;
    queryLoggingService29.strForEx(executingQuery52);
    boolean boolean54 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService29);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str9, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService10);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertNotNull(queryLoggingService29);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
  }

  @Test
  public void test1820() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1820");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory11 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory12 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean14 = queryLoggingServiceExtensionFactory12.equals((java.lang.Object) (-1L));
    boolean boolean15 = queryLoggingServiceExtensionFactory11.equals((java.lang.Object) boolean14);
    boolean boolean17 = queryLoggingServiceExtensionFactory11.equals((java.lang.Object) 0L);
    java.lang.String str18 = queryLoggingServiceExtensionFactory11.toString();
    java.lang.String str19 = queryLoggingServiceExtensionFactory11.getName();
    java.lang.Object obj20 = new java.lang.Object();
    java.lang.Class<?> wildcardClass21 = obj20.getClass();
    boolean boolean22 = queryLoggingServiceExtensionFactory11.equals(obj20);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory23 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean25 = queryLoggingServiceExtensionFactory23.equals((java.lang.Object) (short) 1);
    java.lang.String str26 = queryLoggingServiceExtensionFactory23.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService27 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService27.strForEx(executingQuery28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    java.lang.Throwable throwable31 = null;
    queryLoggingService27.faleForExTh(executingQuery30, throwable31);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    java.lang.Throwable throwable34 = null;
    queryLoggingService27.rolcForKe(kernelTransaction33, throwable34);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    queryLoggingService27.comForKe(kernelTransaction36);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery38 = null;
    queryLoggingService27.strForEx(executingQuery38);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery40 = null;
    queryLoggingService27.strForEx(executingQuery40);
    boolean boolean42 = queryLoggingServiceExtensionFactory23.equals(
        (java.lang.Object) executingQuery40);
    boolean boolean43 = queryLoggingServiceExtensionFactory11.equals(
        (java.lang.Object) executingQuery40);
    java.lang.String str44 = queryLoggingServiceExtensionFactory11.toString();
    boolean boolean45 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory11);
    java.lang.String str46 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str47 = queryLoggingServiceExtensionFactory0.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext48 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies49 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle50 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext48, queryLoggingServiceDependencies49);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str10, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertEquals(
        "'" + str18 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str18, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "query-logging" + "'", str19,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "query-logging" + "'", str26,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService27);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertEquals(
        "'" + str44 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str44, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    org.junit.Assert.assertEquals("'" + str46 + "' != '" + "query-logging" + "'", str46,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str47 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str47, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1821() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1821");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.strForEx(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.faleForExTh(executingQuery11, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.comForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.strForEx(kernelTransaction19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1822() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1822");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.sucsForEx(executingQuery9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.faleForExTh(executingQuery13, throwable14);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1823() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1823");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.strForEx(executingQuery9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.strForEx(kernelTransaction11);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1824() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1824");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6, "query-logging",
        config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "query-logging",
        config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "hi!", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "hi!", config23,
        path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "", config28,
        path29);
  }

  @Test
  public void test1825() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1825");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str4 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str3, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1826() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1826");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.comForKe(kernelTransaction11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.faleForExTh(executingQuery16, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.faleForExTh(executingQuery19, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.strForEx(kernelTransaction22);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1827() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1827");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.Object obj5 = new java.lang.Object();
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals(obj5);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService8.comForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService8.strForEx(executingQuery19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService8.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService8.comForKe(kernelTransaction24);
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService8.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService8.faleForExTh(executingQuery29, throwable30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService8.faleForExTh(executingQuery32, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService8.sucsForEx(executingQuery35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService8.faleForExTh(executingQuery37, "");
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
  }

  @Test
  public void test1828() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1828");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.strForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.faleForExTh(executingQuery10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.strForEx(executingQuery17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.strForEx(kernelTransaction19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1829() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1829");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 1);
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService4 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    queryLoggingService4.strForEx(executingQuery5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService4.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService4.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService4.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService4.strForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService4.strForEx(executingQuery17);
    boolean boolean19 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery17);
    java.lang.String str20 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService21 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService21.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService21.faleForExTh(executingQuery24, "");
    java.lang.Class<?> wildcardClass27 = queryLoggingService21.getClass();
    boolean boolean28 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService21);
    java.lang.String str29 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService30 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    java.lang.Throwable throwable32 = null;
    queryLoggingService30.rolcForKe(kernelTransaction31, throwable32);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    queryLoggingService30.sucsForEx(executingQuery34);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery36 = null;
    queryLoggingService30.strForEx(executingQuery36);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery38 = null;
    queryLoggingService30.strForEx(executingQuery38);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    queryLoggingService30.rolcForKe(kernelTransaction40);
    boolean boolean42 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService30);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService43 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    queryLoggingService43.rolcForKe(kernelTransaction44);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction46 = null;
    java.lang.Throwable throwable47 = null;
    queryLoggingService43.rolcForKe(kernelTransaction46, throwable47);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction49 = null;
    queryLoggingService43.rolcForKe(kernelTransaction49);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction51 = null;
    java.lang.Throwable throwable52 = null;
    queryLoggingService43.rolcForKe(kernelTransaction51, throwable52);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery54 = null;
    queryLoggingService43.sucsForEx(executingQuery54);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction56 = null;
    queryLoggingService43.comForKe(kernelTransaction56);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction58 = null;
    queryLoggingService43.rolcForKe(kernelTransaction58);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery60 = null;
    queryLoggingService43.sucsForEx(executingQuery60);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction62 = null;
    queryLoggingService43.rolcForKe(kernelTransaction62);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction64 = null;
    queryLoggingService43.strForEx(kernelTransaction64);
    boolean boolean66 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction64);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "query-logging" + "'", str3,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService4);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "query-logging" + "'", str20,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService21);
    org.junit.Assert.assertNotNull(wildcardClass27);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertEquals(
        "'" + str29 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str29, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService30);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertNotNull(queryLoggingService43);
    org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
  }

  @Test
  public void test1830() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1830");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.strForEx(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.strForEx(executingQuery16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.comForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20, "");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1831() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1831");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService2 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService2.rolcForKe(kernelTransaction3, throwable4);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable4);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService7 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService7.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService7.sucsForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService7.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService7.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService7.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService7.sucsForEx(executingQuery21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService7.rolcForKe(kernelTransaction23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService7.rolcForKe(kernelTransaction25, throwable26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService7.comForKe(kernelTransaction28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryLoggingService7.sucsForEx(executingQuery30);
    boolean boolean32 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService7);
    java.lang.String str33 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str34 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService2);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNotNull(queryLoggingService7);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertEquals(
        "'" + str33 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str33, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str34 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str34, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1832() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1832");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    boolean boolean10 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 100);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService11 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService11.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService11.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService11.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService11.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService11.sucsForEx(executingQuery22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService11.comForKe(kernelTransaction24);
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction24);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService27 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService27.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    java.lang.Throwable throwable32 = null;
    queryLoggingService27.rolcForKe(kernelTransaction31, throwable32);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction34 = null;
    queryLoggingService27.rolcForKe(kernelTransaction34);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService27.rolcForKe(kernelTransaction36, throwable37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService27.strForEx(executingQuery39);
    boolean boolean41 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService27);
    java.lang.String str42 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str43 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str44 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertNotNull(queryLoggingService11);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertNotNull(queryLoggingService27);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    org.junit.Assert.assertEquals(
        "'" + str42 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str42, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str43 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str43, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str44 + "' != '" + "query-logging" + "'", str44,
        "query-logging");
  }

  @Test
  public void test1833() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1833");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17, throwable18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.comForKe(kernelTransaction20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.faleForExTh(executingQuery22, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService0.rolcForKe(kernelTransaction25, throwable26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService0.rolcForKe(kernelTransaction28);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1834() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1834");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "hi!", config13,
        path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "", config23,
        path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "hi!", config28,
        path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31, "query-logging",
        config33, path34);
  }

  @Test
  public void test1835() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1835");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.strForEx(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.sucsForEx(executingQuery17);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1836() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1836");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.sucsForEx(executingQuery10);
    java.lang.Class<?> wildcardClass12 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass12);
  }

  @Test
  public void test1837() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1837");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.comForKe(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.strForEx(executingQuery20);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1838() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1838");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.strForEx(executingQuery10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23, throwable24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService0.sucsForEx(executingQuery26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService0.comForKe(kernelTransaction28);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1839() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1839");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15, throwable16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1840() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1840");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.faleForExTh(executingQuery16,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.faleForExTh(executingQuery23, "hi!");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1841() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1841");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory8 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean10 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) (-1L));
    boolean boolean11 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) boolean10);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService12 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService12.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService12.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService12.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService12.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService12.strForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) executingQuery22);
    boolean boolean25 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    java.lang.String str26 = queryLoggingServiceExtensionFactory7.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService27 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService27.strForEx(executingQuery28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    java.lang.Throwable throwable31 = null;
    queryLoggingService27.faleForExTh(executingQuery30, throwable31);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    queryLoggingService27.rolcForKe(kernelTransaction33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService27.sucsForEx(executingQuery35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService27.strForEx(executingQuery37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService27.sucsForEx(executingQuery39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    queryLoggingService27.sucsForEx(executingQuery41);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService27.sucsForEx(executingQuery43);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery45 = null;
    queryLoggingService27.strForEx(executingQuery45);
    boolean boolean47 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingService27);
    java.lang.Class<?> wildcardClass48 = queryLoggingServiceExtensionFactory7.getClass();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(queryLoggingService12);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "query-logging" + "'", str26,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService27);
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    org.junit.Assert.assertNotNull(wildcardClass48);
  }

  @Test
  public void test1842() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1842");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.faleForExTh(executingQuery1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.rolcForKe(kernelTransaction4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.faleForExTh(executingQuery13, throwable14);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1843() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1843");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.strForEx(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20, "");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1844() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1844");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.faleForExTh(executingQuery12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.strForEx(executingQuery17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.faleForExTh(executingQuery19, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.strForEx(kernelTransaction22);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1845() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1845");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean9 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory10 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str11 = queryLoggingServiceExtensionFactory10.toString();
    boolean boolean12 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory10);
    boolean boolean13 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    java.lang.String str14 = queryLoggingServiceExtensionFactory7.getName();
    java.lang.String str15 = queryLoggingServiceExtensionFactory7.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService16 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService16.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService16.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService16.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService16.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService16.faleForExTh(executingQuery27, "hi!");
    boolean boolean30 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingService16);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService31 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction32 = null;
    queryLoggingService31.rolcForKe(kernelTransaction32);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction34 = null;
    java.lang.Throwable throwable35 = null;
    queryLoggingService31.rolcForKe(kernelTransaction34, throwable35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService31.faleForExTh(executingQuery37, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    java.lang.Throwable throwable41 = null;
    queryLoggingService31.rolcForKe(kernelTransaction40, throwable41);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService31.strForEx(executingQuery43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    queryLoggingService31.comForKe(kernelTransaction45);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction47 = null;
    queryLoggingService31.strForEx(kernelTransaction47);
    boolean boolean49 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingService31);
    java.lang.String str50 = queryLoggingServiceExtensionFactory7.getName();
    java.lang.String str51 = queryLoggingServiceExtensionFactory7.toString();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "query-logging" + "'", str14,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str15 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str15, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService16);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    org.junit.Assert.assertNotNull(queryLoggingService31);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertEquals("'" + str50 + "' != '" + "query-logging" + "'", str50,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str51 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str51, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1846() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1846");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "hi!", config13,
        path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "hi!", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "", config23,
        path24);
    java.lang.Class<?> wildcardClass26 = diagnosticsOfflineReportProviderQueryLoggingImpl0.getClass();
    org.junit.Assert.assertNotNull(wildcardClass26);
  }

  @Test
  public void test1847() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1847");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.faleForExTh(executingQuery12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.faleForExTh(executingQuery17, throwable18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1848() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1848");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService5.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService5.strForEx(executingQuery15);
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery15);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService18 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService18.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService18.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService18.faleForExTh(executingQuery24, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService18.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService18.faleForExTh(executingQuery29, throwable30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService18.sucsForEx(executingQuery32);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService18);
    java.lang.String str35 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str36 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService37 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction38 = null;
    queryLoggingService37.rolcForKe(kernelTransaction38);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    java.lang.Throwable throwable41 = null;
    queryLoggingService37.rolcForKe(kernelTransaction40, throwable41);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction43 = null;
    queryLoggingService37.rolcForKe(kernelTransaction43);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery45 = null;
    queryLoggingService37.sucsForEx(executingQuery45);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction47 = null;
    queryLoggingService37.strForEx(kernelTransaction47);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery49 = null;
    queryLoggingService37.faleForExTh(executingQuery49,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery52 = null;
    queryLoggingService37.faleForExTh(executingQuery52, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery55 = null;
    queryLoggingService37.sucsForEx(executingQuery55);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery57 = null;
    queryLoggingService37.faleForExTh(executingQuery57, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery60 = null;
    queryLoggingService37.faleForExTh(executingQuery60, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery63 = null;
    queryLoggingService37.faleForExTh(executingQuery63,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery66 = null;
    java.lang.Throwable throwable67 = null;
    queryLoggingService37.faleForExTh(executingQuery66, throwable67);
    boolean boolean69 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable67);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(queryLoggingService18);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertEquals(
        "'" + str35 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str35, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str36 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str36, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService37);
    org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
  }

  @Test
  public void test1849() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1849");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.strForEx(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.strForEx(kernelTransaction23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService0.rolcForKe(kernelTransaction25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService0.strForEx(kernelTransaction27);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1850() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1850");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.rolcForKe(kernelTransaction4, throwable5);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.strForEx(executingQuery12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1851() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1851");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.Object obj5 = new java.lang.Object();
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals(obj5);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService7 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService7.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService7.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService7.rolcForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService7.sucsForEx(executingQuery15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService7.strForEx(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService7.faleForExTh(executingQuery19,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService7.rolcForKe(kernelTransaction22, throwable23);
    boolean boolean25 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction22);
    java.lang.String str26 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str27 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService28 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    queryLoggingService28.rolcForKe(kernelTransaction29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    java.lang.Throwable throwable32 = null;
    queryLoggingService28.rolcForKe(kernelTransaction31, throwable32);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction34 = null;
    java.lang.Throwable throwable35 = null;
    queryLoggingService28.rolcForKe(kernelTransaction34, throwable35);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction37 = null;
    java.lang.Throwable throwable38 = null;
    queryLoggingService28.rolcForKe(kernelTransaction37, throwable38);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    queryLoggingService28.rolcForKe(kernelTransaction40);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction42 = null;
    queryLoggingService28.rolcForKe(kernelTransaction42);
    boolean boolean44 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction42);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNotNull(queryLoggingService7);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertEquals(
        "'" + str26 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str26, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "query-logging" + "'", str27,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService28);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
  }

  @Test
  public void test1852() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1852");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 1);
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService4 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    queryLoggingService4.strForEx(executingQuery5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService4.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService4.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService4.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService4.strForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService4.strForEx(executingQuery17);
    boolean boolean19 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery17);
    java.lang.String str20 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService21 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService21.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService21.faleForExTh(executingQuery24, "");
    java.lang.Class<?> wildcardClass27 = queryLoggingService21.getClass();
    boolean boolean28 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService21);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory29 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory30 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean32 = queryLoggingServiceExtensionFactory30.equals((java.lang.Object) (-1L));
    boolean boolean33 = queryLoggingServiceExtensionFactory29.equals((java.lang.Object) boolean32);
    java.lang.String str34 = queryLoggingServiceExtensionFactory29.toString();
    java.lang.String str35 = queryLoggingServiceExtensionFactory29.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory36 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean38 = queryLoggingServiceExtensionFactory36.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory39 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str40 = queryLoggingServiceExtensionFactory39.toString();
    boolean boolean41 = queryLoggingServiceExtensionFactory36.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory39);
    boolean boolean42 = queryLoggingServiceExtensionFactory29.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory36);
    java.lang.String str43 = queryLoggingServiceExtensionFactory29.getName();
    boolean boolean44 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory29);
    java.lang.String str45 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "query-logging" + "'", str3,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService4);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "query-logging" + "'", str20,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService21);
    org.junit.Assert.assertNotNull(wildcardClass27);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertEquals(
        "'" + str34 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str34, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str35 + "' != '" + "query-logging" + "'", str35,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    org.junit.Assert.assertEquals(
        "'" + str40 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str40, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    org.junit.Assert.assertEquals("'" + str43 + "' != '" + "query-logging" + "'", str43,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    org.junit.Assert.assertEquals("'" + str45 + "' != '" + "query-logging" + "'", str45,
        "query-logging");
  }

  @Test
  public void test1853() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1853");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    boolean boolean8 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory10 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean12 = queryLoggingServiceExtensionFactory10.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory13 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str14 = queryLoggingServiceExtensionFactory13.toString();
    boolean boolean15 = queryLoggingServiceExtensionFactory10.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory13);
    boolean boolean17 = queryLoggingServiceExtensionFactory13.equals((java.lang.Object) 100.0d);
    java.lang.String str18 = queryLoggingServiceExtensionFactory13.toString();
    java.lang.String str19 = queryLoggingServiceExtensionFactory13.getName();
    java.lang.String str20 = queryLoggingServiceExtensionFactory13.getName();
    java.lang.String str21 = queryLoggingServiceExtensionFactory13.getName();
    java.lang.String str22 = queryLoggingServiceExtensionFactory13.getName();
    java.lang.String str23 = queryLoggingServiceExtensionFactory13.toString();
    boolean boolean24 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) str23);
    java.lang.String str25 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str9, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    org.junit.Assert.assertEquals(
        "'" + str14 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str14, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertEquals(
        "'" + str18 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str18, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "query-logging" + "'", str19,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "query-logging" + "'", str20,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str21 + "' != '" + "query-logging" + "'", str21,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str22 + "' != '" + "query-logging" + "'", str22,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str23 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str23, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertEquals("'" + str25 + "' != '" + "query-logging" + "'", str25,
        "query-logging");
  }

  @Test
  public void test1854() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1854");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config3, path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "", config13,
        path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "hi!", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "hi!", config23,
        path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "query-logging",
        config28, path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31, "hi!", config33,
        path34);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction36 = null;
    org.neo4j.configuration.Config config38 = null;
    java.nio.file.Path path39 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction36, "hi!", config38,
        path39);
  }

  @Test
  public void test1855() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1855");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.comForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.strForEx(executingQuery20);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1856() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1856");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService5.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService5.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService5.faleForExTh(executingQuery17,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    boolean boolean20 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService21 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService21.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService21.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService21.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService21.sucsForEx(executingQuery29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService21.strForEx(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService21.faleForExTh(executingQuery33,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService21.rolcForKe(kernelTransaction36, throwable37);
    boolean boolean39 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService21);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory40 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory41 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean43 = queryLoggingServiceExtensionFactory41.equals((java.lang.Object) (-1L));
    boolean boolean44 = queryLoggingServiceExtensionFactory40.equals((java.lang.Object) boolean43);
    boolean boolean46 = queryLoggingServiceExtensionFactory40.equals((java.lang.Object) 0L);
    java.lang.String str47 = queryLoggingServiceExtensionFactory40.toString();
    java.lang.String str48 = queryLoggingServiceExtensionFactory40.getName();
    boolean boolean49 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) str48);
    java.lang.String str50 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str51 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService52 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction53 = null;
    queryLoggingService52.rolcForKe(kernelTransaction53);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    java.lang.Throwable throwable56 = null;
    queryLoggingService52.rolcForKe(kernelTransaction55, throwable56);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction58 = null;
    queryLoggingService52.rolcForKe(kernelTransaction58);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery60 = null;
    queryLoggingService52.sucsForEx(executingQuery60);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction62 = null;
    queryLoggingService52.strForEx(kernelTransaction62);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery64 = null;
    queryLoggingService52.faleForExTh(executingQuery64,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery67 = null;
    queryLoggingService52.faleForExTh(executingQuery67, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction70 = null;
    queryLoggingService52.rolcForKe(kernelTransaction70);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction72 = null;
    queryLoggingService52.rolcForKe(kernelTransaction72);
    boolean boolean74 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService52);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery75 = null;
    java.lang.Throwable throwable76 = null;
    queryLoggingService52.faleForExTh(executingQuery75, throwable76);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction78 = null;
    java.lang.Throwable throwable79 = null;
    queryLoggingService52.rolcForKe(kernelTransaction78, throwable79);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertNotNull(queryLoggingService21);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    org.junit.Assert.assertEquals(
        "'" + str47 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str47, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str48 + "' != '" + "query-logging" + "'", str48,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertEquals("'" + str50 + "' != '" + "query-logging" + "'", str50,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str51 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str51, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService52);
    org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
  }

  @Test
  public void test1857() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1857");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.faleForExTh(executingQuery21, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService0.faleForExTh(executingQuery24, throwable25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    java.lang.Throwable throwable28 = null;
    queryLoggingService0.rolcForKe(kernelTransaction27, throwable28);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    queryLoggingService0.strForEx(kernelTransaction30);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction32 = null;
    java.lang.Throwable throwable33 = null;
    queryLoggingService0.rolcForKe(kernelTransaction32, throwable33);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction35 = null;
    java.lang.Throwable throwable36 = null;
    queryLoggingService0.rolcForKe(kernelTransaction35, throwable36);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1858() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1858");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str11 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str12 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory13 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean15 = queryLoggingServiceExtensionFactory13.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory16 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str17 = queryLoggingServiceExtensionFactory16.toString();
    boolean boolean18 = queryLoggingServiceExtensionFactory13.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory16);
    boolean boolean20 = queryLoggingServiceExtensionFactory16.equals((java.lang.Object) 100.0d);
    boolean boolean21 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 100.0d);
    java.lang.String str22 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory23 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory24 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean26 = queryLoggingServiceExtensionFactory24.equals((java.lang.Object) (-1L));
    boolean boolean27 = queryLoggingServiceExtensionFactory23.equals((java.lang.Object) boolean26);
    boolean boolean29 = queryLoggingServiceExtensionFactory23.equals((java.lang.Object) 0L);
    java.lang.String str30 = queryLoggingServiceExtensionFactory23.toString();
    java.lang.String str31 = queryLoggingServiceExtensionFactory23.getName();
    boolean boolean33 = queryLoggingServiceExtensionFactory23.equals(
        (java.lang.Object) (short) 100);
    java.lang.String str34 = queryLoggingServiceExtensionFactory23.getName();
    boolean boolean35 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory23);
    java.lang.Class<?> wildcardClass36 = queryLoggingServiceExtensionFactory23.getClass();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str10, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "query-logging" + "'", str11,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "query-logging" + "'", str12,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertEquals(
        "'" + str17 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str17, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    org.junit.Assert.assertEquals("'" + str22 + "' != '" + "query-logging" + "'", str22,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertEquals(
        "'" + str30 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str30, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str31 + "' != '" + "query-logging" + "'", str31,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertEquals("'" + str34 + "' != '" + "query-logging" + "'", str34,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    org.junit.Assert.assertNotNull(wildcardClass36);
  }

  @Test
  public void test1859() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1859");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.Object obj5 = new java.lang.Object();
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals(obj5);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService7 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService7.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService7.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService7.rolcForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService7.sucsForEx(executingQuery15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService7.strForEx(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService7.faleForExTh(executingQuery19,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService7.rolcForKe(kernelTransaction22, throwable23);
    boolean boolean25 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction22);
    boolean boolean27 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) '#');
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext28 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies29 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle30 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext28, queryLoggingServiceDependencies29);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNotNull(queryLoggingService7);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
  }

  @Test
  public void test1860() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1860");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.faleForExTh(executingQuery17, throwable18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1861() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1861");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.comForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.faleForExTh(executingQuery13, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1862() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1862");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory8 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean10 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) (-1L));
    boolean boolean11 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) boolean10);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService12 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService12.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService12.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService12.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService12.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService12.strForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) executingQuery22);
    boolean boolean25 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory26 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean28 = queryLoggingServiceExtensionFactory26.equals((java.lang.Object) (short) 1);
    java.lang.String str29 = queryLoggingServiceExtensionFactory26.toString();
    boolean boolean30 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory26);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService31 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction32 = null;
    java.lang.Throwable throwable33 = null;
    queryLoggingService31.rolcForKe(kernelTransaction32, throwable33);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction35 = null;
    queryLoggingService31.comForKe(kernelTransaction35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService31.strForEx(executingQuery37);
    boolean boolean39 = queryLoggingServiceExtensionFactory26.equals(
        (java.lang.Object) queryLoggingService31);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    queryLoggingService31.rolcForKe(kernelTransaction40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    queryLoggingService31.sucsForEx(executingQuery42);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery44 = null;
    queryLoggingService31.strForEx(executingQuery44);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction46 = null;
    queryLoggingService31.strForEx(kernelTransaction46);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(queryLoggingService12);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertEquals(
        "'" + str29 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str29, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    org.junit.Assert.assertNotNull(queryLoggingService31);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
  }

  @Test
  public void test1863() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1863");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService5.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService5.strForEx(executingQuery15);
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery15);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService18 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService18.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService18.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService18.faleForExTh(executingQuery24, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService18.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService18.faleForExTh(executingQuery29, throwable30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService18.sucsForEx(executingQuery32);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService18);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService35 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService35.rolcForKe(kernelTransaction36, throwable37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    java.lang.Throwable throwable40 = null;
    queryLoggingService35.faleForExTh(executingQuery39, throwable40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    java.lang.Throwable throwable43 = null;
    queryLoggingService35.faleForExTh(executingQuery42, throwable43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    queryLoggingService35.strForEx(kernelTransaction45);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    java.lang.Throwable throwable48 = null;
    queryLoggingService35.faleForExTh(executingQuery47, throwable48);
    java.lang.Class<?> wildcardClass50 = queryLoggingService35.getClass();
    boolean boolean51 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) wildcardClass50);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService52 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction53 = null;
    queryLoggingService52.rolcForKe(kernelTransaction53);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery55 = null;
    queryLoggingService52.faleForExTh(executingQuery55, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction58 = null;
    java.lang.Throwable throwable59 = null;
    queryLoggingService52.rolcForKe(kernelTransaction58, throwable59);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction61 = null;
    queryLoggingService52.strForEx(kernelTransaction61);
    boolean boolean63 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService52);
    java.lang.String str64 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService65 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery66 = null;
    queryLoggingService65.strForEx(executingQuery66);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery68 = null;
    java.lang.Throwable throwable69 = null;
    queryLoggingService65.faleForExTh(executingQuery68, throwable69);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction71 = null;
    queryLoggingService65.rolcForKe(kernelTransaction71);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery73 = null;
    queryLoggingService65.sucsForEx(executingQuery73);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery75 = null;
    queryLoggingService65.strForEx(executingQuery75);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery77 = null;
    queryLoggingService65.sucsForEx(executingQuery77);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery79 = null;
    queryLoggingService65.sucsForEx(executingQuery79);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction81 = null;
    queryLoggingService65.comForKe(kernelTransaction81);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction83 = null;
    queryLoggingService65.rolcForKe(kernelTransaction83);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery85 = null;
    queryLoggingService65.sucsForEx(executingQuery85);
    boolean boolean87 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService65);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery88 = null;
    queryLoggingService65.sucsForEx(executingQuery88);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(queryLoggingService18);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertNotNull(queryLoggingService35);
    org.junit.Assert.assertNotNull(wildcardClass50);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    org.junit.Assert.assertNotNull(queryLoggingService52);
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    org.junit.Assert.assertEquals(
        "'" + str64 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str64, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService65);
    org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
  }

  @Test
  public void test1864() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1864");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.comForKe(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.faleForExTh(executingQuery17, throwable18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1865() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1865");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService8.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService8.sucsForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery22);
    java.lang.String str25 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str26 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str27 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.Class<?> wildcardClass28 = queryLoggingServiceExtensionFactory3.getClass();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertEquals(
        "'" + str25 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str25, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str26 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str26, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "query-logging" + "'", str27,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass28);
  }

  @Test
  public void test1866() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1866");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.faleForExTh(executingQuery11,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.comForKe(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16, throwable17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.faleForExTh(executingQuery19, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.strForEx(executingQuery22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1867() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1867");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService5.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService5.strForEx(executingQuery15);
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery15);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService18 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService18.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService18.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService18.faleForExTh(executingQuery24, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService18.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService18.faleForExTh(executingQuery29, throwable30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService18.sucsForEx(executingQuery32);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService18);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService35 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService35.rolcForKe(kernelTransaction36, throwable37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService35.sucsForEx(executingQuery39);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction41 = null;
    queryLoggingService35.comForKe(kernelTransaction41);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService35.faleForExTh(executingQuery43, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction46 = null;
    queryLoggingService35.strForEx(kernelTransaction46);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction48 = null;
    queryLoggingService35.comForKe(kernelTransaction48);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery50 = null;
    queryLoggingService35.strForEx(executingQuery50);
    boolean boolean52 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService35);
    java.lang.String str53 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str54 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(queryLoggingService18);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertNotNull(queryLoggingService35);
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    org.junit.Assert.assertEquals(
        "'" + str53 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str53, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str54 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str54, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1868() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1868");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService7 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService7.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService7.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService7.rolcForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService7.sucsForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService7.faleForExTh(executingQuery17, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService7.strForEx(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService7.rolcForKe(kernelTransaction22);
    boolean boolean24 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService7);
    java.lang.String str25 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str26 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str27 = queryLoggingServiceExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext28 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies29 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle30 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext28, queryLoggingServiceDependencies29);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService7);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertEquals("'" + str25 + "' != '" + "query-logging" + "'", str25,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str26 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str26, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "query-logging" + "'", str27,
        "query-logging");
  }

  @Test
  public void test1869() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1869");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory4 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str5 = queryLoggingServiceExtensionFactory4.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService6 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    queryLoggingService6.strForEx(executingQuery7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService6.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService6.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService6.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService6.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService6.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService6.strForEx(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService6.strForEx(kernelTransaction23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService6.rolcForKe(kernelTransaction25, throwable26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService6.rolcForKe(kernelTransaction28, throwable29);
    boolean boolean31 = queryLoggingServiceExtensionFactory4.equals(
        (java.lang.Object) kernelTransaction28);
    java.lang.Object obj32 = null;
    boolean boolean33 = queryLoggingServiceExtensionFactory4.equals(obj32);
    java.lang.String str34 = queryLoggingServiceExtensionFactory4.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory35 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory36 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean38 = queryLoggingServiceExtensionFactory36.equals((java.lang.Object) (-1L));
    boolean boolean39 = queryLoggingServiceExtensionFactory35.equals((java.lang.Object) boolean38);
    boolean boolean41 = queryLoggingServiceExtensionFactory35.equals((java.lang.Object) 0L);
    java.lang.String str42 = queryLoggingServiceExtensionFactory35.toString();
    java.lang.String str43 = queryLoggingServiceExtensionFactory35.getName();
    java.lang.String str44 = queryLoggingServiceExtensionFactory35.getName();
    java.lang.Class<?> wildcardClass45 = queryLoggingServiceExtensionFactory35.getClass();
    boolean boolean46 = queryLoggingServiceExtensionFactory4.equals(
        (java.lang.Object) wildcardClass45);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory47 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean49 = queryLoggingServiceExtensionFactory47.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService50 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction51 = null;
    queryLoggingService50.rolcForKe(kernelTransaction51);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction53 = null;
    java.lang.Throwable throwable54 = null;
    queryLoggingService50.rolcForKe(kernelTransaction53, throwable54);
    boolean boolean56 = queryLoggingServiceExtensionFactory47.equals(
        (java.lang.Object) queryLoggingService50);
    boolean boolean57 = queryLoggingServiceExtensionFactory4.equals(
        (java.lang.Object) queryLoggingService50);
    boolean boolean58 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService50);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str3, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService6);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertEquals("'" + str34 + "' != '" + "query-logging" + "'", str34,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    org.junit.Assert.assertEquals(
        "'" + str42 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str42, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str43 + "' != '" + "query-logging" + "'", str43,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str44 + "' != '" + "query-logging" + "'", str44,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass45);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertNotNull(queryLoggingService50);
    org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
  }

  @Test
  public void test1870() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1870");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService5.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService5.strForEx(executingQuery15);
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery15);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService18 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService18.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService18.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService18.faleForExTh(executingQuery24, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService18.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService18.faleForExTh(executingQuery29, throwable30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService18.sucsForEx(executingQuery32);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService18.strForEx(executingQuery35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    java.lang.Throwable throwable38 = null;
    queryLoggingService18.faleForExTh(executingQuery37, throwable38);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    java.lang.Throwable throwable41 = null;
    queryLoggingService18.rolcForKe(kernelTransaction40, throwable41);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(queryLoggingService18);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
  }

  @Test
  public void test1871() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1871");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.faleForExTh(executingQuery11, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.strForEx(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.strForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18, "hi!");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1872() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1872");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.sucsForEx(executingQuery17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.comForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.strForEx(kernelTransaction21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.faleForExTh(executingQuery23, throwable24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1873() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1873");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.rolcForKe(kernelTransaction4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    queryLoggingService0.faleForExTh(executingQuery7, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.strForEx(executingQuery15);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1874() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1874");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.faleForExTh(executingQuery11, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.strForEx(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.strForEx(executingQuery19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1875() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1875");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory8 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean10 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) (-1L));
    boolean boolean11 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) boolean10);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService12 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService12.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService12.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService12.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService12.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService12.strForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) executingQuery22);
    boolean boolean25 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    java.lang.Class<?> wildcardClass26 = queryLoggingServiceExtensionFactory7.getClass();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(queryLoggingService12);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertNotNull(wildcardClass26);
  }

  @Test
  public void test1876() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1876");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService8.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService8.sucsForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery22);
    java.lang.String str25 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str26 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str27 = queryLoggingServiceExtensionFactory3.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService28 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService28.strForEx(executingQuery29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    java.lang.Throwable throwable32 = null;
    queryLoggingService28.faleForExTh(executingQuery31, throwable32);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction34 = null;
    queryLoggingService28.rolcForKe(kernelTransaction34);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery36 = null;
    queryLoggingService28.faleForExTh(executingQuery36, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction39 = null;
    queryLoggingService28.strForEx(kernelTransaction39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    java.lang.Throwable throwable42 = null;
    queryLoggingService28.faleForExTh(executingQuery41, throwable42);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery44 = null;
    queryLoggingService28.faleForExTh(executingQuery44, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    queryLoggingService28.strForEx(executingQuery47);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction49 = null;
    queryLoggingService28.strForEx(kernelTransaction49);
    boolean boolean51 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService28);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext52 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies53 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle54 = queryLoggingServiceExtensionFactory3.newInstance(
          extensionContext52, queryLoggingServiceDependencies53);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertEquals(
        "'" + str25 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str25, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "query-logging" + "'", str26,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "query-logging" + "'", str27,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService28);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
  }

  @Test
  public void test1877() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1877");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean9 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory10 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str11 = queryLoggingServiceExtensionFactory10.toString();
    boolean boolean12 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory10);
    boolean boolean13 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    java.lang.Object obj14 = null;
    boolean boolean15 = queryLoggingServiceExtensionFactory0.equals(obj14);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory16 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory17 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean19 = queryLoggingServiceExtensionFactory17.equals((java.lang.Object) (-1L));
    boolean boolean20 = queryLoggingServiceExtensionFactory16.equals((java.lang.Object) boolean19);
    boolean boolean22 = queryLoggingServiceExtensionFactory16.equals((java.lang.Object) 0L);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory23 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory24 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean26 = queryLoggingServiceExtensionFactory24.equals((java.lang.Object) (-1L));
    boolean boolean27 = queryLoggingServiceExtensionFactory23.equals((java.lang.Object) boolean26);
    java.lang.Object obj28 = new java.lang.Object();
    boolean boolean29 = queryLoggingServiceExtensionFactory23.equals(obj28);
    java.lang.String str30 = queryLoggingServiceExtensionFactory23.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService31 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService31.strForEx(executingQuery32);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    java.lang.Throwable throwable35 = null;
    queryLoggingService31.faleForExTh(executingQuery34, throwable35);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction37 = null;
    java.lang.Throwable throwable38 = null;
    queryLoggingService31.rolcForKe(kernelTransaction37, throwable38);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    queryLoggingService31.comForKe(kernelTransaction40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    queryLoggingService31.strForEx(executingQuery42);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    java.lang.Throwable throwable45 = null;
    queryLoggingService31.rolcForKe(kernelTransaction44, throwable45);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction47 = null;
    queryLoggingService31.comForKe(kernelTransaction47);
    boolean boolean49 = queryLoggingServiceExtensionFactory23.equals(
        (java.lang.Object) queryLoggingService31);
    boolean boolean50 = queryLoggingServiceExtensionFactory16.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory23);
    boolean boolean51 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory23);
    java.lang.String str52 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertEquals("'" + str30 + "' != '" + "query-logging" + "'", str30,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService31);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    org.junit.Assert.assertEquals(
        "'" + str52 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str52, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1878() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1878");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean9 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory10 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str11 = queryLoggingServiceExtensionFactory10.toString();
    boolean boolean12 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory10);
    boolean boolean13 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    java.lang.Object obj14 = null;
    boolean boolean15 = queryLoggingServiceExtensionFactory0.equals(obj14);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory16 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory17 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean19 = queryLoggingServiceExtensionFactory17.equals((java.lang.Object) (-1L));
    boolean boolean20 = queryLoggingServiceExtensionFactory16.equals((java.lang.Object) boolean19);
    boolean boolean22 = queryLoggingServiceExtensionFactory16.equals((java.lang.Object) 0L);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory23 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory24 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean26 = queryLoggingServiceExtensionFactory24.equals((java.lang.Object) (-1L));
    boolean boolean27 = queryLoggingServiceExtensionFactory23.equals((java.lang.Object) boolean26);
    java.lang.Object obj28 = new java.lang.Object();
    boolean boolean29 = queryLoggingServiceExtensionFactory23.equals(obj28);
    java.lang.String str30 = queryLoggingServiceExtensionFactory23.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService31 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService31.strForEx(executingQuery32);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    java.lang.Throwable throwable35 = null;
    queryLoggingService31.faleForExTh(executingQuery34, throwable35);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction37 = null;
    java.lang.Throwable throwable38 = null;
    queryLoggingService31.rolcForKe(kernelTransaction37, throwable38);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    queryLoggingService31.comForKe(kernelTransaction40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    queryLoggingService31.strForEx(executingQuery42);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    java.lang.Throwable throwable45 = null;
    queryLoggingService31.rolcForKe(kernelTransaction44, throwable45);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction47 = null;
    queryLoggingService31.comForKe(kernelTransaction47);
    boolean boolean49 = queryLoggingServiceExtensionFactory23.equals(
        (java.lang.Object) queryLoggingService31);
    boolean boolean50 = queryLoggingServiceExtensionFactory16.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory23);
    boolean boolean51 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory23);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService52 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction53 = null;
    java.lang.Throwable throwable54 = null;
    queryLoggingService52.rolcForKe(kernelTransaction53, throwable54);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction56 = null;
    queryLoggingService52.comForKe(kernelTransaction56);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery58 = null;
    queryLoggingService52.sucsForEx(executingQuery58);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction60 = null;
    java.lang.Throwable throwable61 = null;
    queryLoggingService52.rolcForKe(kernelTransaction60, throwable61);
    boolean boolean63 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService52);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext64 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies65 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle66 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext64, queryLoggingServiceDependencies65);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertEquals("'" + str30 + "' != '" + "query-logging" + "'", str30,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService31);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    org.junit.Assert.assertNotNull(queryLoggingService52);
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
  }

  @Test
  public void test1879() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1879");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.comForKe(kernelTransaction11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.strForEx(executingQuery16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.sucsForEx(executingQuery21);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1880() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1880");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj9 = new java.lang.Object();
    java.lang.Class<?> wildcardClass10 = obj9.getClass();
    boolean boolean11 = queryLoggingServiceExtensionFactory0.equals(obj9);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService12 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService12.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService12.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService12.comForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService12.faleForExTh(executingQuery20, "query-logging");
    java.lang.Class<?> wildcardClass23 = queryLoggingService12.getClass();
    boolean boolean24 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) wildcardClass23);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(queryLoggingService12);
    org.junit.Assert.assertNotNull(wildcardClass23);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
  }

  @Test
  public void test1881() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1881");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.faleForExTh(executingQuery13, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16, throwable17);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1882() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1882");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Class<?> wildcardClass10 = queryLoggingServiceExtensionFactory0.getClass();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass10);
  }

  @Test
  public void test1883() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1883");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService5.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService5.strForEx(executingQuery15);
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery15);
    java.lang.String str18 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str19 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str20 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str21 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str22 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertEquals(
        "'" + str18 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str18, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str19 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str19, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str20 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str20, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str21 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str21, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str22 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str22, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1884() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1884");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.faleForExTh(executingQuery19,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService0.faleForExTh(executingQuery22, throwable23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService0.rolcForKe(kernelTransaction25, throwable26);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1885() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1885");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.strForEx(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.faleForExTh(executingQuery20, throwable21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService0.strForEx(executingQuery25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService0.strForEx(executingQuery27);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1886() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1886");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str2 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService3 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService3.faleForExTh(executingQuery4,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    queryLoggingService3.faleForExTh(executingQuery7,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService3.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService3.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService3.faleForExTh(executingQuery14,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory18 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean20 = queryLoggingServiceExtensionFactory18.equals((java.lang.Object) (short) 1);
    java.lang.String str21 = queryLoggingServiceExtensionFactory18.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService22 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService22.strForEx(executingQuery23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService22.faleForExTh(executingQuery25, throwable26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService22.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService22.comForKe(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService22.strForEx(executingQuery33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService22.strForEx(executingQuery35);
    boolean boolean37 = queryLoggingServiceExtensionFactory18.equals(
        (java.lang.Object) executingQuery35);
    java.lang.Class<?> wildcardClass38 = queryLoggingServiceExtensionFactory18.getClass();
    boolean boolean39 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) wildcardClass38);
    java.lang.String str40 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService41 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction42 = null;
    queryLoggingService41.rolcForKe(kernelTransaction42);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    java.lang.Throwable throwable45 = null;
    queryLoggingService41.rolcForKe(kernelTransaction44, throwable45);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction47 = null;
    queryLoggingService41.rolcForKe(kernelTransaction47);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery49 = null;
    queryLoggingService41.sucsForEx(executingQuery49);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction51 = null;
    queryLoggingService41.strForEx(kernelTransaction51);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery53 = null;
    queryLoggingService41.faleForExTh(executingQuery53,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery56 = null;
    queryLoggingService41.faleForExTh(executingQuery56, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction59 = null;
    queryLoggingService41.rolcForKe(kernelTransaction59);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction61 = null;
    queryLoggingService41.rolcForKe(kernelTransaction61);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction63 = null;
    java.lang.Throwable throwable64 = null;
    queryLoggingService41.rolcForKe(kernelTransaction63, throwable64);
    boolean boolean66 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction63);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService67 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery68 = null;
    queryLoggingService67.strForEx(executingQuery68);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery70 = null;
    java.lang.Throwable throwable71 = null;
    queryLoggingService67.faleForExTh(executingQuery70, throwable71);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction73 = null;
    java.lang.Throwable throwable74 = null;
    queryLoggingService67.rolcForKe(kernelTransaction73, throwable74);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery76 = null;
    queryLoggingService67.faleForExTh(executingQuery76, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery79 = null;
    queryLoggingService67.faleForExTh(executingQuery79, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction82 = null;
    java.lang.Throwable throwable83 = null;
    queryLoggingService67.rolcForKe(kernelTransaction82, throwable83);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction85 = null;
    queryLoggingService67.strForEx(kernelTransaction85);
    boolean boolean87 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction85);
    java.lang.String str88 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str89 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str2, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService3);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertEquals("'" + str21 + "' != '" + "query-logging" + "'", str21,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService22);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertNotNull(wildcardClass38);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertEquals(
        "'" + str40 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str40, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService41);
    org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    org.junit.Assert.assertNotNull(queryLoggingService67);
    org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    org.junit.Assert.assertEquals(
        "'" + str88 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str88, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str89 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str89, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1887() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1887");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.comForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService0.faleForExTh(executingQuery21, throwable22);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1888() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1888");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.strForEx(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.faleForExTh(executingQuery13,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.comForKe(kernelTransaction22);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1889() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1889");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.comForKe(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService0.faleForExTh(executingQuery25,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService0.comForKe(kernelTransaction28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryLoggingService0.strForEx(executingQuery30);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction32 = null;
    queryLoggingService0.rolcForKe(kernelTransaction32);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1890() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1890");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17, throwable18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.comForKe(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.strForEx(kernelTransaction22);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1891() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1891");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.strForEx(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.faleForExTh(executingQuery16, throwable17);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1892() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1892");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.comForKe(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.sucsForEx(executingQuery17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.comForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction21);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1893() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1893");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.sucsForEx(executingQuery19);
    java.lang.Class<?> wildcardClass21 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass21);
  }

  @Test
  public void test1894() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1894");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.strForEx(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.faleForExTh(executingQuery13,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.strForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1895() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1895");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl7 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction8 = null;
    org.neo4j.configuration.Config config10 = null;
    java.nio.file.Path path11 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl7.init(fileSystemAbstraction8,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config10, path11);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction13 = null;
    org.neo4j.configuration.Config config15 = null;
    java.nio.file.Path path16 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl7.init(fileSystemAbstraction13,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config15, path16);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.configuration.Config config20 = null;
    java.nio.file.Path path21 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl7.init(fileSystemAbstraction18, "", config20,
        path21);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction23 = null;
    org.neo4j.configuration.Config config25 = null;
    java.nio.file.Path path26 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl7.init(fileSystemAbstraction23, "hi!", config25,
        path26);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction28 = null;
    org.neo4j.configuration.Config config30 = null;
    java.nio.file.Path path31 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl7.init(fileSystemAbstraction28, "hi!", config30,
        path31);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction33 = null;
    org.neo4j.configuration.Config config35 = null;
    java.nio.file.Path path36 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl7.init(fileSystemAbstraction33, "query-logging",
        config35, path36);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction38 = null;
    org.neo4j.configuration.Config config40 = null;
    java.nio.file.Path path41 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl7.init(fileSystemAbstraction38, "hi!", config40,
        path41);
    boolean boolean43 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) config40);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
  }

  @Test
  public void test1896() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1896");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.strForEx(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.faleForExTh(executingQuery20, throwable21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService0.strForEx(kernelTransaction25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    java.lang.Throwable throwable28 = null;
    queryLoggingService0.rolcForKe(kernelTransaction27, throwable28);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1897() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1897");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
  }

  @Test
  public void test1898() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1898");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory3.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService7 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService7.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService7.faleForExTh(executingQuery10, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService7.faleForExTh(executingQuery13, throwable14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService7.faleForExTh(executingQuery16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService7.strForEx(kernelTransaction19);
    java.lang.Class<?> wildcardClass21 = queryLoggingService7.getClass();
    boolean boolean22 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService7);
    java.lang.String str23 = queryLoggingServiceExtensionFactory3.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService24 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService24.rolcForKe(kernelTransaction25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService24.faleForExTh(executingQuery27, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    java.lang.Throwable throwable31 = null;
    queryLoggingService24.faleForExTh(executingQuery30, throwable31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    java.lang.Throwable throwable34 = null;
    queryLoggingService24.faleForExTh(executingQuery33, throwable34);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    queryLoggingService24.strForEx(kernelTransaction36);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction38 = null;
    queryLoggingService24.strForEx(kernelTransaction38);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    queryLoggingService24.strForEx(kernelTransaction40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    queryLoggingService24.strForEx(executingQuery42);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    java.lang.Throwable throwable45 = null;
    queryLoggingService24.rolcForKe(kernelTransaction44, throwable45);
    boolean boolean47 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) kernelTransaction44);
    java.lang.String str48 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str49 = queryLoggingServiceExtensionFactory3.toString();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str6, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService7);
    org.junit.Assert.assertNotNull(wildcardClass21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "query-logging" + "'", str23,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService24);
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    org.junit.Assert.assertEquals("'" + str48 + "' != '" + "query-logging" + "'", str48,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str49 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str49, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1899() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1899");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory8 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean10 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) (-1L));
    boolean boolean11 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) boolean10);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService12 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService12.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService12.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService12.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService12.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService12.strForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) executingQuery22);
    boolean boolean25 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    java.lang.String str26 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str27 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.Class<?> wildcardClass28 = queryLoggingServiceExtensionFactory0.getClass();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(queryLoggingService12);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "query-logging" + "'", str26,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str27 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str27, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(wildcardClass28);
  }

  @Test
  public void test1900() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1900");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    boolean boolean10 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 100);
    java.lang.String str11 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str12 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str13 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str14 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str15 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str16 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "query-logging" + "'", str11,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str12 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str12, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str13 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str13, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str14 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str14, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str15 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str15, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "query-logging" + "'", str16,
        "query-logging");
  }

  @Test
  public void test1901() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1901");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService0.faleForExTh(executingQuery14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.strForEx(executingQuery17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.faleForExTh(executingQuery19, throwable20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService0.faleForExTh(executingQuery22, throwable23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService0.strForEx(kernelTransaction25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    java.lang.Throwable throwable28 = null;
    queryLoggingService0.rolcForKe(kernelTransaction27, throwable28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryLoggingService0.sucsForEx(executingQuery30);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction32 = null;
    queryLoggingService0.rolcForKe(kernelTransaction32);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1902() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1902");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj9 = new java.lang.Object();
    java.lang.Class<?> wildcardClass10 = obj9.getClass();
    boolean boolean11 = queryLoggingServiceExtensionFactory0.equals(obj9);
    java.lang.String str12 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj13 = null;
    boolean boolean14 = queryLoggingServiceExtensionFactory0.equals(obj13);
    java.lang.String str15 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory16 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean18 = queryLoggingServiceExtensionFactory16.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService19 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService19.rolcForKe(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService19.rolcForKe(kernelTransaction22, throwable23);
    boolean boolean25 = queryLoggingServiceExtensionFactory16.equals(
        (java.lang.Object) queryLoggingService19);
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory16);
    java.lang.String str27 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory28 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean30 = queryLoggingServiceExtensionFactory28.equals((java.lang.Object) (-1L));
    java.lang.String str31 = queryLoggingServiceExtensionFactory28.toString();
    boolean boolean32 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) str31);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory33 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory34 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean36 = queryLoggingServiceExtensionFactory34.equals((java.lang.Object) (-1L));
    boolean boolean37 = queryLoggingServiceExtensionFactory33.equals((java.lang.Object) boolean36);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService38 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction39 = null;
    queryLoggingService38.rolcForKe(kernelTransaction39);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction41 = null;
    java.lang.Throwable throwable42 = null;
    queryLoggingService38.rolcForKe(kernelTransaction41, throwable42);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    queryLoggingService38.rolcForKe(kernelTransaction44);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery46 = null;
    queryLoggingService38.sucsForEx(executingQuery46);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction48 = null;
    queryLoggingService38.strForEx(kernelTransaction48);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery50 = null;
    queryLoggingService38.faleForExTh(executingQuery50,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    boolean boolean53 = queryLoggingServiceExtensionFactory33.equals(
        (java.lang.Object) "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService54 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    queryLoggingService54.rolcForKe(kernelTransaction55);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction57 = null;
    java.lang.Throwable throwable58 = null;
    queryLoggingService54.rolcForKe(kernelTransaction57, throwable58);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction60 = null;
    queryLoggingService54.rolcForKe(kernelTransaction60);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery62 = null;
    queryLoggingService54.sucsForEx(executingQuery62);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction64 = null;
    queryLoggingService54.strForEx(kernelTransaction64);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery66 = null;
    queryLoggingService54.faleForExTh(executingQuery66,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction69 = null;
    java.lang.Throwable throwable70 = null;
    queryLoggingService54.rolcForKe(kernelTransaction69, throwable70);
    boolean boolean72 = queryLoggingServiceExtensionFactory33.equals(
        (java.lang.Object) queryLoggingService54);
    boolean boolean73 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory33);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService74 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction75 = null;
    java.lang.Throwable throwable76 = null;
    queryLoggingService74.rolcForKe(kernelTransaction75, throwable76);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery78 = null;
    java.lang.Throwable throwable79 = null;
    queryLoggingService74.faleForExTh(executingQuery78, throwable79);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery81 = null;
    java.lang.Throwable throwable82 = null;
    queryLoggingService74.faleForExTh(executingQuery81, throwable82);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction84 = null;
    queryLoggingService74.strForEx(kernelTransaction84);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction86 = null;
    queryLoggingService74.strForEx(kernelTransaction86);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery88 = null;
    queryLoggingService74.faleForExTh(executingQuery88, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction91 = null;
    queryLoggingService74.comForKe(kernelTransaction91);
    boolean boolean93 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService74);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "query-logging" + "'", str12,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertEquals(
        "'" + str15 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str15, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    org.junit.Assert.assertNotNull(queryLoggingService19);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "query-logging" + "'", str27,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    org.junit.Assert.assertEquals(
        "'" + str31 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str31, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertNotNull(queryLoggingService38);
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    org.junit.Assert.assertNotNull(queryLoggingService54);
    org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    org.junit.Assert.assertNotNull(queryLoggingService74);
    org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
  }

  @Test
  public void test1903() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1903");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.comForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.strForEx(kernelTransaction11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.strForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.sucsForEx(executingQuery17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.sucsForEx(executingQuery19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1904() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1904");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService2 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService2.rolcForKe(kernelTransaction3, throwable4);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable4);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory11 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean13 = queryLoggingServiceExtensionFactory11.equals((java.lang.Object) (short) 1);
    java.lang.String str14 = queryLoggingServiceExtensionFactory11.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService15 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService15.strForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService15.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService15.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService15.comForKe(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService15.strForEx(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService15.strForEx(executingQuery28);
    boolean boolean30 = queryLoggingServiceExtensionFactory11.equals(
        (java.lang.Object) executingQuery28);
    java.lang.String str31 = queryLoggingServiceExtensionFactory11.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService32 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    queryLoggingService32.rolcForKe(kernelTransaction33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService32.faleForExTh(executingQuery35, "");
    java.lang.Class<?> wildcardClass38 = queryLoggingService32.getClass();
    boolean boolean39 = queryLoggingServiceExtensionFactory11.equals(
        (java.lang.Object) queryLoggingService32);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory40 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory41 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean43 = queryLoggingServiceExtensionFactory41.equals((java.lang.Object) (-1L));
    boolean boolean44 = queryLoggingServiceExtensionFactory40.equals((java.lang.Object) boolean43);
    java.lang.String str45 = queryLoggingServiceExtensionFactory40.toString();
    java.lang.String str46 = queryLoggingServiceExtensionFactory40.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory47 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean49 = queryLoggingServiceExtensionFactory47.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory50 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str51 = queryLoggingServiceExtensionFactory50.toString();
    boolean boolean52 = queryLoggingServiceExtensionFactory47.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory50);
    boolean boolean53 = queryLoggingServiceExtensionFactory40.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory47);
    java.lang.String str54 = queryLoggingServiceExtensionFactory40.getName();
    boolean boolean55 = queryLoggingServiceExtensionFactory11.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory40);
    boolean boolean56 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory11);
    java.lang.String str57 = queryLoggingServiceExtensionFactory11.getName();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService2);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str10, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "query-logging" + "'", str14,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService15);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    org.junit.Assert.assertEquals("'" + str31 + "' != '" + "query-logging" + "'", str31,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService32);
    org.junit.Assert.assertNotNull(wildcardClass38);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    org.junit.Assert.assertEquals(
        "'" + str45 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str45, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str46 + "' != '" + "query-logging" + "'", str46,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertEquals(
        "'" + str51 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str51, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    org.junit.Assert.assertEquals("'" + str54 + "' != '" + "query-logging" + "'", str54,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    org.junit.Assert.assertEquals("'" + str57 + "' != '" + "query-logging" + "'", str57,
        "query-logging");
  }

  @Test
  public void test1905() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1905");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str7 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory9 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory10 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean12 = queryLoggingServiceExtensionFactory10.equals((java.lang.Object) (-1L));
    boolean boolean13 = queryLoggingServiceExtensionFactory9.equals((java.lang.Object) boolean12);
    boolean boolean15 = queryLoggingServiceExtensionFactory9.equals((java.lang.Object) 0L);
    java.lang.String str16 = queryLoggingServiceExtensionFactory9.toString();
    java.lang.String str17 = queryLoggingServiceExtensionFactory9.toString();
    java.lang.String str18 = queryLoggingServiceExtensionFactory9.toString();
    boolean boolean19 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory9);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str6, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertEquals(
        "'" + str16 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str16, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str17 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str17, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str18 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str18, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
  }

  @Test
  public void test1906() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1906");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config3, path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config18, path19);
  }

  @Test
  public void test1907() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1907");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config3, path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6, "query-logging",
        config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "hi!", config13,
        path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "hi!", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "", config23,
        path24);
  }

  @Test
  public void test1908() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1908");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService8.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService8.sucsForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery22);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService25 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService25.strForEx(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService25.faleForExTh(executingQuery28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService25.rolcForKe(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService25.sucsForEx(executingQuery33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService25.strForEx(executingQuery35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService25.sucsForEx(executingQuery37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService25.sucsForEx(executingQuery39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    queryLoggingService25.sucsForEx(executingQuery41);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService25.strForEx(executingQuery43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    java.lang.Throwable throwable46 = null;
    queryLoggingService25.rolcForKe(kernelTransaction45, throwable46);
    boolean boolean48 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction49 = null;
    queryLoggingService25.comForKe(kernelTransaction49);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction51 = null;
    queryLoggingService25.comForKe(kernelTransaction51);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction53 = null;
    queryLoggingService25.strForEx(kernelTransaction53);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery55 = null;
    queryLoggingService25.sucsForEx(executingQuery55);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction57 = null;
    queryLoggingService25.strForEx(kernelTransaction57);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(queryLoggingService25);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
  }

  @Test
  public void test1909() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1909");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22, throwable23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService0.strForEx(executingQuery25);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1910() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1910");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 1);
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService4 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    queryLoggingService4.strForEx(executingQuery5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService4.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService4.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService4.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService4.strForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService4.strForEx(executingQuery17);
    boolean boolean19 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery17);
    java.lang.String str20 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService21 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService21.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService21.faleForExTh(executingQuery24, "");
    java.lang.Class<?> wildcardClass27 = queryLoggingService21.getClass();
    boolean boolean28 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService21);
    java.lang.String str29 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService30 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    java.lang.Throwable throwable32 = null;
    queryLoggingService30.rolcForKe(kernelTransaction31, throwable32);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    queryLoggingService30.sucsForEx(executingQuery34);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery36 = null;
    queryLoggingService30.strForEx(executingQuery36);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery38 = null;
    queryLoggingService30.faleForExTh(executingQuery38, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction41 = null;
    java.lang.Throwable throwable42 = null;
    queryLoggingService30.rolcForKe(kernelTransaction41, throwable42);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery44 = null;
    queryLoggingService30.sucsForEx(executingQuery44);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction46 = null;
    queryLoggingService30.rolcForKe(kernelTransaction46);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction48 = null;
    java.lang.Throwable throwable49 = null;
    queryLoggingService30.rolcForKe(kernelTransaction48, throwable49);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction51 = null;
    queryLoggingService30.comForKe(kernelTransaction51);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery53 = null;
    queryLoggingService30.sucsForEx(executingQuery53);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery55 = null;
    queryLoggingService30.strForEx(executingQuery55);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery57 = null;
    java.lang.Throwable throwable58 = null;
    queryLoggingService30.faleForExTh(executingQuery57, throwable58);
    boolean boolean60 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery57);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext61 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies62 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle63 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext61, queryLoggingServiceDependencies62);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "query-logging" + "'", str3,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService4);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "query-logging" + "'", str20,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService21);
    org.junit.Assert.assertNotNull(wildcardClass27);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertEquals(
        "'" + str29 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str29, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService30);
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
  }

  @Test
  public void test1911() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1911");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18, "query-logging");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.strForEx(executingQuery21);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1912() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1912");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory3.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService7 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService7.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService7.faleForExTh(executingQuery10, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService7.faleForExTh(executingQuery13, throwable14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService7.faleForExTh(executingQuery16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService7.strForEx(kernelTransaction19);
    java.lang.Class<?> wildcardClass21 = queryLoggingService7.getClass();
    boolean boolean22 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService7);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory23 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean25 = queryLoggingServiceExtensionFactory23.equals((java.lang.Object) (short) 1);
    java.lang.String str26 = queryLoggingServiceExtensionFactory23.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService27 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService27.strForEx(executingQuery28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    java.lang.Throwable throwable31 = null;
    queryLoggingService27.faleForExTh(executingQuery30, throwable31);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    java.lang.Throwable throwable34 = null;
    queryLoggingService27.rolcForKe(kernelTransaction33, throwable34);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    queryLoggingService27.comForKe(kernelTransaction36);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery38 = null;
    queryLoggingService27.strForEx(executingQuery38);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery40 = null;
    queryLoggingService27.strForEx(executingQuery40);
    boolean boolean42 = queryLoggingServiceExtensionFactory23.equals(
        (java.lang.Object) executingQuery40);
    java.lang.String str43 = queryLoggingServiceExtensionFactory23.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService44 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    queryLoggingService44.rolcForKe(kernelTransaction45);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    queryLoggingService44.faleForExTh(executingQuery47, "");
    java.lang.Class<?> wildcardClass50 = queryLoggingService44.getClass();
    boolean boolean51 = queryLoggingServiceExtensionFactory23.equals(
        (java.lang.Object) queryLoggingService44);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory52 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory53 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean55 = queryLoggingServiceExtensionFactory53.equals((java.lang.Object) (-1L));
    boolean boolean56 = queryLoggingServiceExtensionFactory52.equals((java.lang.Object) boolean55);
    java.lang.String str57 = queryLoggingServiceExtensionFactory52.toString();
    java.lang.String str58 = queryLoggingServiceExtensionFactory52.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory59 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean61 = queryLoggingServiceExtensionFactory59.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory62 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str63 = queryLoggingServiceExtensionFactory62.toString();
    boolean boolean64 = queryLoggingServiceExtensionFactory59.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory62);
    boolean boolean65 = queryLoggingServiceExtensionFactory52.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory59);
    java.lang.String str66 = queryLoggingServiceExtensionFactory52.getName();
    boolean boolean67 = queryLoggingServiceExtensionFactory23.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory52);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory68 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean70 = queryLoggingServiceExtensionFactory68.equals((java.lang.Object) (short) 1);
    boolean boolean71 = queryLoggingServiceExtensionFactory23.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory68);
    java.lang.String str72 = queryLoggingServiceExtensionFactory68.toString();
    boolean boolean73 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) str72);
    java.lang.String str74 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str75 = queryLoggingServiceExtensionFactory3.getName();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str6, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService7);
    org.junit.Assert.assertNotNull(wildcardClass21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "query-logging" + "'", str26,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService27);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertEquals("'" + str43 + "' != '" + "query-logging" + "'", str43,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService44);
    org.junit.Assert.assertNotNull(wildcardClass50);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    org.junit.Assert.assertEquals(
        "'" + str57 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str57, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str58 + "' != '" + "query-logging" + "'", str58,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    org.junit.Assert.assertEquals(
        "'" + str63 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str63, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    org.junit.Assert.assertEquals("'" + str66 + "' != '" + "query-logging" + "'", str66,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    org.junit.Assert.assertEquals(
        "'" + str72 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str72, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    org.junit.Assert.assertEquals(
        "'" + str74 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str74, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str75 + "' != '" + "query-logging" + "'", str75,
        "query-logging");
  }

  @Test
  public void test1913() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1913");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.sucsForEx(executingQuery11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.sucsForEx(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.sucsForEx(executingQuery21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService0.rolcForKe(kernelTransaction25, throwable26);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1914() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1914");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.Object obj5 = new java.lang.Object();
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals(obj5);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService8.comForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService8.strForEx(executingQuery19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService8.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService8.comForKe(kernelTransaction24);
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService8.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService8.faleForExTh(executingQuery29, throwable30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService8.faleForExTh(executingQuery32, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService8.sucsForEx(executingQuery35);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction37 = null;
    java.lang.Throwable throwable38 = null;
    queryLoggingService8.rolcForKe(kernelTransaction37, throwable38);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
  }

  @Test
  public void test1915() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1915");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.rolcForKe(kernelTransaction4, throwable5);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.strForEx(executingQuery12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.strForEx(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.faleForExTh(executingQuery16, throwable17);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1916() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1916");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.faleForExTh(executingQuery16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.strForEx(executingQuery21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.faleForExTh(executingQuery23, throwable24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1917() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1917");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config3, path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "query-logging",
        config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "query-logging",
        config23, path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config28, path29);
  }

  @Test
  public void test1918() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1918");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.comForKe(kernelTransaction12);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1919() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1919");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "hi!", config13,
        path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "hi!", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config23, path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "hi!", config28,
        path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31, "", config33,
        path34);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction36 = null;
    org.neo4j.configuration.Config config38 = null;
    java.nio.file.Path path39 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction36, "", config38,
        path39);
  }

  @Test
  public void test1920() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1920");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.strForEx(executingQuery22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService0.faleForExTh(executingQuery24, "query-logging");
    java.lang.Class<?> wildcardClass27 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass27);
  }

  @Test
  public void test1921() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1921");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj9 = new java.lang.Object();
    java.lang.Class<?> wildcardClass10 = obj9.getClass();
    boolean boolean11 = queryLoggingServiceExtensionFactory0.equals(obj9);
    java.lang.String str12 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj13 = null;
    boolean boolean14 = queryLoggingServiceExtensionFactory0.equals(obj13);
    java.lang.String str15 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory16 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean18 = queryLoggingServiceExtensionFactory16.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService19 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService19.rolcForKe(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService19.rolcForKe(kernelTransaction22, throwable23);
    boolean boolean25 = queryLoggingServiceExtensionFactory16.equals(
        (java.lang.Object) queryLoggingService19);
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory16);
    java.lang.String str27 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory28 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean30 = queryLoggingServiceExtensionFactory28.equals((java.lang.Object) (-1L));
    java.lang.String str31 = queryLoggingServiceExtensionFactory28.toString();
    boolean boolean32 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) str31);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory33 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory34 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean36 = queryLoggingServiceExtensionFactory34.equals((java.lang.Object) (-1L));
    boolean boolean37 = queryLoggingServiceExtensionFactory33.equals((java.lang.Object) boolean36);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService38 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction39 = null;
    queryLoggingService38.rolcForKe(kernelTransaction39);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction41 = null;
    java.lang.Throwable throwable42 = null;
    queryLoggingService38.rolcForKe(kernelTransaction41, throwable42);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    queryLoggingService38.rolcForKe(kernelTransaction44);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery46 = null;
    queryLoggingService38.sucsForEx(executingQuery46);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction48 = null;
    queryLoggingService38.strForEx(kernelTransaction48);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery50 = null;
    queryLoggingService38.faleForExTh(executingQuery50,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    boolean boolean53 = queryLoggingServiceExtensionFactory33.equals(
        (java.lang.Object) "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService54 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    queryLoggingService54.rolcForKe(kernelTransaction55);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction57 = null;
    java.lang.Throwable throwable58 = null;
    queryLoggingService54.rolcForKe(kernelTransaction57, throwable58);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction60 = null;
    queryLoggingService54.rolcForKe(kernelTransaction60);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery62 = null;
    queryLoggingService54.sucsForEx(executingQuery62);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction64 = null;
    queryLoggingService54.strForEx(kernelTransaction64);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery66 = null;
    queryLoggingService54.faleForExTh(executingQuery66,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction69 = null;
    java.lang.Throwable throwable70 = null;
    queryLoggingService54.rolcForKe(kernelTransaction69, throwable70);
    boolean boolean72 = queryLoggingServiceExtensionFactory33.equals(
        (java.lang.Object) queryLoggingService54);
    boolean boolean73 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory33);
    java.lang.String str74 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str75 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "query-logging" + "'", str12,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertEquals(
        "'" + str15 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str15, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    org.junit.Assert.assertNotNull(queryLoggingService19);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "query-logging" + "'", str27,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    org.junit.Assert.assertEquals(
        "'" + str31 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str31, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertNotNull(queryLoggingService38);
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    org.junit.Assert.assertNotNull(queryLoggingService54);
    org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    org.junit.Assert.assertEquals("'" + str74 + "' != '" + "query-logging" + "'", str74,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str75 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str75, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1922() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1922");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory8 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean10 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) (-1L));
    boolean boolean11 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) boolean10);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService12 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService12.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService12.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService12.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService12.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService12.strForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) executingQuery22);
    boolean boolean25 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    java.lang.String str26 = queryLoggingServiceExtensionFactory7.getName();
    java.lang.String str27 = queryLoggingServiceExtensionFactory7.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService28 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    queryLoggingService28.rolcForKe(kernelTransaction29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService28.strForEx(kernelTransaction31);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    queryLoggingService28.strForEx(kernelTransaction33);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction35 = null;
    java.lang.Throwable throwable36 = null;
    queryLoggingService28.rolcForKe(kernelTransaction35, throwable36);
    boolean boolean38 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingService28);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext39 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies40 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle41 = queryLoggingServiceExtensionFactory7.newInstance(
          extensionContext39, queryLoggingServiceDependencies40);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(queryLoggingService12);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "query-logging" + "'", str26,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "query-logging" + "'", str27,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService28);
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
  }

  @Test
  public void test1923() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1923");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.Object obj5 = new java.lang.Object();
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals(obj5);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService8.comForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService8.strForEx(executingQuery19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService8.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService8.comForKe(kernelTransaction24);
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService8.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService8.faleForExTh(executingQuery29, throwable30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService8.faleForExTh(executingQuery32, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService8.sucsForEx(executingQuery35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService8.faleForExTh(executingQuery37,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    queryLoggingService8.strForEx(kernelTransaction40);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction42 = null;
    queryLoggingService8.rolcForKe(kernelTransaction42);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    java.lang.Throwable throwable45 = null;
    queryLoggingService8.rolcForKe(kernelTransaction44, throwable45);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
  }

  @Test
  public void test1924() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1924");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.strForEx(kernelTransaction21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.faleForExTh(executingQuery23,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService0.sucsForEx(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService0.faleForExTh(executingQuery28, "");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1925() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1925");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.sucsForEx(executingQuery11);
    java.lang.Class<?> wildcardClass13 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass13);
  }

  @Test
  public void test1926() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1926");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService8.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService8.sucsForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery22);
    java.lang.String str25 = queryLoggingServiceExtensionFactory3.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService26 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService26.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService26.faleForExTh(executingQuery29, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    java.lang.Throwable throwable33 = null;
    queryLoggingService26.faleForExTh(executingQuery32, throwable33);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction35 = null;
    queryLoggingService26.strForEx(kernelTransaction35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService26.strForEx(executingQuery37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService26.sucsForEx(executingQuery39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    queryLoggingService26.sucsForEx(executingQuery41);
    boolean boolean43 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery41);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory44 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean46 = queryLoggingServiceExtensionFactory44.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory47 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str48 = queryLoggingServiceExtensionFactory47.toString();
    boolean boolean49 = queryLoggingServiceExtensionFactory44.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory47);
    boolean boolean51 = queryLoggingServiceExtensionFactory47.equals((java.lang.Object) 100.0d);
    java.lang.String str52 = queryLoggingServiceExtensionFactory47.toString();
    java.lang.String str53 = queryLoggingServiceExtensionFactory47.getName();
    java.lang.Object obj54 = null;
    boolean boolean55 = queryLoggingServiceExtensionFactory47.equals(obj54);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService56 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction57 = null;
    java.lang.Throwable throwable58 = null;
    queryLoggingService56.rolcForKe(kernelTransaction57, throwable58);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction60 = null;
    queryLoggingService56.comForKe(kernelTransaction60);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery62 = null;
    queryLoggingService56.sucsForEx(executingQuery62);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction64 = null;
    queryLoggingService56.comForKe(kernelTransaction64);
    boolean boolean66 = queryLoggingServiceExtensionFactory47.equals(
        (java.lang.Object) queryLoggingService56);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory67 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory68 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean70 = queryLoggingServiceExtensionFactory68.equals((java.lang.Object) (-1L));
    boolean boolean71 = queryLoggingServiceExtensionFactory67.equals((java.lang.Object) boolean70);
    boolean boolean73 = queryLoggingServiceExtensionFactory67.equals((java.lang.Object) 0L);
    java.lang.String str74 = queryLoggingServiceExtensionFactory67.toString();
    java.lang.String str75 = queryLoggingServiceExtensionFactory67.getName();
    java.lang.String str76 = queryLoggingServiceExtensionFactory67.getName();
    java.lang.Class<?> wildcardClass77 = queryLoggingServiceExtensionFactory67.getClass();
    boolean boolean78 = queryLoggingServiceExtensionFactory47.equals(
        (java.lang.Object) wildcardClass77);
    boolean boolean79 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory47);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext80 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies81 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle82 = queryLoggingServiceExtensionFactory47.newInstance(
          extensionContext80, queryLoggingServiceDependencies81);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertEquals(
        "'" + str25 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str25, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService26);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    org.junit.Assert.assertEquals(
        "'" + str48 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str48, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    org.junit.Assert.assertEquals(
        "'" + str52 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str52, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str53 + "' != '" + "query-logging" + "'", str53,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    org.junit.Assert.assertNotNull(queryLoggingService56);
    org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    org.junit.Assert.assertEquals(
        "'" + str74 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str74, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str75 + "' != '" + "query-logging" + "'", str75,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str76 + "' != '" + "query-logging" + "'", str76,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass77);
    org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
  }

  @Test
  public void test1927() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1927");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.sucsForEx(executingQuery17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService0.strForEx(executingQuery24);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    queryLoggingService0.comForKe(kernelTransaction26);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1928() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1928");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean9 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory10 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str11 = queryLoggingServiceExtensionFactory10.toString();
    boolean boolean12 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory10);
    boolean boolean13 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    java.lang.Object obj14 = null;
    boolean boolean15 = queryLoggingServiceExtensionFactory0.equals(obj14);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory16 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory17 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean19 = queryLoggingServiceExtensionFactory17.equals((java.lang.Object) (-1L));
    boolean boolean20 = queryLoggingServiceExtensionFactory16.equals((java.lang.Object) boolean19);
    boolean boolean22 = queryLoggingServiceExtensionFactory16.equals((java.lang.Object) 0L);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory23 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory24 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean26 = queryLoggingServiceExtensionFactory24.equals((java.lang.Object) (-1L));
    boolean boolean27 = queryLoggingServiceExtensionFactory23.equals((java.lang.Object) boolean26);
    java.lang.Object obj28 = new java.lang.Object();
    boolean boolean29 = queryLoggingServiceExtensionFactory23.equals(obj28);
    java.lang.String str30 = queryLoggingServiceExtensionFactory23.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService31 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService31.strForEx(executingQuery32);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    java.lang.Throwable throwable35 = null;
    queryLoggingService31.faleForExTh(executingQuery34, throwable35);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction37 = null;
    java.lang.Throwable throwable38 = null;
    queryLoggingService31.rolcForKe(kernelTransaction37, throwable38);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    queryLoggingService31.comForKe(kernelTransaction40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    queryLoggingService31.strForEx(executingQuery42);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    java.lang.Throwable throwable45 = null;
    queryLoggingService31.rolcForKe(kernelTransaction44, throwable45);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction47 = null;
    queryLoggingService31.comForKe(kernelTransaction47);
    boolean boolean49 = queryLoggingServiceExtensionFactory23.equals(
        (java.lang.Object) queryLoggingService31);
    boolean boolean50 = queryLoggingServiceExtensionFactory16.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory23);
    boolean boolean51 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory23);
    java.lang.String str52 = queryLoggingServiceExtensionFactory23.toString();
    java.lang.String str53 = queryLoggingServiceExtensionFactory23.toString();
    java.lang.String str54 = queryLoggingServiceExtensionFactory23.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext55 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies56 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle57 = queryLoggingServiceExtensionFactory23.newInstance(
          extensionContext55, queryLoggingServiceDependencies56);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertEquals("'" + str30 + "' != '" + "query-logging" + "'", str30,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService31);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    org.junit.Assert.assertEquals(
        "'" + str52 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str52, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str53 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str53, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str54 + "' != '" + "query-logging" + "'", str54,
        "query-logging");
  }

  @Test
  public void test1929() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1929");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService6 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    queryLoggingService6.strForEx(executingQuery7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService6.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService6.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService6.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService6.strForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService6.strForEx(kernelTransaction20);
    boolean boolean22 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService6.sucsForEx(executingQuery23);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService6);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
  }

  @Test
  public void test1930() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1930");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20, throwable21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.comForKe(kernelTransaction23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService0.comForKe(kernelTransaction25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService0.strForEx(executingQuery27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService0.sucsForEx(executingQuery29);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1931() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1931");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.strForEx(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.strForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.strForEx(kernelTransaction21);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1932() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1932");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.sucsForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.comForKe(kernelTransaction21);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1933() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1933");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6, "query-logging",
        config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "query-logging",
        config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "hi!", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "hi!", config23,
        path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "query-logging",
        config28, path29);
  }

  @Test
  public void test1934() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1934");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService8.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService8.sucsForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery22);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService25 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService25.strForEx(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService25.faleForExTh(executingQuery28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService25.rolcForKe(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService25.sucsForEx(executingQuery33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService25.strForEx(executingQuery35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService25.sucsForEx(executingQuery37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService25.sucsForEx(executingQuery39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    queryLoggingService25.sucsForEx(executingQuery41);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService25.strForEx(executingQuery43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    java.lang.Throwable throwable46 = null;
    queryLoggingService25.rolcForKe(kernelTransaction45, throwable46);
    boolean boolean48 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService25);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService49 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction50 = null;
    queryLoggingService49.rolcForKe(kernelTransaction50);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery52 = null;
    queryLoggingService49.faleForExTh(executingQuery52, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery55 = null;
    java.lang.Throwable throwable56 = null;
    queryLoggingService49.faleForExTh(executingQuery55, throwable56);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction58 = null;
    queryLoggingService49.strForEx(kernelTransaction58);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery60 = null;
    queryLoggingService49.strForEx(executingQuery60);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction62 = null;
    java.lang.Throwable throwable63 = null;
    queryLoggingService49.rolcForKe(kernelTransaction62, throwable63);
    boolean boolean65 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) kernelTransaction62);
    java.lang.String str66 = queryLoggingServiceExtensionFactory3.toString();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(queryLoggingService25);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    org.junit.Assert.assertNotNull(queryLoggingService49);
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    org.junit.Assert.assertEquals(
        "'" + str66 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str66, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1935() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1935");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6, "", config8,
        path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config18, path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "query-logging",
        config23, path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config28, path29);
    java.lang.Class<?> wildcardClass31 = diagnosticsOfflineReportProviderQueryLoggingImpl0.getClass();
    org.junit.Assert.assertNotNull(wildcardClass31);
  }

  @Test
  public void test1936() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1936");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (short) 1);
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService4 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery5 = null;
    queryLoggingService4.strForEx(executingQuery5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService4.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService4.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService4.comForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService4.strForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService4.strForEx(executingQuery17);
    boolean boolean19 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery17);
    java.lang.String str20 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str21 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str22 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str23 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService24 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService24.strForEx(executingQuery25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    java.lang.Throwable throwable28 = null;
    queryLoggingService24.faleForExTh(executingQuery27, throwable28);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    queryLoggingService24.rolcForKe(kernelTransaction30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService24.sucsForEx(executingQuery32);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction34 = null;
    queryLoggingService24.strForEx(kernelTransaction34);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService24.faleForExTh(executingQuery36, throwable37);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction39 = null;
    queryLoggingService24.strForEx(kernelTransaction39);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction41 = null;
    java.lang.Throwable throwable42 = null;
    queryLoggingService24.rolcForKe(kernelTransaction41, throwable42);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction44 = null;
    java.lang.Throwable throwable45 = null;
    queryLoggingService24.rolcForKe(kernelTransaction44, throwable45);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    queryLoggingService24.sucsForEx(executingQuery47);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction49 = null;
    queryLoggingService24.rolcForKe(kernelTransaction49);
    boolean boolean51 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction49);
    java.lang.String str52 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str53 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl54 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction55 = null;
    org.neo4j.configuration.Config config57 = null;
    java.nio.file.Path path58 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl54.init(fileSystemAbstraction55,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config57, path58);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction60 = null;
    org.neo4j.configuration.Config config62 = null;
    java.nio.file.Path path63 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl54.init(fileSystemAbstraction60,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config62, path63);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction65 = null;
    org.neo4j.configuration.Config config67 = null;
    java.nio.file.Path path68 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl54.init(fileSystemAbstraction65,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config67, path68);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction70 = null;
    org.neo4j.configuration.Config config72 = null;
    java.nio.file.Path path73 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl54.init(fileSystemAbstraction70, "", config72,
        path73);
    boolean boolean75 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) "");
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext76 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies77 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle78 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext76, queryLoggingServiceDependencies77);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "query-logging" + "'", str3,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService4);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "query-logging" + "'", str20,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str21 + "' != '" + "query-logging" + "'", str21,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str22 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str22, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str23 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str23, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService24);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    org.junit.Assert.assertEquals("'" + str52 + "' != '" + "query-logging" + "'", str52,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str53 + "' != '" + "query-logging" + "'", str53,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
  }

  @Test
  public void test1937() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1937");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.strForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.faleForExTh(executingQuery22, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService0.comForKe(kernelTransaction25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService0.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService0.sucsForEx(executingQuery29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    java.lang.Throwable throwable32 = null;
    queryLoggingService0.faleForExTh(executingQuery31, throwable32);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1938() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1938");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.sucsForEx(executingQuery11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    java.lang.Class<?> wildcardClass15 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass15);
  }

  @Test
  public void test1939() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1939");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.faleForExTh(executingQuery21,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService0.faleForExTh(executingQuery24, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    java.lang.Throwable throwable28 = null;
    queryLoggingService0.rolcForKe(kernelTransaction27, throwable28);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction30 = null;
    queryLoggingService0.strForEx(kernelTransaction30);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction32 = null;
    queryLoggingService0.rolcForKe(kernelTransaction32);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    queryLoggingService0.faleForExTh(executingQuery34, "hi!");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1940() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1940");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.sucsForEx(executingQuery17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1941() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1941");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean9 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory10 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str11 = queryLoggingServiceExtensionFactory10.toString();
    boolean boolean12 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory10);
    boolean boolean13 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    java.lang.String str14 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str15 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str16 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str17 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.Class<?> wildcardClass18 = queryLoggingServiceExtensionFactory0.getClass();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "query-logging" + "'", str14,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "query-logging" + "'", str15,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "query-logging" + "'", str16,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str17 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str17, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(wildcardClass18);
  }

  @Test
  public void test1942() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1942");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.sucsForEx(executingQuery10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.comForKe(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.faleForExTh(executingQuery16, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService0.sucsForEx(executingQuery19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1943() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1943");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.faleForExTh(executingQuery16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.comForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.strForEx(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    java.lang.Throwable throwable26 = null;
    queryLoggingService0.rolcForKe(kernelTransaction25, throwable26);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1944() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1944");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.faleForExTh(executingQuery1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService0.rolcForKe(kernelTransaction8);
    java.lang.Class<?> wildcardClass10 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass10);
  }

  @Test
  public void test1945() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1945");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    java.lang.String str8 = queryLoggingServiceExtensionFactory3.toString();
    java.lang.String str9 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str11 = queryLoggingServiceExtensionFactory3.getName();
    java.lang.String str12 = queryLoggingServiceExtensionFactory3.toString();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str8, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "query-logging" + "'", str10,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "query-logging" + "'", str11,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str12 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str12, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1946() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1946");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    java.lang.Class<?> wildcardClass8 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass8);
  }

  @Test
  public void test1947() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1947");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6, "query-logging",
        config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "hi!", config23,
        path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "hi!", config28,
        path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31, "hi!", config33,
        path34);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction36 = null;
    org.neo4j.configuration.Config config38 = null;
    java.nio.file.Path path39 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction36,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config38, path39);
  }

  @Test
  public void test1948() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1948");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.strForEx(executingQuery15);
    java.lang.Class<?> wildcardClass17 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass17);
  }

  @Test
  public void test1949() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1949");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.sucsForEx(executingQuery10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.comForKe(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.faleForExTh(executingQuery16, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.faleForExTh(executingQuery19, throwable20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.sucsForEx(executingQuery22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1950() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1950");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.faleForExTh(executingQuery1,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.faleForExTh(executingQuery4,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.rolcForKe(kernelTransaction7, throwable8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.comForKe(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.strForEx(executingQuery17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19, throwable20);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1951() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1951");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService0.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.comForKe(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.strForEx(executingQuery21);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1952() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1952");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService4 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction5 = null;
    queryLoggingService4.rolcForKe(kernelTransaction5);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction7 = null;
    queryLoggingService4.strForEx(kernelTransaction7);
    java.lang.Class<?> wildcardClass9 = queryLoggingService4.getClass();
    boolean boolean10 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService4);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory11 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean13 = queryLoggingServiceExtensionFactory11.equals((java.lang.Object) (short) 1);
    java.lang.String str14 = queryLoggingServiceExtensionFactory11.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService15 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService15.strForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService15.faleForExTh(executingQuery18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService15.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService15.comForKe(kernelTransaction24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService15.strForEx(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryLoggingService15.strForEx(executingQuery28);
    boolean boolean30 = queryLoggingServiceExtensionFactory11.equals(
        (java.lang.Object) executingQuery28);
    java.lang.String str31 = queryLoggingServiceExtensionFactory11.getName();
    java.lang.String str32 = queryLoggingServiceExtensionFactory11.toString();
    java.lang.String str33 = queryLoggingServiceExtensionFactory11.toString();
    java.lang.String str34 = queryLoggingServiceExtensionFactory11.getName();
    java.lang.String str35 = queryLoggingServiceExtensionFactory11.getName();
    java.lang.String str36 = queryLoggingServiceExtensionFactory11.toString();
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl37 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction38 = null;
    org.neo4j.configuration.Config config40 = null;
    java.nio.file.Path path41 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl37.init(fileSystemAbstraction38, "hi!",
        config40, path41);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction43 = null;
    org.neo4j.configuration.Config config45 = null;
    java.nio.file.Path path46 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl37.init(fileSystemAbstraction43,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config45, path46);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction48 = null;
    org.neo4j.configuration.Config config50 = null;
    java.nio.file.Path path51 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl37.init(fileSystemAbstraction48, "", config50,
        path51);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction53 = null;
    org.neo4j.configuration.Config config55 = null;
    java.nio.file.Path path56 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl37.init(fileSystemAbstraction53, "hi!",
        config55, path56);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction58 = null;
    org.neo4j.configuration.Config config60 = null;
    java.nio.file.Path path61 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl37.init(fileSystemAbstraction58, "", config60,
        path61);
    boolean boolean63 = queryLoggingServiceExtensionFactory11.equals((java.lang.Object) "");
    java.lang.String str64 = queryLoggingServiceExtensionFactory11.toString();
    boolean boolean65 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory11);
    java.lang.String str66 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.Object obj67 = null;
    boolean boolean68 = queryLoggingServiceExtensionFactory0.equals(obj67);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str3, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService4);
    org.junit.Assert.assertNotNull(wildcardClass9);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "query-logging" + "'", str14,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService15);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    org.junit.Assert.assertEquals("'" + str31 + "' != '" + "query-logging" + "'", str31,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str32 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str32, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str33 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str33, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str34 + "' != '" + "query-logging" + "'", str34,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str35 + "' != '" + "query-logging" + "'", str35,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str36 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str36, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    org.junit.Assert.assertEquals(
        "'" + str64 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str64, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    org.junit.Assert.assertEquals(
        "'" + str66 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str66, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
  }

  @Test
  public void test1953() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1953");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.comForKe(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23, throwable24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService0.sucsForEx(executingQuery26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService0.rolcForKe(kernelTransaction28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryLoggingService0.sucsForEx(executingQuery30);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction32 = null;
    java.lang.Throwable throwable33 = null;
    queryLoggingService0.rolcForKe(kernelTransaction32, throwable33);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1954() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1954");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService5.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService5.strForEx(executingQuery15);
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery15);
    java.lang.String str18 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str19 = queryLoggingServiceExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext20 = null;
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory.QueryLoggingServiceDependencies queryLoggingServiceDependencies21 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle22 = queryLoggingServiceExtensionFactory0.newInstance(
          extensionContext20, queryLoggingServiceDependencies21);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "query-logging" + "'", str18,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "query-logging" + "'", str19,
        "query-logging");
  }

  @Test
  public void test1955() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1955");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.comForKe(kernelTransaction11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.strForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.strForEx(executingQuery17);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1956() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1956");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService5.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.faleForExTh(executingQuery8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService5.strForEx(executingQuery15);
    boolean boolean17 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery15);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService18 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService18.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService18.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService18.faleForExTh(executingQuery24, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService18.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService18.faleForExTh(executingQuery29, throwable30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService18.sucsForEx(executingQuery32);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService18);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService35 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService35.rolcForKe(kernelTransaction36, throwable37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    java.lang.Throwable throwable40 = null;
    queryLoggingService35.faleForExTh(executingQuery39, throwable40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    java.lang.Throwable throwable43 = null;
    queryLoggingService35.faleForExTh(executingQuery42, throwable43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    queryLoggingService35.strForEx(kernelTransaction45);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    java.lang.Throwable throwable48 = null;
    queryLoggingService35.faleForExTh(executingQuery47, throwable48);
    java.lang.Class<?> wildcardClass50 = queryLoggingService35.getClass();
    boolean boolean51 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) wildcardClass50);
    java.lang.String str52 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str53 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str54 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService55 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction56 = null;
    java.lang.Throwable throwable57 = null;
    queryLoggingService55.rolcForKe(kernelTransaction56, throwable57);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery59 = null;
    queryLoggingService55.sucsForEx(executingQuery59);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery61 = null;
    queryLoggingService55.sucsForEx(executingQuery61);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction63 = null;
    queryLoggingService55.rolcForKe(kernelTransaction63);
    boolean boolean65 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService55);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(queryLoggingService18);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertNotNull(queryLoggingService35);
    org.junit.Assert.assertNotNull(wildcardClass50);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    org.junit.Assert.assertEquals(
        "'" + str52 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str52, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str53 + "' != '" + "query-logging" + "'", str53,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str54 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str54, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService55);
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
  }

  @Test
  public void test1957() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1957");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.faleForExTh(executingQuery12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17, throwable18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.strForEx(kernelTransaction20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.faleForExTh(executingQuery22, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService0.sucsForEx(executingQuery25);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1958() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1958");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.strForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.faleForExTh(executingQuery13, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.comForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.faleForExTh(executingQuery20, throwable21);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1959() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1959");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str2 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str3 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str4 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService6 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction7 = null;
    queryLoggingService6.rolcForKe(kernelTransaction7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService6.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService6.faleForExTh(executingQuery12, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService6.rolcForKe(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService6.faleForExTh(executingQuery17, throwable18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService6.faleForExTh(executingQuery20, "query-logging");
    boolean boolean23 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService6);
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str2, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str3, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService6);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
  }

  @Test
  public void test1960() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1960");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.strForEx(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16, throwable17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.faleForExTh(executingQuery19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.comForKe(kernelTransaction22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService0.faleForExTh(executingQuery24, throwable25);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1961() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1961");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory8 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean10 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) (-1L));
    boolean boolean11 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) boolean10);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService12 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService12.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService12.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService12.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService12.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService12.strForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) executingQuery22);
    boolean boolean25 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    java.lang.String str26 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(queryLoggingService12);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertEquals(
        "'" + str26 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str26, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1962() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1962");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.strForEx(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.faleForExTh(executingQuery18, "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1963() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1963");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6, "query-logging",
        config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config23, path24);
  }

  @Test
  public void test1964() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1964");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6, "query-logging",
        config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config18, path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "query-logging",
        config23, path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "query-logging",
        config28, path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config33, path34);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction36 = null;
    org.neo4j.configuration.Config config38 = null;
    java.nio.file.Path path39 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction36, "hi!", config38,
        path39);
  }

  @Test
  public void test1965() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1965");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.faleForExTh(executingQuery6, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService0.faleForExTh(executingQuery16,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService0.faleForExTh(executingQuery21, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryLoggingService0.strForEx(executingQuery24);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1966() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1966");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.rolcForKe(kernelTransaction4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    queryLoggingService0.faleForExTh(executingQuery7, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction13, throwable14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.comForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.strForEx(kernelTransaction20);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1967() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1967");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.comForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.comForKe(kernelTransaction24);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    java.lang.Throwable throwable27 = null;
    queryLoggingService0.rolcForKe(kernelTransaction26, throwable27);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1968() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1968");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.strForEx(executingQuery12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.comForKe(kernelTransaction19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.strForEx(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23, throwable24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService0.strForEx(executingQuery26);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1969() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1969");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.faleForExTh(executingQuery9, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.sucsForEx(executingQuery12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService0.strForEx(kernelTransaction19);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1970() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1970");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService2 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService2.rolcForKe(kernelTransaction3, throwable4);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable4);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService7 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService7.strForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService7.faleForExTh(executingQuery10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService7.rolcForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService7.sucsForEx(executingQuery15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService7.strForEx(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService7.faleForExTh(executingQuery19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService7.strForEx(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService7.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService7.strForEx(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService7.faleForExTh(executingQuery29, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService7.strForEx(executingQuery32);
    boolean boolean34 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery32);
    java.lang.String str35 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService36 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction37 = null;
    java.lang.Throwable throwable38 = null;
    queryLoggingService36.rolcForKe(kernelTransaction37, throwable38);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery40 = null;
    queryLoggingService36.sucsForEx(executingQuery40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    queryLoggingService36.strForEx(executingQuery42);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery44 = null;
    queryLoggingService36.faleForExTh(executingQuery44, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction47 = null;
    java.lang.Throwable throwable48 = null;
    queryLoggingService36.rolcForKe(kernelTransaction47, throwable48);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction50 = null;
    queryLoggingService36.strForEx(kernelTransaction50);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery52 = null;
    queryLoggingService36.strForEx(executingQuery52);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction54 = null;
    queryLoggingService36.rolcForKe(kernelTransaction54);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery56 = null;
    queryLoggingService36.sucsForEx(executingQuery56);
    boolean boolean58 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery56);
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService2);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNotNull(queryLoggingService7);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertEquals(
        "'" + str35 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str35, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService36);
    org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
  }

  @Test
  public void test1971() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1971");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    queryLoggingService0.faleForExTh(executingQuery12,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService0.sucsForEx(executingQuery17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService0.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService0.comForKe(kernelTransaction24);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction26 = null;
    queryLoggingService0.comForKe(kernelTransaction26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService0.comForKe(kernelTransaction28);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1972() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1972");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.strForEx(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService0.comForKe(kernelTransaction8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.sucsForEx(executingQuery10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.comForKe(kernelTransaction12);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1973() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1973");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    boolean boolean8 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str10 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "query-logging" + "'", str10,
        "query-logging");
  }

  @Test
  public void test1974() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1974");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService10 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService10.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService10.comForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService10.faleForExTh(executingQuery16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService10.comForKe(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService10.strForEx(executingQuery21);
    boolean boolean23 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService10);
    java.lang.String str24 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory25 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean27 = queryLoggingServiceExtensionFactory25.equals((java.lang.Object) (-1L));
    java.lang.String str28 = queryLoggingServiceExtensionFactory25.getName();
    boolean boolean29 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory25);
    java.lang.String str30 = queryLoggingServiceExtensionFactory25.toString();
    java.lang.String str31 = queryLoggingServiceExtensionFactory25.getName();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService10);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "query-logging" + "'", str24,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertEquals("'" + str28 + "' != '" + "query-logging" + "'", str28,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    org.junit.Assert.assertEquals(
        "'" + str30 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str30, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str31 + "' != '" + "query-logging" + "'", str31,
        "query-logging");
  }

  @Test
  public void test1975() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1975");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.strForEx(executingQuery8);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery10 = null;
    queryLoggingService0.faleForExTh(executingQuery10, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.faleForExTh(executingQuery13, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20, throwable21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryLoggingService0.strForEx(executingQuery23);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1976() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1976");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.comForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20, "hi!");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1977() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1977");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService10 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService10.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService10.comForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService10.faleForExTh(executingQuery16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    queryLoggingService10.comForKe(kernelTransaction19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryLoggingService10.strForEx(executingQuery21);
    boolean boolean23 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService10);
    java.lang.String str24 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str25 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str26 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService10);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "query-logging" + "'", str24,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str25 + "' != '" + "query-logging" + "'", str25,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str26 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str26, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1978() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1978");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService5 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService5.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    java.lang.Throwable throwable9 = null;
    queryLoggingService5.rolcForKe(kernelTransaction8, throwable9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService5.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService5.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService5.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService5.faleForExTh(executingQuery17,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    boolean boolean20 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService21 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService21.rolcForKe(kernelTransaction22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    java.lang.Throwable throwable25 = null;
    queryLoggingService21.rolcForKe(kernelTransaction24, throwable25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService21.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryLoggingService21.sucsForEx(executingQuery29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService21.strForEx(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService21.faleForExTh(executingQuery33,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    java.lang.Throwable throwable37 = null;
    queryLoggingService21.rolcForKe(kernelTransaction36, throwable37);
    boolean boolean39 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService21);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory40 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory41 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean43 = queryLoggingServiceExtensionFactory41.equals((java.lang.Object) (-1L));
    boolean boolean44 = queryLoggingServiceExtensionFactory40.equals((java.lang.Object) boolean43);
    boolean boolean46 = queryLoggingServiceExtensionFactory40.equals((java.lang.Object) 0L);
    java.lang.String str47 = queryLoggingServiceExtensionFactory40.toString();
    java.lang.String str48 = queryLoggingServiceExtensionFactory40.getName();
    boolean boolean49 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) str48);
    java.lang.String str50 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str51 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService52 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction53 = null;
    queryLoggingService52.rolcForKe(kernelTransaction53);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    java.lang.Throwable throwable56 = null;
    queryLoggingService52.rolcForKe(kernelTransaction55, throwable56);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction58 = null;
    queryLoggingService52.rolcForKe(kernelTransaction58);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery60 = null;
    queryLoggingService52.sucsForEx(executingQuery60);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction62 = null;
    queryLoggingService52.strForEx(kernelTransaction62);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery64 = null;
    queryLoggingService52.faleForExTh(executingQuery64,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery67 = null;
    queryLoggingService52.faleForExTh(executingQuery67, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction70 = null;
    queryLoggingService52.rolcForKe(kernelTransaction70);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction72 = null;
    queryLoggingService52.rolcForKe(kernelTransaction72);
    boolean boolean74 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService52);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService75 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery76 = null;
    queryLoggingService75.strForEx(executingQuery76);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery78 = null;
    java.lang.Throwable throwable79 = null;
    queryLoggingService75.faleForExTh(executingQuery78, throwable79);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction81 = null;
    queryLoggingService75.rolcForKe(kernelTransaction81);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery83 = null;
    queryLoggingService75.faleForExTh(executingQuery83, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery86 = null;
    java.lang.Throwable throwable87 = null;
    queryLoggingService75.faleForExTh(executingQuery86, throwable87);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction89 = null;
    queryLoggingService75.strForEx(kernelTransaction89);
    java.lang.Class<?> wildcardClass91 = queryLoggingService75.getClass();
    boolean boolean92 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) wildcardClass91);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(queryLoggingService5);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertNotNull(queryLoggingService21);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    org.junit.Assert.assertEquals(
        "'" + str47 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str47, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str48 + "' != '" + "query-logging" + "'", str48,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertEquals("'" + str50 + "' != '" + "query-logging" + "'", str50,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str51 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str51, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertNotNull(queryLoggingService52);
    org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    org.junit.Assert.assertNotNull(queryLoggingService75);
    org.junit.Assert.assertNotNull(wildcardClass91);
    org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
  }

  @Test
  public void test1979() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1979");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.sucsForEx(executingQuery8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    queryLoggingService0.strForEx(kernelTransaction10);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery12 = null;
    java.lang.Throwable throwable13 = null;
    queryLoggingService0.faleForExTh(executingQuery12, throwable13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService0.strForEx(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction17, throwable18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.strForEx(kernelTransaction20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.faleForExTh(executingQuery22, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService0.strForEx(executingQuery25);
    java.lang.Class<?> wildcardClass27 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass27);
  }

  @Test
  public void test1980() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1980");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.String str5 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService7 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction8 = null;
    queryLoggingService7.rolcForKe(kernelTransaction8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService7.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService7.rolcForKe(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService7.sucsForEx(executingQuery15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryLoggingService7.faleForExTh(executingQuery17, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService7.strForEx(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    queryLoggingService7.rolcForKe(kernelTransaction22);
    boolean boolean24 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService7);
    java.lang.String str25 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str26 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str27 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str28 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str29 = queryLoggingServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str5, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService7);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertEquals("'" + str25 + "' != '" + "query-logging" + "'", str25,
        "query-logging");
    org.junit.Assert.assertEquals(
        "'" + str26 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str26, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str27 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str27, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str28 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str28, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals(
        "'" + str29 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str29, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
  }

  @Test
  public void test1981() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1981");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.rolcForKe(kernelTransaction3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService0.strForEx(executingQuery22);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1982() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1982");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "query-logging",
        config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config23, path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "hi!", config28,
        path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31, "query-logging",
        config33, path34);
  }

  @Test
  public void test1983() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1983");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11, throwable12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.sucsForEx(executingQuery14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    java.lang.Throwable throwable19 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18, throwable19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    queryLoggingService0.comForKe(kernelTransaction21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    java.lang.Throwable throwable24 = null;
    queryLoggingService0.rolcForKe(kernelTransaction23, throwable24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService0.sucsForEx(executingQuery26);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    queryLoggingService0.rolcForKe(kernelTransaction28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryLoggingService0.strForEx(executingQuery30);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1984() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1984");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction4 = null;
    queryLoggingService0.comForKe(kernelTransaction4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.rolcForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.faleForExTh(executingQuery11,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService0.comForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService0.faleForExTh(executingQuery16, throwable17);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1985() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1985");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory2 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean4 = queryLoggingServiceExtensionFactory2.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory5 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str6 = queryLoggingServiceExtensionFactory5.toString();
    boolean boolean7 = queryLoggingServiceExtensionFactory2.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory5);
    java.lang.String str8 = queryLoggingServiceExtensionFactory2.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory2.getName();
    boolean boolean10 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory2);
    java.lang.String str11 = queryLoggingServiceExtensionFactory2.toString();
    java.lang.String str12 = queryLoggingServiceExtensionFactory2.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService13 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService13.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction16 = null;
    java.lang.Throwable throwable17 = null;
    queryLoggingService13.rolcForKe(kernelTransaction16, throwable17);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction19 = null;
    java.lang.Throwable throwable20 = null;
    queryLoggingService13.rolcForKe(kernelTransaction19, throwable20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService13.rolcForKe(kernelTransaction22, throwable23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService13.rolcForKe(kernelTransaction25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService13.rolcForKe(kernelTransaction27);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    java.lang.Throwable throwable30 = null;
    queryLoggingService13.rolcForKe(kernelTransaction29, throwable30);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction32 = null;
    java.lang.Throwable throwable33 = null;
    queryLoggingService13.rolcForKe(kernelTransaction32, throwable33);
    boolean boolean35 = queryLoggingServiceExtensionFactory2.equals(
        (java.lang.Object) queryLoggingService13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction36 = null;
    queryLoggingService13.rolcForKe(kernelTransaction36);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery38 = null;
    queryLoggingService13.strForEx(executingQuery38);
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str6, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str11, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "query-logging" + "'", str12,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService13);
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
  }

  @Test
  public void test1986() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1986");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    java.lang.Object obj5 = new java.lang.Object();
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals(obj5);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    java.lang.Throwable throwable15 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14, throwable15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    queryLoggingService8.comForKe(kernelTransaction17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryLoggingService8.strForEx(executingQuery19);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction21 = null;
    java.lang.Throwable throwable22 = null;
    queryLoggingService8.rolcForKe(kernelTransaction21, throwable22);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction24 = null;
    queryLoggingService8.comForKe(kernelTransaction24);
    boolean boolean26 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService8);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService27 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService27.rolcForKe(kernelTransaction28, throwable29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryLoggingService27.sucsForEx(executingQuery31);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    queryLoggingService27.comForKe(kernelTransaction33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService27.faleForExTh(executingQuery35, "query-logging");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction38 = null;
    queryLoggingService27.strForEx(kernelTransaction38);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction40 = null;
    java.lang.Throwable throwable41 = null;
    queryLoggingService27.rolcForKe(kernelTransaction40, throwable41);
    boolean boolean43 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) kernelTransaction40);
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl44 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction45 = null;
    org.neo4j.configuration.Config config47 = null;
    java.nio.file.Path path48 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl44.init(fileSystemAbstraction45,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config47, path48);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction50 = null;
    org.neo4j.configuration.Config config52 = null;
    java.nio.file.Path path53 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl44.init(fileSystemAbstraction50,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config52, path53);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction55 = null;
    org.neo4j.configuration.Config config57 = null;
    java.nio.file.Path path58 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl44.init(fileSystemAbstraction55, "", config57,
        path58);
    boolean boolean60 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) diagnosticsOfflineReportProviderQueryLoggingImpl44);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction61 = null;
    org.neo4j.configuration.Config config63 = null;
    java.nio.file.Path path64 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl44.init(fileSystemAbstraction61,
        "query-logging", config63, path64);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction66 = null;
    org.neo4j.configuration.Config config68 = null;
    java.nio.file.Path path69 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl44.init(fileSystemAbstraction66,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config68, path69);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "query-logging" + "'", str7,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertNotNull(queryLoggingService27);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
  }

  @Test
  public void test1987() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1987");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.strForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService0.faleForExTh(executingQuery11, throwable12);
    java.lang.Class<?> wildcardClass14 = queryLoggingService0.getClass();
    org.junit.Assert.assertNotNull(queryLoggingService0);
    org.junit.Assert.assertNotNull(wildcardClass14);
  }

  @Test
  public void test1988() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1988");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "hi!", config13,
        path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21, "hi!", config23,
        path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "", config28,
        path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31, "query-logging",
        config33, path34);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction36 = null;
    org.neo4j.configuration.Config config38 = null;
    java.nio.file.Path path39 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction36,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config38, path39);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction41 = null;
    org.neo4j.configuration.Config config43 = null;
    java.nio.file.Path path44 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction41, "", config43,
        path44);
    java.lang.Class<?> wildcardClass46 = diagnosticsOfflineReportProviderQueryLoggingImpl0.getClass();
    org.junit.Assert.assertNotNull(wildcardClass46);
  }

  @Test
  public void test1989() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1989");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    java.lang.Throwable throwable5 = null;
    queryLoggingService0.faleForExTh(executingQuery4, throwable5);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery7 = null;
    java.lang.Throwable throwable8 = null;
    queryLoggingService0.faleForExTh(executingQuery7, throwable8);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction10 = null;
    java.lang.Throwable throwable11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction10, throwable11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    queryLoggingService0.faleForExTh(executingQuery15, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    java.lang.Throwable throwable21 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20, throwable21);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction23 = null;
    queryLoggingService0.comForKe(kernelTransaction23);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction25 = null;
    queryLoggingService0.comForKe(kernelTransaction25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryLoggingService0.sucsForEx(executingQuery27);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    queryLoggingService0.rolcForKe(kernelTransaction29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    java.lang.Throwable throwable32 = null;
    queryLoggingService0.rolcForKe(kernelTransaction31, throwable32);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1990() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1990");
    }
    io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl diagnosticsOfflineReportProviderQueryLoggingImpl0 = new io.github.onograph.kernel.srv.log.query.DiagnosticsOfflineReportProviderQueryLoggingImpl();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction1, "hi!", config3,
        path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction6, "query-logging",
        config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction11, "query-logging",
        config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction16, "", config18,
        path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction21,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config23, path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction26, "", config28,
        path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    diagnosticsOfflineReportProviderQueryLoggingImpl0.init(fileSystemAbstraction31,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]", config33, path34);
  }

  @Test
  public void test1991() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1991");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction9 = null;
    queryLoggingService0.comForKe(kernelTransaction9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction13 = null;
    queryLoggingService0.strForEx(kernelTransaction13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15, throwable16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.strForEx(executingQuery18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService0.rolcForKe(kernelTransaction20);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1992() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1992");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.sucsForEx(executingQuery6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryLoggingService0.faleForExTh(executingQuery8, "");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.sucsForEx(executingQuery13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15, throwable16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService0.sucsForEx(executingQuery18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1993() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1993");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    queryLoggingService0.faleForExTh(executingQuery3, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.strForEx(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.faleForExTh(executingQuery14, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService0.faleForExTh(executingQuery17, throwable18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService0.faleForExTh(executingQuery20, "");
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1994() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1994");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.faleForExTh(executingQuery6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.strForEx(executingQuery9);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction11 = null;
    queryLoggingService0.rolcForKe(kernelTransaction11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    java.lang.Throwable throwable14 = null;
    queryLoggingService0.faleForExTh(executingQuery13, throwable14);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1995() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1995");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory1 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean3 = queryLoggingServiceExtensionFactory1.equals((java.lang.Object) (-1L));
    boolean boolean4 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) boolean3);
    boolean boolean6 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) 0L);
    java.lang.String str7 = queryLoggingServiceExtensionFactory0.toString();
    java.lang.String str8 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.Object obj9 = new java.lang.Object();
    java.lang.Class<?> wildcardClass10 = obj9.getClass();
    boolean boolean11 = queryLoggingServiceExtensionFactory0.equals(obj9);
    java.lang.String str12 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str13 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService14 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    queryLoggingService14.rolcForKe(kernelTransaction15);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction17 = null;
    java.lang.Throwable throwable18 = null;
    queryLoggingService14.rolcForKe(kernelTransaction17, throwable18);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction20 = null;
    queryLoggingService14.rolcForKe(kernelTransaction20);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction22 = null;
    java.lang.Throwable throwable23 = null;
    queryLoggingService14.rolcForKe(kernelTransaction22, throwable23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryLoggingService14.sucsForEx(executingQuery25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction27 = null;
    queryLoggingService14.comForKe(kernelTransaction27);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction29 = null;
    queryLoggingService14.rolcForKe(kernelTransaction29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryLoggingService14.sucsForEx(executingQuery31);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction33 = null;
    queryLoggingService14.rolcForKe(kernelTransaction33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    java.lang.Throwable throwable36 = null;
    queryLoggingService14.faleForExTh(executingQuery35, throwable36);
    boolean boolean38 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) throwable36);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService39 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery40 = null;
    queryLoggingService39.strForEx(executingQuery40);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery42 = null;
    java.lang.Throwable throwable43 = null;
    queryLoggingService39.faleForExTh(executingQuery42, throwable43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    queryLoggingService39.rolcForKe(kernelTransaction45);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    queryLoggingService39.faleForExTh(executingQuery47, "hi!");
    org.neo4j.kernel.api.KernelTransaction kernelTransaction50 = null;
    queryLoggingService39.strForEx(kernelTransaction50);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery52 = null;
    java.lang.Throwable throwable53 = null;
    queryLoggingService39.faleForExTh(executingQuery52, throwable53);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    queryLoggingService39.strForEx(kernelTransaction55);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction57 = null;
    queryLoggingService39.comForKe(kernelTransaction57);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction59 = null;
    queryLoggingService39.comForKe(kernelTransaction59);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery61 = null;
    queryLoggingService39.faleForExTh(executingQuery61,
        "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    boolean boolean64 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str7, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "query-logging" + "'", str12,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "query-logging" + "'", str13,
        "query-logging");
    org.junit.Assert.assertNotNull(queryLoggingService14);
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    org.junit.Assert.assertNotNull(queryLoggingService39);
    org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
  }

  @Test
  public void test1996() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1996");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str1 = queryLoggingServiceExtensionFactory0.toString();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory2 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean4 = queryLoggingServiceExtensionFactory2.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory5 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str6 = queryLoggingServiceExtensionFactory5.toString();
    boolean boolean7 = queryLoggingServiceExtensionFactory2.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory5);
    java.lang.String str8 = queryLoggingServiceExtensionFactory2.getName();
    java.lang.String str9 = queryLoggingServiceExtensionFactory2.getName();
    boolean boolean10 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory2);
    java.lang.String str11 = queryLoggingServiceExtensionFactory2.getName();
    java.lang.Class<?> wildcardClass12 = queryLoggingServiceExtensionFactory2.getClass();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str1, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str6, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "query-logging" + "'", str8,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "query-logging" + "'", str9,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "query-logging" + "'", str11,
        "query-logging");
    org.junit.Assert.assertNotNull(wildcardClass12);
  }

  @Test
  public void test1997() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1997");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    java.lang.String str6 = queryLoggingServiceExtensionFactory0.getName();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory7 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory8 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean10 = queryLoggingServiceExtensionFactory8.equals((java.lang.Object) (-1L));
    boolean boolean11 = queryLoggingServiceExtensionFactory7.equals((java.lang.Object) boolean10);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService12 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService12.strForEx(executingQuery13);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService12.faleForExTh(executingQuery15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService12.rolcForKe(kernelTransaction18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService12.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService12.strForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory7.equals(
        (java.lang.Object) executingQuery22);
    boolean boolean25 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory7);
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory26 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean28 = queryLoggingServiceExtensionFactory26.equals((java.lang.Object) (short) 1);
    java.lang.String str29 = queryLoggingServiceExtensionFactory26.toString();
    boolean boolean30 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory26);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService31 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryLoggingService31.strForEx(executingQuery32);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    java.lang.Throwable throwable35 = null;
    queryLoggingService31.faleForExTh(executingQuery34, throwable35);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction37 = null;
    java.lang.Throwable throwable38 = null;
    queryLoggingService31.rolcForKe(kernelTransaction37, throwable38);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery40 = null;
    queryLoggingService31.faleForExTh(executingQuery40, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService31.sucsForEx(executingQuery43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    queryLoggingService31.comForKe(kernelTransaction45);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery47 = null;
    queryLoggingService31.strForEx(executingQuery47);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery49 = null;
    queryLoggingService31.strForEx(executingQuery49);
    boolean boolean51 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) executingQuery49);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService52 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction53 = null;
    queryLoggingService52.rolcForKe(kernelTransaction53);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction55 = null;
    java.lang.Throwable throwable56 = null;
    queryLoggingService52.rolcForKe(kernelTransaction55, throwable56);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction58 = null;
    queryLoggingService52.rolcForKe(kernelTransaction58);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction60 = null;
    java.lang.Throwable throwable61 = null;
    queryLoggingService52.rolcForKe(kernelTransaction60, throwable61);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery63 = null;
    queryLoggingService52.faleForExTh(executingQuery63, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery66 = null;
    queryLoggingService52.faleForExTh(executingQuery66, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery69 = null;
    queryLoggingService52.strForEx(executingQuery69);
    boolean boolean71 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingService52);
    java.lang.String str72 = queryLoggingServiceExtensionFactory0.getName();
    java.lang.String str73 = queryLoggingServiceExtensionFactory0.getName();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "query-logging" + "'", str6,
        "query-logging");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(queryLoggingService12);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertEquals(
        "'" + str29 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str29, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    org.junit.Assert.assertNotNull(queryLoggingService31);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    org.junit.Assert.assertNotNull(queryLoggingService52);
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    org.junit.Assert.assertEquals("'" + str72 + "' != '" + "query-logging" + "'", str72,
        "query-logging");
    org.junit.Assert.assertEquals("'" + str73 + "' != '" + "query-logging" + "'", str73,
        "query-logging");
  }

  @Test
  public void test1998() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1998");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.KernelTransaction kernelTransaction1 = null;
    java.lang.Throwable throwable2 = null;
    queryLoggingService0.rolcForKe(kernelTransaction1, throwable2);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryLoggingService0.sucsForEx(executingQuery4);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery6 = null;
    queryLoggingService0.faleForExTh(executingQuery6, "hi!");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    java.lang.Throwable throwable10 = null;
    queryLoggingService0.faleForExTh(executingQuery9, throwable10);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction12 = null;
    queryLoggingService0.comForKe(kernelTransaction12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryLoggingService0.strForEx(executingQuery14);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test1999() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1999");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService0 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryLoggingService0.strForEx(executingQuery1);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery3 = null;
    java.lang.Throwable throwable4 = null;
    queryLoggingService0.faleForExTh(executingQuery3, throwable4);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction6 = null;
    java.lang.Throwable throwable7 = null;
    queryLoggingService0.rolcForKe(kernelTransaction6, throwable7);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService0.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    queryLoggingService0.strForEx(executingQuery11);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery13 = null;
    queryLoggingService0.strForEx(executingQuery13);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction15 = null;
    java.lang.Throwable throwable16 = null;
    queryLoggingService0.rolcForKe(kernelTransaction15, throwable16);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction18 = null;
    queryLoggingService0.rolcForKe(kernelTransaction18);
    org.junit.Assert.assertNotNull(queryLoggingService0);
  }

  @Test
  public void test2000() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test2000");
    }
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory0 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    boolean boolean2 = queryLoggingServiceExtensionFactory0.equals((java.lang.Object) (-1L));
    io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory queryLoggingServiceExtensionFactory3 = new io.github.onograph.kernel.srv.log.query.QueryLoggingServiceExtensionFactory();
    java.lang.String str4 = queryLoggingServiceExtensionFactory3.toString();
    boolean boolean5 = queryLoggingServiceExtensionFactory0.equals(
        (java.lang.Object) queryLoggingServiceExtensionFactory3);
    boolean boolean7 = queryLoggingServiceExtensionFactory3.equals((java.lang.Object) 100.0d);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService8 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery9 = null;
    queryLoggingService8.strForEx(executingQuery9);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery11 = null;
    java.lang.Throwable throwable12 = null;
    queryLoggingService8.faleForExTh(executingQuery11, throwable12);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction14 = null;
    queryLoggingService8.rolcForKe(kernelTransaction14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryLoggingService8.sucsForEx(executingQuery16);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery18 = null;
    queryLoggingService8.strForEx(executingQuery18);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryLoggingService8.sucsForEx(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryLoggingService8.sucsForEx(executingQuery22);
    boolean boolean24 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) executingQuery22);
    io.github.onograph.kernel.srv.log.query.QueryLoggingService queryLoggingService25 = io.github.onograph.kernel.srv.log.query.QueryLoggingService.NO_LG;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryLoggingService25.strForEx(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    java.lang.Throwable throwable29 = null;
    queryLoggingService25.faleForExTh(executingQuery28, throwable29);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction31 = null;
    queryLoggingService25.rolcForKe(kernelTransaction31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryLoggingService25.sucsForEx(executingQuery33);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery35 = null;
    queryLoggingService25.strForEx(executingQuery35);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryLoggingService25.sucsForEx(executingQuery37);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery39 = null;
    queryLoggingService25.sucsForEx(executingQuery39);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery41 = null;
    queryLoggingService25.sucsForEx(executingQuery41);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery43 = null;
    queryLoggingService25.strForEx(executingQuery43);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction45 = null;
    java.lang.Throwable throwable46 = null;
    queryLoggingService25.rolcForKe(kernelTransaction45, throwable46);
    boolean boolean48 = queryLoggingServiceExtensionFactory3.equals(
        (java.lang.Object) queryLoggingService25);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction49 = null;
    queryLoggingService25.comForKe(kernelTransaction49);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction51 = null;
    queryLoggingService25.comForKe(kernelTransaction51);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction53 = null;
    queryLoggingService25.comForKe(kernelTransaction53);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery55 = null;
    java.lang.Throwable throwable56 = null;
    queryLoggingService25.faleForExTh(executingQuery55, throwable56);
    org.neo4j.kernel.api.KernelTransaction kernelTransaction58 = null;
    queryLoggingService25.strForEx(kernelTransaction58);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:QueryLoggingServiceExtensionFactory[query-logging]"
            + "'", str4, "Extension:QueryLoggingServiceExtensionFactory[query-logging]");
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(queryLoggingService8);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(queryLoggingService25);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
  }
}


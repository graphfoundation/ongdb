package io.github.onograph.test;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class ModRegTest1 {

  public static boolean debug = false;

  @Test
  public void test0501() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0501");
    }
    io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider commandGetServerIdCommandProvider0 = new io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider();
    org.neo4j.cli.Command.CommandType commandType1 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType2 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType3 = commandGetServerIdCommandProvider0.commandType();
    int int4 = commandGetServerIdCommandProvider0.getPriority();
    int int5 = commandGetServerIdCommandProvider0.getPriority();
    org.junit.Assert.assertTrue(
        "'" + commandType1 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType1.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
  }

  @Test
  public void test0502() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0502");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    org.neo4j.graphdb.config.Configuration configuration7 = null;
    try {
      databaseManagementServiceClusterImpl5.createDatabase("hi!", configuration7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0503() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0503");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl6.createDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0504() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0504");
    }
    io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider commandGetServerIdCommandProvider0 = new io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider();
    org.neo4j.cli.Command.CommandType commandType1 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType2 = commandGetServerIdCommandProvider0.commandType();
    int int3 = commandGetServerIdCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType4 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.ExecutionContext executionContext5 = null;
    try {
      io.github.onograph.dbms.commands.CommandGetServerIdImpl commandGetServerIdImpl6 = commandGetServerIdCommandProvider0.createCommand(
          executionContext5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue(
        "'" + commandType1 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType1.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
  }

  @Test
  public void test0505() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0505");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener5 = null;
    try {
      databaseManagementServiceClusterImpl3.unregisterDatabaseEventListener(databaseEventListener5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0506() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0506");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    try {
      databaseManagementServiceClusterImpl6.startDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0507() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0507");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    int int5 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService6 = enhancedBootstrapper0.getDatabaseManagementService();
    try {
      java.lang.Class<?> wildcardClass7 = databaseManagementService6.getClass();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertNull(databaseManagementService6);
  }

  @Test
  public void test0508() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0508");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    try {
      boolean boolean7 = databaseManagementServiceClusterImpl5.isWraeForSt("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0509() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0509");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl5.shutdownDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0510() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0510");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log2 = enhancedBootstrapper0.getLog();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService5 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log6 = enhancedBootstrapper0.getLog();
    java.nio.file.Path path7 = null;
    java.nio.file.Path path8 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
    try {
      int int11 = enhancedBootstrapper0.start(path7, path8, strMap9, false);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNotNull(log2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertNull(databaseManagementService5);
    org.junit.Assert.assertNotNull(log6);
  }

  @Test
  public void test0511() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0511");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    java.nio.file.Path path5 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
    try {
      int int7 = enhancedBootstrapper0.start(path5, strMap6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNotNull(log4);
  }

  @Test
  public void test0512() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0512");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    java.nio.file.Path path9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path9);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder3.setUserLogProvider(
        logProvider13);
    try {
      io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl15 = clusteringDBMSBuilder14.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
  }

  @Test
  public void test0513() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0513");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.monitoring.Monitors monitors4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setMonitors(
        monitors4);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener6);
    java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder5.setConfigRaw(
          strMap8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
  }

  @Test
  public void test0514() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0514");
    }
    io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider commandGetServerIdCommandProvider0 = new io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider();
    int int1 = commandGetServerIdCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType2 = commandGetServerIdCommandProvider0.commandType();
    int int3 = commandGetServerIdCommandProvider0.getPriority();
    int int4 = commandGetServerIdCommandProvider0.getPriority();
    int int5 = commandGetServerIdCommandProvider0.getPriority();
    org.neo4j.cli.ExecutionContext executionContext6 = null;
    try {
      io.github.onograph.dbms.commands.CommandGetServerIdImpl commandGetServerIdImpl7 = commandGetServerIdCommandProvider0.createCommand(
          executionContext6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
  }

  @Test
  public void test0515() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0515");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    try {
      org.neo4j.graphdb.GraphDatabaseService graphDatabaseService7 = databaseManagementServiceClusterImpl2.database(
          "");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0516() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0516");
    }
    io.github.onograph.dbms.utils.TokenNamePropertyDTO tokenNamePropertyDTO2 = new io.github.onograph.dbms.utils.TokenNamePropertyDTO(
        "enterprise", "hi!");
    java.lang.String str3 = tokenNamePropertyDTO2.getStrNp();
    java.lang.String str4 = tokenNamePropertyDTO2.getStrNt();
    java.lang.String str5 = tokenNamePropertyDTO2.getStrNt();
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterprise" + "'", str3, "enterprise");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
  }

  @Test
  public void test0517() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0517");
    }
    java.time.Clock clock0 = null;
    org.neo4j.kernel.database.DatabaseIdRepository databaseIdRepository1 = null;
    io.github.onograph.dbms.DbmsManagerWatchTagImpl dbmsManagerWatchTagImpl2 = null;
    java.time.ZoneId zoneId3 = null;
    io.github.onograph.dbms.serverproc.BasicProcedureQuarantineDatabaseImpl basicProcedureQuarantineDatabaseImpl4 = io.github.onograph.dbms.serverproc.BasicProcedureQuarantineDatabaseImpl.clsrBasicProcedureQuarantineDatabaseImpl(
        clock0, databaseIdRepository1, dbmsManagerWatchTagImpl2, zoneId3);
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature5 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature6 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.kernel.api.procedure.Context context7 = null;
    org.neo4j.values.AnyValue[] anyValueArray8 = new org.neo4j.values.AnyValue[]{};
    org.neo4j.kernel.api.ResourceTracker resourceTracker9 = null;
    try {
      org.neo4j.collection.RawIterator<org.neo4j.values.AnyValue[], org.neo4j.internal.kernel.api.exceptions.ProcedureException> anyValueArrayRawIterator10 = basicProcedureQuarantineDatabaseImpl4.apply(
          context7, anyValueArray8, resourceTracker9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalArgumentException; message: *** Error: fe8ab484-a650-4ba7-a59f-194832c36aaa");
    } catch (java.lang.IllegalArgumentException e) {
    }
    org.junit.Assert.assertNotNull(basicProcedureQuarantineDatabaseImpl4);
    org.junit.Assert.assertNotNull(procedureSignature5);
    org.junit.Assert.assertNotNull(procedureSignature6);
    org.junit.Assert.assertNotNull(anyValueArray8);
  }

  @Test
  public void test0518() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0518");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv10 = null;
    metaUpgradeFlowAction5.accept(upgradeMetaEnv10);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction12 = metaUpgradeFlowAction1.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction5);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction13 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv14 = null;
    metaUpgradeFlowAction13.accept(upgradeMetaEnv14);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer16 = metaUpgradeFlowAction12.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction13);
    org.neo4j.io.layout.Neo4jLayout neo4jLayout17 = null;
    io.github.onograph.dbms.MetaUpgradeFlowActionStagingImpl metaUpgradeFlowActionStagingImpl18 = new io.github.onograph.dbms.MetaUpgradeFlowActionStagingImpl(
        neo4jLayout17);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer19 = upgradeMetaEnvConsumer16.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowActionStagingImpl18);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv20 = null;
    try {
      metaUpgradeFlowActionStagingImpl18.pefmseForUp(upgradeMetaEnv20);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction12);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction13);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer16);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer19);
  }

  @Test
  public void test0519() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0519");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    try {
      databaseManagementServiceClusterImpl4.shutdownDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0520() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0520");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    try {
      databaseManagementServiceClusterImpl4.createDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0521() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0521");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log2 = enhancedBootstrapper0.getLog();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService5 = enhancedBootstrapper0.getDatabaseManagementService();
    java.lang.String[] strArray8 = new java.lang.String[]{"enterprise", "enterprise"};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray8);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray8);
    try {
      int int11 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray8);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNotNull(log2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertNull(databaseManagementService5);
    org.junit.Assert.assertNotNull(strArray8);
  }

  @Test
  public void test0522() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0522");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder7.setMonitors(
        monitors8);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder7.addURLAccessRule(
        "hi!", uRLAccessRule11);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder7.loadPropertiesFromFile(
        "hi!");
    org.neo4j.logging.LogProvider logProvider15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = clusteringDBMSBuilder7.setUserLogProvider(
        logProvider15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
  }

  @Test
  public void test0523() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0523");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    int int5 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService6 = enhancedBootstrapper0.getDatabaseManagementService();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertNull(databaseManagementService6);
  }

  @Test
  public void test0524() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0524");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    try {
      databaseManagementServiceClusterImpl4.dropDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0525() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0525");
    }
    java.time.Clock clock0 = null;
    org.neo4j.kernel.database.DatabaseIdRepository databaseIdRepository1 = null;
    io.github.onograph.dbms.DbmsManagerWatchTagImpl dbmsManagerWatchTagImpl2 = null;
    java.time.ZoneId zoneId3 = null;
    io.github.onograph.dbms.serverproc.BasicProcedureQuarantineDatabaseImpl basicProcedureQuarantineDatabaseImpl4 = io.github.onograph.dbms.serverproc.BasicProcedureQuarantineDatabaseImpl.clsrBasicProcedureQuarantineDatabaseImpl(
        clock0, databaseIdRepository1, dbmsManagerWatchTagImpl2, zoneId3);
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature5 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature6 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature7 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature8 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.kernel.api.procedure.Context context9 = null;
    org.neo4j.values.AnyValue[] anyValueArray10 = new org.neo4j.values.AnyValue[]{};
    org.neo4j.kernel.api.ResourceTracker resourceTracker11 = null;
    try {
      org.neo4j.collection.RawIterator<org.neo4j.values.AnyValue[], org.neo4j.internal.kernel.api.exceptions.ProcedureException> anyValueArrayRawIterator12 = basicProcedureQuarantineDatabaseImpl4.apply(
          context9, anyValueArray10, resourceTracker11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalArgumentException; message: *** Error: fe8ab484-a650-4ba7-a59f-194832c36aaa");
    } catch (java.lang.IllegalArgumentException e) {
    }
    org.junit.Assert.assertNotNull(basicProcedureQuarantineDatabaseImpl4);
    org.junit.Assert.assertNotNull(procedureSignature5);
    org.junit.Assert.assertNotNull(procedureSignature6);
    org.junit.Assert.assertNotNull(procedureSignature7);
    org.junit.Assert.assertNotNull(procedureSignature8);
    org.junit.Assert.assertNotNull(anyValueArray10);
  }

  @Test
  public void test0526() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0526");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    try {
      databaseManagementServiceClusterImpl2.shutdown();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0527() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0527");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl7.dropDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0528() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0528");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    try {
      org.neo4j.graphdb.GraphDatabaseService graphDatabaseService7 = databaseManagementServiceClusterImpl4.database(
          "");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0529() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0529");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction10 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction11 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv12 = null;
    metaUpgradeFlowAction11.accept(upgradeMetaEnv12);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = metaUpgradeFlowAction10.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction11);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv15 = null;
    metaUpgradeFlowAction10.accept(upgradeMetaEnv15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction17 = metaUpgradeFlowAction6.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction10);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction18 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv19 = null;
    metaUpgradeFlowAction18.accept(upgradeMetaEnv19);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer21 = metaUpgradeFlowAction17.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction18);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer22 = metaUpgradeFlowAction0.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction18);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction24 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv25 = null;
    metaUpgradeFlowAction24.accept(upgradeMetaEnv25);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction27 = metaUpgradeFlowAction23.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction24);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction28 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction29 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv30 = null;
    metaUpgradeFlowAction29.accept(upgradeMetaEnv30);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction32 = metaUpgradeFlowAction28.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction29);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction33 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction34 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv35 = null;
    metaUpgradeFlowAction34.accept(upgradeMetaEnv35);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction37 = metaUpgradeFlowAction33.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction34);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction38 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction39 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv40 = null;
    metaUpgradeFlowAction39.accept(upgradeMetaEnv40);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = metaUpgradeFlowAction38.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction39);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv43 = null;
    metaUpgradeFlowAction38.accept(upgradeMetaEnv43);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction45 = metaUpgradeFlowAction34.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction38);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction46 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv47 = null;
    metaUpgradeFlowAction46.accept(upgradeMetaEnv47);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer49 = metaUpgradeFlowAction45.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction46);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction50 = metaUpgradeFlowAction28.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction46);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction51 = metaUpgradeFlowAction27.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction50);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction52 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer53 = metaUpgradeFlowAction51.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction52);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction54 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction55 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv56 = null;
    metaUpgradeFlowAction55.accept(upgradeMetaEnv56);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction58 = metaUpgradeFlowAction54.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction55);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction59 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction60 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv61 = null;
    metaUpgradeFlowAction60.accept(upgradeMetaEnv61);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction63 = metaUpgradeFlowAction59.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction60);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction64 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction65 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv66 = null;
    metaUpgradeFlowAction65.accept(upgradeMetaEnv66);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction68 = metaUpgradeFlowAction64.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction65);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction69 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction70 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv71 = null;
    metaUpgradeFlowAction70.accept(upgradeMetaEnv71);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction73 = metaUpgradeFlowAction69.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction70);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv74 = null;
    metaUpgradeFlowAction69.accept(upgradeMetaEnv74);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction76 = metaUpgradeFlowAction65.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction69);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction77 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv78 = null;
    metaUpgradeFlowAction77.accept(upgradeMetaEnv78);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer80 = metaUpgradeFlowAction76.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction77);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction81 = metaUpgradeFlowAction59.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction77);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction82 = metaUpgradeFlowAction58.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction81);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction83 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer84 = metaUpgradeFlowAction82.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction83);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer85 = metaUpgradeFlowAction52.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction83);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction86 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction83);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv87 = null;
    metaUpgradeFlowAction86.accept(upgradeMetaEnv87);
    java.lang.Class<?> wildcardClass89 = metaUpgradeFlowAction86.getClass();
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction10);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction11);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction17);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction18);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer21);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction24);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction28);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction29);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction32);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction33);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction34);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction37);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction38);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction39);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction45);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction46);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer49);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction50);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction51);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction52);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer53);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction54);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction55);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction58);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction59);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction60);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction63);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction64);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction65);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction68);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction69);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction70);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction73);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction76);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction77);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer80);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction81);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction82);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction83);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer84);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer85);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction86);
    org.junit.Assert.assertNotNull(wildcardClass89);
  }

  @Test
  public void test0530() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0530");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.addDatabaseListener(
        databaseEventListener7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.addDatabaseListener(
        databaseEventListener9);
    java.nio.file.Path path11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        path11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder12.setMonitors(
        monitors13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
  }

  @Test
  public void test0531() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0531");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver10);
    java.nio.file.Path path12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path12);
    java.nio.file.Path path14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider16);
    java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder19 = clusteringDBMSBuilder17.setConfigRaw(
          strMap18);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
  }

  @Test
  public void test0532() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0532");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener5 = null;
    try {
      databaseManagementServiceClusterImpl3.registerDatabaseEventListener(databaseEventListener5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0533() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0533");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "");
    java.lang.String str13 = clusteringDBMSBuilder12.getEdition();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "enterprise" + "'", str13, "enterprise");
  }

  @Test
  public void test0534() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0534");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    int int1 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int2 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int3 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType4 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType5 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.ExecutionContext executionContext6 = null;
    try {
      io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommand nodeStoreWrapperCopyCommand7 = nodeStoreWrapperCopyCommandCommandProvider0.createCommand(
          executionContext6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType5 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType5.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
  }

  @Test
  public void test0535() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0535");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log2 = enhancedBootstrapper0.getLog();
    int int3 = enhancedBootstrapper0.stop();
    int int4 = enhancedBootstrapper0.stop();
    int int5 = enhancedBootstrapper0.stop();
    java.nio.file.Path path6 = null;
    java.nio.file.Path path7 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
    try {
      int int10 = enhancedBootstrapper0.start(path6, path7, strMap8, false);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNotNull(log2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
  }

  @Test
  public void test0536() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0536");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.setUserLogProvider(
        logProvider13);
    org.neo4j.logging.LogProvider logProvider15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder12.setUserLogProvider(
        logProvider15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
  }

  @Test
  public void test0537() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0537");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    try {
      java.util.List<java.lang.String> strList9 = databaseManagementServiceClusterImpl8.listDatabases();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0538() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0538");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "hi!");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener8);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = databaseManagementServiceBuilder9.loadPropertiesFromFile(
        "hi!");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener12 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = databaseManagementServiceBuilder9.addDatabaseListener(
        databaseEventListener12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
  }

  @Test
  public void test0539() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0539");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    int int5 = enhancedBootstrapper0.stop();
    int int6 = enhancedBootstrapper0.stop();
    int int7 = enhancedBootstrapper0.stop();
    java.nio.file.Path path8 = null;
    java.nio.file.Path path9 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
    try {
      int int12 = enhancedBootstrapper0.start(path8, path9, strMap10, true);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
  }

  @Test
  public void test0540() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0540");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    try {
      databaseManagementServiceClusterImpl6.unregisterDatabaseEventListener(databaseEventListener9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0541() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0541");
    }
    org.neo4j.server.Bootstrapper bootstrapper0 = null;
    java.lang.String[] strArray7 = new java.lang.String[]{"hi!", "hi!", "enterprise", "",
        "enterprise", "enterprise"};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray7);
    try {
      int int9 = org.neo4j.server.NeoBootstrapper.start(bootstrapper0, strArray7);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNotNull(strArray7);
  }

  @Test
  public void test0542() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0542");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        "hi!");
    org.neo4j.common.DependencyResolver dependencyResolver11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder6.setMonitors(
        monitors13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
  }

  @Test
  public void test0543() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0543");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    java.lang.String[] strArray7 = new java.lang.String[]{"enterprise", "enterprise"};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray7);
    try {
      int int9 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray7);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertNotNull(strArray7);
  }

  @Test
  public void test0544() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0544");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    org.neo4j.graphdb.config.Configuration configuration10 = null;
    try {
      databaseManagementServiceClusterImpl8.createDatabase("hi!", configuration10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0545() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0545");
    }
    io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider commandGetServerIdCommandProvider0 = new io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider();
    org.neo4j.cli.Command.CommandType commandType1 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType2 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType3 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.ExecutionContext executionContext4 = null;
    try {
      io.github.onograph.dbms.commands.CommandGetServerIdImpl commandGetServerIdImpl5 = commandGetServerIdCommandProvider0.createCommand(
          executionContext4);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue(
        "'" + commandType1 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType1.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
  }

  @Test
  public void test0546() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0546");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl7.startDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0547() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0547");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    int int4 = enhancedBootstrapper0.stop();
    int int5 = enhancedBootstrapper0.stop();
    int int6 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService7 = enhancedBootstrapper0.getDatabaseManagementService();
    java.nio.file.Path path8 = null;
    java.nio.file.Path path9 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
    try {
      int int12 = enhancedBootstrapper0.start(path8, path9, strMap10, true);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    org.junit.Assert.assertNull(databaseManagementService7);
  }

  @Test
  public void test0548() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0548");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    try {
      databaseManagementServiceClusterImpl1.startDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0549() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0549");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    try {
      databaseManagementServiceClusterImpl6.shutdownDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0550() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0550");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    try {
      org.neo4j.graphdb.GraphDatabaseService graphDatabaseService5 = databaseManagementServiceClusterImpl3.database(
          "");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0551() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0551");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    org.neo4j.graphdb.config.Configuration configuration6 = null;
    try {
      databaseManagementServiceClusterImpl2.createDatabase("enterprise", configuration6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0552() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0552");
    }
    io.github.onograph.server.EntryPointImpl entryPointImpl0 = new io.github.onograph.server.EntryPointImpl();
    org.neo4j.server.startup.EntryPoint.Priority priority1 = entryPointImpl0.getPriority();
    io.github.onograph.server.EntryPointImpl entryPointImpl2 = new io.github.onograph.server.EntryPointImpl();
    io.github.onograph.server.EntryPointImpl entryPointImpl3 = new io.github.onograph.server.EntryPointImpl();
    int int4 = entryPointImpl2.compareTo((org.neo4j.server.startup.EntryPoint) entryPointImpl3);
    org.neo4j.server.startup.EntryPoint.Priority priority5 = entryPointImpl2.getPriority();
    int int6 = entryPointImpl0.compareTo((org.neo4j.server.startup.EntryPoint) entryPointImpl2);
    org.junit.Assert.assertTrue(
        "'" + priority1 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority1.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertTrue(
        "'" + priority5 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority5.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
  }

  @Test
  public void test0553() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0553");
    }
    java.time.Clock clock0 = null;
    org.neo4j.kernel.database.DatabaseIdRepository databaseIdRepository1 = null;
    io.github.onograph.dbms.DbmsManagerWatchTagImpl dbmsManagerWatchTagImpl2 = null;
    java.time.ZoneId zoneId3 = null;
    io.github.onograph.dbms.serverproc.BasicProcedureQuarantineDatabaseImpl basicProcedureQuarantineDatabaseImpl4 = io.github.onograph.dbms.serverproc.BasicProcedureQuarantineDatabaseImpl.clsrBasicProcedureQuarantineDatabaseImpl(
        clock0, databaseIdRepository1, dbmsManagerWatchTagImpl2, zoneId3);
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature5 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature6 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature7 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature8 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature9 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.kernel.api.procedure.Context context10 = null;
    org.neo4j.values.AnyValue anyValue11 = null;
    org.neo4j.values.AnyValue[] anyValueArray12 = new org.neo4j.values.AnyValue[]{anyValue11};
    org.neo4j.kernel.api.ResourceTracker resourceTracker13 = null;
    try {
      org.neo4j.collection.RawIterator<org.neo4j.values.AnyValue[], org.neo4j.internal.kernel.api.exceptions.ProcedureException> anyValueArrayRawIterator14 = basicProcedureQuarantineDatabaseImpl4.apply(
          context10, anyValueArray12, resourceTracker13);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalArgumentException; message: *** Error: c3bc6648-f892-4d86-9614-b53ef18de3fb");
    } catch (java.lang.IllegalArgumentException e) {
    }
    org.junit.Assert.assertNotNull(basicProcedureQuarantineDatabaseImpl4);
    org.junit.Assert.assertNotNull(procedureSignature5);
    org.junit.Assert.assertNotNull(procedureSignature6);
    org.junit.Assert.assertNotNull(procedureSignature7);
    org.junit.Assert.assertNotNull(procedureSignature8);
    org.junit.Assert.assertNotNull(procedureSignature9);
    org.junit.Assert.assertNotNull(anyValueArray12);
  }

  @Test
  public void test0554() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0554");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener6);
    java.lang.String str8 = clusteringDBMSBuilder3.getEdition();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "enterprise" + "'", str8, "enterprise");
  }

  @Test
  public void test0555() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0555");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    int int5 = enhancedBootstrapper0.stop();
    java.nio.file.Path path6 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
    try {
      int int8 = enhancedBootstrapper0.start(path6, strMap7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
  }

  @Test
  public void test0556() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0556");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver6);
    java.lang.String str8 = clusteringDBMSBuilder5.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver9);
    try {
      io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl11 = clusteringDBMSBuilder10.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "enterprise" + "'", str8, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
  }

  @Test
  public void test0557() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0557");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl6.startDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0558() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0558");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        "");
    java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder1.setConfigRaw(
          strMap6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
  }

  @Test
  public void test0559() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0559");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    int int1 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int2 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int3 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int4 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.ExecutionContext executionContext5 = null;
    try {
      io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommand nodeStoreWrapperCopyCommand6 = nodeStoreWrapperCopyCommandCommandProvider0.createCommand(
          executionContext5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
  }

  @Test
  public void test0560() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0560");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    try {
      databaseManagementServiceClusterImpl3.createDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0561() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0561");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder8.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder10.loadPropertiesFromFile(
        "hi!");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
  }

  @Test
  public void test0562() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0562");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.common.DependencyResolver dependencyResolver2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver2);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener4 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder5 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener4);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = databaseManagementServiceBuilder5.addDatabaseListener(
        databaseEventListener6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = databaseManagementServiceBuilder5.setMonitors(
        monitors8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
  }

  @Test
  public void test0563() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0563");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      java.util.List<java.lang.String> strList7 = databaseManagementServiceClusterImpl6.listDatabases();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0564() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0564");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    try {
      org.neo4j.graphdb.GraphDatabaseService graphDatabaseService6 = databaseManagementServiceClusterImpl4.database(
          "enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0565() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0565");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log2 = enhancedBootstrapper0.getLog();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    java.lang.String[] strArray5 = new java.lang.String[]{""};
    try {
      int int6 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray5);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNotNull(log2);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(strArray5);
  }

  @Test
  public void test0566() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0566");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    try {
      org.neo4j.graphdb.GraphDatabaseService graphDatabaseService5 = databaseManagementServiceClusterImpl2.database(
          "hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0567() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0567");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    org.neo4j.cli.Command.CommandType commandType1 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType2 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    int int3 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType4 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.ExecutionContext executionContext5 = null;
    try {
      io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommand nodeStoreWrapperCopyCommand6 = nodeStoreWrapperCopyCommandCommandProvider0.createCommand(
          executionContext5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue(
        "'" + commandType1 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType1.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
  }

  @Test
  public void test0568() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0568");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    org.neo4j.logging.Log log5 = enhancedBootstrapper0.getLog();
    java.nio.file.Path path6 = null;
    java.nio.file.Path path7 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
    try {
      int int10 = enhancedBootstrapper0.start(path6, path7, strMap8, true);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertNotNull(log5);
  }

  @Test
  public void test0569() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0569");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder8.addDatabaseListener(
        databaseEventListener9);
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService11 = clusteringDBMSBuilder10.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
  }

  @Test
  public void test0570() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0570");
    }
    java.lang.String[] strArray2 = new java.lang.String[]{"enterprise", "enterprise"};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray2);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray2);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray2);
    try {
      io.github.onograph.server.EntryPointImpl.startBootstrapper(strArray2);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNotNull(strArray2);
  }

  @Test
  public void test0571() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0571");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    int int4 = enhancedBootstrapper0.stop();
    int int5 = enhancedBootstrapper0.stop();
    int int6 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService7 = enhancedBootstrapper0.getDatabaseManagementService();
    java.lang.String[] strArray12 = new java.lang.String[]{"hi!", "enterprise", "enterprise",
        "enterprise"};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray12);
    try {
      int int14 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray12);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    org.junit.Assert.assertNull(databaseManagementService7);
    org.junit.Assert.assertNotNull(strArray12);
  }

  @Test
  public void test0572() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0572");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    boolean boolean1 = enhancedBootstrapper0.isRunning();
    java.nio.file.Path path2 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap3 = null;
    try {
      int int4 = enhancedBootstrapper0.start(path2, strMap3);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
  }

  @Test
  public void test0573() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0573");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl6.dropDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0574() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0574");
    }
    io.github.onograph.dbms.utils.TokenNamePropertyDTO tokenNamePropertyDTO2 = new io.github.onograph.dbms.utils.TokenNamePropertyDTO(
        "hi!", "");
    java.lang.String str3 = tokenNamePropertyDTO2.getStrNt();
    java.lang.String str4 = tokenNamePropertyDTO2.getStrNp();
    java.lang.String str5 = tokenNamePropertyDTO2.getStrNp();
    java.lang.String str6 = tokenNamePropertyDTO2.getStrNt();
    java.lang.String str7 = tokenNamePropertyDTO2.getStrNp();
    java.lang.String str8 = tokenNamePropertyDTO2.getStrNt();
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
  }

  @Test
  public void test0575() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0575");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider11);
    java.nio.file.Path path13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.loadPropertiesFromFile(
        path13);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = clusteringDBMSBuilder12.loadPropertiesFromFile(
        "hi!");
    try {
      io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl17 = clusteringDBMSBuilder12.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
  }

  @Test
  public void test0576() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0576");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder10.setMonitors(
        monitors11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder10.setUserLogProvider(
        logProvider13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
  }

  @Test
  public void test0577() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0577");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log2 = enhancedBootstrapper0.getLog();
    int int3 = enhancedBootstrapper0.stop();
    int int4 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log5 = enhancedBootstrapper0.getLog();
    java.nio.file.Path path6 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
    try {
      int int8 = enhancedBootstrapper0.start(path6, strMap7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNotNull(log2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertNotNull(log5);
  }

  @Test
  public void test0578() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0578");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction10 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction11 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv12 = null;
    metaUpgradeFlowAction11.accept(upgradeMetaEnv12);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = metaUpgradeFlowAction10.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction11);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction15 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction16 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv17 = null;
    metaUpgradeFlowAction16.accept(upgradeMetaEnv17);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction19 = metaUpgradeFlowAction15.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction16);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv20 = null;
    metaUpgradeFlowAction15.accept(upgradeMetaEnv20);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = metaUpgradeFlowAction11.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv24 = null;
    metaUpgradeFlowAction23.accept(upgradeMetaEnv24);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer26 = metaUpgradeFlowAction22.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction23);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer27 = metaUpgradeFlowAction5.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction28 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction29 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv30 = null;
    metaUpgradeFlowAction29.accept(upgradeMetaEnv30);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction32 = metaUpgradeFlowAction28.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction29);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction33 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction34 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv35 = null;
    metaUpgradeFlowAction34.accept(upgradeMetaEnv35);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction37 = metaUpgradeFlowAction33.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction34);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction38 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction39 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv40 = null;
    metaUpgradeFlowAction39.accept(upgradeMetaEnv40);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = metaUpgradeFlowAction38.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction39);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction43 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction44 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv45 = null;
    metaUpgradeFlowAction44.accept(upgradeMetaEnv45);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction47 = metaUpgradeFlowAction43.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction44);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv48 = null;
    metaUpgradeFlowAction43.accept(upgradeMetaEnv48);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction50 = metaUpgradeFlowAction39.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction43);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction51 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv52 = null;
    metaUpgradeFlowAction51.accept(upgradeMetaEnv52);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer54 = metaUpgradeFlowAction50.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction51);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction55 = metaUpgradeFlowAction33.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction51);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction56 = metaUpgradeFlowAction32.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction55);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer57 = metaUpgradeFlowAction23.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction32);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction58 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction32);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv59 = null;
    metaUpgradeFlowAction32.accept(upgradeMetaEnv59);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction10);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction11);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction15);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction16);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction19);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer26);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction28);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction29);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction32);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction33);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction34);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction37);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction38);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction39);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction43);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction44);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction47);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction50);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction51);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer54);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction55);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction56);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer57);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction58);
  }

  @Test
  public void test0579() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0579");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.logging.LogProvider logProvider8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder7.setUserLogProvider(
        logProvider8);
    java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder9.setConfigRaw(
          strMap10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
  }

  @Test
  public void test0580() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0580");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder5.setMonitors(
        monitors9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider11);
    org.neo4j.common.DependencyResolver dependencyResolver13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver13);
    org.neo4j.logging.LogProvider logProvider15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = databaseManagementServiceBuilder14.setUserLogProvider(
        logProvider15);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener17 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder18 = databaseManagementServiceBuilder16.addDatabaseListener(
        databaseEventListener17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder18);
  }

  @Test
  public void test0581() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0581");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver5 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder6 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver5);
    java.nio.file.Path path7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path7);
    java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder1.setConfigRaw(
          strMap9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
  }

  @Test
  public void test0582() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0582");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl7.createDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0583() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0583");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    try {
      databaseManagementServiceClusterImpl2.dropDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0584() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0584");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    int int4 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService5 = enhancedBootstrapper0.getDatabaseManagementService();
    java.nio.file.Path path6 = null;
    java.nio.file.Path path7 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
    try {
      int int10 = enhancedBootstrapper0.start(path6, path7, strMap8, true);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertNull(databaseManagementService5);
  }

  @Test
  public void test0585() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0585");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    try {
      databaseManagementServiceClusterImpl3.startDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0586() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0586");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    try {
      boolean boolean6 = databaseManagementServiceClusterImpl4.isWraeForSt("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0587() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0587");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    org.neo4j.graphdb.config.Configuration configuration5 = null;
    try {
      databaseManagementServiceClusterImpl3.createDatabase("", configuration5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0588() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0588");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener5 = null;
    try {
      databaseManagementServiceClusterImpl4.unregisterDatabaseEventListener(databaseEventListener5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0589() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0589");
    }
    java.lang.String[] strArray1 = new java.lang.String[]{"enterprise"};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray1);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray1);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray1);
    try {
      io.github.onograph.server.EntryPointImpl.startBootstrapper(strArray1);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNotNull(strArray1);
  }

  @Test
  public void test0590() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0590");
    }
    java.time.Clock clock0 = null;
    org.neo4j.kernel.database.DatabaseIdRepository databaseIdRepository1 = null;
    io.github.onograph.dbms.DbmsManagerWatchTagImpl dbmsManagerWatchTagImpl2 = null;
    java.time.ZoneId zoneId3 = null;
    io.github.onograph.dbms.serverproc.BasicProcedureQuarantineDatabaseImpl basicProcedureQuarantineDatabaseImpl4 = io.github.onograph.dbms.serverproc.BasicProcedureQuarantineDatabaseImpl.clsrBasicProcedureQuarantineDatabaseImpl(
        clock0, databaseIdRepository1, dbmsManagerWatchTagImpl2, zoneId3);
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature5 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature6 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature7 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.kernel.api.procedure.Context context8 = null;
    org.neo4j.values.AnyValue[] anyValueArray9 = null;
    org.neo4j.kernel.api.ResourceTracker resourceTracker10 = null;
    try {
      org.neo4j.collection.RawIterator<org.neo4j.values.AnyValue[], org.neo4j.internal.kernel.api.exceptions.ProcedureException> anyValueArrayRawIterator11 = basicProcedureQuarantineDatabaseImpl4.apply(
          context8, anyValueArray9, resourceTracker10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(basicProcedureQuarantineDatabaseImpl4);
    org.junit.Assert.assertNotNull(procedureSignature5);
    org.junit.Assert.assertNotNull(procedureSignature6);
    org.junit.Assert.assertNotNull(procedureSignature7);
  }

  @Test
  public void test0591() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0591");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver10);
    java.nio.file.Path path12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder13.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder13.setUserLogProvider(
        logProvider16);
    java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder19 = clusteringDBMSBuilder17.setConfigRaw(
          strMap18);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
  }

  @Test
  public void test0592() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0592");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver5 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder6 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver5);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.logging.LogProvider logProvider9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder1.setMonitors(
        monitors11);
    try {
      io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl13 = clusteringDBMSBuilder1.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
  }

  @Test
  public void test0593() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0593");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener5 = null;
    try {
      databaseManagementServiceClusterImpl4.unregisterDatabaseEventListener(databaseEventListener5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0594() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0594");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction10 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction11 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv12 = null;
    metaUpgradeFlowAction11.accept(upgradeMetaEnv12);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = metaUpgradeFlowAction10.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction11);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction15 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction16 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv17 = null;
    metaUpgradeFlowAction16.accept(upgradeMetaEnv17);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction19 = metaUpgradeFlowAction15.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction16);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv20 = null;
    metaUpgradeFlowAction15.accept(upgradeMetaEnv20);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = metaUpgradeFlowAction11.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv24 = null;
    metaUpgradeFlowAction23.accept(upgradeMetaEnv24);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer26 = metaUpgradeFlowAction22.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction27 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction28 = metaUpgradeFlowAction4.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction27);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction29 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer30 = metaUpgradeFlowAction28.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction29);
    org.neo4j.io.layout.Neo4jLayout neo4jLayout31 = null;
    io.github.onograph.dbms.MetaUpgradeFlowActionStagingImpl metaUpgradeFlowActionStagingImpl32 = new io.github.onograph.dbms.MetaUpgradeFlowActionStagingImpl(
        neo4jLayout31);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer33 = metaUpgradeFlowAction29.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowActionStagingImpl32);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv34 = null;
    try {
      metaUpgradeFlowActionStagingImpl32.pefmseForUp(upgradeMetaEnv34);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction10);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction11);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction15);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction16);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction19);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer26);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction28);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction29);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer30);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer33);
  }

  @Test
  public void test0595() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0595");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    try {
      databaseManagementServiceClusterImpl1.startDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0596() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0596");
    }
    io.github.onograph.cluster.raft.module.dprot.ClusterStructureService clusterStructureService0 = null;
    org.neo4j.kernel.database.DatabaseIdRepository databaseIdRepository1 = null;
    io.github.onograph.dbms.serverproc.DatabaseStateProcedureClusterImpl databaseStateProcedureClusterImpl2 = new io.github.onograph.dbms.serverproc.DatabaseStateProcedureClusterImpl(
        clusterStructureService0, databaseIdRepository1);
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature3 = databaseStateProcedureClusterImpl2.signature();
    org.neo4j.kernel.api.procedure.Context context4 = null;
    org.neo4j.values.AnyValue[] anyValueArray5 = null;
    org.neo4j.kernel.api.ResourceTracker resourceTracker6 = null;
    try {
      org.neo4j.collection.RawIterator<org.neo4j.values.AnyValue[], org.neo4j.internal.kernel.api.exceptions.ProcedureException> anyValueArrayRawIterator7 = databaseStateProcedureClusterImpl2.apply(
          context4, anyValueArray5, resourceTracker6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(procedureSignature3);
  }

  @Test
  public void test0597() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0597");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener5 = null;
    try {
      databaseManagementServiceClusterImpl4.unregisterDatabaseEventListener(databaseEventListener5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0598() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0598");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    int int4 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService5 = enhancedBootstrapper0.getDatabaseManagementService();
    java.nio.file.Path path6 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
    try {
      int int8 = enhancedBootstrapper0.start(path6, strMap7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertNull(databaseManagementService5);
  }

  @Test
  public void test0599() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0599");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    try {
      databaseManagementServiceClusterImpl7.createDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0600() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0600");
    }
    java.time.Clock clock0 = null;
    org.neo4j.kernel.database.DatabaseIdRepository databaseIdRepository1 = null;
    io.github.onograph.dbms.DbmsManagerWatchTagImpl dbmsManagerWatchTagImpl2 = null;
    java.time.ZoneId zoneId3 = null;
    io.github.onograph.dbms.serverproc.BasicProcedureQuarantineDatabaseImpl basicProcedureQuarantineDatabaseImpl4 = io.github.onograph.dbms.serverproc.BasicProcedureQuarantineDatabaseImpl.clsrBasicProcedureQuarantineDatabaseImpl(
        clock0, databaseIdRepository1, dbmsManagerWatchTagImpl2, zoneId3);
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature5 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature6 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature7 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature8 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.kernel.api.procedure.Context context9 = null;
    org.neo4j.values.AnyValue[] anyValueArray10 = null;
    org.neo4j.kernel.api.ResourceTracker resourceTracker11 = null;
    try {
      org.neo4j.collection.RawIterator<org.neo4j.values.AnyValue[], org.neo4j.internal.kernel.api.exceptions.ProcedureException> anyValueArrayRawIterator12 = basicProcedureQuarantineDatabaseImpl4.apply(
          context9, anyValueArray10, resourceTracker11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(basicProcedureQuarantineDatabaseImpl4);
    org.junit.Assert.assertNotNull(procedureSignature5);
    org.junit.Assert.assertNotNull(procedureSignature6);
    org.junit.Assert.assertNotNull(procedureSignature7);
    org.junit.Assert.assertNotNull(procedureSignature8);
  }

  @Test
  public void test0601() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0601");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    java.nio.file.Path path9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path9);
    org.neo4j.common.DependencyResolver dependencyResolver11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = databaseManagementServiceBuilder10.setExternalDependencies(
        dependencyResolver11);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = databaseManagementServiceBuilder12.addURLAccessRule(
        "enterprise", uRLAccessRule14);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = databaseManagementServiceBuilder12.addDatabaseListener(
        databaseEventListener16);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = databaseManagementServiceBuilder12.addDatabaseListener(
        databaseEventListener18);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder21 = databaseManagementServiceBuilder19.loadPropertiesFromFile(
        "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder21);
  }

  @Test
  public void test0602() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0602");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    org.neo4j.graphdb.config.Configuration configuration8 = null;
    try {
      databaseManagementServiceClusterImpl6.createDatabase("enterprise", configuration8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0603() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0603");
    }
    java.time.Clock clock0 = null;
    org.neo4j.kernel.database.DatabaseIdRepository databaseIdRepository1 = null;
    io.github.onograph.dbms.DbmsManagerWatchTagImpl dbmsManagerWatchTagImpl2 = null;
    java.time.ZoneId zoneId3 = null;
    io.github.onograph.dbms.serverproc.BasicProcedureQuarantineDatabaseImpl basicProcedureQuarantineDatabaseImpl4 = io.github.onograph.dbms.serverproc.BasicProcedureQuarantineDatabaseImpl.clsrBasicProcedureQuarantineDatabaseImpl(
        clock0, databaseIdRepository1, dbmsManagerWatchTagImpl2, zoneId3);
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature5 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature6 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature7 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature8 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature9 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.kernel.api.procedure.Context context10 = null;
    org.neo4j.values.AnyValue[] anyValueArray11 = null;
    org.neo4j.kernel.api.ResourceTracker resourceTracker12 = null;
    try {
      org.neo4j.collection.RawIterator<org.neo4j.values.AnyValue[], org.neo4j.internal.kernel.api.exceptions.ProcedureException> anyValueArrayRawIterator13 = basicProcedureQuarantineDatabaseImpl4.apply(
          context10, anyValueArray11, resourceTracker12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(basicProcedureQuarantineDatabaseImpl4);
    org.junit.Assert.assertNotNull(procedureSignature5);
    org.junit.Assert.assertNotNull(procedureSignature6);
    org.junit.Assert.assertNotNull(procedureSignature7);
    org.junit.Assert.assertNotNull(procedureSignature8);
    org.junit.Assert.assertNotNull(procedureSignature9);
  }

  @Test
  public void test0604() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0604");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.setMonitors(
        monitors11);
    java.util.Map<java.lang.String, java.lang.String> strMap13 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder10.setConfigRaw(
          strMap13);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
  }

  @Test
  public void test0605() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0605");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.monitoring.Monitors monitors6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder1.setMonitors(
        monitors6);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder1.addURLAccessRule(
        "enterprise", uRLAccessRule9);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder1.addURLAccessRule(
        "hi!", uRLAccessRule12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder1.setMonitors(
        monitors14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
  }

  @Test
  public void test0606() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0606");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.setExternalDependencies(
        dependencyResolver13);
    java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder12.setConfigRaw(
          strMap15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
  }

  @Test
  public void test0607() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0607");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    int int5 = enhancedBootstrapper0.stop();
    int int6 = enhancedBootstrapper0.stop();
    int int7 = enhancedBootstrapper0.stop();
    int int8 = enhancedBootstrapper0.stop();
    java.nio.file.Path path9 = null;
    java.nio.file.Path path10 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
    try {
      int int13 = enhancedBootstrapper0.start(path9, path10, strMap11, false);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
  }

  @Test
  public void test0608() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0608");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver6);
    java.lang.String str8 = clusteringDBMSBuilder5.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver9);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder12.addDatabaseListener(
        databaseEventListener13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "enterprise" + "'", str8, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
  }

  @Test
  public void test0609() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0609");
    }
    io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider commandGetServerIdCommandProvider0 = new io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider();
    int int1 = commandGetServerIdCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType2 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType3 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType4 = commandGetServerIdCommandProvider0.commandType();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
  }

  @Test
  public void test0610() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0610");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    try {
      boolean boolean10 = databaseManagementServiceClusterImpl6.isWraeForSt("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0611() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0611");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    try {
      org.neo4j.graphdb.GraphDatabaseService graphDatabaseService6 = databaseManagementServiceClusterImpl4.database(
          "");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0612() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0612");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider16);
    java.nio.file.Path path18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        path18);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    java.lang.String str22 = clusteringDBMSBuilder9.getEdition();
    java.nio.file.Path path23 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder24 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        path23);
    org.neo4j.common.DependencyResolver dependencyResolver25 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder26 = clusteringDBMSBuilder9.setExternalDependencies(
        dependencyResolver25);
    try {
      io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl27 = clusteringDBMSBuilder26.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder21);
    org.junit.Assert.assertEquals("'" + str22 + "' != '" + "enterprise" + "'", str22, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder24);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder26);
  }

  @Test
  public void test0613() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0613");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder7.setMonitors(
        monitors8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder7.setMonitors(
        monitors10);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder7.loadPropertiesFromFile(
        "hi!");
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder7.loadPropertiesFromFile(
        "hi!");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
  }

  @Test
  public void test0614() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0614");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider11);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "hi!");
    org.neo4j.logging.LogProvider logProvider15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider15);
    java.lang.String str17 = clusteringDBMSBuilder16.getEdition();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "enterprise" + "'", str17, "enterprise");
  }

  @Test
  public void test0615() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0615");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    int int4 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log5 = enhancedBootstrapper0.getLog();
    int int6 = enhancedBootstrapper0.stop();
    int int7 = enhancedBootstrapper0.stop();
    int int8 = enhancedBootstrapper0.stop();
    java.lang.String[] strArray14 = new java.lang.String[]{"", "enterprise", "enterprise",
        "enterprise", "hi!"};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray14);
    try {
      int int16 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray14);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertNotNull(log5);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    org.junit.Assert.assertNotNull(strArray14);
  }

  @Test
  public void test0616() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0616");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl1);
    try {
      databaseManagementServiceClusterImpl2.shutdownDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0617() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0617");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "hi!");
    org.neo4j.monitoring.Monitors monitors8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder3.setMonitors(
        monitors8);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.addDatabaseListener(
        databaseEventListener10);
    java.lang.Class<?> wildcardClass12 = clusteringDBMSBuilder11.getClass();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(wildcardClass12);
  }

  @Test
  public void test0618() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0618");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver6);
    java.lang.Class<?> wildcardClass8 = clusteringDBMSBuilder7.getClass();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(wildcardClass8);
  }

  @Test
  public void test0619() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0619");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    try {
      databaseManagementServiceClusterImpl4.dropDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0620() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0620");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.addDatabaseListener(
        databaseEventListener11);
    java.lang.Class<?> wildcardClass13 = clusteringDBMSBuilder10.getClass();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(wildcardClass13);
  }

  @Test
  public void test0621() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0621");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    try {
      databaseManagementServiceClusterImpl3.shutdown();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0622() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0622");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = databaseManagementServiceBuilder8.setMonitors(
        monitors9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
  }

  @Test
  public void test0623() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0623");
    }
    io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider commandGetServerIdCommandProvider0 = new io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider();
    java.lang.Class<?> wildcardClass1 = commandGetServerIdCommandProvider0.getClass();
    org.junit.Assert.assertNotNull(wildcardClass1);
  }

  @Test
  public void test0624() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0624");
    }
    io.github.onograph.server.EntryPointImpl entryPointImpl0 = new io.github.onograph.server.EntryPointImpl();
    io.github.onograph.server.EntryPointImpl entryPointImpl1 = new io.github.onograph.server.EntryPointImpl();
    int int2 = entryPointImpl0.compareTo((org.neo4j.server.startup.EntryPoint) entryPointImpl1);
    io.github.onograph.server.EntryPointImpl entryPointImpl3 = new io.github.onograph.server.EntryPointImpl();
    org.neo4j.server.startup.EntryPoint.Priority priority4 = entryPointImpl3.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority5 = entryPointImpl3.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority6 = entryPointImpl3.getPriority();
    int int7 = entryPointImpl1.compareTo((org.neo4j.server.startup.EntryPoint) entryPointImpl3);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue(
        "'" + priority4 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority4.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority5 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority5.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority6 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority6.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
  }

  @Test
  public void test0625() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0625");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    int int5 = enhancedBootstrapper0.stop();
    int int6 = enhancedBootstrapper0.stop();
    int int7 = enhancedBootstrapper0.stop();
    int int8 = enhancedBootstrapper0.stop();
    java.nio.file.Path path9 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
    try {
      int int11 = enhancedBootstrapper0.start(path9, strMap10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
  }

  @Test
  public void test0626() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0626");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.common.DependencyResolver dependencyResolver11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.setExternalDependencies(
        dependencyResolver11);
    java.util.Map<java.lang.String, java.lang.String> strMap13 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder12.setConfigRaw(
          strMap13);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
  }

  @Test
  public void test0627() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0627");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
  }

  @Test
  public void test0628() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0628");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener7 = null;
    try {
      databaseManagementServiceClusterImpl6.unregisterDatabaseEventListener(databaseEventListener7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0629() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0629");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService5 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService6 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log7 = enhancedBootstrapper0.getLog();
    java.lang.String[] strArray14 = new java.lang.String[]{"hi!", "hi!", "enterprise", "",
        "enterprise", "enterprise"};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray14);
    try {
      int int16 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray14);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNull(databaseManagementService4);
    org.junit.Assert.assertNull(databaseManagementService5);
    org.junit.Assert.assertNull(databaseManagementService6);
    org.junit.Assert.assertNotNull(log7);
    org.junit.Assert.assertNotNull(strArray14);
  }

  @Test
  public void test0630() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0630");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder7.setMonitors(
        monitors8);
    org.neo4j.logging.LogProvider logProvider10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder7.setUserLogProvider(
        logProvider10);
    org.neo4j.common.DependencyResolver dependencyResolver12 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = databaseManagementServiceBuilder11.setExternalDependencies(
        dependencyResolver12);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = databaseManagementServiceBuilder13.addDatabaseListener(
        databaseEventListener14);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = databaseManagementServiceBuilder13.addDatabaseListener(
        databaseEventListener16);
    java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = databaseManagementServiceBuilder13.setConfigRaw(
          strMap18);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
  }

  @Test
  public void test0631() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0631");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction10 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction11 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv12 = null;
    metaUpgradeFlowAction11.accept(upgradeMetaEnv12);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = metaUpgradeFlowAction10.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction11);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv15 = null;
    metaUpgradeFlowAction10.accept(upgradeMetaEnv15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction17 = metaUpgradeFlowAction6.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction10);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction18 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv19 = null;
    metaUpgradeFlowAction18.accept(upgradeMetaEnv19);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer21 = metaUpgradeFlowAction17.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction18);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction18);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction24 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv25 = null;
    metaUpgradeFlowAction24.accept(upgradeMetaEnv25);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction27 = metaUpgradeFlowAction23.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction24);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction28 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction29 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv30 = null;
    metaUpgradeFlowAction29.accept(upgradeMetaEnv30);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction32 = metaUpgradeFlowAction28.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction29);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv33 = null;
    metaUpgradeFlowAction28.accept(upgradeMetaEnv33);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction35 = metaUpgradeFlowAction24.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction28);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer36 = metaUpgradeFlowAction22.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction28);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction37 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction38 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv39 = null;
    metaUpgradeFlowAction38.accept(upgradeMetaEnv39);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction41 = metaUpgradeFlowAction37.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction38);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction43 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv44 = null;
    metaUpgradeFlowAction43.accept(upgradeMetaEnv44);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction46 = metaUpgradeFlowAction42.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction43);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv47 = null;
    metaUpgradeFlowAction42.accept(upgradeMetaEnv47);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction49 = metaUpgradeFlowAction38.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction42);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction50 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv51 = null;
    metaUpgradeFlowAction50.accept(upgradeMetaEnv51);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer53 = metaUpgradeFlowAction49.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction50);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction54 = metaUpgradeFlowAction28.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction50);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction55 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction56 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv57 = null;
    metaUpgradeFlowAction56.accept(upgradeMetaEnv57);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction59 = metaUpgradeFlowAction55.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction56);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction60 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction61 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv62 = null;
    metaUpgradeFlowAction61.accept(upgradeMetaEnv62);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction64 = metaUpgradeFlowAction60.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction61);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv65 = null;
    metaUpgradeFlowAction60.accept(upgradeMetaEnv65);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction67 = metaUpgradeFlowAction56.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction60);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction68 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv69 = null;
    metaUpgradeFlowAction68.accept(upgradeMetaEnv69);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer71 = metaUpgradeFlowAction67.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction68);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv72 = null;
    metaUpgradeFlowAction67.accept(upgradeMetaEnv72);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction74 = metaUpgradeFlowAction50.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction67);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction10);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction11);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction17);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction18);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer21);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction24);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction28);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction29);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction32);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction35);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer36);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction37);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction38);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction41);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction43);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction46);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction49);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction50);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer53);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction54);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction55);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction56);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction59);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction60);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction61);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction64);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction67);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction68);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer71);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction74);
  }

  @Test
  public void test0632() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0632");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    try {
      databaseManagementServiceClusterImpl4.dropDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0633() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0633");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl5.shutdownDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0634() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0634");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    try {
      databaseManagementServiceClusterImpl6.createDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0635() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0635");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    java.lang.String str9 = clusteringDBMSBuilder3.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder3.setMonitors(
        monitors12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver14);
    java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder3.setConfigRaw(
          strMap16);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "enterprise" + "'", str9, "enterprise");
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
  }

  @Test
  public void test0636() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0636");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.setUserLogProvider(
        logProvider11);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder12.addURLAccessRule(
        "hi!", uRLAccessRule14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
  }

  @Test
  public void test0637() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0637");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "");
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.loadPropertiesFromFile(
        "");
    java.lang.String str15 = clusteringDBMSBuilder14.getEdition();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "enterprise" + "'", str15, "enterprise");
  }

  @Test
  public void test0638() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0638");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    org.neo4j.graphdb.config.Configuration configuration9 = null;
    try {
      databaseManagementServiceClusterImpl7.createDatabase("hi!", configuration9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0639() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0639");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl5.startDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0640() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0640");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    try {
      boolean boolean7 = databaseManagementServiceClusterImpl5.isWraeForSt("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0641() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0641");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    try {
      org.neo4j.graphdb.GraphDatabaseService graphDatabaseService4 = databaseManagementServiceClusterImpl2.database(
          "");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0642() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0642");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction10 = metaUpgradeFlowAction4.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction5);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv11 = null;
    metaUpgradeFlowAction5.accept(upgradeMetaEnv11);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction13 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv15 = null;
    metaUpgradeFlowAction14.accept(upgradeMetaEnv15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction17 = metaUpgradeFlowAction13.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction14);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction18 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction19 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv20 = null;
    metaUpgradeFlowAction19.accept(upgradeMetaEnv20);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = metaUpgradeFlowAction18.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction19);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv23 = null;
    metaUpgradeFlowAction18.accept(upgradeMetaEnv23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction25 = metaUpgradeFlowAction14.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction18);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction26 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction18);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction27 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction28 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv29 = null;
    metaUpgradeFlowAction28.accept(upgradeMetaEnv29);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction31 = metaUpgradeFlowAction27.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction28);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction32 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction33 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv34 = null;
    metaUpgradeFlowAction33.accept(upgradeMetaEnv34);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction36 = metaUpgradeFlowAction32.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction33);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction37 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction38 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv39 = null;
    metaUpgradeFlowAction38.accept(upgradeMetaEnv39);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction41 = metaUpgradeFlowAction37.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction38);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction43 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv44 = null;
    metaUpgradeFlowAction43.accept(upgradeMetaEnv44);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction46 = metaUpgradeFlowAction42.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction43);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv47 = null;
    metaUpgradeFlowAction42.accept(upgradeMetaEnv47);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction49 = metaUpgradeFlowAction38.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction42);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction50 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv51 = null;
    metaUpgradeFlowAction50.accept(upgradeMetaEnv51);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer53 = metaUpgradeFlowAction49.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction50);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction54 = metaUpgradeFlowAction32.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction50);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction55 = metaUpgradeFlowAction31.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction54);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction56 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction57 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv58 = null;
    metaUpgradeFlowAction57.accept(upgradeMetaEnv58);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction60 = metaUpgradeFlowAction56.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction57);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction61 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction62 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv63 = null;
    metaUpgradeFlowAction62.accept(upgradeMetaEnv63);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction65 = metaUpgradeFlowAction61.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction62);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv66 = null;
    metaUpgradeFlowAction61.accept(upgradeMetaEnv66);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction68 = metaUpgradeFlowAction57.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction61);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction69 = metaUpgradeFlowAction31.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction68);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction70 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction68);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv71 = null;
    metaUpgradeFlowAction68.accept(upgradeMetaEnv71);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction10);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction13);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction17);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction18);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction19);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction25);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction26);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction28);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction31);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction32);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction33);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction36);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction37);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction38);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction41);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction43);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction46);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction49);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction50);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer53);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction54);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction55);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction56);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction57);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction60);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction61);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction62);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction65);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction68);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction69);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction70);
  }

  @Test
  public void test0643() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0643");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction10 = metaUpgradeFlowAction4.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction5);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction11 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction12 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv13 = null;
    metaUpgradeFlowAction12.accept(upgradeMetaEnv13);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction15 = metaUpgradeFlowAction11.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction12);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction16 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction17 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv18 = null;
    metaUpgradeFlowAction17.accept(upgradeMetaEnv18);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction20 = metaUpgradeFlowAction16.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction17);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv21 = null;
    metaUpgradeFlowAction16.accept(upgradeMetaEnv21);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = metaUpgradeFlowAction12.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction16);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction24 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv25 = null;
    metaUpgradeFlowAction24.accept(upgradeMetaEnv25);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer27 = metaUpgradeFlowAction23.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction24);
    org.neo4j.io.layout.Neo4jLayout neo4jLayout28 = null;
    io.github.onograph.dbms.MetaUpgradeFlowActionStagingImpl metaUpgradeFlowActionStagingImpl29 = new io.github.onograph.dbms.MetaUpgradeFlowActionStagingImpl(
        neo4jLayout28);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer30 = upgradeMetaEnvConsumer27.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowActionStagingImpl29);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction31 = metaUpgradeFlowAction10.andMetaUpgradeFlowAction(
        (io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction) metaUpgradeFlowActionStagingImpl29);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv32 = null;
    try {
      metaUpgradeFlowActionStagingImpl29.pefmseForUp(upgradeMetaEnv32);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction10);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction11);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction12);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction15);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction16);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction17);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction20);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction24);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer27);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer30);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction31);
  }

  @Test
  public void test0644() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0644");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction10 = metaUpgradeFlowAction4.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction5);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction11 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction12 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv13 = null;
    metaUpgradeFlowAction12.accept(upgradeMetaEnv13);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction15 = metaUpgradeFlowAction11.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction12);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv16 = null;
    metaUpgradeFlowAction11.accept(upgradeMetaEnv16);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction18 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction19 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv20 = null;
    metaUpgradeFlowAction19.accept(upgradeMetaEnv20);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = metaUpgradeFlowAction18.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction19);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer23 = metaUpgradeFlowAction11.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction18);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction24 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction25 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv26 = null;
    metaUpgradeFlowAction25.accept(upgradeMetaEnv26);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction28 = metaUpgradeFlowAction24.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction25);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction29 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction30 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv31 = null;
    metaUpgradeFlowAction30.accept(upgradeMetaEnv31);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction33 = metaUpgradeFlowAction29.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction30);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv34 = null;
    metaUpgradeFlowAction29.accept(upgradeMetaEnv34);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction36 = metaUpgradeFlowAction25.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction29);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction37 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv38 = null;
    metaUpgradeFlowAction37.accept(upgradeMetaEnv38);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer40 = metaUpgradeFlowAction36.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction37);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction41 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv43 = null;
    metaUpgradeFlowAction42.accept(upgradeMetaEnv43);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction45 = metaUpgradeFlowAction41.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction42);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction46 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction47 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv48 = null;
    metaUpgradeFlowAction47.accept(upgradeMetaEnv48);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction50 = metaUpgradeFlowAction46.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction47);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction51 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction52 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv53 = null;
    metaUpgradeFlowAction52.accept(upgradeMetaEnv53);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction55 = metaUpgradeFlowAction51.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction52);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction56 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction57 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv58 = null;
    metaUpgradeFlowAction57.accept(upgradeMetaEnv58);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction60 = metaUpgradeFlowAction56.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction57);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv61 = null;
    metaUpgradeFlowAction56.accept(upgradeMetaEnv61);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction63 = metaUpgradeFlowAction52.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction56);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction64 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv65 = null;
    metaUpgradeFlowAction64.accept(upgradeMetaEnv65);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer67 = metaUpgradeFlowAction63.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction64);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction68 = metaUpgradeFlowAction46.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction64);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction69 = metaUpgradeFlowAction45.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction68);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction70 = metaUpgradeFlowAction37.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction45);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction71 = metaUpgradeFlowAction11.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction37);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction72 = metaUpgradeFlowAction4.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction37);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction10);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction11);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction12);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction15);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction18);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction19);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer23);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction24);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction25);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction28);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction29);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction30);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction33);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction36);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction37);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer40);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction41);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction45);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction46);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction47);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction50);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction51);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction52);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction55);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction56);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction57);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction60);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction63);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction64);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer67);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction68);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction69);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction70);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction71);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction72);
  }

  @Test
  public void test0645() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0645");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        "hi!");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder6.addDatabaseListener(
        databaseEventListener13);
    java.lang.Class<?> wildcardClass15 = databaseManagementServiceBuilder14.getClass();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
    org.junit.Assert.assertNotNull(wildcardClass15);
  }

  @Test
  public void test0646() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0646");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    org.neo4j.graphdb.config.Configuration configuration8 = null;
    try {
      databaseManagementServiceClusterImpl5.createDatabase("enterprise", configuration8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0647() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0647");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "");
    try {
      io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl10 = clusteringDBMSBuilder9.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
  }

  @Test
  public void test0648() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0648");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    boolean boolean1 = enhancedBootstrapper0.isRunning();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService2 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    java.lang.String[] strArray8 = new java.lang.String[]{"hi!", "enterprise", "enterprise",
        "enterprise"};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray8);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray8);
    try {
      int int11 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray8);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    org.junit.Assert.assertNull(databaseManagementService2);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(strArray8);
  }

  @Test
  public void test0649() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0649");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder6.addURLAccessRule(
        "enterprise", uRLAccessRule12);
    java.nio.file.Path path14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder13.loadPropertiesFromFile(
        path14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
  }

  @Test
  public void test0650() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0650");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    int int1 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType2 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType3 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.ExecutionContext executionContext4 = null;
    try {
      io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommand nodeStoreWrapperCopyCommand5 = nodeStoreWrapperCopyCommandCommandProvider0.createCommand(
          executionContext4);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
  }

  @Test
  public void test0651() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0651");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver10);
    java.nio.file.Path path12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path12);
    java.nio.file.Path path14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider16);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule19 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder20 = clusteringDBMSBuilder17.addURLAccessRule(
        "enterprise", uRLAccessRule19);
    org.neo4j.common.DependencyResolver dependencyResolver21 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder22 = clusteringDBMSBuilder20.setExternalDependencies(
        dependencyResolver21);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder20);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder22);
  }

  @Test
  public void test0652() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0652");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    java.lang.String str11 = clusteringDBMSBuilder10.getEdition();
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder10.loadPropertiesFromFile(
        "");
    java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder13.setConfigRaw(
          strMap14);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "enterprise" + "'", str11, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
  }

  @Test
  public void test0653() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0653");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.addDatabaseListener(
        databaseEventListener7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.addDatabaseListener(
        databaseEventListener9);
    java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder6.setConfigRaw(
          strMap11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
  }

  @Test
  public void test0654() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0654");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    try {
      databaseManagementServiceClusterImpl5.createDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0655() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0655");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    int int1 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType2 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    int int3 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.ExecutionContext executionContext4 = null;
    try {
      io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommand nodeStoreWrapperCopyCommand5 = nodeStoreWrapperCopyCommandCommandProvider0.createCommand(
          executionContext4);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
  }

  @Test
  public void test0656() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0656");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule10);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder11.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder13.setMonitors(
        monitors14);
    java.lang.String str16 = clusteringDBMSBuilder15.getEdition();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "enterprise" + "'", str16, "enterprise");
  }

  @Test
  public void test0657() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0657");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    java.nio.file.Path path9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path9);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener11);
    java.nio.file.Path path13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = databaseManagementServiceBuilder12.loadPropertiesFromFile(
        path13);
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService15 = databaseManagementServiceBuilder12.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
  }

  @Test
  public void test0658() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0658");
    }
    io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider commandGetServerIdCommandProvider0 = new io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider();
    int int1 = commandGetServerIdCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType2 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType3 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.ExecutionContext executionContext4 = null;
    try {
      io.github.onograph.dbms.commands.CommandGetServerIdImpl commandGetServerIdImpl5 = commandGetServerIdCommandProvider0.createCommand(
          executionContext4);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
  }

  @Test
  public void test0659() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0659");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider14);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider18 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder19 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider18);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder19);
  }

  @Test
  public void test0660() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0660");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.setExternalDependencies(
        dependencyResolver13);
    org.neo4j.common.DependencyResolver dependencyResolver15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = clusteringDBMSBuilder14.setExternalDependencies(
        dependencyResolver15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
  }

  @Test
  public void test0661() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0661");
    }
    java.lang.String[] strArray2 = new java.lang.String[]{"enterprise", "enterprise"};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray2);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray2);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray2);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray2);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray2);
    try {
      io.github.onograph.server.EntryPointImpl.startBootstrapper(strArray2);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNotNull(strArray2);
  }

  @Test
  public void test0662() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0662");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    java.nio.file.Path path5 = null;
    java.nio.file.Path path6 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
    try {
      int int9 = enhancedBootstrapper0.start(path5, path6, strMap7, true);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(log4);
  }

  @Test
  public void test0663() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0663");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver10);
    java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder5.setConfigRaw(
          strMap12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
  }

  @Test
  public void test0664() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0664");
    }
    io.github.onograph.cluster.raft.module.dprot.ClusterStructureService clusterStructureService0 = null;
    org.neo4j.kernel.database.DatabaseIdRepository databaseIdRepository1 = null;
    io.github.onograph.dbms.serverproc.BasicProcedureClusterMakeGdbDefaultImpl basicProcedureClusterMakeGdbDefaultImpl2 = new io.github.onograph.dbms.serverproc.BasicProcedureClusterMakeGdbDefaultImpl(
        clusterStructureService0, databaseIdRepository1);
    org.neo4j.kernel.api.procedure.Context context3 = null;
    org.neo4j.values.AnyValue[] anyValueArray4 = null;
    org.neo4j.kernel.api.ResourceTracker resourceTracker5 = null;
    try {
      org.neo4j.collection.RawIterator<org.neo4j.values.AnyValue[], org.neo4j.internal.kernel.api.exceptions.ProcedureException> anyValueArrayRawIterator6 = basicProcedureClusterMakeGdbDefaultImpl2.apply(
          context3, anyValueArray4, resourceTracker5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0665() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0665");
    }
    io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider commandGetServerIdCommandProvider0 = new io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider();
    int int1 = commandGetServerIdCommandProvider0.getPriority();
    int int2 = commandGetServerIdCommandProvider0.getPriority();
    int int3 = commandGetServerIdCommandProvider0.getPriority();
    org.neo4j.cli.ExecutionContext executionContext4 = null;
    try {
      io.github.onograph.dbms.commands.CommandGetServerIdImpl commandGetServerIdImpl5 = commandGetServerIdCommandProvider0.createCommand(
          executionContext4);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
  }

  @Test
  public void test0666() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0666");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder7.setMonitors(
        monitors8);
    org.neo4j.logging.LogProvider logProvider10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder7.setUserLogProvider(
        logProvider10);
    org.neo4j.common.DependencyResolver dependencyResolver12 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = databaseManagementServiceBuilder11.setExternalDependencies(
        dependencyResolver12);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = databaseManagementServiceBuilder13.addDatabaseListener(
        databaseEventListener14);
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService16 = databaseManagementServiceBuilder15.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
  }

  @Test
  public void test0667() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0667");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    org.neo4j.graphdb.config.Configuration configuration6 = null;
    try {
      databaseManagementServiceClusterImpl3.createDatabase("", configuration6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0668() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0668");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder3.setMonitors(
        monitors9);
    java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.setConfigRaw(
          strMap11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
  }

  @Test
  public void test0669() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0669");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.common.DependencyResolver dependencyResolver11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.setExternalDependencies(
        dependencyResolver11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder10.setMonitors(
        monitors13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
  }

  @Test
  public void test0670() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0670");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder5.setMonitors(
        monitors9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider11);
    org.neo4j.common.DependencyResolver dependencyResolver13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder5.setMonitors(
        monitors15);
    org.neo4j.common.DependencyResolver dependencyResolver17 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder18 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder18);
  }

  @Test
  public void test0671() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0671");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    java.lang.String str9 = clusteringDBMSBuilder3.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder3.setMonitors(
        monitors12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver14);
    try {
      io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl16 = clusteringDBMSBuilder15.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "enterprise" + "'", str9, "enterprise");
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
  }

  @Test
  public void test0672() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0672");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver6);
    java.lang.String str8 = clusteringDBMSBuilder5.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver9);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "enterprise");
    java.util.Map<java.lang.String, java.lang.String> strMap13 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder12.setConfigRaw(
          strMap13);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "enterprise" + "'", str8, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
  }

  @Test
  public void test0673() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0673");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener5 = null;
    try {
      databaseManagementServiceClusterImpl3.unregisterDatabaseEventListener(databaseEventListener5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0674() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0674");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log2 = enhancedBootstrapper0.getLog();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService5 = enhancedBootstrapper0.getDatabaseManagementService();
    java.lang.String[] strArray10 = new java.lang.String[]{"hi!", "enterprise", "enterprise",
        "enterprise"};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray10);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray10);
    try {
      int int13 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray10);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNotNull(log2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertNull(databaseManagementService5);
    org.junit.Assert.assertNotNull(strArray10);
  }

  @Test
  public void test0675() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0675");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    try {
      databaseManagementServiceClusterImpl4.shutdownDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0676() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0676");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener5 = null;
    try {
      databaseManagementServiceClusterImpl4.registerDatabaseEventListener(databaseEventListener5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0677() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0677");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.addDatabaseListener(
        databaseEventListener7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder10.setMonitors(
        monitors11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
  }

  @Test
  public void test0678() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0678");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver10);
    java.nio.file.Path path12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder13.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder13.setUserLogProvider(
        logProvider16);
    org.neo4j.common.DependencyResolver dependencyResolver18 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder19 = clusteringDBMSBuilder17.setExternalDependencies(
        dependencyResolver18);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder19);
  }

  @Test
  public void test0679() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0679");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener6 = null;
    try {
      databaseManagementServiceClusterImpl3.registerDatabaseEventListener(databaseEventListener6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0680() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0680");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      org.neo4j.graphdb.GraphDatabaseService graphDatabaseService8 = databaseManagementServiceClusterImpl6.database(
          "");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0681() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0681");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    int int4 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log5 = enhancedBootstrapper0.getLog();
    int int6 = enhancedBootstrapper0.stop();
    int int7 = enhancedBootstrapper0.stop();
    java.nio.file.Path path8 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
    try {
      int int10 = enhancedBootstrapper0.start(path8, strMap9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertNotNull(log5);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
  }

  @Test
  public void test0682() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0682");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider11);
    java.nio.file.Path path13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.loadPropertiesFromFile(
        path13);
    java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder14.setConfigRaw(
          strMap15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
  }

  @Test
  public void test0683() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0683");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    int int1 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType2 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    int int3 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int4 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType5 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType5 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType5.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
  }

  @Test
  public void test0684() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0684");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.common.DependencyResolver dependencyResolver2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver2);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener4 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder5 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener4);
    org.neo4j.monitoring.Monitors monitors6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.setMonitors(
        monitors6);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder3.addURLAccessRule(
        "hi!", uRLAccessRule9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
  }

  @Test
  public void test0685() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0685");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.common.DependencyResolver dependencyResolver2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver2);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener4 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder5 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener4);
    org.neo4j.monitoring.Monitors monitors6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder3.setMonitors(
        monitors6);
    java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder3.setConfigRaw(
          strMap8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
  }

  @Test
  public void test0686() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0686");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder5.setMonitors(
        monitors9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider11);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "hi!");
    java.lang.Class<?> wildcardClass15 = clusteringDBMSBuilder14.getClass();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(wildcardClass15);
  }

  @Test
  public void test0687() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0687");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService2 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log3 = enhancedBootstrapper0.getLog();
    java.lang.String[] strArray5 = new java.lang.String[]{"enterprise"};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray5);
    try {
      int int7 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray5);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNull(databaseManagementService2);
    org.junit.Assert.assertNotNull(log3);
    org.junit.Assert.assertNotNull(strArray5);
  }

  @Test
  public void test0688() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0688");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder8.addDatabaseListener(
        databaseEventListener9);
    java.nio.file.Path path11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = databaseManagementServiceBuilder10.loadPropertiesFromFile(
        path11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
  }

  @Test
  public void test0689() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0689");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.monitoring.Monitors monitors4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setMonitors(
        monitors4);
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver6);
    java.lang.Class<?> wildcardClass8 = clusteringDBMSBuilder1.getClass();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(wildcardClass8);
  }

  @Test
  public void test0690() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0690");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener6);
    org.neo4j.logging.LogProvider logProvider8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = databaseManagementServiceBuilder7.setUserLogProvider(
        logProvider8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
  }

  @Test
  public void test0691() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0691");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    try {
      java.util.List<java.lang.String> strList6 = databaseManagementServiceClusterImpl3.listDatabases();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0692() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0692");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder7.setConfigRaw(
          strMap8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
  }

  @Test
  public void test0693() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0693");
    }
    io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider commandGetServerIdCommandProvider0 = new io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider();
    int int1 = commandGetServerIdCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType2 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType3 = commandGetServerIdCommandProvider0.commandType();
    int int4 = commandGetServerIdCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType5 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType6 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType7 = commandGetServerIdCommandProvider0.commandType();
    java.lang.Class<?> wildcardClass8 = commandGetServerIdCommandProvider0.getClass();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType5 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType5.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType6 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType6.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType7 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType7.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertNotNull(wildcardClass8);
  }

  @Test
  public void test0694() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0694");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction10 = metaUpgradeFlowAction4.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction5);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv11 = null;
    metaUpgradeFlowAction5.accept(upgradeMetaEnv11);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction13 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv15 = null;
    metaUpgradeFlowAction14.accept(upgradeMetaEnv15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction17 = metaUpgradeFlowAction13.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction14);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction18 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction19 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv20 = null;
    metaUpgradeFlowAction19.accept(upgradeMetaEnv20);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = metaUpgradeFlowAction18.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction19);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv23 = null;
    metaUpgradeFlowAction18.accept(upgradeMetaEnv23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction25 = metaUpgradeFlowAction14.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction18);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction26 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction27 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv28 = null;
    metaUpgradeFlowAction27.accept(upgradeMetaEnv28);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction30 = metaUpgradeFlowAction26.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction27);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction31 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction32 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv33 = null;
    metaUpgradeFlowAction32.accept(upgradeMetaEnv33);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction35 = metaUpgradeFlowAction31.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction32);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv36 = null;
    metaUpgradeFlowAction31.accept(upgradeMetaEnv36);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction38 = metaUpgradeFlowAction27.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction31);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction39 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv40 = null;
    metaUpgradeFlowAction39.accept(upgradeMetaEnv40);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer42 = metaUpgradeFlowAction38.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction39);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer43 = metaUpgradeFlowAction25.andThen(
        upgradeMetaEnvConsumer42);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv44 = null;
    metaUpgradeFlowAction25.accept(upgradeMetaEnv44);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction46 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction25);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction47 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction48 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv49 = null;
    metaUpgradeFlowAction48.accept(upgradeMetaEnv49);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction51 = metaUpgradeFlowAction47.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction48);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction52 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction53 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv54 = null;
    metaUpgradeFlowAction53.accept(upgradeMetaEnv54);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction56 = metaUpgradeFlowAction52.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction53);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction57 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction58 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv59 = null;
    metaUpgradeFlowAction58.accept(upgradeMetaEnv59);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction61 = metaUpgradeFlowAction57.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction58);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv62 = null;
    metaUpgradeFlowAction57.accept(upgradeMetaEnv62);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction64 = metaUpgradeFlowAction53.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction57);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction65 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv66 = null;
    metaUpgradeFlowAction65.accept(upgradeMetaEnv66);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer68 = metaUpgradeFlowAction64.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction65);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction69 = metaUpgradeFlowAction47.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction65);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv70 = null;
    metaUpgradeFlowAction69.accept(upgradeMetaEnv70);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction72 = metaUpgradeFlowAction25.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction69);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv73 = null;
    metaUpgradeFlowAction69.accept(upgradeMetaEnv73);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction10);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction13);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction17);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction18);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction19);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction25);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction26);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction30);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction31);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction32);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction35);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction38);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction39);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer42);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer43);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction46);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction47);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction48);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction51);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction52);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction53);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction56);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction57);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction58);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction61);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction64);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction65);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer68);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction69);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction72);
  }

  @Test
  public void test0695() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0695");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    try {
      databaseManagementServiceClusterImpl5.startDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0696() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0696");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    try {
      databaseManagementServiceClusterImpl6.dropDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0697() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0697");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    org.neo4j.graphdb.config.Configuration configuration7 = null;
    try {
      databaseManagementServiceClusterImpl5.createDatabase("", configuration7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0698() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0698");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl6.dropDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0699() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0699");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    try {
      databaseManagementServiceClusterImpl4.shutdown();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0700() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0700");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    org.neo4j.graphdb.config.Configuration configuration6 = null;
    try {
      databaseManagementServiceClusterImpl2.createDatabase("hi!", configuration6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0701() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0701");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    try {
      databaseManagementServiceClusterImpl3.startDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0702() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0702");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl7.startDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0703() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0703");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl1);
    try {
      databaseManagementServiceClusterImpl1.startDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0704() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0704");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider11);
    java.nio.file.Path path13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.loadPropertiesFromFile(
        path13);
    org.neo4j.common.DependencyResolver dependencyResolver15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder12.setExternalDependencies(
        dependencyResolver15);
    java.lang.String str17 = clusteringDBMSBuilder16.getEdition();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "enterprise" + "'", str17, "enterprise");
  }

  @Test
  public void test0705() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0705");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    try {
      java.util.List<java.lang.String> strList6 = databaseManagementServiceClusterImpl5.listDatabases();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0706() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0706");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    try {
      databaseManagementServiceClusterImpl4.startDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0707() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0707");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    try {
      databaseManagementServiceClusterImpl3.dropDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0708() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0708");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        "enterprise");
    java.nio.file.Path path11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        path11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
  }

  @Test
  public void test0709() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0709");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    java.nio.file.Path path2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path2);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
  }

  @Test
  public void test0710() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0710");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver10);
    org.neo4j.common.DependencyResolver dependencyResolver12 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = databaseManagementServiceBuilder11.setExternalDependencies(
        dependencyResolver12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = databaseManagementServiceBuilder11.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.common.DependencyResolver dependencyResolver16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = databaseManagementServiceBuilder11.setExternalDependencies(
        dependencyResolver16);
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService18 = databaseManagementServiceBuilder17.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
  }

  @Test
  public void test0711() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0711");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv10 = null;
    metaUpgradeFlowAction5.accept(upgradeMetaEnv10);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction12 = metaUpgradeFlowAction1.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction5);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction13 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv15 = null;
    metaUpgradeFlowAction14.accept(upgradeMetaEnv15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction17 = metaUpgradeFlowAction13.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction14);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction18 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction19 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv20 = null;
    metaUpgradeFlowAction19.accept(upgradeMetaEnv20);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = metaUpgradeFlowAction18.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction19);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction24 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv25 = null;
    metaUpgradeFlowAction24.accept(upgradeMetaEnv25);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction27 = metaUpgradeFlowAction23.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction24);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv28 = null;
    metaUpgradeFlowAction23.accept(upgradeMetaEnv28);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction30 = metaUpgradeFlowAction19.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction31 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv32 = null;
    metaUpgradeFlowAction31.accept(upgradeMetaEnv32);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer34 = metaUpgradeFlowAction30.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction31);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer35 = metaUpgradeFlowAction13.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction31);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction36 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction37 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv38 = null;
    metaUpgradeFlowAction37.accept(upgradeMetaEnv38);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction40 = metaUpgradeFlowAction36.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction37);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction41 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv43 = null;
    metaUpgradeFlowAction42.accept(upgradeMetaEnv43);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction45 = metaUpgradeFlowAction41.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction42);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction46 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction47 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv48 = null;
    metaUpgradeFlowAction47.accept(upgradeMetaEnv48);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction50 = metaUpgradeFlowAction46.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction47);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction51 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction52 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv53 = null;
    metaUpgradeFlowAction52.accept(upgradeMetaEnv53);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction55 = metaUpgradeFlowAction51.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction52);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv56 = null;
    metaUpgradeFlowAction51.accept(upgradeMetaEnv56);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction58 = metaUpgradeFlowAction47.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction51);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction59 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv60 = null;
    metaUpgradeFlowAction59.accept(upgradeMetaEnv60);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer62 = metaUpgradeFlowAction58.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction59);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction63 = metaUpgradeFlowAction41.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction59);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction64 = metaUpgradeFlowAction40.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction63);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer65 = metaUpgradeFlowAction31.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction40);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction66 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction31);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction67 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction68 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv69 = null;
    metaUpgradeFlowAction68.accept(upgradeMetaEnv69);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction71 = metaUpgradeFlowAction67.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction68);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction72 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction73 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv74 = null;
    metaUpgradeFlowAction73.accept(upgradeMetaEnv74);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction76 = metaUpgradeFlowAction72.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction73);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv77 = null;
    metaUpgradeFlowAction72.accept(upgradeMetaEnv77);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction79 = metaUpgradeFlowAction68.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction72);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction80 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction79);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction81 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv82 = null;
    metaUpgradeFlowAction81.accept(upgradeMetaEnv82);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer84 = metaUpgradeFlowAction80.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction81);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction12);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction13);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction17);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction18);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction19);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction24);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction30);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction31);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer34);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer35);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction36);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction37);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction40);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction41);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction45);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction46);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction47);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction50);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction51);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction52);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction55);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction58);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction59);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer62);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction63);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction64);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer65);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction66);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction67);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction68);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction71);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction72);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction73);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction76);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction79);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction80);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction81);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer84);
  }

  @Test
  public void test0712() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0712");
    }
    io.github.onograph.dbms.serverproc.WaitingReplyMetaType waitingReplyMetaType0 = io.github.onograph.dbms.serverproc.WaitingReplyMetaType.Failed;
    java.lang.Class<?> wildcardClass1 = waitingReplyMetaType0.getClass();
    org.junit.Assert.assertTrue("'" + waitingReplyMetaType0 + "' != '"
            + io.github.onograph.dbms.serverproc.WaitingReplyMetaType.Failed + "'",
        waitingReplyMetaType0.equals(
            io.github.onograph.dbms.serverproc.WaitingReplyMetaType.Failed));
    org.junit.Assert.assertNotNull(wildcardClass1);
  }

  @Test
  public void test0713() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0713");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider16);
    java.nio.file.Path path18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        path18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder9.setMonitors(
        monitors20);
    try {
      io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl22 = clusteringDBMSBuilder9.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder21);
  }

  @Test
  public void test0714() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0714");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    int int1 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int2 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int3 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int4 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int5 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType6 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.ExecutionContext executionContext7 = null;
    try {
      io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommand nodeStoreWrapperCopyCommand8 = nodeStoreWrapperCopyCommandCommandProvider0.createCommand(
          executionContext7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType6 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType6.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
  }

  @Test
  public void test0715() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0715");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    int int5 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService6 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean7 = enhancedBootstrapper0.isRunning();
    java.lang.String[] strArray10 = new java.lang.String[]{"enterprise", "enterprise"};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray10);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray10);
    try {
      int int13 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray10);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertNull(databaseManagementService6);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(strArray10);
  }

  @Test
  public void test0716() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0716");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl1);
    try {
      boolean boolean4 = databaseManagementServiceClusterImpl2.isWraeForSt("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0717() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0717");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    java.nio.file.Path path9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path9);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener11);
    java.nio.file.Path path13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = databaseManagementServiceBuilder12.loadPropertiesFromFile(
        path13);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = databaseManagementServiceBuilder14.addURLAccessRule(
        "hi!", uRLAccessRule16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
  }

  @Test
  public void test0718() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0718");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl1);
    try {
      databaseManagementServiceClusterImpl1.shutdownDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0719() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0719");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    int int5 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log6 = enhancedBootstrapper0.getLog();
    boolean boolean7 = enhancedBootstrapper0.isRunning();
    int int8 = enhancedBootstrapper0.stop();
    java.nio.file.Path path9 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
    try {
      int int11 = enhancedBootstrapper0.start(path9, strMap10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNull(databaseManagementService4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertNotNull(log6);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
  }

  @Test
  public void test0720() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0720");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    java.lang.String[] strArray6 = new java.lang.String[]{""};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray6);
    try {
      int int8 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray6);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertNotNull(strArray6);
  }

  @Test
  public void test0721() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0721");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    int int4 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log5 = enhancedBootstrapper0.getLog();
    java.lang.String[] strArray8 = new java.lang.String[]{"enterprise", "enterprise"};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray8);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray8);
    try {
      int int11 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray8);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertNotNull(log5);
    org.junit.Assert.assertNotNull(strArray8);
  }

  @Test
  public void test0722() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0722");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    java.nio.file.Path path9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path9);
    java.nio.file.Path path11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path11);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener13);
    java.lang.String str15 = clusteringDBMSBuilder3.getEdition();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "enterprise" + "'", str15, "enterprise");
  }

  @Test
  public void test0723() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0723");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    try {
      databaseManagementServiceClusterImpl6.createDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0724() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0724");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl1);
    try {
      databaseManagementServiceClusterImpl1.dropDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0725() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0725");
    }
    io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider commandGetServerIdCommandProvider0 = new io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider();
    int int1 = commandGetServerIdCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType2 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType3 = commandGetServerIdCommandProvider0.commandType();
    int int4 = commandGetServerIdCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType5 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType6 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.ExecutionContext executionContext7 = null;
    try {
      io.github.onograph.dbms.commands.CommandGetServerIdImpl commandGetServerIdImpl8 = commandGetServerIdCommandProvider0.createCommand(
          executionContext7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType5 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType5.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType6 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType6.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
  }

  @Test
  public void test0726() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0726");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver6);
    java.lang.String str8 = clusteringDBMSBuilder5.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver9);
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService11 = clusteringDBMSBuilder10.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "enterprise" + "'", str8, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
  }

  @Test
  public void test0727() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0727");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder7.setExternalDependencies(
        dependencyResolver8);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "hi!");
    org.neo4j.common.DependencyResolver dependencyResolver12 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = databaseManagementServiceBuilder11.setExternalDependencies(
        dependencyResolver12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
  }

  @Test
  public void test0728() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0728");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    java.nio.file.Path path7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        path7);
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService9 = clusteringDBMSBuilder6.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
  }

  @Test
  public void test0729() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0729");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    java.nio.file.Path path5 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
    try {
      int int7 = enhancedBootstrapper0.start(path5, strMap6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNull(databaseManagementService4);
  }

  @Test
  public void test0730() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0730");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "hi!");
    java.lang.Class<?> wildcardClass8 = databaseManagementServiceBuilder7.getClass();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(wildcardClass8);
  }

  @Test
  public void test0731() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0731");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    try {
      databaseManagementServiceClusterImpl8.startDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0732() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0732");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      boolean boolean9 = databaseManagementServiceClusterImpl5.isWraeForSt("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0733() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0733");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    try {
      io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = clusteringDBMSBuilder5.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
  }

  @Test
  public void test0734() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0734");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv10 = null;
    metaUpgradeFlowAction5.accept(upgradeMetaEnv10);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction12 = metaUpgradeFlowAction1.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction5);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction13 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv14 = null;
    metaUpgradeFlowAction13.accept(upgradeMetaEnv14);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer16 = metaUpgradeFlowAction12.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction13);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv17 = null;
    metaUpgradeFlowAction12.accept(upgradeMetaEnv17);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction19 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction20 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv21 = null;
    metaUpgradeFlowAction20.accept(upgradeMetaEnv21);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = metaUpgradeFlowAction19.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction20);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction24 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction25 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv26 = null;
    metaUpgradeFlowAction25.accept(upgradeMetaEnv26);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction28 = metaUpgradeFlowAction24.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction25);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction29 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction30 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv31 = null;
    metaUpgradeFlowAction30.accept(upgradeMetaEnv31);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction33 = metaUpgradeFlowAction29.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction30);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction34 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction35 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv36 = null;
    metaUpgradeFlowAction35.accept(upgradeMetaEnv36);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction38 = metaUpgradeFlowAction34.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction35);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv39 = null;
    metaUpgradeFlowAction34.accept(upgradeMetaEnv39);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction41 = metaUpgradeFlowAction30.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction34);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv43 = null;
    metaUpgradeFlowAction42.accept(upgradeMetaEnv43);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer45 = metaUpgradeFlowAction41.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction42);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction46 = metaUpgradeFlowAction24.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction42);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction47 = metaUpgradeFlowAction23.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction46);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction48 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer49 = metaUpgradeFlowAction47.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction48);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction50 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction51 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv52 = null;
    metaUpgradeFlowAction51.accept(upgradeMetaEnv52);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction54 = metaUpgradeFlowAction50.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction51);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction55 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction56 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv57 = null;
    metaUpgradeFlowAction56.accept(upgradeMetaEnv57);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction59 = metaUpgradeFlowAction55.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction56);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction60 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction61 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv62 = null;
    metaUpgradeFlowAction61.accept(upgradeMetaEnv62);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction64 = metaUpgradeFlowAction60.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction61);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv65 = null;
    metaUpgradeFlowAction60.accept(upgradeMetaEnv65);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction67 = metaUpgradeFlowAction56.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction60);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction68 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv69 = null;
    metaUpgradeFlowAction68.accept(upgradeMetaEnv69);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer71 = metaUpgradeFlowAction67.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction68);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction72 = metaUpgradeFlowAction50.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction68);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction73 = metaUpgradeFlowAction47.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction72);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv74 = null;
    metaUpgradeFlowAction47.accept(upgradeMetaEnv74);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction76 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction77 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv78 = null;
    metaUpgradeFlowAction77.accept(upgradeMetaEnv78);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction80 = metaUpgradeFlowAction76.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction77);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction81 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction82 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv83 = null;
    metaUpgradeFlowAction82.accept(upgradeMetaEnv83);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction85 = metaUpgradeFlowAction81.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction82);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv86 = null;
    metaUpgradeFlowAction81.accept(upgradeMetaEnv86);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction88 = metaUpgradeFlowAction77.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction81);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv89 = null;
    metaUpgradeFlowAction81.accept(upgradeMetaEnv89);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction91 = metaUpgradeFlowAction47.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction81);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction92 = metaUpgradeFlowAction12.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction81);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv93 = null;
    metaUpgradeFlowAction81.accept(upgradeMetaEnv93);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction12);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction13);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer16);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction19);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction20);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction24);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction25);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction28);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction29);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction30);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction33);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction34);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction35);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction38);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction41);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer45);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction46);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction47);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction48);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer49);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction50);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction51);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction54);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction55);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction56);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction59);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction60);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction61);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction64);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction67);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction68);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer71);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction72);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction73);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction76);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction77);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction80);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction81);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction82);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction85);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction88);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction91);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction92);
  }

  @Test
  public void test0735() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0735");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver5 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder6 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver5);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        "");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
  }

  @Test
  public void test0736() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0736");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    java.nio.file.Path path7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        path7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder8.addURLAccessRule(
        "", uRLAccessRule10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder11.setMonitors(
        monitors12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
  }

  @Test
  public void test0737() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0737");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    java.nio.file.Path path9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path9);
    org.neo4j.common.DependencyResolver dependencyResolver11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = databaseManagementServiceBuilder10.setExternalDependencies(
        dependencyResolver11);
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService13 = databaseManagementServiceBuilder10.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
  }

  @Test
  public void test0738() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0738");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl5.createDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0739() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0739");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    try {
      boolean boolean6 = databaseManagementServiceClusterImpl3.isWraeForSt("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0740() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0740");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      boolean boolean8 = databaseManagementServiceClusterImpl5.isWraeForSt("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0741() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0741");
    }
    io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider commandGetServerIdCommandProvider0 = new io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider();
    int int1 = commandGetServerIdCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType2 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType3 = commandGetServerIdCommandProvider0.commandType();
    int int4 = commandGetServerIdCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType5 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType6 = commandGetServerIdCommandProvider0.commandType();
    int int7 = commandGetServerIdCommandProvider0.getPriority();
    org.neo4j.cli.ExecutionContext executionContext8 = null;
    try {
      io.github.onograph.dbms.commands.CommandGetServerIdImpl commandGetServerIdImpl9 = commandGetServerIdCommandProvider0.createCommand(
          executionContext8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType5 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType5.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType6 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType6.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
  }

  @Test
  public void test0742() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0742");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction10 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction11 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv12 = null;
    metaUpgradeFlowAction11.accept(upgradeMetaEnv12);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = metaUpgradeFlowAction10.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction11);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv15 = null;
    metaUpgradeFlowAction10.accept(upgradeMetaEnv15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction17 = metaUpgradeFlowAction6.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction10);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction18 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv19 = null;
    metaUpgradeFlowAction18.accept(upgradeMetaEnv19);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer21 = metaUpgradeFlowAction17.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction18);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction18);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction24 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv25 = null;
    metaUpgradeFlowAction24.accept(upgradeMetaEnv25);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction27 = metaUpgradeFlowAction23.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction24);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction28 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction29 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv30 = null;
    metaUpgradeFlowAction29.accept(upgradeMetaEnv30);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction32 = metaUpgradeFlowAction28.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction29);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv33 = null;
    metaUpgradeFlowAction28.accept(upgradeMetaEnv33);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction35 = metaUpgradeFlowAction24.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction28);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer36 = metaUpgradeFlowAction22.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction28);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction37 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction38 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv39 = null;
    metaUpgradeFlowAction38.accept(upgradeMetaEnv39);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction41 = metaUpgradeFlowAction37.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction38);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction43 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv44 = null;
    metaUpgradeFlowAction43.accept(upgradeMetaEnv44);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction46 = metaUpgradeFlowAction42.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction43);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv47 = null;
    metaUpgradeFlowAction42.accept(upgradeMetaEnv47);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction49 = metaUpgradeFlowAction38.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction42);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction50 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv51 = null;
    metaUpgradeFlowAction50.accept(upgradeMetaEnv51);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer53 = metaUpgradeFlowAction49.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction50);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction54 = metaUpgradeFlowAction28.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction50);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction55 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction56 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv57 = null;
    metaUpgradeFlowAction56.accept(upgradeMetaEnv57);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction59 = metaUpgradeFlowAction55.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction56);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer60 = metaUpgradeFlowAction54.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction56);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction10);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction11);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction17);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction18);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer21);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction24);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction28);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction29);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction32);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction35);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer36);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction37);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction38);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction41);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction43);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction46);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction49);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction50);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer53);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction54);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction55);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction56);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction59);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer60);
  }

  @Test
  public void test0743() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0743");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    try {
      databaseManagementServiceClusterImpl5.startDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0744() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0744");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    java.nio.file.Path path9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = databaseManagementServiceBuilder10.setUserLogProvider(
        logProvider11);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = databaseManagementServiceBuilder12.addURLAccessRule(
        "hi!", uRLAccessRule14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
  }

  @Test
  public void test0745() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0745");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService5 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean6 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log7 = enhancedBootstrapper0.getLog();
    java.lang.String[] strArray12 = new java.lang.String[]{"hi!", "enterprise", "enterprise",
        "enterprise"};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray12);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray12);
    try {
      int int15 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray12);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertNull(databaseManagementService5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNotNull(log7);
    org.junit.Assert.assertNotNull(strArray12);
  }

  @Test
  public void test0746() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0746");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "hi!");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener8);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = databaseManagementServiceBuilder9.loadPropertiesFromFile(
        "hi!");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = databaseManagementServiceBuilder11.addURLAccessRule(
        "hi!", uRLAccessRule13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
  }

  @Test
  public void test0747() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0747");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    try {
      databaseManagementServiceClusterImpl4.shutdown();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0748() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0748");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder5.setMonitors(
        monitors9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider11);
    org.neo4j.common.DependencyResolver dependencyResolver13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver13);
    java.nio.file.Path path15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = databaseManagementServiceBuilder14.loadPropertiesFromFile(
        path15);
    java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder18 = databaseManagementServiceBuilder16.setConfigRaw(
          strMap17);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
  }

  @Test
  public void test0749() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0749");
    }
    io.github.onograph.server.EntryPointImpl entryPointImpl0 = new io.github.onograph.server.EntryPointImpl();
    org.neo4j.server.startup.EntryPoint.Priority priority1 = entryPointImpl0.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority2 = entryPointImpl0.getPriority();
    io.github.onograph.server.EntryPointImpl entryPointImpl3 = new io.github.onograph.server.EntryPointImpl();
    int int4 = entryPointImpl0.compareTo((org.neo4j.server.startup.EntryPoint) entryPointImpl3);
    org.neo4j.server.startup.EntryPoint.Priority priority5 = entryPointImpl3.getPriority();
    org.junit.Assert.assertTrue(
        "'" + priority1 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority1.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority2 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority2.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertTrue(
        "'" + priority5 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority5.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
  }

  @Test
  public void test0750() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0750");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction10 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction11 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv12 = null;
    metaUpgradeFlowAction11.accept(upgradeMetaEnv12);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = metaUpgradeFlowAction10.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction11);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction15 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction16 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv17 = null;
    metaUpgradeFlowAction16.accept(upgradeMetaEnv17);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction19 = metaUpgradeFlowAction15.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction16);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv20 = null;
    metaUpgradeFlowAction15.accept(upgradeMetaEnv20);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = metaUpgradeFlowAction11.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv24 = null;
    metaUpgradeFlowAction23.accept(upgradeMetaEnv24);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer26 = metaUpgradeFlowAction22.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction27 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction28 = metaUpgradeFlowAction4.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction27);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction29 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer30 = metaUpgradeFlowAction28.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction29);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction31 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction32 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv33 = null;
    metaUpgradeFlowAction32.accept(upgradeMetaEnv33);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction35 = metaUpgradeFlowAction31.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction32);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction36 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction37 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv38 = null;
    metaUpgradeFlowAction37.accept(upgradeMetaEnv38);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction40 = metaUpgradeFlowAction36.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction37);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction41 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv43 = null;
    metaUpgradeFlowAction42.accept(upgradeMetaEnv43);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction45 = metaUpgradeFlowAction41.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction42);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv46 = null;
    metaUpgradeFlowAction41.accept(upgradeMetaEnv46);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction48 = metaUpgradeFlowAction37.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction41);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction49 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv50 = null;
    metaUpgradeFlowAction49.accept(upgradeMetaEnv50);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer52 = metaUpgradeFlowAction48.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction49);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction53 = metaUpgradeFlowAction31.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction49);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction54 = metaUpgradeFlowAction28.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction53);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv55 = null;
    metaUpgradeFlowAction54.accept(upgradeMetaEnv55);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction10);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction11);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction15);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction16);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction19);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer26);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction28);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction29);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer30);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction31);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction32);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction35);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction36);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction37);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction40);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction41);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction45);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction48);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction49);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer52);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction53);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction54);
  }

  @Test
  public void test0751() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0751");
    }
    java.lang.String[] strArray1 = new java.lang.String[]{"enterprise"};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray1);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray1);
    try {
      io.github.onograph.server.EntryPointImpl.startBootstrapper(strArray1);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNotNull(strArray1);
  }

  @Test
  public void test0752() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0752");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        "hi!");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder6.addDatabaseListener(
        databaseEventListener13);
    org.neo4j.logging.LogProvider logProvider15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider15);
    org.neo4j.common.DependencyResolver dependencyResolver17 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder18 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder18);
  }

  @Test
  public void test0753() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0753");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder6.addURLAccessRule(
        "", uRLAccessRule10);
    org.neo4j.logging.LogProvider logProvider12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder6.setMonitors(
        monitors16);
    org.neo4j.logging.LogProvider logProvider18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider18);
    org.neo4j.common.DependencyResolver dependencyResolver20 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver20);
    java.nio.file.Path path22 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder23 = clusteringDBMSBuilder21.loadPropertiesFromFile(
        path22);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder25 = clusteringDBMSBuilder21.loadPropertiesFromFile(
        "");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder21);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder23);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder25);
  }

  @Test
  public void test0754() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0754");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    java.nio.file.Path path5 = null;
    java.nio.file.Path path6 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
    try {
      int int9 = enhancedBootstrapper0.start(path5, path6, strMap7, false);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNotNull(log4);
  }

  @Test
  public void test0755() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0755");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener8 = null;
    try {
      databaseManagementServiceClusterImpl5.unregisterDatabaseEventListener(databaseEventListener8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0756() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0756");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder9.addDatabaseListener(
        databaseEventListener12);
    org.neo4j.logging.LogProvider logProvider14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder13.setUserLogProvider(
        logProvider14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder13.setUserLogProvider(
        logProvider16);
    java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder19 = clusteringDBMSBuilder13.setConfigRaw(
          strMap18);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
  }

  @Test
  public void test0757() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0757");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "enterprise");
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
  }

  @Test
  public void test0758() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0758");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider14);
    java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder9.setConfigRaw(
          strMap16);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
  }

  @Test
  public void test0759() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0759");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    try {
      databaseManagementServiceClusterImpl6.shutdownDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0760() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0760");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    int int4 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log5 = enhancedBootstrapper0.getLog();
    int int6 = enhancedBootstrapper0.stop();
    int int7 = enhancedBootstrapper0.stop();
    boolean boolean8 = enhancedBootstrapper0.isRunning();
    int int9 = enhancedBootstrapper0.stop();
    boolean boolean10 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log11 = enhancedBootstrapper0.getLog();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertNotNull(log5);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertNotNull(log11);
  }

  @Test
  public void test0761() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0761");
    }
    io.github.onograph.dbms.utils.TokenNamePropertyDTO tokenNamePropertyDTO2 = new io.github.onograph.dbms.utils.TokenNamePropertyDTO(
        "enterprise", "");
    java.lang.String str3 = tokenNamePropertyDTO2.getStrNt();
    java.lang.String str4 = tokenNamePropertyDTO2.getStrNp();
    java.lang.String str5 = tokenNamePropertyDTO2.getStrNt();
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
  }

  @Test
  public void test0762() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0762");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    org.neo4j.graphdb.config.Configuration configuration9 = null;
    try {
      databaseManagementServiceClusterImpl7.createDatabase("enterprise", configuration9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0763() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0763");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder9.setMonitors(
        monitors16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
  }

  @Test
  public void test0764() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0764");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider16);
    java.nio.file.Path path18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        path18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder9.setMonitors(
        monitors20);
    org.neo4j.logging.LogProvider logProvider22 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder23 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider22);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder25 = clusteringDBMSBuilder23.loadPropertiesFromFile(
        "");
    java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder27 = clusteringDBMSBuilder23.setConfigRaw(
          strMap26);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder21);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder23);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder25);
  }

  @Test
  public void test0765() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0765");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      java.util.List<java.lang.String> strList9 = databaseManagementServiceClusterImpl5.listDatabases();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0766() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0766");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder3.setMonitors(
        monitors9);
    java.lang.String str11 = clusteringDBMSBuilder3.getEdition();
    java.nio.file.Path path12 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "enterprise" + "'", str11, "enterprise");
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
  }

  @Test
  public void test0767() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0767");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl5.dropDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0768() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0768");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider11);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        "");
    java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder6.setConfigRaw(
          strMap15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
  }

  @Test
  public void test0769() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0769");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder1.setMonitors(
        monitors7);
    java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder8.setConfigRaw(
          strMap9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
  }

  @Test
  public void test0770() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0770");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver10);
    java.nio.file.Path path12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder13.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder13.setUserLogProvider(
        logProvider16);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule19 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder20 = clusteringDBMSBuilder13.addURLAccessRule(
        "hi!", uRLAccessRule19);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder22 = clusteringDBMSBuilder13.loadPropertiesFromFile(
        "hi!");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder20);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder22);
  }

  @Test
  public void test0771() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0771");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule10);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder11.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder13.setMonitors(
        monitors14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder15.setUserLogProvider(
        logProvider16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
  }

  @Test
  public void test0772() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0772");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    try {
      databaseManagementServiceClusterImpl5.dropDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0773() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0773");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener7 = null;
    try {
      databaseManagementServiceClusterImpl5.unregisterDatabaseEventListener(databaseEventListener7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0774() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0774");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder1.setMonitors(
        monitors7);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder8.loadPropertiesFromFile(
        "");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
  }

  @Test
  public void test0775() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0775");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.addDatabaseListener(
        databaseEventListener11);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder12.addURLAccessRule(
        "hi!", uRLAccessRule14);
    java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder12.setConfigRaw(
          strMap16);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
  }

  @Test
  public void test0776() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0776");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    int int1 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int2 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int3 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType4 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType5 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType6 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType7 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.ExecutionContext executionContext8 = null;
    try {
      io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommand nodeStoreWrapperCopyCommand9 = nodeStoreWrapperCopyCommandCommandProvider0.createCommand(
          executionContext8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType5 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType5.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType6 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType6.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType7 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType7.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
  }

  @Test
  public void test0777() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0777");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    org.neo4j.logging.Log log5 = enhancedBootstrapper0.getLog();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService6 = enhancedBootstrapper0.getDatabaseManagementService();
    java.nio.file.Path path7 = null;
    java.nio.file.Path path8 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
    try {
      int int11 = enhancedBootstrapper0.start(path7, path8, strMap9, false);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertNotNull(log5);
    org.junit.Assert.assertNull(databaseManagementService6);
  }

  @Test
  public void test0778() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0778");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder6.addURLAccessRule(
        "", uRLAccessRule10);
    org.neo4j.logging.LogProvider logProvider12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder6.setMonitors(
        monitors16);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule19 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder20 = clusteringDBMSBuilder6.addURLAccessRule(
        "enterprise", uRLAccessRule19);
    java.lang.String str21 = clusteringDBMSBuilder20.getEdition();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder20);
    org.junit.Assert.assertEquals("'" + str21 + "' != '" + "enterprise" + "'", str21, "enterprise");
  }

  @Test
  public void test0779() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0779");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder6.addURLAccessRule(
        "enterprise", uRLAccessRule12);
    java.nio.file.Path path14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        path14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder6.setMonitors(
        monitors16);
    java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder19 = clusteringDBMSBuilder6.setConfigRaw(
          strMap18);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
  }

  @Test
  public void test0780() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0780");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder7.setMonitors(
        monitors8);
    org.neo4j.logging.LogProvider logProvider10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder7.setUserLogProvider(
        logProvider10);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder7.loadPropertiesFromFile(
        "hi!");
    org.neo4j.monitoring.Monitors monitors14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder7.setMonitors(
        monitors14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
  }

  @Test
  public void test0781() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0781");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    try {
      databaseManagementServiceClusterImpl8.registerDatabaseEventListener(databaseEventListener9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0782() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0782");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    try {
      org.neo4j.graphdb.GraphDatabaseService graphDatabaseService10 = databaseManagementServiceClusterImpl6.database(
          "enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0783() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0783");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    try {
      org.neo4j.graphdb.GraphDatabaseService graphDatabaseService7 = databaseManagementServiceClusterImpl5.database(
          "hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0784() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0784");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.setMonitors(
        monitors9);
    org.neo4j.common.DependencyResolver dependencyResolver11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.setExternalDependencies(
        dependencyResolver11);
    try {
      io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl13 = clusteringDBMSBuilder12.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
  }

  @Test
  public void test0785() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0785");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl1);
    try {
      boolean boolean4 = databaseManagementServiceClusterImpl1.isWraeForSt("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0786() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0786");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule10);
    java.lang.String str12 = clusteringDBMSBuilder3.getEdition();
    org.neo4j.logging.LogProvider logProvider13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder3.setUserLogProvider(
        logProvider13);
    org.neo4j.logging.LogProvider logProvider15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder3.setUserLogProvider(
        logProvider15);
    java.lang.String str17 = clusteringDBMSBuilder16.getEdition();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "enterprise" + "'", str12, "enterprise");
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "enterprise" + "'", str17, "enterprise");
  }

  @Test
  public void test0787() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0787");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    org.neo4j.logging.Log log5 = enhancedBootstrapper0.getLog();
    java.lang.String[] strArray12 = new java.lang.String[]{"hi!", "hi!", "enterprise", "",
        "enterprise", "enterprise"};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray12);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray12);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray12);
    try {
      int int16 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray12);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertNotNull(log5);
    org.junit.Assert.assertNotNull(strArray12);
  }

  @Test
  public void test0788() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0788");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    try {
      databaseManagementServiceClusterImpl3.startDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0789() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0789");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.common.DependencyResolver dependencyResolver2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver2);
    java.nio.file.Path path4 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    org.neo4j.monitoring.Monitors monitors6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = databaseManagementServiceBuilder5.setMonitors(
        monitors6);
    java.nio.file.Path path8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = databaseManagementServiceBuilder5.loadPropertiesFromFile(
        path8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = databaseManagementServiceBuilder9.setMonitors(
        monitors10);
    java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = databaseManagementServiceBuilder11.setConfigRaw(
          strMap12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
  }

  @Test
  public void test0790() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0790");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction10 = metaUpgradeFlowAction4.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction5);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv11 = null;
    metaUpgradeFlowAction5.accept(upgradeMetaEnv11);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction13 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv15 = null;
    metaUpgradeFlowAction14.accept(upgradeMetaEnv15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction17 = metaUpgradeFlowAction13.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction14);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction18 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction19 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv20 = null;
    metaUpgradeFlowAction19.accept(upgradeMetaEnv20);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = metaUpgradeFlowAction18.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction19);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv23 = null;
    metaUpgradeFlowAction18.accept(upgradeMetaEnv23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction25 = metaUpgradeFlowAction14.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction18);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction26 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction27 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv28 = null;
    metaUpgradeFlowAction27.accept(upgradeMetaEnv28);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction30 = metaUpgradeFlowAction26.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction27);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction31 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction32 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv33 = null;
    metaUpgradeFlowAction32.accept(upgradeMetaEnv33);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction35 = metaUpgradeFlowAction31.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction32);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv36 = null;
    metaUpgradeFlowAction31.accept(upgradeMetaEnv36);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction38 = metaUpgradeFlowAction27.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction31);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction39 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv40 = null;
    metaUpgradeFlowAction39.accept(upgradeMetaEnv40);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer42 = metaUpgradeFlowAction38.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction39);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer43 = metaUpgradeFlowAction25.andThen(
        upgradeMetaEnvConsumer42);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv44 = null;
    metaUpgradeFlowAction25.accept(upgradeMetaEnv44);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction46 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction25);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction47 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction48 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv49 = null;
    metaUpgradeFlowAction48.accept(upgradeMetaEnv49);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction51 = metaUpgradeFlowAction47.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction48);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction52 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction53 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv54 = null;
    metaUpgradeFlowAction53.accept(upgradeMetaEnv54);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction56 = metaUpgradeFlowAction52.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction53);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction57 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction58 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv59 = null;
    metaUpgradeFlowAction58.accept(upgradeMetaEnv59);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction61 = metaUpgradeFlowAction57.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction58);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv62 = null;
    metaUpgradeFlowAction57.accept(upgradeMetaEnv62);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction64 = metaUpgradeFlowAction53.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction57);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction65 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv66 = null;
    metaUpgradeFlowAction65.accept(upgradeMetaEnv66);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer68 = metaUpgradeFlowAction64.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction65);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction69 = metaUpgradeFlowAction47.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction65);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction70 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction71 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv72 = null;
    metaUpgradeFlowAction71.accept(upgradeMetaEnv72);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction74 = metaUpgradeFlowAction70.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction71);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction75 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction76 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv77 = null;
    metaUpgradeFlowAction76.accept(upgradeMetaEnv77);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction79 = metaUpgradeFlowAction75.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction76);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv80 = null;
    metaUpgradeFlowAction75.accept(upgradeMetaEnv80);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction82 = metaUpgradeFlowAction71.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction75);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer83 = metaUpgradeFlowAction69.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction75);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer84 = metaUpgradeFlowAction25.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction69);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction10);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction13);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction17);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction18);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction19);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction25);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction26);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction30);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction31);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction32);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction35);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction38);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction39);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer42);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer43);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction46);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction47);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction48);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction51);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction52);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction53);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction56);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction57);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction58);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction61);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction64);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction65);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer68);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction69);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction70);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction71);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction74);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction75);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction76);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction79);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction82);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer83);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer84);
  }

  @Test
  public void test0791() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0791");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl7.shutdownDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0792() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0792");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    java.lang.String[] strArray6 = new java.lang.String[]{"enterprise", "enterprise"};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray6);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray6);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray6);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray6);
    try {
      int int11 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray6);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNotNull(strArray6);
  }

  @Test
  public void test0793() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0793");
    }
    io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider commandGetServerIdCommandProvider0 = new io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider();
    int int1 = commandGetServerIdCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType2 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType3 = commandGetServerIdCommandProvider0.commandType();
    int int4 = commandGetServerIdCommandProvider0.getPriority();
    int int5 = commandGetServerIdCommandProvider0.getPriority();
    int int6 = commandGetServerIdCommandProvider0.getPriority();
    org.neo4j.cli.ExecutionContext executionContext7 = null;
    try {
      io.github.onograph.dbms.commands.CommandGetServerIdImpl commandGetServerIdImpl8 = commandGetServerIdCommandProvider0.createCommand(
          executionContext7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
  }

  @Test
  public void test0794() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0794");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl7.shutdownDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0795() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0795");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    java.nio.file.Path path9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        path9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
  }

  @Test
  public void test0796() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0796");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl6.startDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0797() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0797");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.common.DependencyResolver dependencyResolver8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder7.setExternalDependencies(
        dependencyResolver8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = databaseManagementServiceBuilder9.setExternalDependencies(
        dependencyResolver10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
  }

  @Test
  public void test0798() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0798");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    org.neo4j.graphdb.config.Configuration configuration8 = null;
    try {
      databaseManagementServiceClusterImpl6.createDatabase("enterprise", configuration8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0799() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0799");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.common.DependencyResolver dependencyResolver2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver2);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener4 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder5 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener4);
    org.neo4j.monitoring.Monitors monitors6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.setMonitors(
        monitors6);
    org.neo4j.logging.LogProvider logProvider8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = databaseManagementServiceBuilder7.setUserLogProvider(
        logProvider8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = databaseManagementServiceBuilder7.setExternalDependencies(
        dependencyResolver10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
  }

  @Test
  public void test0800() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0800");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log2 = enhancedBootstrapper0.getLog();
    int int3 = enhancedBootstrapper0.stop();
    int int4 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log5 = enhancedBootstrapper0.getLog();
    boolean boolean6 = enhancedBootstrapper0.isRunning();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNotNull(log2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertNotNull(log5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test0801() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0801");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    java.nio.file.Path path9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path9);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener11);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = databaseManagementServiceBuilder12.loadPropertiesFromFile(
        "hi!");
    org.neo4j.logging.LogProvider logProvider15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = databaseManagementServiceBuilder14.setUserLogProvider(
        logProvider15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
  }

  @Test
  public void test0802() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0802");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl5.dropDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0803() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0803");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    int int5 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService6 = enhancedBootstrapper0.getDatabaseManagementService();
    java.nio.file.Path path7 = null;
    java.nio.file.Path path8 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
    try {
      int int11 = enhancedBootstrapper0.start(path7, path8, strMap9, false);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertNull(databaseManagementService6);
  }

  @Test
  public void test0804() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0804");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver6);
    java.lang.String str8 = clusteringDBMSBuilder5.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver9);
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService11 = clusteringDBMSBuilder5.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "enterprise" + "'", str8, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
  }

  @Test
  public void test0805() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0805");
    }
    io.github.onograph.dbms.utils.TokenNamePropertyDTO tokenNamePropertyDTO2 = new io.github.onograph.dbms.utils.TokenNamePropertyDTO(
        "enterprise", "hi!");
    java.lang.String str3 = tokenNamePropertyDTO2.getStrNp();
    java.lang.String str4 = tokenNamePropertyDTO2.getStrNp();
    java.lang.String str5 = tokenNamePropertyDTO2.getStrNp();
    java.lang.String str6 = tokenNamePropertyDTO2.getStrNt();
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterprise" + "'", str3, "enterprise");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterprise" + "'", str5, "enterprise");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
  }

  @Test
  public void test0806() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0806");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv10 = null;
    metaUpgradeFlowAction5.accept(upgradeMetaEnv10);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction12 = metaUpgradeFlowAction1.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction5);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction13 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv15 = null;
    metaUpgradeFlowAction14.accept(upgradeMetaEnv15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction17 = metaUpgradeFlowAction13.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction14);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction18 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction19 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv20 = null;
    metaUpgradeFlowAction19.accept(upgradeMetaEnv20);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = metaUpgradeFlowAction18.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction19);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv23 = null;
    metaUpgradeFlowAction18.accept(upgradeMetaEnv23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction25 = metaUpgradeFlowAction14.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction18);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction26 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv27 = null;
    metaUpgradeFlowAction26.accept(upgradeMetaEnv27);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer29 = metaUpgradeFlowAction25.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction26);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer30 = metaUpgradeFlowAction12.andThen(
        upgradeMetaEnvConsumer29);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv31 = null;
    metaUpgradeFlowAction12.accept(upgradeMetaEnv31);
    java.lang.Class<?> wildcardClass33 = metaUpgradeFlowAction12.getClass();
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction12);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction13);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction17);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction18);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction19);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction25);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction26);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer29);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer30);
    org.junit.Assert.assertNotNull(wildcardClass33);
  }

  @Test
  public void test0807() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0807");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService2 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log3 = enhancedBootstrapper0.getLog();
    java.nio.file.Path path4 = null;
    java.nio.file.Path path5 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
    try {
      int int8 = enhancedBootstrapper0.start(path4, path5, strMap6, false);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNull(databaseManagementService2);
    org.junit.Assert.assertNotNull(log3);
  }

  @Test
  public void test0808() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0808");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.monitoring.Monitors monitors4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setMonitors(
        monitors4);
    java.lang.String str6 = clusteringDBMSBuilder1.getEdition();
    java.lang.String str7 = clusteringDBMSBuilder1.getEdition();
    java.lang.String str8 = clusteringDBMSBuilder1.getEdition();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterprise" + "'", str6, "enterprise");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "enterprise" + "'", str7, "enterprise");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "enterprise" + "'", str8, "enterprise");
  }

  @Test
  public void test0809() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0809");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.monitoring.Monitors monitors4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setMonitors(
        monitors4);
    java.lang.String str6 = clusteringDBMSBuilder1.getEdition();
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder1.setMonitors(
        monitors7);
    java.nio.file.Path path9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder8.loadPropertiesFromFile(
        path9);
    org.neo4j.common.DependencyResolver dependencyResolver11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = databaseManagementServiceBuilder10.setExternalDependencies(
        dependencyResolver11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterprise" + "'", str6, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
  }

  @Test
  public void test0810() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0810");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.setMonitors(
        monitors11);
    java.nio.file.Path path13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder10.loadPropertiesFromFile(
        path13);
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService15 = clusteringDBMSBuilder10.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
  }

  @Test
  public void test0811() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0811");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      org.neo4j.graphdb.GraphDatabaseService graphDatabaseService9 = databaseManagementServiceClusterImpl7.database(
          "enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0812() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0812");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider11);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "hi!");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule16);
    java.nio.file.Path path18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path18);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
  }

  @Test
  public void test0813() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0813");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      boolean boolean8 = databaseManagementServiceClusterImpl5.isWraeForSt("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0814() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0814");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    try {
      boolean boolean11 = databaseManagementServiceClusterImpl9.isWraeForSt("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0815() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0815");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
  }

  @Test
  public void test0816() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0816");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder9.addDatabaseListener(
        databaseEventListener12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder13.setExternalDependencies(
        dependencyResolver14);
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService16 = clusteringDBMSBuilder13.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
  }

  @Test
  public void test0817() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0817");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule12 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder6.addURLAccessRule(
        "hi!", uRLAccessRule12);
    org.neo4j.logging.LogProvider logProvider14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = databaseManagementServiceBuilder13.setUserLogProvider(
        logProvider14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = databaseManagementServiceBuilder13.setMonitors(
        monitors16);
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService18 = databaseManagementServiceBuilder17.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
  }

  @Test
  public void test0818() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0818");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv5 = null;
    metaUpgradeFlowAction0.accept(upgradeMetaEnv5);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction7 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction8 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv9 = null;
    metaUpgradeFlowAction8.accept(upgradeMetaEnv9);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction11 = metaUpgradeFlowAction7.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction8);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer12 = metaUpgradeFlowAction0.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction13 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv15 = null;
    metaUpgradeFlowAction14.accept(upgradeMetaEnv15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction17 = metaUpgradeFlowAction13.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction14);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction18 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction19 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv20 = null;
    metaUpgradeFlowAction19.accept(upgradeMetaEnv20);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = metaUpgradeFlowAction18.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction19);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv23 = null;
    metaUpgradeFlowAction18.accept(upgradeMetaEnv23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction25 = metaUpgradeFlowAction14.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction18);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction26 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv27 = null;
    metaUpgradeFlowAction26.accept(upgradeMetaEnv27);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer29 = metaUpgradeFlowAction25.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction26);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction30 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction31 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv32 = null;
    metaUpgradeFlowAction31.accept(upgradeMetaEnv32);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction34 = metaUpgradeFlowAction30.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction31);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction35 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction36 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv37 = null;
    metaUpgradeFlowAction36.accept(upgradeMetaEnv37);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction39 = metaUpgradeFlowAction35.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction36);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction40 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction41 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv42 = null;
    metaUpgradeFlowAction41.accept(upgradeMetaEnv42);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction44 = metaUpgradeFlowAction40.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction41);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction45 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction46 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv47 = null;
    metaUpgradeFlowAction46.accept(upgradeMetaEnv47);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction49 = metaUpgradeFlowAction45.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction46);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv50 = null;
    metaUpgradeFlowAction45.accept(upgradeMetaEnv50);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction52 = metaUpgradeFlowAction41.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction45);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction53 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv54 = null;
    metaUpgradeFlowAction53.accept(upgradeMetaEnv54);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer56 = metaUpgradeFlowAction52.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction53);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction57 = metaUpgradeFlowAction35.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction53);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction58 = metaUpgradeFlowAction34.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction57);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction59 = metaUpgradeFlowAction26.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction34);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction60 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction26);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv61 = null;
    metaUpgradeFlowAction60.accept(upgradeMetaEnv61);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction7);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction8);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction11);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer12);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction13);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction17);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction18);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction19);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction25);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction26);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer29);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction30);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction31);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction34);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction35);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction36);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction39);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction40);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction41);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction44);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction45);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction46);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction49);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction52);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction53);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer56);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction57);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction58);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction59);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction60);
  }

  @Test
  public void test0819() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0819");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl5.shutdownDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0820() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0820");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.setUserLogProvider(
        logProvider13);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = clusteringDBMSBuilder12.loadPropertiesFromFile(
        "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
  }

  @Test
  public void test0821() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0821");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    int int1 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int2 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int3 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType4 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType5 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType6 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    int int7 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int8 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.ExecutionContext executionContext9 = null;
    try {
      io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommand nodeStoreWrapperCopyCommand10 = nodeStoreWrapperCopyCommandCommandProvider0.createCommand(
          executionContext9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType5 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType5.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType6 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType6.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
  }

  @Test
  public void test0822() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0822");
    }
    io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider commandGetServerIdCommandProvider0 = new io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider();
    org.neo4j.cli.Command.CommandType commandType1 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType2 = commandGetServerIdCommandProvider0.commandType();
    int int3 = commandGetServerIdCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType4 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType5 = commandGetServerIdCommandProvider0.commandType();
    org.junit.Assert.assertTrue(
        "'" + commandType1 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType1.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType5 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType5.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
  }

  @Test
  public void test0823() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0823");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv1 = null;
    metaUpgradeFlowAction0.accept(upgradeMetaEnv1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction3 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv5 = null;
    metaUpgradeFlowAction4.accept(upgradeMetaEnv5);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction7 = metaUpgradeFlowAction3.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction4);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction8 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv10 = null;
    metaUpgradeFlowAction9.accept(upgradeMetaEnv10);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction12 = metaUpgradeFlowAction8.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction9);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction13 = metaUpgradeFlowAction7.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction8);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv14 = null;
    metaUpgradeFlowAction8.accept(upgradeMetaEnv14);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction16 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction17 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv18 = null;
    metaUpgradeFlowAction17.accept(upgradeMetaEnv18);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction20 = metaUpgradeFlowAction16.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction17);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction21 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv23 = null;
    metaUpgradeFlowAction22.accept(upgradeMetaEnv23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction25 = metaUpgradeFlowAction21.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction22);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv26 = null;
    metaUpgradeFlowAction21.accept(upgradeMetaEnv26);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction28 = metaUpgradeFlowAction17.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction21);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction29 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction30 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv31 = null;
    metaUpgradeFlowAction30.accept(upgradeMetaEnv31);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction33 = metaUpgradeFlowAction29.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction30);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction34 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction35 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv36 = null;
    metaUpgradeFlowAction35.accept(upgradeMetaEnv36);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction38 = metaUpgradeFlowAction34.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction35);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv39 = null;
    metaUpgradeFlowAction34.accept(upgradeMetaEnv39);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction41 = metaUpgradeFlowAction30.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction34);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv43 = null;
    metaUpgradeFlowAction42.accept(upgradeMetaEnv43);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer45 = metaUpgradeFlowAction41.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction42);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer46 = metaUpgradeFlowAction28.andThen(
        upgradeMetaEnvConsumer45);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv47 = null;
    metaUpgradeFlowAction28.accept(upgradeMetaEnv47);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction49 = metaUpgradeFlowAction8.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction28);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction50 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction28);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv51 = null;
    metaUpgradeFlowAction0.accept(upgradeMetaEnv51);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction3);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction7);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction8);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction12);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction13);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction16);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction17);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction20);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction21);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction25);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction28);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction29);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction30);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction33);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction34);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction35);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction38);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction41);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer45);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer46);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction49);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction50);
  }

  @Test
  public void test0824() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0824");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver9);
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService11 = clusteringDBMSBuilder3.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
  }

  @Test
  public void test0825() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0825");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    java.lang.String[] strArray10 = new java.lang.String[]{"enterprise", "enterprise", "", "hi!",
        "hi!"};
    try {
      int int11 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray10);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertNotNull(strArray10);
  }

  @Test
  public void test0826() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0826");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl1);
    try {
      databaseManagementServiceClusterImpl1.createDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0827() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0827");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    try {
      databaseManagementServiceClusterImpl2.dropDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0828() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0828");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    int int4 = enhancedBootstrapper0.stop();
    int int5 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService6 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService7 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService8 = enhancedBootstrapper0.getDatabaseManagementService();
    java.lang.String[] strArray11 = new java.lang.String[]{"enterprise", "enterprise"};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray11);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray11);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray11);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray11);
    try {
      int int16 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray11);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertNull(databaseManagementService6);
    org.junit.Assert.assertNull(databaseManagementService7);
    org.junit.Assert.assertNull(databaseManagementService8);
    org.junit.Assert.assertNotNull(strArray11);
  }

  @Test
  public void test0829() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0829");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver10);
    java.nio.file.Path path12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path12);
    java.nio.file.Path path14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider16);
    org.neo4j.monitoring.Monitors monitors18 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder19 = clusteringDBMSBuilder17.setMonitors(
        monitors18);
    org.neo4j.common.DependencyResolver dependencyResolver20 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder17.setExternalDependencies(
        dependencyResolver20);
    org.neo4j.common.DependencyResolver dependencyResolver22 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder23 = clusteringDBMSBuilder21.setExternalDependencies(
        dependencyResolver22);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder21);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder23);
  }

  @Test
  public void test0830() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0830");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    try {
      databaseManagementServiceClusterImpl6.startDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0831() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0831");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    int int5 = enhancedBootstrapper0.stop();
    int int6 = enhancedBootstrapper0.stop();
    int int7 = enhancedBootstrapper0.stop();
    java.nio.file.Path path8 = null;
    java.nio.file.Path path9 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
    try {
      int int12 = enhancedBootstrapper0.start(path8, path9, strMap10, false);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
  }

  @Test
  public void test0832() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0832");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder5.setMonitors(
        monitors9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider11);
    org.neo4j.common.DependencyResolver dependencyResolver13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver13);
    java.nio.file.Path path15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = databaseManagementServiceBuilder14.loadPropertiesFromFile(
        path15);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener17 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder18 = databaseManagementServiceBuilder16.addDatabaseListener(
        databaseEventListener17);
    org.neo4j.monitoring.Monitors monitors19 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder20 = databaseManagementServiceBuilder16.setMonitors(
        monitors19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder18);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder20);
  }

  @Test
  public void test0833() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0833");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder7.setMonitors(
        monitors8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder7.setMonitors(
        monitors10);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder7.loadPropertiesFromFile(
        "hi!");
    java.lang.Class<?> wildcardClass14 = clusteringDBMSBuilder7.getClass();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(wildcardClass14);
  }

  @Test
  public void test0834() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0834");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl5.startDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0835() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0835");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl8.startDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0836() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0836");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder7.setMonitors(
        monitors8);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder7.addURLAccessRule(
        "hi!", uRLAccessRule11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder7.setUserLogProvider(
        logProvider13);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder7.addDatabaseListener(
        databaseEventListener15);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder18 = clusteringDBMSBuilder7.setMonitors(
        monitors17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder18);
  }

  @Test
  public void test0837() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0837");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder6.addURLAccessRule(
        "enterprise", uRLAccessRule12);
    java.nio.file.Path path14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        path14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder6.setMonitors(
        monitors16);
    org.neo4j.common.DependencyResolver dependencyResolver18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder17.setExternalDependencies(
        dependencyResolver18);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder21 = clusteringDBMSBuilder17.loadPropertiesFromFile(
        "");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder21);
  }

  @Test
  public void test0838() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0838");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    java.nio.file.Path path9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path9);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder3.setUserLogProvider(
        logProvider13);
    org.neo4j.logging.LogProvider logProvider15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder3.setUserLogProvider(
        logProvider15);
    java.lang.String str17 = clusteringDBMSBuilder3.getEdition();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "enterprise" + "'", str17, "enterprise");
  }

  @Test
  public void test0839() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0839");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver10);
    java.nio.file.Path path12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder13.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.common.DependencyResolver dependencyResolver16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder13.setExternalDependencies(
        dependencyResolver16);
    java.lang.String str18 = clusteringDBMSBuilder13.getEdition();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "enterprise" + "'", str18, "enterprise");
  }

  @Test
  public void test0840() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0840");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv5 = null;
    metaUpgradeFlowAction0.accept(upgradeMetaEnv5);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction7 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction8 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv9 = null;
    metaUpgradeFlowAction8.accept(upgradeMetaEnv9);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction11 = metaUpgradeFlowAction7.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction8);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer12 = metaUpgradeFlowAction0.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction13 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv15 = null;
    metaUpgradeFlowAction14.accept(upgradeMetaEnv15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction17 = metaUpgradeFlowAction13.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction14);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction18 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction19 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv20 = null;
    metaUpgradeFlowAction19.accept(upgradeMetaEnv20);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = metaUpgradeFlowAction18.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction19);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction24 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv25 = null;
    metaUpgradeFlowAction24.accept(upgradeMetaEnv25);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction27 = metaUpgradeFlowAction23.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction24);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction28 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction29 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv30 = null;
    metaUpgradeFlowAction29.accept(upgradeMetaEnv30);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction32 = metaUpgradeFlowAction28.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction29);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv33 = null;
    metaUpgradeFlowAction28.accept(upgradeMetaEnv33);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction35 = metaUpgradeFlowAction24.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction28);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction36 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv37 = null;
    metaUpgradeFlowAction36.accept(upgradeMetaEnv37);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer39 = metaUpgradeFlowAction35.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction36);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer40 = metaUpgradeFlowAction18.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction36);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction41 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv43 = null;
    metaUpgradeFlowAction42.accept(upgradeMetaEnv43);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction45 = metaUpgradeFlowAction41.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction42);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction46 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction47 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv48 = null;
    metaUpgradeFlowAction47.accept(upgradeMetaEnv48);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction50 = metaUpgradeFlowAction46.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction47);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction51 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction52 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv53 = null;
    metaUpgradeFlowAction52.accept(upgradeMetaEnv53);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction55 = metaUpgradeFlowAction51.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction52);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction56 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction57 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv58 = null;
    metaUpgradeFlowAction57.accept(upgradeMetaEnv58);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction60 = metaUpgradeFlowAction56.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction57);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv61 = null;
    metaUpgradeFlowAction56.accept(upgradeMetaEnv61);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction63 = metaUpgradeFlowAction52.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction56);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction64 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv65 = null;
    metaUpgradeFlowAction64.accept(upgradeMetaEnv65);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer67 = metaUpgradeFlowAction63.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction64);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction68 = metaUpgradeFlowAction46.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction64);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction69 = metaUpgradeFlowAction45.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction68);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer70 = metaUpgradeFlowAction36.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction45);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction71 = metaUpgradeFlowAction13.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction45);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer72 = upgradeMetaEnvConsumer12.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction45);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction7);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction8);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction11);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer12);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction13);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction17);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction18);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction19);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction24);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction28);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction29);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction32);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction35);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction36);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer39);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer40);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction41);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction45);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction46);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction47);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction50);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction51);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction52);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction55);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction56);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction57);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction60);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction63);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction64);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer67);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction68);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction69);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer70);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction71);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer72);
  }

  @Test
  public void test0841() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0841");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver10);
    java.nio.file.Path path12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path12);
    try {
      io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl14 = clusteringDBMSBuilder5.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
  }

  @Test
  public void test0842() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0842");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.common.DependencyResolver dependencyResolver2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver2);
    org.neo4j.common.DependencyResolver dependencyResolver4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver4);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
  }

  @Test
  public void test0843() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0843");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    int int1 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType2 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType3 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    int int4 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.ExecutionContext executionContext5 = null;
    try {
      io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommand nodeStoreWrapperCopyCommand6 = nodeStoreWrapperCopyCommandCommandProvider0.createCommand(
          executionContext5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
  }

  @Test
  public void test0844() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0844");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl6.createDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0845() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0845");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log2 = enhancedBootstrapper0.getLog();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService5 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean6 = enhancedBootstrapper0.isRunning();
    int int7 = enhancedBootstrapper0.stop();
    int int8 = enhancedBootstrapper0.stop();
    java.lang.String[] strArray10 = new java.lang.String[]{""};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray10);
    try {
      int int12 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray10);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNotNull(log2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertNull(databaseManagementService5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    org.junit.Assert.assertNotNull(strArray10);
  }

  @Test
  public void test0846() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0846");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder6.addURLAccessRule(
        "enterprise", uRLAccessRule12);
    java.nio.file.Path path14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        path14);
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService16 = clusteringDBMSBuilder15.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
  }

  @Test
  public void test0847() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0847");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder5.setMonitors(
        monitors9);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener11);
    java.nio.file.Path path13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder12.loadPropertiesFromFile(
        path13);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder12.addDatabaseListener(
        databaseEventListener15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
  }

  @Test
  public void test0848() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0848");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = databaseManagementServiceBuilder8.setMonitors(
        monitors9);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = databaseManagementServiceBuilder8.addDatabaseListener(
        databaseEventListener11);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = databaseManagementServiceBuilder8.addURLAccessRule(
        "hi!", uRLAccessRule14);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = databaseManagementServiceBuilder8.addDatabaseListener(
        databaseEventListener16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
  }

  @Test
  public void test0849() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0849");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.setMonitors(
        monitors11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.setMonitors(
        monitors13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder14.setMonitors(
        monitors15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
  }

  @Test
  public void test0850() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0850");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver10);
    java.nio.file.Path path12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path12);
    java.nio.file.Path path14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider16);
    org.neo4j.monitoring.Monitors monitors18 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder19 = clusteringDBMSBuilder17.setMonitors(
        monitors18);
    org.neo4j.common.DependencyResolver dependencyResolver20 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder17.setExternalDependencies(
        dependencyResolver20);
    org.neo4j.logging.LogProvider logProvider22 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder23 = clusteringDBMSBuilder21.setUserLogProvider(
        logProvider22);
    java.lang.Class<?> wildcardClass24 = databaseManagementServiceBuilder23.getClass();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder21);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder23);
    org.junit.Assert.assertNotNull(wildcardClass24);
  }

  @Test
  public void test0851() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0851");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver5 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder6 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver5);
    java.nio.file.Path path7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path7);
    org.neo4j.logging.LogProvider logProvider9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
  }

  @Test
  public void test0852() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0852");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    int int4 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log5 = enhancedBootstrapper0.getLog();
    int int6 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log7 = enhancedBootstrapper0.getLog();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertNotNull(log5);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    org.junit.Assert.assertNotNull(log7);
  }

  @Test
  public void test0853() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0853");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = databaseManagementServiceBuilder7.addDatabaseListener(
        databaseEventListener8);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = databaseManagementServiceBuilder7.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = databaseManagementServiceBuilder11.addURLAccessRule(
        "enterprise", uRLAccessRule13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
  }

  @Test
  public void test0854() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0854");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    try {
      databaseManagementServiceClusterImpl2.startDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0855() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0855");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener6);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener8);
    java.nio.file.Path path10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        path10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
  }

  @Test
  public void test0856() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0856");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction10 = metaUpgradeFlowAction4.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction5);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv11 = null;
    metaUpgradeFlowAction5.accept(upgradeMetaEnv11);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction13 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv15 = null;
    metaUpgradeFlowAction14.accept(upgradeMetaEnv15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction17 = metaUpgradeFlowAction13.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction14);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction18 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction19 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv20 = null;
    metaUpgradeFlowAction19.accept(upgradeMetaEnv20);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = metaUpgradeFlowAction18.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction19);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv23 = null;
    metaUpgradeFlowAction18.accept(upgradeMetaEnv23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction25 = metaUpgradeFlowAction14.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction18);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction26 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction18);
    java.lang.Class<?> wildcardClass27 = metaUpgradeFlowAction18.getClass();
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction10);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction13);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction17);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction18);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction19);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction25);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction26);
    org.junit.Assert.assertNotNull(wildcardClass27);
  }

  @Test
  public void test0857() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0857");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction10 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction11 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv12 = null;
    metaUpgradeFlowAction11.accept(upgradeMetaEnv12);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = metaUpgradeFlowAction10.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction11);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction15 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction16 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv17 = null;
    metaUpgradeFlowAction16.accept(upgradeMetaEnv17);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction19 = metaUpgradeFlowAction15.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction16);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv20 = null;
    metaUpgradeFlowAction15.accept(upgradeMetaEnv20);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = metaUpgradeFlowAction11.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv24 = null;
    metaUpgradeFlowAction23.accept(upgradeMetaEnv24);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer26 = metaUpgradeFlowAction22.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction27 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction28 = metaUpgradeFlowAction4.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction27);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction29 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer30 = metaUpgradeFlowAction28.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction29);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction31 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction32 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv33 = null;
    metaUpgradeFlowAction32.accept(upgradeMetaEnv33);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction35 = metaUpgradeFlowAction31.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction32);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction36 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction37 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv38 = null;
    metaUpgradeFlowAction37.accept(upgradeMetaEnv38);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction40 = metaUpgradeFlowAction36.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction37);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction41 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv43 = null;
    metaUpgradeFlowAction42.accept(upgradeMetaEnv43);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction45 = metaUpgradeFlowAction41.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction42);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv46 = null;
    metaUpgradeFlowAction41.accept(upgradeMetaEnv46);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction48 = metaUpgradeFlowAction37.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction41);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction49 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv50 = null;
    metaUpgradeFlowAction49.accept(upgradeMetaEnv50);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer52 = metaUpgradeFlowAction48.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction49);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer53 = metaUpgradeFlowAction31.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction49);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction54 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction55 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv56 = null;
    metaUpgradeFlowAction55.accept(upgradeMetaEnv56);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction58 = metaUpgradeFlowAction54.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction55);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction59 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction60 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv61 = null;
    metaUpgradeFlowAction60.accept(upgradeMetaEnv61);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction63 = metaUpgradeFlowAction59.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction60);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction64 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction65 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv66 = null;
    metaUpgradeFlowAction65.accept(upgradeMetaEnv66);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction68 = metaUpgradeFlowAction64.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction65);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction69 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction70 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv71 = null;
    metaUpgradeFlowAction70.accept(upgradeMetaEnv71);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction73 = metaUpgradeFlowAction69.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction70);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv74 = null;
    metaUpgradeFlowAction69.accept(upgradeMetaEnv74);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction76 = metaUpgradeFlowAction65.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction69);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction77 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv78 = null;
    metaUpgradeFlowAction77.accept(upgradeMetaEnv78);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer80 = metaUpgradeFlowAction76.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction77);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction81 = metaUpgradeFlowAction59.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction77);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction82 = metaUpgradeFlowAction58.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction81);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer83 = metaUpgradeFlowAction49.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction58);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer84 = upgradeMetaEnvConsumer30.andThen(
        upgradeMetaEnvConsumer83);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction10);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction11);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction15);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction16);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction19);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer26);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction28);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction29);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer30);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction31);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction32);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction35);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction36);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction37);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction40);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction41);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction45);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction48);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction49);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer52);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer53);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction54);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction55);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction58);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction59);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction60);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction63);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction64);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction65);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction68);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction69);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction70);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction73);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction76);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction77);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer80);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction81);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction82);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer83);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer84);
  }

  @Test
  public void test0858() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0858");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = databaseManagementServiceBuilder10.loadPropertiesFromFile(
        "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
  }

  @Test
  public void test0859() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0859");
    }
    io.github.onograph.server.EntryPointImpl entryPointImpl0 = new io.github.onograph.server.EntryPointImpl();
    io.github.onograph.server.EntryPointImpl entryPointImpl1 = new io.github.onograph.server.EntryPointImpl();
    int int2 = entryPointImpl0.compareTo((org.neo4j.server.startup.EntryPoint) entryPointImpl1);
    org.neo4j.server.startup.EntryPoint.Priority priority3 = entryPointImpl0.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority4 = entryPointImpl0.getPriority();
    io.github.onograph.server.EntryPointImpl entryPointImpl5 = new io.github.onograph.server.EntryPointImpl();
    org.neo4j.server.startup.EntryPoint.Priority priority6 = entryPointImpl5.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority7 = entryPointImpl5.getPriority();
    int int8 = entryPointImpl0.compareTo((org.neo4j.server.startup.EntryPoint) entryPointImpl5);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue(
        "'" + priority3 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority3.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority4 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority4.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority6 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority6.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority7 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority7.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
  }

  @Test
  public void test0860() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0860");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder7.setExternalDependencies(
        dependencyResolver8);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "hi!");
    java.lang.String str12 = clusteringDBMSBuilder9.getEdition();
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "enterprise" + "'", str12, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
  }

  @Test
  public void test0861() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0861");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      boolean boolean10 = databaseManagementServiceClusterImpl5.isWraeForSt("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0862() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0862");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    try {
      databaseManagementServiceClusterImpl3.createDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0863() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0863");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
  }

  @Test
  public void test0864() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0864");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction10 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction11 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv12 = null;
    metaUpgradeFlowAction11.accept(upgradeMetaEnv12);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = metaUpgradeFlowAction10.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction11);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv15 = null;
    metaUpgradeFlowAction10.accept(upgradeMetaEnv15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction17 = metaUpgradeFlowAction6.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction10);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction18 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv19 = null;
    metaUpgradeFlowAction18.accept(upgradeMetaEnv19);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer21 = metaUpgradeFlowAction17.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction18);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer22 = metaUpgradeFlowAction0.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction18);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv23 = null;
    metaUpgradeFlowAction0.accept(upgradeMetaEnv23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction25 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction26 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv27 = null;
    metaUpgradeFlowAction26.accept(upgradeMetaEnv27);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction29 = metaUpgradeFlowAction25.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction26);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction30 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction31 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv32 = null;
    metaUpgradeFlowAction31.accept(upgradeMetaEnv32);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction34 = metaUpgradeFlowAction30.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction31);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction35 = metaUpgradeFlowAction29.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction30);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv36 = null;
    metaUpgradeFlowAction30.accept(upgradeMetaEnv36);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction38 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction39 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv40 = null;
    metaUpgradeFlowAction39.accept(upgradeMetaEnv40);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = metaUpgradeFlowAction38.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction39);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction43 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction44 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv45 = null;
    metaUpgradeFlowAction44.accept(upgradeMetaEnv45);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction47 = metaUpgradeFlowAction43.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction44);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv48 = null;
    metaUpgradeFlowAction43.accept(upgradeMetaEnv48);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction50 = metaUpgradeFlowAction39.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction43);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction51 = metaUpgradeFlowAction30.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction43);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction52 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction53 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv54 = null;
    metaUpgradeFlowAction53.accept(upgradeMetaEnv54);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction56 = metaUpgradeFlowAction52.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction53);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction57 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction58 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv59 = null;
    metaUpgradeFlowAction58.accept(upgradeMetaEnv59);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction61 = metaUpgradeFlowAction57.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction58);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction62 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction63 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv64 = null;
    metaUpgradeFlowAction63.accept(upgradeMetaEnv64);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction66 = metaUpgradeFlowAction62.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction63);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction67 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction68 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv69 = null;
    metaUpgradeFlowAction68.accept(upgradeMetaEnv69);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction71 = metaUpgradeFlowAction67.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction68);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv72 = null;
    metaUpgradeFlowAction67.accept(upgradeMetaEnv72);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction74 = metaUpgradeFlowAction63.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction67);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction75 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv76 = null;
    metaUpgradeFlowAction75.accept(upgradeMetaEnv76);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer78 = metaUpgradeFlowAction74.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction75);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction79 = metaUpgradeFlowAction57.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction75);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction80 = metaUpgradeFlowAction56.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction79);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction81 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction82 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv83 = null;
    metaUpgradeFlowAction82.accept(upgradeMetaEnv83);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction85 = metaUpgradeFlowAction81.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction82);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction86 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction87 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv88 = null;
    metaUpgradeFlowAction87.accept(upgradeMetaEnv88);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction90 = metaUpgradeFlowAction86.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction87);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv91 = null;
    metaUpgradeFlowAction86.accept(upgradeMetaEnv91);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction93 = metaUpgradeFlowAction82.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction86);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction94 = metaUpgradeFlowAction56.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction93);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction95 = metaUpgradeFlowAction30.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction93);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer96 = metaUpgradeFlowAction0.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction30);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction10);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction11);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction17);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction18);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer21);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction25);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction26);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction29);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction30);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction31);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction34);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction35);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction38);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction39);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction43);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction44);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction47);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction50);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction51);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction52);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction53);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction56);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction57);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction58);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction61);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction62);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction63);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction66);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction67);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction68);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction71);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction74);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction75);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer78);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction79);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction80);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction81);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction82);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction85);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction86);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction87);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction90);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction93);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction94);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction95);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer96);
  }

  @Test
  public void test0865() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0865");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider16);
    java.nio.file.Path path18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        path18);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.logging.LogProvider logProvider22 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder23 = clusteringDBMSBuilder21.setUserLogProvider(
        logProvider22);
    org.neo4j.common.DependencyResolver dependencyResolver24 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder25 = databaseManagementServiceBuilder23.setExternalDependencies(
        dependencyResolver24);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder21);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder23);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder25);
  }

  @Test
  public void test0866() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0866");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log2 = enhancedBootstrapper0.getLog();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    java.lang.String[] strArray11 = new java.lang.String[]{"hi!", "hi!", "enterprise", "",
        "enterprise", "enterprise"};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray11);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray11);
    try {
      int int14 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray11);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNotNull(log2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertNotNull(strArray11);
  }

  @Test
  public void test0867() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0867");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    try {
      org.neo4j.graphdb.GraphDatabaseService graphDatabaseService6 = databaseManagementServiceClusterImpl2.database(
          "hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0868() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0868");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService5 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean6 = enhancedBootstrapper0.isRunning();
    java.lang.String[] strArray8 = new java.lang.String[]{""};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray8);
    try {
      int int10 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray8);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNull(databaseManagementService4);
    org.junit.Assert.assertNull(databaseManagementService5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNotNull(strArray8);
  }

  @Test
  public void test0869() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0869");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    int int5 = enhancedBootstrapper0.stop();
    int int6 = enhancedBootstrapper0.stop();
    java.nio.file.Path path7 = null;
    java.nio.file.Path path8 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
    try {
      int int11 = enhancedBootstrapper0.start(path7, path8, strMap9, true);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
  }

  @Test
  public void test0870() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0870");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder6.addURLAccessRule(
        "", uRLAccessRule10);
    org.neo4j.logging.LogProvider logProvider12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder6.setMonitors(
        monitors16);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule19 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder20 = clusteringDBMSBuilder6.addURLAccessRule(
        "enterprise", uRLAccessRule19);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener21 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder22 = clusteringDBMSBuilder6.addDatabaseListener(
        databaseEventListener21);
    java.lang.Class<?> wildcardClass23 = databaseManagementServiceBuilder22.getClass();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder20);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder22);
    org.junit.Assert.assertNotNull(wildcardClass23);
  }

  @Test
  public void test0871() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0871");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule10);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder11.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder11.addURLAccessRule(
        "enterprise", uRLAccessRule15);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener17 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder18 = clusteringDBMSBuilder11.addDatabaseListener(
        databaseEventListener17);
    org.neo4j.common.DependencyResolver dependencyResolver19 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder20 = clusteringDBMSBuilder11.setExternalDependencies(
        dependencyResolver19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder18);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder20);
  }

  @Test
  public void test0872() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0872");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.addDatabaseListener(
        databaseEventListener7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.addDatabaseListener(
        databaseEventListener9);
    java.nio.file.Path path11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        path11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.setUserLogProvider(
        logProvider13);
    org.neo4j.logging.LogProvider logProvider15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = clusteringDBMSBuilder12.setUserLogProvider(
        logProvider15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
  }

  @Test
  public void test0873() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0873");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
  }

  @Test
  public void test0874() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0874");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    org.neo4j.graphdb.config.Configuration configuration9 = null;
    try {
      databaseManagementServiceClusterImpl5.createDatabase("", configuration9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0875() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0875");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl8.shutdown();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0876() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0876");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener6);
    java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = databaseManagementServiceBuilder7.setConfigRaw(
          strMap8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
  }

  @Test
  public void test0877() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0877");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.setMonitors(
        monitors9);
    java.lang.Class<?> wildcardClass11 = clusteringDBMSBuilder10.getClass();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(wildcardClass11);
  }

  @Test
  public void test0878() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0878");
    }
    io.github.onograph.cluster.raft.module.dprot.ClusterStructureService clusterStructureService0 = null;
    org.neo4j.kernel.database.DatabaseIdRepository databaseIdRepository1 = null;
    io.github.onograph.dbms.serverproc.DatabaseStateProcedureClusterImpl databaseStateProcedureClusterImpl2 = new io.github.onograph.dbms.serverproc.DatabaseStateProcedureClusterImpl(
        clusterStructureService0, databaseIdRepository1);
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature3 = databaseStateProcedureClusterImpl2.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature4 = databaseStateProcedureClusterImpl2.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature5 = databaseStateProcedureClusterImpl2.signature();
    org.neo4j.kernel.api.procedure.Context context6 = null;
    org.neo4j.values.AnyValue anyValue7 = null;
    org.neo4j.values.AnyValue[] anyValueArray8 = new org.neo4j.values.AnyValue[]{anyValue7};
    org.neo4j.kernel.api.ResourceTracker resourceTracker9 = null;
    try {
      org.neo4j.collection.RawIterator<org.neo4j.values.AnyValue[], org.neo4j.internal.kernel.api.exceptions.ProcedureException> anyValueArrayRawIterator10 = databaseStateProcedureClusterImpl2.apply(
          context6, anyValueArray8, resourceTracker9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalArgumentException; message: Parameter 'databaseName' value should have a string representation. Instead: null");
    } catch (java.lang.IllegalArgumentException e) {
    }
    org.junit.Assert.assertNotNull(procedureSignature3);
    org.junit.Assert.assertNotNull(procedureSignature4);
    org.junit.Assert.assertNotNull(procedureSignature5);
    org.junit.Assert.assertNotNull(anyValueArray8);
  }

  @Test
  public void test0879() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0879");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log2 = enhancedBootstrapper0.getLog();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService5 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log6 = enhancedBootstrapper0.getLog();
    int int7 = enhancedBootstrapper0.stop();
    boolean boolean8 = enhancedBootstrapper0.isRunning();
    int int9 = enhancedBootstrapper0.stop();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNotNull(log2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertNull(databaseManagementService5);
    org.junit.Assert.assertNotNull(log6);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
  }

  @Test
  public void test0880() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0880");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    java.lang.String str11 = clusteringDBMSBuilder10.getEdition();
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder10.loadPropertiesFromFile(
        "");
    java.nio.file.Path path14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder13.loadPropertiesFromFile(
        path14);
    org.neo4j.common.DependencyResolver dependencyResolver16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder13.setExternalDependencies(
        dependencyResolver16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "enterprise" + "'", str11, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
  }

  @Test
  public void test0881() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0881");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl5.dropDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0882() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0882");
    }
    io.github.onograph.dbms.utils.TokenNamePropertyDTO tokenNamePropertyDTO2 = new io.github.onograph.dbms.utils.TokenNamePropertyDTO(
        "enterprise", "hi!");
    java.lang.String str3 = tokenNamePropertyDTO2.getStrNt();
    java.lang.String str4 = tokenNamePropertyDTO2.getStrNt();
    java.lang.String str5 = tokenNamePropertyDTO2.getStrNt();
    java.lang.String str6 = tokenNamePropertyDTO2.getStrNt();
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
  }

  @Test
  public void test0883() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0883");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    int int1 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int2 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int3 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int4 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int5 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType6 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType7 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.ExecutionContext executionContext8 = null;
    try {
      io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommand nodeStoreWrapperCopyCommand9 = nodeStoreWrapperCopyCommandCommandProvider0.createCommand(
          executionContext8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType6 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType6.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType7 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType7.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
  }

  @Test
  public void test0884() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0884");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.logging.LogProvider logProvider6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
  }

  @Test
  public void test0885() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0885");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    java.nio.file.Path path9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path9);
    java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder3.setConfigRaw(
          strMap11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
  }

  @Test
  public void test0886() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0886");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.monitoring.Monitors monitors11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder6.setMonitors(
        monitors11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = databaseManagementServiceBuilder12.setMonitors(
        monitors13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
  }

  @Test
  public void test0887() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0887");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder7.setMonitors(
        monitors8);
    org.neo4j.logging.LogProvider logProvider10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder7.setUserLogProvider(
        logProvider10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder7.setMonitors(
        monitors12);
    org.neo4j.logging.LogProvider logProvider14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder7.setUserLogProvider(
        logProvider14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
  }

  @Test
  public void test0888() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0888");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder3.setMonitors(
        monitors9);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = databaseManagementServiceBuilder12.setMonitors(
        monitors13);
    java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = databaseManagementServiceBuilder14.setConfigRaw(
          strMap15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
  }

  @Test
  public void test0889() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0889");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    org.neo4j.logging.Log log5 = enhancedBootstrapper0.getLog();
    java.lang.String[] strArray10 = new java.lang.String[]{"hi!", "enterprise", "enterprise",
        "enterprise"};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray10);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray10);
    try {
      int int13 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray10);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertNotNull(log5);
    org.junit.Assert.assertNotNull(strArray10);
  }

  @Test
  public void test0890() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0890");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder7.setMonitors(
        monitors8);
    org.neo4j.logging.LogProvider logProvider10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder7.setUserLogProvider(
        logProvider10);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder7.loadPropertiesFromFile(
        "hi!");
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService14 = clusteringDBMSBuilder7.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
  }

  @Test
  public void test0891() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0891");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider11);
    java.nio.file.Path path13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.loadPropertiesFromFile(
        path13);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder14.addURLAccessRule(
        "", uRLAccessRule16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
  }

  @Test
  public void test0892() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0892");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    try {
      databaseManagementServiceClusterImpl5.createDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0893() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0893");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener10 = null;
    try {
      databaseManagementServiceClusterImpl5.registerDatabaseEventListener(databaseEventListener10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0894() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0894");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "hi!");
    org.neo4j.logging.LogProvider logProvider8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder3.setUserLogProvider(
        logProvider8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder3.setMonitors(
        monitors10);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener12 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener12);
    java.lang.Class<?> wildcardClass14 = clusteringDBMSBuilder3.getClass();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(wildcardClass14);
  }

  @Test
  public void test0895() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0895");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        "hi!");
    java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.setConfigRaw(
          strMap11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
  }

  @Test
  public void test0896() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0896");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv5 = null;
    metaUpgradeFlowAction0.accept(upgradeMetaEnv5);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction7 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction8 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv9 = null;
    metaUpgradeFlowAction8.accept(upgradeMetaEnv9);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction11 = metaUpgradeFlowAction7.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction8);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer12 = metaUpgradeFlowAction0.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction7);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv13 = null;
    metaUpgradeFlowAction0.accept(upgradeMetaEnv13);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction15 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction16 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv17 = null;
    metaUpgradeFlowAction16.accept(upgradeMetaEnv17);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction19 = metaUpgradeFlowAction15.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction16);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction20 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction21 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv22 = null;
    metaUpgradeFlowAction21.accept(upgradeMetaEnv22);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction24 = metaUpgradeFlowAction20.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction21);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction25 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction26 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv27 = null;
    metaUpgradeFlowAction26.accept(upgradeMetaEnv27);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction29 = metaUpgradeFlowAction25.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction26);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction30 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction31 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv32 = null;
    metaUpgradeFlowAction31.accept(upgradeMetaEnv32);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction34 = metaUpgradeFlowAction30.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction31);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv35 = null;
    metaUpgradeFlowAction30.accept(upgradeMetaEnv35);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction37 = metaUpgradeFlowAction26.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction30);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction38 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv39 = null;
    metaUpgradeFlowAction38.accept(upgradeMetaEnv39);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer41 = metaUpgradeFlowAction37.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction38);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = metaUpgradeFlowAction20.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction38);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction43 = metaUpgradeFlowAction19.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction42);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction44 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction43);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction7);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction8);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction11);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer12);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction15);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction16);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction19);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction20);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction21);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction24);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction25);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction26);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction29);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction30);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction31);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction34);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction37);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction38);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer41);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction43);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction44);
  }

  @Test
  public void test0897() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0897");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    org.neo4j.graphdb.config.Configuration configuration8 = null;
    try {
      databaseManagementServiceClusterImpl5.createDatabase("hi!", configuration8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0898() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0898");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    java.lang.String str9 = clusteringDBMSBuilder3.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder3.setMonitors(
        monitors12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder13.setMonitors(
        monitors14);
    java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder13.setConfigRaw(
          strMap16);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "enterprise" + "'", str9, "enterprise");
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
  }

  @Test
  public void test0899() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0899");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    java.nio.file.Path path9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path9);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener11);
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService13 = databaseManagementServiceBuilder12.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
  }

  @Test
  public void test0900() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0900");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    int int5 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log6 = enhancedBootstrapper0.getLog();
    boolean boolean7 = enhancedBootstrapper0.isRunning();
    int int8 = enhancedBootstrapper0.stop();
    int int9 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService10 = enhancedBootstrapper0.getDatabaseManagementService();
    java.nio.file.Path path11 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
    try {
      int int13 = enhancedBootstrapper0.start(path11, strMap12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNull(databaseManagementService4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertNotNull(log6);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    org.junit.Assert.assertNull(databaseManagementService10);
  }

  @Test
  public void test0901() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0901");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver10);
    org.neo4j.common.DependencyResolver dependencyResolver12 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = databaseManagementServiceBuilder11.setExternalDependencies(
        dependencyResolver12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = databaseManagementServiceBuilder11.setExternalDependencies(
        dependencyResolver14);
    java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = databaseManagementServiceBuilder11.setConfigRaw(
          strMap16);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
  }

  @Test
  public void test0902() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0902");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder6.addURLAccessRule(
        "", uRLAccessRule10);
    org.neo4j.logging.LogProvider logProvider12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider12);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder13.loadPropertiesFromFile(
        "hi!");
    org.neo4j.monitoring.Monitors monitors16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder13.setMonitors(
        monitors16);
    org.neo4j.monitoring.Monitors monitors18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder13.setMonitors(
        monitors18);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
  }

  @Test
  public void test0903() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0903");
    }
    java.lang.String[] strArray2 = new java.lang.String[]{"enterprise", "enterprise"};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray2);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray2);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray2);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray2);
    try {
      io.github.onograph.server.EntryPointImpl.startBootstrapper(strArray2);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNotNull(strArray2);
  }

  @Test
  public void test0904() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0904");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.monitoring.Monitors monitors4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setMonitors(
        monitors4);
    java.lang.String str6 = clusteringDBMSBuilder5.getEdition();
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver9);
    java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = databaseManagementServiceBuilder10.setConfigRaw(
          strMap11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterprise" + "'", str6, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
  }

  @Test
  public void test0905() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0905");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    try {
      databaseManagementServiceClusterImpl4.shutdownDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0906() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0906");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder7.addDatabaseListener(
        databaseEventListener8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder7.setMonitors(
        monitors10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
  }

  @Test
  public void test0907() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0907");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService5 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService6 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean7 = enhancedBootstrapper0.isRunning();
    java.nio.file.Path path8 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
    try {
      int int10 = enhancedBootstrapper0.start(path8, strMap9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNull(databaseManagementService4);
    org.junit.Assert.assertNull(databaseManagementService5);
    org.junit.Assert.assertNull(databaseManagementService6);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test0908() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0908");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    try {
      databaseManagementServiceClusterImpl6.dropDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0909() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0909");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider16);
    java.nio.file.Path path18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        path18);
    java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder21 = clusteringDBMSBuilder9.setConfigRaw(
          strMap20);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
  }

  @Test
  public void test0910() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0910");
    }
    io.github.onograph.dbms.utils.TokenNamePropertyDTO tokenNamePropertyDTO2 = new io.github.onograph.dbms.utils.TokenNamePropertyDTO(
        "hi!", "");
    java.lang.String str3 = tokenNamePropertyDTO2.getStrNt();
    java.lang.String str4 = tokenNamePropertyDTO2.getStrNt();
    java.lang.String str5 = tokenNamePropertyDTO2.getStrNt();
    java.lang.String str6 = tokenNamePropertyDTO2.getStrNt();
    java.lang.String str7 = tokenNamePropertyDTO2.getStrNp();
    java.lang.String str8 = tokenNamePropertyDTO2.getStrNp();
    java.lang.String str9 = tokenNamePropertyDTO2.getStrNt();
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
  }

  @Test
  public void test0911() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0911");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.monitoring.Monitors monitors6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder1.setMonitors(
        monitors6);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder1.addURLAccessRule(
        "enterprise", uRLAccessRule9);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder1.addURLAccessRule(
        "hi!", uRLAccessRule12);
    try {
      io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl14 = clusteringDBMSBuilder1.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
  }

  @Test
  public void test0912() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0912");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener10 = null;
    try {
      databaseManagementServiceClusterImpl6.registerDatabaseEventListener(databaseEventListener10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0913() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0913");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    org.neo4j.graphdb.config.Configuration configuration9 = null;
    try {
      databaseManagementServiceClusterImpl5.createDatabase("enterprise", configuration9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0914() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0914");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver6);
    java.lang.String str8 = clusteringDBMSBuilder5.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "enterprise" + "'", str8, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
  }

  @Test
  public void test0915() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0915");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder5.setMonitors(
        monitors9);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener11);
    java.util.Map<java.lang.String, java.lang.String> strMap13 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.setConfigRaw(
          strMap13);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
  }

  @Test
  public void test0916() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0916");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService5 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean6 = enhancedBootstrapper0.isRunning();
    java.nio.file.Path path7 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
    try {
      int int9 = enhancedBootstrapper0.start(path7, strMap8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNull(databaseManagementService4);
    org.junit.Assert.assertNull(databaseManagementService5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test0917() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0917");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder7.setMonitors(
        monitors8);
    org.neo4j.logging.LogProvider logProvider10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder7.setUserLogProvider(
        logProvider10);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder7.loadPropertiesFromFile(
        "hi!");
    java.lang.Class<?> wildcardClass14 = clusteringDBMSBuilder7.getClass();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(wildcardClass14);
  }

  @Test
  public void test0918() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0918");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder7.setMonitors(
        monitors8);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder7.addURLAccessRule(
        "hi!", uRLAccessRule11);
    java.nio.file.Path path13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = databaseManagementServiceBuilder12.loadPropertiesFromFile(
        path13);
    java.nio.file.Path path15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = databaseManagementServiceBuilder12.loadPropertiesFromFile(
        path15);
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService17 = databaseManagementServiceBuilder16.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
  }

  @Test
  public void test0919() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0919");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    int int1 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int2 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int3 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType4 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType5 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType6 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType7 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    int int8 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.ExecutionContext executionContext9 = null;
    try {
      io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommand nodeStoreWrapperCopyCommand10 = nodeStoreWrapperCopyCommandCommandProvider0.createCommand(
          executionContext9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType5 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType5.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType6 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType6.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType7 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType7.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
  }

  @Test
  public void test0920() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0920");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    int int1 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType2 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    int int3 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType4 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    int int5 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
  }

  @Test
  public void test0921() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0921");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.common.DependencyResolver dependencyResolver2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder5 = clusteringDBMSBuilder3.setUserLogProvider(
        logProvider4);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder5);
  }

  @Test
  public void test0922() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0922");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    org.neo4j.cli.Command.CommandType commandType1 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType2 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    int int3 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int4 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.junit.Assert.assertTrue(
        "'" + commandType1 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType1.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
  }

  @Test
  public void test0923() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0923");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder5.setMonitors(
        monitors9);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener11);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.loadPropertiesFromFile(
        "hi!");
    try {
      io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl15 = clusteringDBMSBuilder14.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
  }

  @Test
  public void test0924() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0924");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    int int5 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log6 = enhancedBootstrapper0.getLog();
    boolean boolean7 = enhancedBootstrapper0.isRunning();
    int int8 = enhancedBootstrapper0.stop();
    int int9 = enhancedBootstrapper0.stop();
    java.lang.String[] strArray16 = new java.lang.String[]{"hi!", "hi!", "enterprise", "",
        "enterprise", "enterprise"};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray16);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray16);
    try {
      int int19 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray16);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNull(databaseManagementService4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertNotNull(log6);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    org.junit.Assert.assertNotNull(strArray16);
  }

  @Test
  public void test0925() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0925");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule10);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder11.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder13.setMonitors(
        monitors14);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder15.addDatabaseListener(
        databaseEventListener16);
    java.lang.Class<?> wildcardClass18 = clusteringDBMSBuilder17.getClass();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(wildcardClass18);
  }

  @Test
  public void test0926() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0926");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    java.nio.file.Path path9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path9);
    org.neo4j.common.DependencyResolver dependencyResolver11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = databaseManagementServiceBuilder10.setExternalDependencies(
        dependencyResolver11);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = databaseManagementServiceBuilder10.addDatabaseListener(
        databaseEventListener13);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = databaseManagementServiceBuilder10.addDatabaseListener(
        databaseEventListener15);
    java.nio.file.Path path17 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder18 = databaseManagementServiceBuilder10.loadPropertiesFromFile(
        path17);
    java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder20 = databaseManagementServiceBuilder10.setConfigRaw(
          strMap19);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder18);
  }

  @Test
  public void test0927() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0927");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule3 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder4 = clusteringDBMSBuilder1.addURLAccessRule(
        "hi!", uRLAccessRule3);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder4.addURLAccessRule(
        "enterprise", uRLAccessRule6);
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService8 = clusteringDBMSBuilder4.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder4);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
  }

  @Test
  public void test0928() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0928");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    java.lang.String str6 = clusteringDBMSBuilder3.getEdition();
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.setMonitors(
        monitors7);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder8.loadPropertiesFromFile(
        "hi!");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder10.addDatabaseListener(
        databaseEventListener11);
    java.lang.Class<?> wildcardClass13 = databaseManagementServiceBuilder12.getClass();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterprise" + "'", str6, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(wildcardClass13);
  }

  @Test
  public void test0929() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0929");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    try {
      java.util.List<java.lang.String> strList10 = databaseManagementServiceClusterImpl6.listDatabases();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0930() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0930");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl5.shutdown();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0931() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0931");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction10 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction11 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv12 = null;
    metaUpgradeFlowAction11.accept(upgradeMetaEnv12);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = metaUpgradeFlowAction10.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction11);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv15 = null;
    metaUpgradeFlowAction10.accept(upgradeMetaEnv15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction17 = metaUpgradeFlowAction6.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction10);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction18 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv19 = null;
    metaUpgradeFlowAction18.accept(upgradeMetaEnv19);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer21 = metaUpgradeFlowAction17.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction18);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction18);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction24 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv25 = null;
    metaUpgradeFlowAction24.accept(upgradeMetaEnv25);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction27 = metaUpgradeFlowAction23.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction24);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction28 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction29 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv30 = null;
    metaUpgradeFlowAction29.accept(upgradeMetaEnv30);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction32 = metaUpgradeFlowAction28.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction29);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv33 = null;
    metaUpgradeFlowAction28.accept(upgradeMetaEnv33);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction35 = metaUpgradeFlowAction24.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction28);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer36 = metaUpgradeFlowAction22.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction28);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction37 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction38 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv39 = null;
    metaUpgradeFlowAction38.accept(upgradeMetaEnv39);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction41 = metaUpgradeFlowAction37.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction38);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction43 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv44 = null;
    metaUpgradeFlowAction43.accept(upgradeMetaEnv44);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction46 = metaUpgradeFlowAction42.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction43);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv47 = null;
    metaUpgradeFlowAction42.accept(upgradeMetaEnv47);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction49 = metaUpgradeFlowAction38.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction42);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction50 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv51 = null;
    metaUpgradeFlowAction50.accept(upgradeMetaEnv51);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer53 = metaUpgradeFlowAction49.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction50);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction54 = metaUpgradeFlowAction28.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction50);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv55 = null;
    metaUpgradeFlowAction54.accept(upgradeMetaEnv55);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction10);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction11);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction17);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction18);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer21);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction24);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction28);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction29);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction32);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction35);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer36);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction37);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction38);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction41);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction43);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction46);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction49);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction50);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer53);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction54);
  }

  @Test
  public void test0932() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0932");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    org.neo4j.graphdb.config.Configuration configuration3 = null;
    try {
      databaseManagementServiceClusterImpl1.createDatabase("enterprise", configuration3);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0933() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0933");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    try {
      boolean boolean6 = databaseManagementServiceClusterImpl4.isWraeForSt("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0934() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0934");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    java.nio.file.Path path7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        path7);
    java.lang.String str9 = clusteringDBMSBuilder6.getEdition();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "enterprise" + "'", str9, "enterprise");
  }

  @Test
  public void test0935() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0935");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.common.DependencyResolver dependencyResolver2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver2);
    java.nio.file.Path path4 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = databaseManagementServiceBuilder5.addURLAccessRule(
        "", uRLAccessRule7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
  }

  @Test
  public void test0936() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0936");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    java.nio.file.Path path9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path9);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder3.setUserLogProvider(
        logProvider13);
    try {
      io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl15 = clusteringDBMSBuilder3.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
  }

  @Test
  public void test0937() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0937");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder9.addDatabaseListener(
        databaseEventListener12);
    java.nio.file.Path path14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder13.loadPropertiesFromFile(
        path14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder13.setUserLogProvider(
        logProvider16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
  }

  @Test
  public void test0938() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0938");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    try {
      databaseManagementServiceClusterImpl3.dropDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0939() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0939");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    try {
      boolean boolean11 = databaseManagementServiceClusterImpl9.isWraeForSt("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0940() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0940");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    org.neo4j.graphdb.config.Configuration configuration10 = null;
    try {
      databaseManagementServiceClusterImpl6.createDatabase("hi!", configuration10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0941() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0941");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    try {
      org.neo4j.graphdb.GraphDatabaseService graphDatabaseService5 = databaseManagementServiceClusterImpl3.database(
          "enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0942() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0942");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule12 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder6.addURLAccessRule(
        "hi!", uRLAccessRule12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder6.setMonitors(
        monitors14);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
  }

  @Test
  public void test0943() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0943");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    java.lang.String str11 = clusteringDBMSBuilder5.getEdition();
    org.neo4j.logging.LogProvider logProvider12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider12);
    try {
      io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl14 = clusteringDBMSBuilder13.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "enterprise" + "'", str11, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
  }

  @Test
  public void test0944() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0944");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener7 = null;
    try {
      databaseManagementServiceClusterImpl6.unregisterDatabaseEventListener(databaseEventListener7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0945() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0945");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "hi!");
    org.neo4j.monitoring.Monitors monitors8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder3.setMonitors(
        monitors8);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.addDatabaseListener(
        databaseEventListener10);
    java.lang.String str12 = clusteringDBMSBuilder9.getEdition();
    java.lang.String str13 = clusteringDBMSBuilder9.getEdition();
    java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder9.setConfigRaw(
          strMap14);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "enterprise" + "'", str12, "enterprise");
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "enterprise" + "'", str13, "enterprise");
  }

  @Test
  public void test0946() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0946");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    try {
      org.neo4j.graphdb.GraphDatabaseService graphDatabaseService7 = databaseManagementServiceClusterImpl3.database(
          "hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0947() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0947");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    java.nio.file.Path path11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
  }

  @Test
  public void test0948() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0948");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener6);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.setMonitors(
        monitors10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
  }

  @Test
  public void test0949() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0949");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver6);
    org.neo4j.logging.LogProvider logProvider8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder7.setUserLogProvider(
        logProvider8);
    org.neo4j.logging.LogProvider logProvider10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
  }

  @Test
  public void test0950() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0950");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    java.lang.String str6 = clusteringDBMSBuilder3.getEdition();
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.setMonitors(
        monitors7);
    java.lang.String str9 = clusteringDBMSBuilder3.getEdition();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterprise" + "'", str6, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "enterprise" + "'", str9, "enterprise");
  }

  @Test
  public void test0951() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0951");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider11);
    java.nio.file.Path path13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.loadPropertiesFromFile(
        path13);
    org.neo4j.common.DependencyResolver dependencyResolver15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder12.setExternalDependencies(
        dependencyResolver15);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder18 = clusteringDBMSBuilder12.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider19 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder20 = clusteringDBMSBuilder12.setUserLogProvider(
        logProvider19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder18);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder20);
  }

  @Test
  public void test0952() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0952");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule3 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder4 = clusteringDBMSBuilder1.addURLAccessRule(
        "hi!", uRLAccessRule3);
    try {
      io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = clusteringDBMSBuilder4.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder4);
  }

  @Test
  public void test0953() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0953");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder6.addURLAccessRule(
        "", uRLAccessRule10);
    org.neo4j.logging.LogProvider logProvider12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider12);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder6.addDatabaseListener(
        databaseEventListener14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
  }

  @Test
  public void test0954() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0954");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    int int1 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType2 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType3 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    int int4 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType5 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType5 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType5.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
  }

  @Test
  public void test0955() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0955");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceBuilderEnterpriseImpl databaseManagementServiceBuilderEnterpriseImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceBuilderEnterpriseImpl(
        path0);
    org.neo4j.logging.LogProvider logProvider2 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder3 = databaseManagementServiceBuilderEnterpriseImpl1.setUserLogProvider(
        logProvider2);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder3);
  }

  @Test
  public void test0956() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0956");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl9.startDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0957() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0957");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder7.setExternalDependencies(
        dependencyResolver8);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "hi!");
    org.neo4j.logging.LogProvider logProvider12 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
  }

  @Test
  public void test0958() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0958");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule10);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder11.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder13.setMonitors(
        monitors14);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder15.addDatabaseListener(
        databaseEventListener16);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule19 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder20 = clusteringDBMSBuilder15.addURLAccessRule(
        "hi!", uRLAccessRule19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder20);
  }

  @Test
  public void test0959() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0959");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener7 = null;
    try {
      databaseManagementServiceClusterImpl5.registerDatabaseEventListener(databaseEventListener7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0960() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0960");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.setMonitors(
        monitors11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.setMonitors(
        monitors13);
    org.neo4j.common.DependencyResolver dependencyResolver15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = clusteringDBMSBuilder12.setExternalDependencies(
        dependencyResolver15);
    org.neo4j.common.DependencyResolver dependencyResolver17 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder18 = clusteringDBMSBuilder12.setExternalDependencies(
        dependencyResolver17);
    java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder20 = clusteringDBMSBuilder12.setConfigRaw(
          strMap19);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder18);
  }

  @Test
  public void test0961() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0961");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.common.DependencyResolver dependencyResolver2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver2);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener4 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder5 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener4);
    org.neo4j.monitoring.Monitors monitors6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.setMonitors(
        monitors6);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener8);
    java.nio.file.Path path10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        path10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
  }

  @Test
  public void test0962() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0962");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider11);
    java.nio.file.Path path13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.loadPropertiesFromFile(
        path13);
    org.neo4j.logging.LogProvider logProvider15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = clusteringDBMSBuilder14.setUserLogProvider(
        logProvider15);
    org.neo4j.logging.LogProvider logProvider17 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder18 = clusteringDBMSBuilder14.setUserLogProvider(
        logProvider17);
    org.neo4j.common.DependencyResolver dependencyResolver19 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder20 = clusteringDBMSBuilder14.setExternalDependencies(
        dependencyResolver19);
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService21 = clusteringDBMSBuilder14.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder18);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder20);
  }

  @Test
  public void test0963() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0963");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      java.util.List<java.lang.String> strList9 = databaseManagementServiceClusterImpl5.listDatabases();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0964() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0964");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    try {
      databaseManagementServiceClusterImpl6.dropDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0965() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0965");
    }
    io.github.onograph.cluster.raft.module.dprot.ClusterStructureService clusterStructureService0 = null;
    org.neo4j.kernel.database.DatabaseIdRepository databaseIdRepository1 = null;
    io.github.onograph.dbms.serverproc.BasicProcedureClusterMakeGdbDefaultImpl basicProcedureClusterMakeGdbDefaultImpl2 = new io.github.onograph.dbms.serverproc.BasicProcedureClusterMakeGdbDefaultImpl(
        clusterStructureService0, databaseIdRepository1);
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature3 = basicProcedureClusterMakeGdbDefaultImpl2.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature4 = basicProcedureClusterMakeGdbDefaultImpl2.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature5 = basicProcedureClusterMakeGdbDefaultImpl2.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature6 = basicProcedureClusterMakeGdbDefaultImpl2.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature7 = basicProcedureClusterMakeGdbDefaultImpl2.signature();
    org.neo4j.kernel.api.procedure.Context context8 = null;
    org.neo4j.values.AnyValue[] anyValueArray9 = new org.neo4j.values.AnyValue[]{};
    org.neo4j.kernel.api.ResourceTracker resourceTracker10 = null;
    try {
      org.neo4j.collection.RawIterator<org.neo4j.values.AnyValue[], org.neo4j.internal.kernel.api.exceptions.ProcedureException> anyValueArrayRawIterator11 = basicProcedureClusterMakeGdbDefaultImpl2.apply(
          context8, anyValueArray9, resourceTracker10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(procedureSignature3);
    org.junit.Assert.assertNotNull(procedureSignature4);
    org.junit.Assert.assertNotNull(procedureSignature5);
    org.junit.Assert.assertNotNull(procedureSignature6);
    org.junit.Assert.assertNotNull(procedureSignature7);
    org.junit.Assert.assertNotNull(anyValueArray9);
  }

  @Test
  public void test0966() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0966");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "enterprise");
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "");
    java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder5.setConfigRaw(
          strMap10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
  }

  @Test
  public void test0967() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0967");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider11);
    java.nio.file.Path path13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder14.setMonitors(
        monitors15);
    org.neo4j.logging.LogProvider logProvider17 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder18 = clusteringDBMSBuilder16.setUserLogProvider(
        logProvider17);
    java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder20 = clusteringDBMSBuilder16.setConfigRaw(
          strMap19);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder18);
  }

  @Test
  public void test0968() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0968");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    int int4 = enhancedBootstrapper0.stop();
    int int5 = enhancedBootstrapper0.stop();
    int int6 = enhancedBootstrapper0.stop();
    boolean boolean7 = enhancedBootstrapper0.isRunning();
    java.lang.String[] strArray8 = null;
    try {
      int int9 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test0969() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0969");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.common.DependencyResolver dependencyResolver2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver2);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener4 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder5 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener4);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = databaseManagementServiceBuilder5.addDatabaseListener(
        databaseEventListener6);
    org.neo4j.common.DependencyResolver dependencyResolver8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = databaseManagementServiceBuilder5.setExternalDependencies(
        dependencyResolver8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
  }

  @Test
  public void test0970() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0970");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    int int5 = enhancedBootstrapper0.stop();
    int int6 = enhancedBootstrapper0.stop();
    int int7 = enhancedBootstrapper0.stop();
    java.lang.String[] strArray9 = new java.lang.String[]{""};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray9);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray9);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray9);
    try {
      int int13 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray9);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    org.junit.Assert.assertNotNull(strArray9);
  }

  @Test
  public void test0971() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0971");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    int int5 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log6 = enhancedBootstrapper0.getLog();
    boolean boolean7 = enhancedBootstrapper0.isRunning();
    int int8 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService9 = enhancedBootstrapper0.getDatabaseManagementService();
    java.nio.file.Path path10 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
    try {
      int int12 = enhancedBootstrapper0.start(path10, strMap11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNull(databaseManagementService4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertNotNull(log6);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    org.junit.Assert.assertNull(databaseManagementService9);
  }

  @Test
  public void test0972() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0972");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider16);
    java.nio.file.Path path18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        path18);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder23 = clusteringDBMSBuilder21.loadPropertiesFromFile(
        "hi!");
    org.neo4j.monitoring.Monitors monitors24 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder25 = clusteringDBMSBuilder21.setMonitors(
        monitors24);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder21);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder23);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder25);
  }

  @Test
  public void test0973() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0973");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl6.shutdown();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0974() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0974");
    }
    org.neo4j.server.Bootstrapper bootstrapper0 = null;
    java.lang.String[] strArray5 = new java.lang.String[]{"hi!", "enterprise", "enterprise",
        "enterprise"};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray5);
    try {
      int int7 = org.neo4j.server.NeoBootstrapper.start(bootstrapper0, strArray5);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNotNull(strArray5);
  }

  @Test
  public void test0975() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0975");
    }
    io.github.onograph.dbms.utils.TokenNamePropertyDTO tokenNamePropertyDTO2 = new io.github.onograph.dbms.utils.TokenNamePropertyDTO(
        "hi!", "hi!");
    java.lang.String str3 = tokenNamePropertyDTO2.getStrNt();
    java.lang.String str4 = tokenNamePropertyDTO2.getStrNt();
    java.lang.String str5 = tokenNamePropertyDTO2.getStrNp();
    java.lang.String str6 = tokenNamePropertyDTO2.getStrNp();
    java.lang.String str7 = tokenNamePropertyDTO2.getStrNp();
    java.lang.String str8 = tokenNamePropertyDTO2.getStrNp();
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
  }

  @Test
  public void test0976() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0976");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver10);
    org.neo4j.common.DependencyResolver dependencyResolver12 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
  }

  @Test
  public void test0977() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0977");
    }
    io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider commandGetServerIdCommandProvider0 = new io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider();
    org.neo4j.cli.Command.CommandType commandType1 = commandGetServerIdCommandProvider0.commandType();
    int int2 = commandGetServerIdCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType3 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType4 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType5 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.ExecutionContext executionContext6 = null;
    try {
      io.github.onograph.dbms.commands.CommandGetServerIdImpl commandGetServerIdImpl7 = commandGetServerIdCommandProvider0.createCommand(
          executionContext6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue(
        "'" + commandType1 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType1.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType5 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType5.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
  }

  @Test
  public void test0978() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0978");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider5);
    java.lang.String str7 = clusteringDBMSBuilder6.getEdition();
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.addURLAccessRule(
        "enterprise", uRLAccessRule9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "enterprise" + "'", str7, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
  }

  @Test
  public void test0979() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0979");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    int int1 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int2 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int3 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType4 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType5 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType6 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType7 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType8 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType9 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    int int10 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType5 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType5.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType6 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType6.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType7 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType7.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType8 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType8.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType9 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType9.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
  }

  @Test
  public void test0980() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0980");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction10 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction11 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv12 = null;
    metaUpgradeFlowAction11.accept(upgradeMetaEnv12);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = metaUpgradeFlowAction10.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction11);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction15 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction16 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv17 = null;
    metaUpgradeFlowAction16.accept(upgradeMetaEnv17);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction19 = metaUpgradeFlowAction15.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction16);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv20 = null;
    metaUpgradeFlowAction15.accept(upgradeMetaEnv20);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = metaUpgradeFlowAction11.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv24 = null;
    metaUpgradeFlowAction23.accept(upgradeMetaEnv24);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer26 = metaUpgradeFlowAction22.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction27 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction28 = metaUpgradeFlowAction4.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction27);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction29 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction30 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv31 = null;
    metaUpgradeFlowAction30.accept(upgradeMetaEnv31);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction33 = metaUpgradeFlowAction29.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction30);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction34 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction35 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv36 = null;
    metaUpgradeFlowAction35.accept(upgradeMetaEnv36);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction38 = metaUpgradeFlowAction34.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction35);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction39 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction40 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv41 = null;
    metaUpgradeFlowAction40.accept(upgradeMetaEnv41);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction43 = metaUpgradeFlowAction39.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction40);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv44 = null;
    metaUpgradeFlowAction39.accept(upgradeMetaEnv44);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction46 = metaUpgradeFlowAction35.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction39);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction47 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv48 = null;
    metaUpgradeFlowAction47.accept(upgradeMetaEnv48);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer50 = metaUpgradeFlowAction46.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction47);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction51 = metaUpgradeFlowAction29.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction47);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction52 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction53 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv54 = null;
    metaUpgradeFlowAction53.accept(upgradeMetaEnv54);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction56 = metaUpgradeFlowAction52.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction53);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction57 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction58 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv59 = null;
    metaUpgradeFlowAction58.accept(upgradeMetaEnv59);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction61 = metaUpgradeFlowAction57.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction58);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv62 = null;
    metaUpgradeFlowAction57.accept(upgradeMetaEnv62);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction64 = metaUpgradeFlowAction53.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction57);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer65 = metaUpgradeFlowAction51.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction57);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction66 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction67 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv68 = null;
    metaUpgradeFlowAction67.accept(upgradeMetaEnv68);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction70 = metaUpgradeFlowAction66.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction67);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction71 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction72 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv73 = null;
    metaUpgradeFlowAction72.accept(upgradeMetaEnv73);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction75 = metaUpgradeFlowAction71.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction72);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv76 = null;
    metaUpgradeFlowAction71.accept(upgradeMetaEnv76);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction78 = metaUpgradeFlowAction67.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction71);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction79 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv80 = null;
    metaUpgradeFlowAction79.accept(upgradeMetaEnv80);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer82 = metaUpgradeFlowAction78.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction79);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction83 = metaUpgradeFlowAction57.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction79);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer84 = metaUpgradeFlowAction27.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction57);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction10);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction11);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction15);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction16);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction19);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer26);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction28);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction29);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction30);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction33);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction34);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction35);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction38);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction39);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction40);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction43);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction46);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction47);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer50);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction51);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction52);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction53);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction56);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction57);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction58);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction61);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction64);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer65);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction66);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction67);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction70);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction71);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction72);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction75);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction78);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction79);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer82);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction83);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer84);
  }

  @Test
  public void test0981() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0981");
    }
    io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider commandGetServerIdCommandProvider0 = new io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider();
    org.neo4j.cli.Command.CommandType commandType1 = commandGetServerIdCommandProvider0.commandType();
    int int2 = commandGetServerIdCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType3 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.ExecutionContext executionContext4 = null;
    try {
      io.github.onograph.dbms.commands.CommandGetServerIdImpl commandGetServerIdImpl5 = commandGetServerIdCommandProvider0.createCommand(
          executionContext4);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue(
        "'" + commandType1 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType1.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
  }

  @Test
  public void test0982() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0982");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener8 = null;
    try {
      databaseManagementServiceClusterImpl6.registerDatabaseEventListener(databaseEventListener8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0983() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0983");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder6.addURLAccessRule(
        "", uRLAccessRule10);
    org.neo4j.logging.LogProvider logProvider12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder15.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener18 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder19 = clusteringDBMSBuilder15.addDatabaseListener(
        databaseEventListener18);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener20 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder15.addDatabaseListener(
        databaseEventListener20);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder21);
  }

  @Test
  public void test0984() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0984");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "hi!");
    org.neo4j.logging.LogProvider logProvider8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder3.setUserLogProvider(
        logProvider8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder3.setMonitors(
        monitors10);
    try {
      io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl12 = clusteringDBMSBuilder3.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
  }

  @Test
  public void test0985() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0985");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService5 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService6 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log7 = enhancedBootstrapper0.getLog();
    java.nio.file.Path path8 = null;
    java.nio.file.Path path9 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
    try {
      int int12 = enhancedBootstrapper0.start(path8, path9, strMap10, false);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNull(databaseManagementService4);
    org.junit.Assert.assertNull(databaseManagementService5);
    org.junit.Assert.assertNull(databaseManagementService6);
    org.junit.Assert.assertNotNull(log7);
  }

  @Test
  public void test0986() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0986");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder6.addURLAccessRule(
        "", uRLAccessRule10);
    org.neo4j.logging.LogProvider logProvider12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder15.loadPropertiesFromFile(
        "enterprise");
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService18 = databaseManagementServiceBuilder17.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
  }

  @Test
  public void test0987() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0987");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder9.addDatabaseListener(
        databaseEventListener12);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder9.addURLAccessRule(
        "hi!", uRLAccessRule15);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder18 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.logging.LogProvider logProvider19 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder20 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder18);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder20);
  }

  @Test
  public void test0988() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0988");
    }
    io.github.onograph.dbms.utils.TokenNamePropertyDTO tokenNamePropertyDTO2 = new io.github.onograph.dbms.utils.TokenNamePropertyDTO(
        "", "");
    java.lang.String str3 = tokenNamePropertyDTO2.getStrNt();
    java.lang.String str4 = tokenNamePropertyDTO2.getStrNp();
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
  }

  @Test
  public void test0989() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0989");
    }
    io.github.onograph.server.EntryPointImpl entryPointImpl0 = new io.github.onograph.server.EntryPointImpl();
    io.github.onograph.server.EntryPointImpl entryPointImpl1 = new io.github.onograph.server.EntryPointImpl();
    int int2 = entryPointImpl0.compareTo((org.neo4j.server.startup.EntryPoint) entryPointImpl1);
    org.neo4j.server.startup.EntryPoint.Priority priority3 = entryPointImpl0.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority4 = entryPointImpl0.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority5 = entryPointImpl0.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority6 = entryPointImpl0.getPriority();
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue(
        "'" + priority3 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority3.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority4 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority4.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority5 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority5.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority6 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority6.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
  }

  @Test
  public void test0990() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0990");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    int int4 = enhancedBootstrapper0.stop();
    int int5 = enhancedBootstrapper0.stop();
    int int6 = enhancedBootstrapper0.stop();
    int int7 = enhancedBootstrapper0.stop();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
  }

  @Test
  public void test0991() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0991");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule12 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder6.addURLAccessRule(
        "hi!", uRLAccessRule12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder6.setMonitors(
        monitors14);
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService16 = clusteringDBMSBuilder6.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
  }

  @Test
  public void test0992() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0992");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider11);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "hi!");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule16);
    org.neo4j.monitoring.Monitors monitors18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder5.setMonitors(
        monitors18);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
  }

  @Test
  public void test0993() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0993");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    try {
      databaseManagementServiceClusterImpl3.startDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0994() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0994");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    int int4 = enhancedBootstrapper0.stop();
    int int5 = enhancedBootstrapper0.stop();
    int int6 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService7 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean8 = enhancedBootstrapper0.isRunning();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    org.junit.Assert.assertNull(databaseManagementService7);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0995() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0995");
    }
    io.github.onograph.server.EntryPointImpl entryPointImpl0 = new io.github.onograph.server.EntryPointImpl();
    io.github.onograph.server.EntryPointImpl entryPointImpl1 = new io.github.onograph.server.EntryPointImpl();
    int int2 = entryPointImpl0.compareTo((org.neo4j.server.startup.EntryPoint) entryPointImpl1);
    org.neo4j.server.startup.EntryPoint.Priority priority3 = entryPointImpl0.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority4 = entryPointImpl0.getPriority();
    java.lang.Class<?> wildcardClass5 = entryPointImpl0.getClass();
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue(
        "'" + priority3 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority3.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority4 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority4.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertNotNull(wildcardClass5);
  }

  @Test
  public void test0996() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0996");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService2 = enhancedBootstrapper0.getDatabaseManagementService();
    java.lang.String[] strArray8 = new java.lang.String[]{"", "enterprise", "enterprise",
        "enterprise", "hi!"};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray8);
    try {
      int int10 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray8);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNull(databaseManagementService2);
    org.junit.Assert.assertNotNull(strArray8);
  }

  @Test
  public void test0997() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0997");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log5 = enhancedBootstrapper0.getLog();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNull(databaseManagementService4);
    org.junit.Assert.assertNotNull(log5);
  }

  @Test
  public void test0998() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0998");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    java.nio.file.Path path9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder8.loadPropertiesFromFile(
        path9);
    java.lang.Class<?> wildcardClass11 = clusteringDBMSBuilder8.getClass();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(wildcardClass11);
  }

  @Test
  public void test0999() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0999");
    }
    io.github.onograph.cluster.raft.module.dprot.ClusterStructureService clusterStructureService0 = null;
    org.neo4j.kernel.database.DatabaseIdRepository databaseIdRepository1 = null;
    io.github.onograph.dbms.serverproc.BasicProcedureClusterMakeGdbDefaultImpl basicProcedureClusterMakeGdbDefaultImpl2 = new io.github.onograph.dbms.serverproc.BasicProcedureClusterMakeGdbDefaultImpl(
        clusterStructureService0, databaseIdRepository1);
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature3 = basicProcedureClusterMakeGdbDefaultImpl2.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature4 = basicProcedureClusterMakeGdbDefaultImpl2.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature5 = basicProcedureClusterMakeGdbDefaultImpl2.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature6 = basicProcedureClusterMakeGdbDefaultImpl2.signature();
    org.neo4j.kernel.api.procedure.Context context7 = null;
    org.neo4j.values.AnyValue[] anyValueArray8 = new org.neo4j.values.AnyValue[]{};
    org.neo4j.kernel.api.ResourceTracker resourceTracker9 = null;
    try {
      org.neo4j.collection.RawIterator<org.neo4j.values.AnyValue[], org.neo4j.internal.kernel.api.exceptions.ProcedureException> anyValueArrayRawIterator10 = basicProcedureClusterMakeGdbDefaultImpl2.apply(
          context7, anyValueArray8, resourceTracker9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(procedureSignature3);
    org.junit.Assert.assertNotNull(procedureSignature4);
    org.junit.Assert.assertNotNull(procedureSignature5);
    org.junit.Assert.assertNotNull(procedureSignature6);
    org.junit.Assert.assertNotNull(anyValueArray8);
  }

  @Test
  public void test1000() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test1000");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder6.addURLAccessRule(
        "", uRLAccessRule10);
    org.neo4j.logging.LogProvider logProvider12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder6.setMonitors(
        monitors16);
    org.neo4j.monitoring.Monitors monitors18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder6.setMonitors(
        monitors18);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
  }
}


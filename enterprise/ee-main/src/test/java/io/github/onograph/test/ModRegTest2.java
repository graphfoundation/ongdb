package io.github.onograph.test;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class ModRegTest2 {

  public static boolean debug = false;

  @Test
  public void test1001() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1001");
    }
    java.time.Clock clock0 = null;
    org.neo4j.kernel.database.DatabaseIdRepository databaseIdRepository1 = null;
    io.github.onograph.dbms.DbmsManagerWatchTagImpl dbmsManagerWatchTagImpl2 = null;
    java.time.ZoneId zoneId3 = null;
    io.github.onograph.dbms.serverproc.BasicProcedureQuarantineDatabaseImpl basicProcedureQuarantineDatabaseImpl4 = io.github.onograph.dbms.serverproc.BasicProcedureQuarantineDatabaseImpl.clsrBasicProcedureQuarantineDatabaseImpl(
        clock0, databaseIdRepository1, dbmsManagerWatchTagImpl2, zoneId3);
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature5 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature6 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature7 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.kernel.api.procedure.Context context8 = null;
    org.neo4j.values.AnyValue anyValue9 = null;
    org.neo4j.values.AnyValue[] anyValueArray10 = new org.neo4j.values.AnyValue[]{anyValue9};
    org.neo4j.kernel.api.ResourceTracker resourceTracker11 = null;
    try {
      org.neo4j.collection.RawIterator<org.neo4j.values.AnyValue[], org.neo4j.internal.kernel.api.exceptions.ProcedureException> anyValueArrayRawIterator12 = basicProcedureQuarantineDatabaseImpl4.apply(
          context8, anyValueArray10, resourceTracker11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalArgumentException; message: *** Error: c3bc6648-f892-4d86-9614-b53ef18de3fb");
    } catch (java.lang.IllegalArgumentException e) {
    }
    org.junit.Assert.assertNotNull(basicProcedureQuarantineDatabaseImpl4);
    org.junit.Assert.assertNotNull(procedureSignature5);
    org.junit.Assert.assertNotNull(procedureSignature6);
    org.junit.Assert.assertNotNull(procedureSignature7);
    org.junit.Assert.assertNotNull(anyValueArray10);
  }

  @Test
  public void test1002() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1002");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    try {
      io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = clusteringDBMSBuilder7.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
  }

  @Test
  public void test1003() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1003");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder7.setMonitors(
        monitors8);
    org.neo4j.logging.LogProvider logProvider10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder7.setUserLogProvider(
        logProvider10);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder7.loadPropertiesFromFile(
        "hi!");
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder7.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder15.setExternalDependencies(
        dependencyResolver16);
    java.nio.file.Path path18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder15.loadPropertiesFromFile(
        path18);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
  }

  @Test
  public void test1004() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1004");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl5.createDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1005() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1005");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    try {
      boolean boolean7 = databaseManagementServiceClusterImpl5.isWraeForSt("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1006() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1006");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    java.nio.file.Path path9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path9);
    java.nio.file.Path path11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path11);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener13);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
  }

  @Test
  public void test1007() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1007");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.monitoring.Monitors monitors6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder1.setMonitors(
        monitors6);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder1.addURLAccessRule(
        "enterprise", uRLAccessRule9);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder1.addURLAccessRule(
        "hi!", uRLAccessRule12);
    org.neo4j.logging.LogProvider logProvider14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder13.setUserLogProvider(
        logProvider14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
  }

  @Test
  public void test1008() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1008");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "");
    java.nio.file.Path path10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path10);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
  }

  @Test
  public void test1009() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1009");
    }
    java.time.Clock clock0 = null;
    org.neo4j.kernel.database.DatabaseIdRepository databaseIdRepository1 = null;
    io.github.onograph.dbms.DbmsManagerWatchTagImpl dbmsManagerWatchTagImpl2 = null;
    java.time.ZoneId zoneId3 = null;
    io.github.onograph.dbms.serverproc.BasicProcedureQuarantineDatabaseImpl basicProcedureQuarantineDatabaseImpl4 = io.github.onograph.dbms.serverproc.BasicProcedureQuarantineDatabaseImpl.clsrBasicProcedureQuarantineDatabaseImpl(
        clock0, databaseIdRepository1, dbmsManagerWatchTagImpl2, zoneId3);
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature5 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature6 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature7 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature8 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature9 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.kernel.api.procedure.Context context10 = null;
    org.neo4j.values.AnyValue[] anyValueArray11 = new org.neo4j.values.AnyValue[]{};
    org.neo4j.kernel.api.ResourceTracker resourceTracker12 = null;
    try {
      org.neo4j.collection.RawIterator<org.neo4j.values.AnyValue[], org.neo4j.internal.kernel.api.exceptions.ProcedureException> anyValueArrayRawIterator13 = basicProcedureQuarantineDatabaseImpl4.apply(
          context10, anyValueArray11, resourceTracker12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalArgumentException; message: *** Error: fe8ab484-a650-4ba7-a59f-194832c36aaa");
    } catch (java.lang.IllegalArgumentException e) {
    }
    org.junit.Assert.assertNotNull(basicProcedureQuarantineDatabaseImpl4);
    org.junit.Assert.assertNotNull(procedureSignature5);
    org.junit.Assert.assertNotNull(procedureSignature6);
    org.junit.Assert.assertNotNull(procedureSignature7);
    org.junit.Assert.assertNotNull(procedureSignature8);
    org.junit.Assert.assertNotNull(procedureSignature9);
    org.junit.Assert.assertNotNull(anyValueArray11);
  }

  @Test
  public void test1010() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1010");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.setMonitors(
        monitors11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.setMonitors(
        monitors13);
    org.neo4j.common.DependencyResolver dependencyResolver15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = clusteringDBMSBuilder12.setExternalDependencies(
        dependencyResolver15);
    org.neo4j.common.DependencyResolver dependencyResolver17 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder18 = clusteringDBMSBuilder12.setExternalDependencies(
        dependencyResolver17);
    org.neo4j.common.DependencyResolver dependencyResolver19 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder20 = clusteringDBMSBuilder12.setExternalDependencies(
        dependencyResolver19);
    java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder22 = clusteringDBMSBuilder12.setConfigRaw(
          strMap21);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder18);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder20);
  }

  @Test
  public void test1011() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1011");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver10);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder5.addURLAccessRule(
        "", uRLAccessRule13);
    org.neo4j.common.DependencyResolver dependencyResolver15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder14.setExternalDependencies(
        dependencyResolver15);
    org.neo4j.logging.LogProvider logProvider17 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder18 = clusteringDBMSBuilder14.setUserLogProvider(
        logProvider17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder18);
  }

  @Test
  public void test1012() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1012");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "hi!");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = databaseManagementServiceBuilder7.addDatabaseListener(
        databaseEventListener8);
    java.nio.file.Path path10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = databaseManagementServiceBuilder7.loadPropertiesFromFile(
        path10);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = databaseManagementServiceBuilder11.addURLAccessRule(
        "hi!", uRLAccessRule13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
  }

  @Test
  public void test1013() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1013");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    int int5 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log6 = enhancedBootstrapper0.getLog();
    boolean boolean7 = enhancedBootstrapper0.isRunning();
    int int8 = enhancedBootstrapper0.stop();
    int int9 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService10 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService11 = enhancedBootstrapper0.getDatabaseManagementService();
    java.lang.String[] strArray12 = null;
    try {
      int int13 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNull(databaseManagementService4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertNotNull(log6);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    org.junit.Assert.assertNull(databaseManagementService10);
    org.junit.Assert.assertNull(databaseManagementService11);
  }

  @Test
  public void test1014() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1014");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    try {
      databaseManagementServiceClusterImpl8.shutdown();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1015() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1015");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      org.neo4j.graphdb.GraphDatabaseService graphDatabaseService8 = databaseManagementServiceClusterImpl5.database(
          "enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1016() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1016");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    int int4 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log5 = enhancedBootstrapper0.getLog();
    int int6 = enhancedBootstrapper0.stop();
    int int7 = enhancedBootstrapper0.stop();
    boolean boolean8 = enhancedBootstrapper0.isRunning();
    int int9 = enhancedBootstrapper0.stop();
    java.nio.file.Path path10 = null;
    java.nio.file.Path path11 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
    try {
      int int14 = enhancedBootstrapper0.start(path10, path11, strMap12, false);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertNotNull(log5);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
  }

  @Test
  public void test1017() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1017");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService2 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    java.nio.file.Path path4 = null;
    java.nio.file.Path path5 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
    try {
      int int8 = enhancedBootstrapper0.start(path4, path5, strMap6, false);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNull(databaseManagementService2);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
  }

  @Test
  public void test1018() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1018");
    }
    io.github.onograph.cluster.raft.module.dprot.ClusterStructureService clusterStructureService0 = null;
    org.neo4j.kernel.database.DatabaseIdRepository databaseIdRepository1 = null;
    io.github.onograph.dbms.serverproc.DatabaseStateProcedureClusterImpl databaseStateProcedureClusterImpl2 = new io.github.onograph.dbms.serverproc.DatabaseStateProcedureClusterImpl(
        clusterStructureService0, databaseIdRepository1);
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature3 = databaseStateProcedureClusterImpl2.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature4 = databaseStateProcedureClusterImpl2.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature5 = databaseStateProcedureClusterImpl2.signature();
    org.neo4j.kernel.api.procedure.Context context6 = null;
    org.neo4j.values.AnyValue[] anyValueArray7 = null;
    org.neo4j.kernel.api.ResourceTracker resourceTracker8 = null;
    try {
      org.neo4j.collection.RawIterator<org.neo4j.values.AnyValue[], org.neo4j.internal.kernel.api.exceptions.ProcedureException> anyValueArrayRawIterator9 = databaseStateProcedureClusterImpl2.apply(
          context6, anyValueArray7, resourceTracker8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(procedureSignature3);
    org.junit.Assert.assertNotNull(procedureSignature4);
    org.junit.Assert.assertNotNull(procedureSignature5);
  }

  @Test
  public void test1019() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1019");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    try {
      databaseManagementServiceClusterImpl3.shutdownDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1020() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1020");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      java.util.List<java.lang.String> strList8 = databaseManagementServiceClusterImpl5.listDatabases();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1021() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1021");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder3.setMonitors(
        monitors9);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = databaseManagementServiceBuilder12.setMonitors(
        monitors13);
    org.neo4j.logging.LogProvider logProvider15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = databaseManagementServiceBuilder12.setUserLogProvider(
        logProvider15);
    org.neo4j.common.DependencyResolver dependencyResolver17 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder18 = databaseManagementServiceBuilder12.setExternalDependencies(
        dependencyResolver17);
    org.neo4j.monitoring.Monitors monitors19 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder20 = databaseManagementServiceBuilder12.setMonitors(
        monitors19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder18);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder20);
  }

  @Test
  public void test1022() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1022");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder7.setMonitors(
        monitors8);
    org.neo4j.logging.LogProvider logProvider10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder7.setUserLogProvider(
        logProvider10);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder7.loadPropertiesFromFile(
        "hi!");
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder7.loadPropertiesFromFile(
        "");
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder15.loadPropertiesFromFile(
        "enterprise");
    try {
      io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl18 = clusteringDBMSBuilder17.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
  }

  @Test
  public void test1023() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1023");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder5.setMonitors(
        monitors9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider11);
    org.neo4j.common.DependencyResolver dependencyResolver13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = databaseManagementServiceBuilder12.setExternalDependencies(
        dependencyResolver13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
  }

  @Test
  public void test1024() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1024");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.logging.LogProvider logProvider8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder7.setUserLogProvider(
        logProvider8);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder7.addURLAccessRule(
        "enterprise", uRLAccessRule11);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.loadPropertiesFromFile(
        "");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
  }

  @Test
  public void test1025() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1025");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    int int4 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log5 = enhancedBootstrapper0.getLog();
    boolean boolean6 = enhancedBootstrapper0.isRunning();
    boolean boolean7 = enhancedBootstrapper0.isRunning();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertNotNull(log5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1026() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1026");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    int int4 = enhancedBootstrapper0.stop();
    int int5 = enhancedBootstrapper0.stop();
    int int6 = enhancedBootstrapper0.stop();
    boolean boolean7 = enhancedBootstrapper0.isRunning();
    java.nio.file.Path path8 = null;
    java.nio.file.Path path9 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
    try {
      int int12 = enhancedBootstrapper0.start(path8, path9, strMap10, false);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1027() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1027");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    java.lang.String str11 = clusteringDBMSBuilder10.getEdition();
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder10.loadPropertiesFromFile(
        "");
    java.nio.file.Path path14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder13.loadPropertiesFromFile(
        path14);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder13.loadPropertiesFromFile(
        "");
    java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder19 = clusteringDBMSBuilder13.setConfigRaw(
          strMap18);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "enterprise" + "'", str11, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
  }

  @Test
  public void test1028() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1028");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.monitoring.Monitors monitors11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder6.setMonitors(
        monitors11);
    java.nio.file.Path path13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        path13);
    java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder14.setConfigRaw(
          strMap15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
  }

  @Test
  public void test1029() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1029");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl6.dropDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1030() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1030");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    java.lang.String str11 = clusteringDBMSBuilder10.getEdition();
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder10.loadPropertiesFromFile(
        "");
    java.nio.file.Path path14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder13.loadPropertiesFromFile(
        path14);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder13.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener18 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder19 = clusteringDBMSBuilder17.addDatabaseListener(
        databaseEventListener18);
    java.nio.file.Path path20 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder21 = clusteringDBMSBuilder19.loadPropertiesFromFile(
        path20);
    org.neo4j.logging.LogProvider logProvider22 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder23 = clusteringDBMSBuilder19.setUserLogProvider(
        logProvider22);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "enterprise" + "'", str11, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder19);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder21);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder23);
  }

  @Test
  public void test1031() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1031");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv10 = null;
    metaUpgradeFlowAction5.accept(upgradeMetaEnv10);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction12 = metaUpgradeFlowAction1.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction5);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction13 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv14 = null;
    metaUpgradeFlowAction13.accept(upgradeMetaEnv14);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer16 = metaUpgradeFlowAction12.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction13);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv17 = null;
    metaUpgradeFlowAction12.accept(upgradeMetaEnv17);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction19 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction20 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv21 = null;
    metaUpgradeFlowAction20.accept(upgradeMetaEnv21);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = metaUpgradeFlowAction19.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction20);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction24 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction25 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv26 = null;
    metaUpgradeFlowAction25.accept(upgradeMetaEnv26);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction28 = metaUpgradeFlowAction24.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction25);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction29 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction30 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv31 = null;
    metaUpgradeFlowAction30.accept(upgradeMetaEnv31);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction33 = metaUpgradeFlowAction29.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction30);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction34 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction35 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv36 = null;
    metaUpgradeFlowAction35.accept(upgradeMetaEnv36);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction38 = metaUpgradeFlowAction34.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction35);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv39 = null;
    metaUpgradeFlowAction34.accept(upgradeMetaEnv39);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction41 = metaUpgradeFlowAction30.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction34);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv43 = null;
    metaUpgradeFlowAction42.accept(upgradeMetaEnv43);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer45 = metaUpgradeFlowAction41.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction42);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction46 = metaUpgradeFlowAction24.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction42);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction47 = metaUpgradeFlowAction23.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction46);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction48 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer49 = metaUpgradeFlowAction47.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction48);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction50 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction51 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv52 = null;
    metaUpgradeFlowAction51.accept(upgradeMetaEnv52);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction54 = metaUpgradeFlowAction50.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction51);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction55 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction56 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv57 = null;
    metaUpgradeFlowAction56.accept(upgradeMetaEnv57);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction59 = metaUpgradeFlowAction55.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction56);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction60 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction61 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv62 = null;
    metaUpgradeFlowAction61.accept(upgradeMetaEnv62);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction64 = metaUpgradeFlowAction60.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction61);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction65 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction66 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv67 = null;
    metaUpgradeFlowAction66.accept(upgradeMetaEnv67);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction69 = metaUpgradeFlowAction65.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction66);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv70 = null;
    metaUpgradeFlowAction65.accept(upgradeMetaEnv70);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction72 = metaUpgradeFlowAction61.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction65);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction73 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv74 = null;
    metaUpgradeFlowAction73.accept(upgradeMetaEnv74);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer76 = metaUpgradeFlowAction72.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction73);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction77 = metaUpgradeFlowAction55.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction73);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction78 = metaUpgradeFlowAction54.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction77);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction79 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer80 = metaUpgradeFlowAction78.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction79);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer81 = metaUpgradeFlowAction48.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction79);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction82 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction83 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv84 = null;
    metaUpgradeFlowAction83.accept(upgradeMetaEnv84);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction86 = metaUpgradeFlowAction82.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction83);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction87 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction88 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv89 = null;
    metaUpgradeFlowAction88.accept(upgradeMetaEnv89);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction91 = metaUpgradeFlowAction87.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction88);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv92 = null;
    metaUpgradeFlowAction87.accept(upgradeMetaEnv92);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction94 = metaUpgradeFlowAction83.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction87);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer95 = upgradeMetaEnvConsumer81.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction87);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer96 = metaUpgradeFlowAction12.andThen(
        upgradeMetaEnvConsumer95);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv97 = null;
    metaUpgradeFlowAction12.accept(upgradeMetaEnv97);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction12);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction13);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer16);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction19);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction20);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction24);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction25);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction28);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction29);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction30);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction33);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction34);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction35);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction38);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction41);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer45);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction46);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction47);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction48);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer49);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction50);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction51);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction54);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction55);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction56);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction59);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction60);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction61);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction64);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction65);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction66);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction69);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction72);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction73);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer76);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction77);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction78);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction79);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer80);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer81);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction82);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction83);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction86);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction87);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction88);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction91);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction94);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer95);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer96);
  }

  @Test
  public void test1032() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1032");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener6 = null;
    try {
      databaseManagementServiceClusterImpl5.unregisterDatabaseEventListener(databaseEventListener6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1033() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1033");
    }
    java.time.Clock clock0 = null;
    org.neo4j.kernel.database.DatabaseIdRepository databaseIdRepository1 = null;
    io.github.onograph.dbms.DbmsManagerWatchTagImpl dbmsManagerWatchTagImpl2 = null;
    java.time.ZoneId zoneId3 = null;
    io.github.onograph.dbms.serverproc.BasicProcedureQuarantineDatabaseImpl basicProcedureQuarantineDatabaseImpl4 = io.github.onograph.dbms.serverproc.BasicProcedureQuarantineDatabaseImpl.stnleBasicProcedureQuarantineDatabaseImpl(
        clock0, databaseIdRepository1, dbmsManagerWatchTagImpl2, zoneId3);
    org.neo4j.kernel.api.procedure.Context context5 = null;
    org.neo4j.values.AnyValue[] anyValueArray6 = new org.neo4j.values.AnyValue[]{};
    org.neo4j.kernel.api.ResourceTracker resourceTracker7 = null;
    try {
      org.neo4j.collection.RawIterator<org.neo4j.values.AnyValue[], org.neo4j.internal.kernel.api.exceptions.ProcedureException> anyValueArrayRawIterator8 = basicProcedureQuarantineDatabaseImpl4.apply(
          context5, anyValueArray6, resourceTracker7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalArgumentException; message: *** Error: fe8ab484-a650-4ba7-a59f-194832c36aaa");
    } catch (java.lang.IllegalArgumentException e) {
    }
    org.junit.Assert.assertNotNull(basicProcedureQuarantineDatabaseImpl4);
    org.junit.Assert.assertNotNull(anyValueArray6);
  }

  @Test
  public void test1034() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1034");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      org.neo4j.graphdb.GraphDatabaseService graphDatabaseService10 = databaseManagementServiceClusterImpl8.database(
          "enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1035() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1035");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl6.shutdown();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1036() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1036");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log2 = enhancedBootstrapper0.getLog();
    int int3 = enhancedBootstrapper0.stop();
    boolean boolean4 = enhancedBootstrapper0.isRunning();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNotNull(log2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test1037() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1037");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder5.setConfigRaw(
          strMap10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
  }

  @Test
  public void test1038() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1038");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl5.shutdownDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1039() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1039");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder6.addURLAccessRule(
        "", uRLAccessRule10);
    org.neo4j.logging.LogProvider logProvider12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider12);
    java.lang.String str14 = clusteringDBMSBuilder13.getEdition();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "enterprise" + "'", str14, "enterprise");
  }

  @Test
  public void test1040() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1040");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder7.setMonitors(
        monitors8);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder7.addURLAccessRule(
        "hi!", uRLAccessRule11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder7.setUserLogProvider(
        logProvider13);
    java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = clusteringDBMSBuilder7.setConfigRaw(
          strMap15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
  }

  @Test
  public void test1041() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1041");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver10);
    java.nio.file.Path path12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder13.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder13.setUserLogProvider(
        logProvider16);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule19 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder20 = clusteringDBMSBuilder13.addURLAccessRule(
        "hi!", uRLAccessRule19);
    java.lang.Class<?> wildcardClass21 = clusteringDBMSBuilder20.getClass();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder20);
    org.junit.Assert.assertNotNull(wildcardClass21);
  }

  @Test
  public void test1042() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1042");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    java.nio.file.Path path9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path9);
    org.neo4j.common.DependencyResolver dependencyResolver11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = databaseManagementServiceBuilder10.setExternalDependencies(
        dependencyResolver11);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = databaseManagementServiceBuilder10.addDatabaseListener(
        databaseEventListener13);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = databaseManagementServiceBuilder10.addDatabaseListener(
        databaseEventListener15);
    org.neo4j.common.DependencyResolver dependencyResolver17 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder18 = databaseManagementServiceBuilder16.setExternalDependencies(
        dependencyResolver17);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener19 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder20 = databaseManagementServiceBuilder18.addDatabaseListener(
        databaseEventListener19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder18);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder20);
  }

  @Test
  public void test1043() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1043");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider11);
    java.nio.file.Path path13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.loadPropertiesFromFile(
        path13);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder12.addURLAccessRule(
        "enterprise", uRLAccessRule16);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder19 = clusteringDBMSBuilder17.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver20 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder19.setExternalDependencies(
        dependencyResolver20);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder21);
  }

  @Test
  public void test1044() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1044");
    }
    io.github.onograph.dbms.utils.TokenNamePropertyDTO tokenNamePropertyDTO2 = new io.github.onograph.dbms.utils.TokenNamePropertyDTO(
        "", "");
    java.lang.String str3 = tokenNamePropertyDTO2.getStrNt();
    java.lang.String str4 = tokenNamePropertyDTO2.getStrNt();
    java.lang.String str5 = tokenNamePropertyDTO2.getStrNp();
    java.lang.String str6 = tokenNamePropertyDTO2.getStrNp();
    java.lang.String str7 = tokenNamePropertyDTO2.getStrNp();
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
  }

  @Test
  public void test1045() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1045");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction10 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction11 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv12 = null;
    metaUpgradeFlowAction11.accept(upgradeMetaEnv12);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = metaUpgradeFlowAction10.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction11);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction15 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction16 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv17 = null;
    metaUpgradeFlowAction16.accept(upgradeMetaEnv17);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction19 = metaUpgradeFlowAction15.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction16);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv20 = null;
    metaUpgradeFlowAction15.accept(upgradeMetaEnv20);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = metaUpgradeFlowAction11.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv24 = null;
    metaUpgradeFlowAction23.accept(upgradeMetaEnv24);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer26 = metaUpgradeFlowAction22.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction27 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction28 = metaUpgradeFlowAction4.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction27);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction29 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer30 = metaUpgradeFlowAction28.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction29);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction31 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction32 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv33 = null;
    metaUpgradeFlowAction32.accept(upgradeMetaEnv33);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction35 = metaUpgradeFlowAction31.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction32);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction36 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction37 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv38 = null;
    metaUpgradeFlowAction37.accept(upgradeMetaEnv38);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction40 = metaUpgradeFlowAction36.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction37);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction41 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv43 = null;
    metaUpgradeFlowAction42.accept(upgradeMetaEnv43);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction45 = metaUpgradeFlowAction41.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction42);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv46 = null;
    metaUpgradeFlowAction41.accept(upgradeMetaEnv46);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction48 = metaUpgradeFlowAction37.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction41);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction49 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv50 = null;
    metaUpgradeFlowAction49.accept(upgradeMetaEnv50);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer52 = metaUpgradeFlowAction48.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction49);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction53 = metaUpgradeFlowAction31.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction49);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction54 = metaUpgradeFlowAction28.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction53);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction55 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction56 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv57 = null;
    metaUpgradeFlowAction56.accept(upgradeMetaEnv57);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction59 = metaUpgradeFlowAction55.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction56);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction60 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction61 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv62 = null;
    metaUpgradeFlowAction61.accept(upgradeMetaEnv62);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction64 = metaUpgradeFlowAction60.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction61);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv65 = null;
    metaUpgradeFlowAction60.accept(upgradeMetaEnv65);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction67 = metaUpgradeFlowAction56.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction60);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction68 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv69 = null;
    metaUpgradeFlowAction68.accept(upgradeMetaEnv69);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer71 = metaUpgradeFlowAction67.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction68);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer72 = metaUpgradeFlowAction54.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction68);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv73 = null;
    metaUpgradeFlowAction54.accept(upgradeMetaEnv73);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction10);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction11);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction15);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction16);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction19);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer26);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction28);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction29);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer30);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction31);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction32);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction35);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction36);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction37);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction40);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction41);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction45);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction48);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction49);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer52);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction53);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction54);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction55);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction56);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction59);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction60);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction61);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction64);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction67);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction68);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer71);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer72);
  }

  @Test
  public void test1046() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1046");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    try {
      databaseManagementServiceClusterImpl6.dropDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1047() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1047");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    org.neo4j.graphdb.config.Configuration configuration8 = null;
    try {
      databaseManagementServiceClusterImpl6.createDatabase("hi!", configuration8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1048() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1048");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider11);
    java.nio.file.Path path13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.loadPropertiesFromFile(
        path13);
    org.neo4j.common.DependencyResolver dependencyResolver15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder12.setExternalDependencies(
        dependencyResolver15);
    org.neo4j.monitoring.Monitors monitors17 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder18 = clusteringDBMSBuilder12.setMonitors(
        monitors17);
    java.nio.file.Path path19 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder20 = clusteringDBMSBuilder12.loadPropertiesFromFile(
        path19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder18);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder20);
  }

  @Test
  public void test1049() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1049");
    }
    io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider commandGetServerIdCommandProvider0 = new io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider();
    int int1 = commandGetServerIdCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType2 = commandGetServerIdCommandProvider0.commandType();
    int int3 = commandGetServerIdCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType4 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType5 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType6 = commandGetServerIdCommandProvider0.commandType();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType5 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType5.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType6 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType6.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
  }

  @Test
  public void test1050() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1050");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log2 = enhancedBootstrapper0.getLog();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    java.lang.Class<?> wildcardClass5 = enhancedBootstrapper0.getClass();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNotNull(log2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertNotNull(wildcardClass5);
  }

  @Test
  public void test1051() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1051");
    }
    io.github.onograph.cluster.raft.module.dprot.ClusterStructureService clusterStructureService0 = null;
    org.neo4j.kernel.database.DatabaseIdRepository databaseIdRepository1 = null;
    io.github.onograph.dbms.serverproc.DatabaseStateProcedureClusterImpl databaseStateProcedureClusterImpl2 = new io.github.onograph.dbms.serverproc.DatabaseStateProcedureClusterImpl(
        clusterStructureService0, databaseIdRepository1);
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature3 = databaseStateProcedureClusterImpl2.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature4 = databaseStateProcedureClusterImpl2.signature();
    org.neo4j.kernel.api.procedure.Context context5 = null;
    org.neo4j.values.AnyValue[] anyValueArray6 = null;
    org.neo4j.kernel.api.ResourceTracker resourceTracker7 = null;
    try {
      org.neo4j.collection.RawIterator<org.neo4j.values.AnyValue[], org.neo4j.internal.kernel.api.exceptions.ProcedureException> anyValueArrayRawIterator8 = databaseStateProcedureClusterImpl2.apply(
          context5, anyValueArray6, resourceTracker7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(procedureSignature3);
    org.junit.Assert.assertNotNull(procedureSignature4);
  }

  @Test
  public void test1052() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1052");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction10 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction11 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv12 = null;
    metaUpgradeFlowAction11.accept(upgradeMetaEnv12);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = metaUpgradeFlowAction10.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction11);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction15 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction16 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv17 = null;
    metaUpgradeFlowAction16.accept(upgradeMetaEnv17);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction19 = metaUpgradeFlowAction15.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction16);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv20 = null;
    metaUpgradeFlowAction15.accept(upgradeMetaEnv20);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = metaUpgradeFlowAction11.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv24 = null;
    metaUpgradeFlowAction23.accept(upgradeMetaEnv24);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer26 = metaUpgradeFlowAction22.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction27 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction28 = metaUpgradeFlowAction4.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction27);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction29 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer30 = metaUpgradeFlowAction28.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction29);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction31 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction32 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv33 = null;
    metaUpgradeFlowAction32.accept(upgradeMetaEnv33);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction35 = metaUpgradeFlowAction31.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction32);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction36 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction37 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv38 = null;
    metaUpgradeFlowAction37.accept(upgradeMetaEnv38);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction40 = metaUpgradeFlowAction36.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction37);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction41 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv43 = null;
    metaUpgradeFlowAction42.accept(upgradeMetaEnv43);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction45 = metaUpgradeFlowAction41.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction42);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv46 = null;
    metaUpgradeFlowAction41.accept(upgradeMetaEnv46);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction48 = metaUpgradeFlowAction37.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction41);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction49 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv50 = null;
    metaUpgradeFlowAction49.accept(upgradeMetaEnv50);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer52 = metaUpgradeFlowAction48.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction49);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction53 = metaUpgradeFlowAction31.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction49);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction54 = metaUpgradeFlowAction28.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction53);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv55 = null;
    metaUpgradeFlowAction28.accept(upgradeMetaEnv55);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction57 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction58 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv59 = null;
    metaUpgradeFlowAction58.accept(upgradeMetaEnv59);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction61 = metaUpgradeFlowAction57.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction58);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction62 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction63 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv64 = null;
    metaUpgradeFlowAction63.accept(upgradeMetaEnv64);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction66 = metaUpgradeFlowAction62.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction63);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv67 = null;
    metaUpgradeFlowAction62.accept(upgradeMetaEnv67);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction69 = metaUpgradeFlowAction58.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction62);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction70 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv71 = null;
    metaUpgradeFlowAction70.accept(upgradeMetaEnv71);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer73 = metaUpgradeFlowAction69.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction70);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv74 = null;
    metaUpgradeFlowAction69.accept(upgradeMetaEnv74);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction76 = metaUpgradeFlowAction28.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction69);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction10);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction11);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction15);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction16);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction19);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer26);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction28);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction29);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer30);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction31);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction32);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction35);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction36);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction37);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction40);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction41);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction45);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction48);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction49);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer52);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction53);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction54);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction57);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction58);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction61);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction62);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction63);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction66);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction69);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction70);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer73);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction76);
  }

  @Test
  public void test1053() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1053");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder6.addURLAccessRule(
        "", uRLAccessRule10);
    org.neo4j.logging.LogProvider logProvider12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider12);
    java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder13.setConfigRaw(
          strMap14);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
  }

  @Test
  public void test1054() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1054");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl1);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    try {
      java.util.List<java.lang.String> strList4 = databaseManagementServiceClusterImpl2.listDatabases();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1055() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1055");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider16);
    java.nio.file.Path path18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        path18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder9.setMonitors(
        monitors20);
    org.neo4j.logging.LogProvider logProvider22 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder23 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider22);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder25 = clusteringDBMSBuilder23.loadPropertiesFromFile(
        "");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder27 = clusteringDBMSBuilder23.loadPropertiesFromFile(
        "");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder29 = clusteringDBMSBuilder23.loadPropertiesFromFile(
        "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder21);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder23);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder25);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder27);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder29);
  }

  @Test
  public void test1056() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1056");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    int int4 = enhancedBootstrapper0.stop();
    int int5 = enhancedBootstrapper0.stop();
    int int6 = enhancedBootstrapper0.stop();
    boolean boolean7 = enhancedBootstrapper0.isRunning();
    java.nio.file.Path path8 = null;
    java.nio.file.Path path9 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
    try {
      int int12 = enhancedBootstrapper0.start(path8, path9, strMap10, true);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1057() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1057");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService2 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    int int4 = enhancedBootstrapper0.stop();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNull(databaseManagementService2);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
  }

  @Test
  public void test1058() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1058");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.setMonitors(
        monitors11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.setMonitors(
        monitors13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = clusteringDBMSBuilder14.setMonitors(
        monitors15);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder18 = clusteringDBMSBuilder14.setMonitors(
        monitors17);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule20 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder14.addURLAccessRule(
        "enterprise", uRLAccessRule20);
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService22 = clusteringDBMSBuilder21.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder18);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder21);
  }

  @Test
  public void test1059() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1059");
    }
    io.github.onograph.dbms.utils.TokenNamePropertyDTO tokenNamePropertyDTO2 = new io.github.onograph.dbms.utils.TokenNamePropertyDTO(
        "enterprise", "enterprise");
    java.lang.String str3 = tokenNamePropertyDTO2.getStrNp();
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterprise" + "'", str3, "enterprise");
  }

  @Test
  public void test1060() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1060");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "");
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder5.setMonitors(
        monitors13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
  }

  @Test
  public void test1061() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1061");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener6 = null;
    try {
      databaseManagementServiceClusterImpl5.registerDatabaseEventListener(databaseEventListener6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1062() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1062");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver6);
    org.neo4j.logging.LogProvider logProvider8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder7.setUserLogProvider(
        logProvider8);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder7.addURLAccessRule(
        "", uRLAccessRule11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
  }

  @Test
  public void test1063() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1063");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction10 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction11 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv12 = null;
    metaUpgradeFlowAction11.accept(upgradeMetaEnv12);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = metaUpgradeFlowAction10.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction11);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv15 = null;
    metaUpgradeFlowAction10.accept(upgradeMetaEnv15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction17 = metaUpgradeFlowAction6.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction10);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction18 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv19 = null;
    metaUpgradeFlowAction18.accept(upgradeMetaEnv19);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer21 = metaUpgradeFlowAction17.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction18);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer22 = metaUpgradeFlowAction0.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction18);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction24 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv25 = null;
    metaUpgradeFlowAction24.accept(upgradeMetaEnv25);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction27 = metaUpgradeFlowAction23.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction24);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction28 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction29 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv30 = null;
    metaUpgradeFlowAction29.accept(upgradeMetaEnv30);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction32 = metaUpgradeFlowAction28.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction29);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction33 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction34 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv35 = null;
    metaUpgradeFlowAction34.accept(upgradeMetaEnv35);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction37 = metaUpgradeFlowAction33.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction34);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction38 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction39 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv40 = null;
    metaUpgradeFlowAction39.accept(upgradeMetaEnv40);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = metaUpgradeFlowAction38.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction39);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv43 = null;
    metaUpgradeFlowAction38.accept(upgradeMetaEnv43);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction45 = metaUpgradeFlowAction34.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction38);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction46 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv47 = null;
    metaUpgradeFlowAction46.accept(upgradeMetaEnv47);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer49 = metaUpgradeFlowAction45.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction46);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction50 = metaUpgradeFlowAction28.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction46);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction51 = metaUpgradeFlowAction27.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction50);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer52 = metaUpgradeFlowAction18.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction27);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv53 = null;
    metaUpgradeFlowAction27.accept(upgradeMetaEnv53);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction55 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction56 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv57 = null;
    metaUpgradeFlowAction56.accept(upgradeMetaEnv57);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction59 = metaUpgradeFlowAction55.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction56);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction60 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction61 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv62 = null;
    metaUpgradeFlowAction61.accept(upgradeMetaEnv62);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction64 = metaUpgradeFlowAction60.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction61);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv65 = null;
    metaUpgradeFlowAction60.accept(upgradeMetaEnv65);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction67 = metaUpgradeFlowAction56.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction60);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction68 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv69 = null;
    metaUpgradeFlowAction68.accept(upgradeMetaEnv69);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer71 = metaUpgradeFlowAction67.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction68);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction72 = metaUpgradeFlowAction27.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction68);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction10);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction11);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction17);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction18);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer21);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction24);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction28);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction29);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction32);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction33);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction34);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction37);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction38);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction39);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction45);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction46);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer49);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction50);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction51);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer52);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction55);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction56);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction59);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction60);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction61);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction64);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction67);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction68);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer71);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction72);
  }

  @Test
  public void test1064() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1064");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    try {
      databaseManagementServiceClusterImpl4.dropDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1065() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1065");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder7.setUserLogProvider(
        logProvider8);
    java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder7.setConfigRaw(
          strMap10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
  }

  @Test
  public void test1066() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1066");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder6.addURLAccessRule(
        "enterprise", uRLAccessRule12);
    org.neo4j.logging.LogProvider logProvider14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder13.setUserLogProvider(
        logProvider14);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder13.loadPropertiesFromFile(
        "");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
  }

  @Test
  public void test1067() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1067");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction10 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction11 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv12 = null;
    metaUpgradeFlowAction11.accept(upgradeMetaEnv12);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = metaUpgradeFlowAction10.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction11);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv15 = null;
    metaUpgradeFlowAction10.accept(upgradeMetaEnv15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction17 = metaUpgradeFlowAction6.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction10);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction18 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv19 = null;
    metaUpgradeFlowAction18.accept(upgradeMetaEnv19);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer21 = metaUpgradeFlowAction17.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction18);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer22 = metaUpgradeFlowAction0.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction18);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction24 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv25 = null;
    metaUpgradeFlowAction24.accept(upgradeMetaEnv25);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction27 = metaUpgradeFlowAction23.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction24);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction28 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction29 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv30 = null;
    metaUpgradeFlowAction29.accept(upgradeMetaEnv30);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction32 = metaUpgradeFlowAction28.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction29);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction33 = metaUpgradeFlowAction27.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction28);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv34 = null;
    metaUpgradeFlowAction28.accept(upgradeMetaEnv34);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction36 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction37 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv38 = null;
    metaUpgradeFlowAction37.accept(upgradeMetaEnv38);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction40 = metaUpgradeFlowAction36.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction37);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction41 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv43 = null;
    metaUpgradeFlowAction42.accept(upgradeMetaEnv43);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction45 = metaUpgradeFlowAction41.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction42);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv46 = null;
    metaUpgradeFlowAction41.accept(upgradeMetaEnv46);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction48 = metaUpgradeFlowAction37.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction41);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction49 = metaUpgradeFlowAction28.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction41);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction50 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction51 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv52 = null;
    metaUpgradeFlowAction51.accept(upgradeMetaEnv52);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction54 = metaUpgradeFlowAction50.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction51);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction55 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction56 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv57 = null;
    metaUpgradeFlowAction56.accept(upgradeMetaEnv57);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction59 = metaUpgradeFlowAction55.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction56);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction60 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction61 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv62 = null;
    metaUpgradeFlowAction61.accept(upgradeMetaEnv62);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction64 = metaUpgradeFlowAction60.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction61);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction65 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction66 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv67 = null;
    metaUpgradeFlowAction66.accept(upgradeMetaEnv67);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction69 = metaUpgradeFlowAction65.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction66);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv70 = null;
    metaUpgradeFlowAction65.accept(upgradeMetaEnv70);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction72 = metaUpgradeFlowAction61.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction65);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction73 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv74 = null;
    metaUpgradeFlowAction73.accept(upgradeMetaEnv74);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer76 = metaUpgradeFlowAction72.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction73);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction77 = metaUpgradeFlowAction55.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction73);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction78 = metaUpgradeFlowAction54.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction77);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction79 = metaUpgradeFlowAction49.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction54);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction80 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction49);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv81 = null;
    metaUpgradeFlowAction80.accept(upgradeMetaEnv81);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction10);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction11);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction17);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction18);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer21);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction24);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction28);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction29);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction32);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction33);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction36);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction37);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction40);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction41);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction45);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction48);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction49);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction50);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction51);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction54);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction55);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction56);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction59);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction60);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction61);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction64);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction65);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction66);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction69);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction72);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction73);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer76);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction77);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction78);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction79);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction80);
  }

  @Test
  public void test1068() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1068");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.setMonitors(
        monitors11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.setMonitors(
        monitors13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = clusteringDBMSBuilder14.setMonitors(
        monitors15);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder14.addURLAccessRule(
        "", uRLAccessRule18);
    java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder21 = databaseManagementServiceBuilder19.setConfigRaw(
          strMap20);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
  }

  @Test
  public void test1069() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1069");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "hi!");
    org.neo4j.logging.LogProvider logProvider8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = databaseManagementServiceBuilder7.setUserLogProvider(
        logProvider8);
    org.neo4j.logging.LogProvider logProvider10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = databaseManagementServiceBuilder9.setUserLogProvider(
        logProvider10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
  }

  @Test
  public void test1070() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1070");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService2 = enhancedBootstrapper0.getDatabaseManagementService();
    java.nio.file.Path path3 = null;
    java.nio.file.Path path4 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap5 = null;
    try {
      int int7 = enhancedBootstrapper0.start(path3, path4, strMap5, false);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNull(databaseManagementService2);
  }

  @Test
  public void test1071() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1071");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv5 = null;
    metaUpgradeFlowAction0.accept(upgradeMetaEnv5);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction7 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction8 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv9 = null;
    metaUpgradeFlowAction8.accept(upgradeMetaEnv9);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction11 = metaUpgradeFlowAction7.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction8);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction12 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction13 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv14 = null;
    metaUpgradeFlowAction13.accept(upgradeMetaEnv14);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction16 = metaUpgradeFlowAction12.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction13);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction17 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction18 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv19 = null;
    metaUpgradeFlowAction18.accept(upgradeMetaEnv19);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction21 = metaUpgradeFlowAction17.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction18);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv24 = null;
    metaUpgradeFlowAction23.accept(upgradeMetaEnv24);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction26 = metaUpgradeFlowAction22.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction23);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv27 = null;
    metaUpgradeFlowAction22.accept(upgradeMetaEnv27);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction29 = metaUpgradeFlowAction18.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction22);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction30 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv31 = null;
    metaUpgradeFlowAction30.accept(upgradeMetaEnv31);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer33 = metaUpgradeFlowAction29.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction30);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction34 = metaUpgradeFlowAction12.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction30);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction35 = metaUpgradeFlowAction11.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction34);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction36 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer37 = metaUpgradeFlowAction35.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction36);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction38 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction39 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv40 = null;
    metaUpgradeFlowAction39.accept(upgradeMetaEnv40);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = metaUpgradeFlowAction38.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction39);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction43 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction44 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv45 = null;
    metaUpgradeFlowAction44.accept(upgradeMetaEnv45);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction47 = metaUpgradeFlowAction43.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction44);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction48 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction49 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv50 = null;
    metaUpgradeFlowAction49.accept(upgradeMetaEnv50);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction52 = metaUpgradeFlowAction48.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction49);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction53 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction54 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv55 = null;
    metaUpgradeFlowAction54.accept(upgradeMetaEnv55);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction57 = metaUpgradeFlowAction53.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction54);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv58 = null;
    metaUpgradeFlowAction53.accept(upgradeMetaEnv58);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction60 = metaUpgradeFlowAction49.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction53);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction61 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv62 = null;
    metaUpgradeFlowAction61.accept(upgradeMetaEnv62);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer64 = metaUpgradeFlowAction60.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction61);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction65 = metaUpgradeFlowAction43.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction61);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction66 = metaUpgradeFlowAction42.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction65);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction67 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer68 = metaUpgradeFlowAction66.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction67);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer69 = metaUpgradeFlowAction36.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction67);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction70 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction71 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv72 = null;
    metaUpgradeFlowAction71.accept(upgradeMetaEnv72);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction74 = metaUpgradeFlowAction70.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction71);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction75 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction76 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv77 = null;
    metaUpgradeFlowAction76.accept(upgradeMetaEnv77);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction79 = metaUpgradeFlowAction75.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction76);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv80 = null;
    metaUpgradeFlowAction75.accept(upgradeMetaEnv80);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction82 = metaUpgradeFlowAction71.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction75);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer83 = upgradeMetaEnvConsumer69.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction75);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction84 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction75);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv85 = null;
    metaUpgradeFlowAction75.accept(upgradeMetaEnv85);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction7);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction8);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction11);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction12);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction13);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction16);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction17);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction18);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction21);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction26);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction29);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction30);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer33);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction34);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction35);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction36);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer37);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction38);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction39);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction43);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction44);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction47);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction48);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction49);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction52);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction53);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction54);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction57);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction60);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction61);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer64);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction65);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction66);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction67);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer68);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer69);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction70);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction71);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction74);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction75);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction76);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction79);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction82);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer83);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction84);
  }

  @Test
  public void test1072() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1072");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder7.setMonitors(
        monitors8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder7.setMonitors(
        monitors10);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder7.loadPropertiesFromFile(
        "hi!");
    java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder7.setConfigRaw(
          strMap14);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
  }

  @Test
  public void test1073() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1073");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    org.neo4j.graphdb.config.Configuration configuration8 = null;
    try {
      databaseManagementServiceClusterImpl6.createDatabase("enterprise", configuration8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1074() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1074");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    try {
      boolean boolean11 = databaseManagementServiceClusterImpl6.isWraeForSt("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1075() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1075");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    try {
      databaseManagementServiceClusterImpl4.createDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1076() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1076");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    java.lang.String str6 = clusteringDBMSBuilder3.getEdition();
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder3.setMonitors(
        monitors7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder3.addURLAccessRule(
        "enterprise", uRLAccessRule10);
    java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder11.setConfigRaw(
          strMap12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterprise" + "'", str6, "enterprise");
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
  }

  @Test
  public void test1077() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1077");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl1);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    try {
      databaseManagementServiceClusterImpl2.createDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1078() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1078");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider16);
    java.nio.file.Path path18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        path18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder21 = databaseManagementServiceBuilder19.setMonitors(
        monitors20);
    org.neo4j.monitoring.Monitors monitors22 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder23 = databaseManagementServiceBuilder21.setMonitors(
        monitors22);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder21);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder23);
  }

  @Test
  public void test1079() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1079");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder5.setMonitors(
        monitors9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider11);
    org.neo4j.common.DependencyResolver dependencyResolver13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder5.setMonitors(
        monitors15);
    java.nio.file.Path path17 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder18 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path17);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule20 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder21 = clusteringDBMSBuilder5.addURLAccessRule(
        "enterprise", uRLAccessRule20);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder18);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder21);
  }

  @Test
  public void test1080() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1080");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver10);
    java.lang.String str12 = clusteringDBMSBuilder11.getEdition();
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder11.setMonitors(
        monitors13);
    java.nio.file.Path path15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = clusteringDBMSBuilder14.loadPropertiesFromFile(
        path15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "enterprise" + "'", str12, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
  }

  @Test
  public void test1081() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1081");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    java.lang.String str6 = clusteringDBMSBuilder3.getEdition();
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.setMonitors(
        monitors7);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder8.loadPropertiesFromFile(
        "hi!");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterprise" + "'", str6, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
  }

  @Test
  public void test1082() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1082");
    }
    io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider commandGetServerIdCommandProvider0 = new io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider();
    int int1 = commandGetServerIdCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType2 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType3 = commandGetServerIdCommandProvider0.commandType();
    int int4 = commandGetServerIdCommandProvider0.getPriority();
    org.neo4j.cli.ExecutionContext executionContext5 = null;
    try {
      io.github.onograph.dbms.commands.CommandGetServerIdImpl commandGetServerIdImpl6 = commandGetServerIdCommandProvider0.createCommand(
          executionContext5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
  }

  @Test
  public void test1083() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1083");
    }
    io.github.onograph.cluster.raft.module.dprot.ClusterStructureService clusterStructureService0 = null;
    org.neo4j.kernel.database.DatabaseIdRepository databaseIdRepository1 = null;
    io.github.onograph.dbms.serverproc.BasicProcedureClusterMakeGdbDefaultImpl basicProcedureClusterMakeGdbDefaultImpl2 = new io.github.onograph.dbms.serverproc.BasicProcedureClusterMakeGdbDefaultImpl(
        clusterStructureService0, databaseIdRepository1);
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature3 = basicProcedureClusterMakeGdbDefaultImpl2.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature4 = basicProcedureClusterMakeGdbDefaultImpl2.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature5 = basicProcedureClusterMakeGdbDefaultImpl2.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature6 = basicProcedureClusterMakeGdbDefaultImpl2.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature7 = basicProcedureClusterMakeGdbDefaultImpl2.signature();
    org.neo4j.kernel.api.procedure.Context context8 = null;
    org.neo4j.values.AnyValue anyValue9 = null;
    org.neo4j.values.AnyValue[] anyValueArray10 = new org.neo4j.values.AnyValue[]{anyValue9};
    org.neo4j.kernel.api.ResourceTracker resourceTracker11 = null;
    try {
      org.neo4j.collection.RawIterator<org.neo4j.values.AnyValue[], org.neo4j.internal.kernel.api.exceptions.ProcedureException> anyValueArrayRawIterator12 = basicProcedureClusterMakeGdbDefaultImpl2.apply(
          context8, anyValueArray10, resourceTracker11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(procedureSignature3);
    org.junit.Assert.assertNotNull(procedureSignature4);
    org.junit.Assert.assertNotNull(procedureSignature5);
    org.junit.Assert.assertNotNull(procedureSignature6);
    org.junit.Assert.assertNotNull(procedureSignature7);
    org.junit.Assert.assertNotNull(anyValueArray10);
  }

  @Test
  public void test1084() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1084");
    }
    io.github.onograph.cluster.raft.module.dprot.ClusterStructureService clusterStructureService0 = null;
    org.neo4j.kernel.database.DatabaseIdRepository databaseIdRepository1 = null;
    io.github.onograph.dbms.serverproc.BasicProcedureClusterMakeGdbDefaultImpl basicProcedureClusterMakeGdbDefaultImpl2 = new io.github.onograph.dbms.serverproc.BasicProcedureClusterMakeGdbDefaultImpl(
        clusterStructureService0, databaseIdRepository1);
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature3 = basicProcedureClusterMakeGdbDefaultImpl2.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature4 = basicProcedureClusterMakeGdbDefaultImpl2.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature5 = basicProcedureClusterMakeGdbDefaultImpl2.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature6 = basicProcedureClusterMakeGdbDefaultImpl2.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature7 = basicProcedureClusterMakeGdbDefaultImpl2.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature8 = basicProcedureClusterMakeGdbDefaultImpl2.signature();
    org.neo4j.kernel.api.procedure.Context context9 = null;
    org.neo4j.values.AnyValue anyValue10 = null;
    org.neo4j.values.AnyValue[] anyValueArray11 = new org.neo4j.values.AnyValue[]{anyValue10};
    org.neo4j.kernel.api.ResourceTracker resourceTracker12 = null;
    try {
      org.neo4j.collection.RawIterator<org.neo4j.values.AnyValue[], org.neo4j.internal.kernel.api.exceptions.ProcedureException> anyValueArrayRawIterator13 = basicProcedureClusterMakeGdbDefaultImpl2.apply(
          context9, anyValueArray11, resourceTracker12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(procedureSignature3);
    org.junit.Assert.assertNotNull(procedureSignature4);
    org.junit.Assert.assertNotNull(procedureSignature5);
    org.junit.Assert.assertNotNull(procedureSignature6);
    org.junit.Assert.assertNotNull(procedureSignature7);
    org.junit.Assert.assertNotNull(procedureSignature8);
    org.junit.Assert.assertNotNull(anyValueArray11);
  }

  @Test
  public void test1085() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1085");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    org.neo4j.logging.Log log5 = enhancedBootstrapper0.getLog();
    java.nio.file.Path path6 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
    try {
      int int8 = enhancedBootstrapper0.start(path6, strMap7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertNotNull(log5);
  }

  @Test
  public void test1086() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1086");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder11.addURLAccessRule(
        "", uRLAccessRule13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
  }

  @Test
  public void test1087() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1087");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService2 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    java.nio.file.Path path4 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap5 = null;
    try {
      int int6 = enhancedBootstrapper0.start(path4, strMap5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNull(databaseManagementService2);
    org.junit.Assert.assertNull(databaseManagementService3);
  }

  @Test
  public void test1088() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1088");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "hi!");
    org.neo4j.logging.LogProvider logProvider8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder3.setUserLogProvider(
        logProvider8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder3.setMonitors(
        monitors10);
    org.neo4j.common.DependencyResolver dependencyResolver12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder11.setExternalDependencies(
        dependencyResolver12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
  }

  @Test
  public void test1089() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1089");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction10 = metaUpgradeFlowAction4.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction5);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction11 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction12 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv13 = null;
    metaUpgradeFlowAction12.accept(upgradeMetaEnv13);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction15 = metaUpgradeFlowAction11.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction12);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction16 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction17 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv18 = null;
    metaUpgradeFlowAction17.accept(upgradeMetaEnv18);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction20 = metaUpgradeFlowAction16.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction17);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction21 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv23 = null;
    metaUpgradeFlowAction22.accept(upgradeMetaEnv23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction25 = metaUpgradeFlowAction21.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction22);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction26 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction27 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv28 = null;
    metaUpgradeFlowAction27.accept(upgradeMetaEnv28);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction30 = metaUpgradeFlowAction26.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction27);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv31 = null;
    metaUpgradeFlowAction26.accept(upgradeMetaEnv31);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction33 = metaUpgradeFlowAction22.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction26);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction34 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv35 = null;
    metaUpgradeFlowAction34.accept(upgradeMetaEnv35);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer37 = metaUpgradeFlowAction33.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction34);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction38 = metaUpgradeFlowAction16.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction34);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction39 = metaUpgradeFlowAction15.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction38);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction40 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer41 = metaUpgradeFlowAction39.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction40);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction43 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv44 = null;
    metaUpgradeFlowAction43.accept(upgradeMetaEnv44);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction46 = metaUpgradeFlowAction42.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction43);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction47 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction48 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv49 = null;
    metaUpgradeFlowAction48.accept(upgradeMetaEnv49);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction51 = metaUpgradeFlowAction47.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction48);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction52 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction53 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv54 = null;
    metaUpgradeFlowAction53.accept(upgradeMetaEnv54);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction56 = metaUpgradeFlowAction52.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction53);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv57 = null;
    metaUpgradeFlowAction52.accept(upgradeMetaEnv57);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction59 = metaUpgradeFlowAction48.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction52);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction60 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv61 = null;
    metaUpgradeFlowAction60.accept(upgradeMetaEnv61);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer63 = metaUpgradeFlowAction59.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction60);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction64 = metaUpgradeFlowAction42.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction60);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction65 = metaUpgradeFlowAction39.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction64);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction66 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction67 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv68 = null;
    metaUpgradeFlowAction67.accept(upgradeMetaEnv68);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction70 = metaUpgradeFlowAction66.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction67);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction71 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction72 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv73 = null;
    metaUpgradeFlowAction72.accept(upgradeMetaEnv73);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction75 = metaUpgradeFlowAction71.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction72);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv76 = null;
    metaUpgradeFlowAction71.accept(upgradeMetaEnv76);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction78 = metaUpgradeFlowAction67.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction71);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction79 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv80 = null;
    metaUpgradeFlowAction79.accept(upgradeMetaEnv80);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer82 = metaUpgradeFlowAction78.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction79);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer83 = metaUpgradeFlowAction65.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction79);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction84 = metaUpgradeFlowAction4.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction65);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv85 = null;
    metaUpgradeFlowAction84.accept(upgradeMetaEnv85);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction10);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction11);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction12);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction15);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction16);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction17);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction20);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction21);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction25);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction26);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction30);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction33);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction34);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer37);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction38);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction39);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction40);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer41);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction43);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction46);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction47);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction48);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction51);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction52);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction53);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction56);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction59);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction60);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer63);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction64);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction65);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction66);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction67);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction70);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction71);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction72);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction75);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction78);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction79);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer82);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer83);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction84);
  }

  @Test
  public void test1090() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1090");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    org.neo4j.cli.Command.CommandType commandType1 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType2 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    int int3 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType4 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    int int5 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int6 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.junit.Assert.assertTrue(
        "'" + commandType1 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType1.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
  }

  @Test
  public void test1091() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1091");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.setMonitors(
        monitors11);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder10.addURLAccessRule(
        "hi!", uRLAccessRule14);
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService16 = clusteringDBMSBuilder10.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
  }

  @Test
  public void test1092() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1092");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.monitoring.Monitors monitors4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setMonitors(
        monitors4);
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver6);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder1.addDatabaseListener(
        databaseEventListener10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder11.setMonitors(
        monitors12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
  }

  @Test
  public void test1093() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1093");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.setMonitors(
        monitors11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.setMonitors(
        monitors13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = clusteringDBMSBuilder14.setMonitors(
        monitors15);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder14.addURLAccessRule(
        "", uRLAccessRule18);
    java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder14.setConfigRaw(
          strMap20);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
  }

  @Test
  public void test1094() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1094");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    int int4 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log5 = enhancedBootstrapper0.getLog();
    int int6 = enhancedBootstrapper0.stop();
    int int7 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService8 = enhancedBootstrapper0.getDatabaseManagementService();
    java.nio.file.Path path9 = null;
    java.nio.file.Path path10 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
    try {
      int int13 = enhancedBootstrapper0.start(path9, path10, strMap11, false);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertNotNull(log5);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    org.junit.Assert.assertNull(databaseManagementService8);
  }

  @Test
  public void test1095() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1095");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder7.addDatabaseListener(
        databaseEventListener8);
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService10 = clusteringDBMSBuilder9.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
  }

  @Test
  public void test1096() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1096");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    try {
      databaseManagementServiceClusterImpl6.shutdownDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1097() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1097");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder9.addDatabaseListener(
        databaseEventListener12);
    java.lang.String str14 = clusteringDBMSBuilder9.getEdition();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "enterprise" + "'", str14, "enterprise");
  }

  @Test
  public void test1098() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1098");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    try {
      org.neo4j.graphdb.GraphDatabaseService graphDatabaseService7 = databaseManagementServiceClusterImpl4.database(
          "hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1099() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1099");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "hi!");
    org.neo4j.monitoring.Monitors monitors8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder3.setMonitors(
        monitors8);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.addDatabaseListener(
        databaseEventListener10);
    java.lang.String str12 = clusteringDBMSBuilder9.getEdition();
    java.util.Map<java.lang.String, java.lang.String> strMap13 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder9.setConfigRaw(
          strMap13);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "enterprise" + "'", str12, "enterprise");
  }

  @Test
  public void test1100() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1100");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule10);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder11.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder11.addURLAccessRule(
        "enterprise", uRLAccessRule15);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener17 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder18 = clusteringDBMSBuilder11.addDatabaseListener(
        databaseEventListener17);
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService19 = clusteringDBMSBuilder11.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder18);
  }

  @Test
  public void test1101() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1101");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder5.setMonitors(
        monitors9);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener11);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.loadPropertiesFromFile(
        "hi!");
    org.neo4j.logging.LogProvider logProvider15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder14.setUserLogProvider(
        logProvider15);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule18 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder19 = clusteringDBMSBuilder16.addURLAccessRule(
        "", uRLAccessRule18);
    try {
      io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl20 = clusteringDBMSBuilder16.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder19);
  }

  @Test
  public void test1102() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1102");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver6);
    java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.setConfigRaw(
          strMap8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
  }

  @Test
  public void test1103() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1103");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.monitoring.Monitors monitors6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder1.setMonitors(
        monitors6);
    java.lang.String str8 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "enterprise" + "'", str8, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
  }

  @Test
  public void test1104() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1104");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    org.neo4j.cli.Command.CommandType commandType1 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType2 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType3 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.ExecutionContext executionContext4 = null;
    try {
      io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommand nodeStoreWrapperCopyCommand5 = nodeStoreWrapperCopyCommandCommandProvider0.createCommand(
          executionContext4);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue(
        "'" + commandType1 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType1.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
  }

  @Test
  public void test1105() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1105");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    java.lang.String[] strArray4 = new java.lang.String[]{};
    try {
      int int5 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray4);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertNotNull(strArray4);
  }

  @Test
  public void test1106() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1106");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    try {
      org.neo4j.graphdb.GraphDatabaseService graphDatabaseService6 = databaseManagementServiceClusterImpl4.database(
          "hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1107() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1107");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    java.lang.String str9 = clusteringDBMSBuilder3.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder3.setMonitors(
        monitors12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder3.setMonitors(
        monitors14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "enterprise" + "'", str9, "enterprise");
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
  }

  @Test
  public void test1108() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1108");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    java.nio.file.Path path5 = null;
    java.nio.file.Path path6 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
    try {
      int int9 = enhancedBootstrapper0.start(path5, path6, strMap7, true);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNull(databaseManagementService4);
  }

  @Test
  public void test1109() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1109");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    try {
      java.util.List<java.lang.String> strList5 = databaseManagementServiceClusterImpl3.listDatabases();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1110() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1110");
    }
    java.time.Clock clock0 = null;
    org.neo4j.kernel.database.DatabaseIdRepository databaseIdRepository1 = null;
    io.github.onograph.dbms.DbmsManagerWatchTagImpl dbmsManagerWatchTagImpl2 = null;
    java.time.ZoneId zoneId3 = null;
    io.github.onograph.dbms.serverproc.BasicProcedureQuarantineDatabaseImpl basicProcedureQuarantineDatabaseImpl4 = io.github.onograph.dbms.serverproc.BasicProcedureQuarantineDatabaseImpl.stnleBasicProcedureQuarantineDatabaseImpl(
        clock0, databaseIdRepository1, dbmsManagerWatchTagImpl2, zoneId3);
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature5 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature6 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature7 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.kernel.api.procedure.Context context8 = null;
    org.neo4j.values.AnyValue anyValue9 = null;
    org.neo4j.values.AnyValue[] anyValueArray10 = new org.neo4j.values.AnyValue[]{anyValue9};
    org.neo4j.kernel.api.ResourceTracker resourceTracker11 = null;
    try {
      org.neo4j.collection.RawIterator<org.neo4j.values.AnyValue[], org.neo4j.internal.kernel.api.exceptions.ProcedureException> anyValueArrayRawIterator12 = basicProcedureQuarantineDatabaseImpl4.apply(
          context8, anyValueArray10, resourceTracker11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalArgumentException; message: *** Error: c3bc6648-f892-4d86-9614-b53ef18de3fb");
    } catch (java.lang.IllegalArgumentException e) {
    }
    org.junit.Assert.assertNotNull(basicProcedureQuarantineDatabaseImpl4);
    org.junit.Assert.assertNotNull(procedureSignature5);
    org.junit.Assert.assertNotNull(procedureSignature6);
    org.junit.Assert.assertNotNull(procedureSignature7);
    org.junit.Assert.assertNotNull(anyValueArray10);
  }

  @Test
  public void test1111() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1111");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    try {
      org.neo4j.graphdb.GraphDatabaseService graphDatabaseService9 = databaseManagementServiceClusterImpl7.database(
          "hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1112() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1112");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver5 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder6 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver5);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        "enterprise");
    java.nio.file.Path path9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder8.loadPropertiesFromFile(
        path9);
    java.nio.file.Path path11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder8.loadPropertiesFromFile(
        path11);
    java.lang.String str13 = clusteringDBMSBuilder8.getEdition();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "enterprise" + "'", str13, "enterprise");
  }

  @Test
  public void test1113() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1113");
    }
    java.time.Clock clock0 = null;
    org.neo4j.kernel.database.DatabaseIdRepository databaseIdRepository1 = null;
    io.github.onograph.dbms.DbmsManagerWatchTagImpl dbmsManagerWatchTagImpl2 = null;
    java.time.ZoneId zoneId3 = null;
    io.github.onograph.dbms.serverproc.BasicProcedureQuarantineDatabaseImpl basicProcedureQuarantineDatabaseImpl4 = io.github.onograph.dbms.serverproc.BasicProcedureQuarantineDatabaseImpl.clsrBasicProcedureQuarantineDatabaseImpl(
        clock0, databaseIdRepository1, dbmsManagerWatchTagImpl2, zoneId3);
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature5 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature6 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature7 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature8 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature9 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature10 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.kernel.api.procedure.Context context11 = null;
    org.neo4j.values.AnyValue[] anyValueArray12 = new org.neo4j.values.AnyValue[]{};
    org.neo4j.kernel.api.ResourceTracker resourceTracker13 = null;
    try {
      org.neo4j.collection.RawIterator<org.neo4j.values.AnyValue[], org.neo4j.internal.kernel.api.exceptions.ProcedureException> anyValueArrayRawIterator14 = basicProcedureQuarantineDatabaseImpl4.apply(
          context11, anyValueArray12, resourceTracker13);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalArgumentException; message: *** Error: fe8ab484-a650-4ba7-a59f-194832c36aaa");
    } catch (java.lang.IllegalArgumentException e) {
    }
    org.junit.Assert.assertNotNull(basicProcedureQuarantineDatabaseImpl4);
    org.junit.Assert.assertNotNull(procedureSignature5);
    org.junit.Assert.assertNotNull(procedureSignature6);
    org.junit.Assert.assertNotNull(procedureSignature7);
    org.junit.Assert.assertNotNull(procedureSignature8);
    org.junit.Assert.assertNotNull(procedureSignature9);
    org.junit.Assert.assertNotNull(procedureSignature10);
    org.junit.Assert.assertNotNull(anyValueArray12);
  }

  @Test
  public void test1114() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1114");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean2 = enhancedBootstrapper0.isRunning();
    int int3 = enhancedBootstrapper0.stop();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
  }

  @Test
  public void test1115() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1115");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener4 = null;
    try {
      databaseManagementServiceClusterImpl3.unregisterDatabaseEventListener(databaseEventListener4);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1116() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1116");
    }
    io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider commandGetServerIdCommandProvider0 = new io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider();
    org.neo4j.cli.Command.CommandType commandType1 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType2 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType3 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType4 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType5 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType6 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType7 = commandGetServerIdCommandProvider0.commandType();
    org.junit.Assert.assertTrue(
        "'" + commandType1 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType1.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType5 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType5.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType6 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType6.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType7 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType7.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
  }

  @Test
  public void test1117() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1117");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl5.startDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1118() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1118");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder1.setMonitors(
        monitors7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder1.addDatabaseListener(
        databaseEventListener9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
  }

  @Test
  public void test1119() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1119");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    try {
      databaseManagementServiceClusterImpl9.dropDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1120() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1120");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    try {
      databaseManagementServiceClusterImpl4.createDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1121() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1121");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver10);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder5.addURLAccessRule(
        "", uRLAccessRule13);
    org.neo4j.common.DependencyResolver dependencyResolver15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder14.setExternalDependencies(
        dependencyResolver15);
    org.neo4j.logging.LogProvider logProvider17 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder18 = clusteringDBMSBuilder16.setUserLogProvider(
        logProvider17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder18);
  }

  @Test
  public void test1122() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1122");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    try {
      databaseManagementServiceClusterImpl2.startDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1123() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1123");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    try {
      boolean boolean7 = databaseManagementServiceClusterImpl4.isWraeForSt("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1124() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1124");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    int int5 = enhancedBootstrapper0.stop();
    java.nio.file.Path path6 = null;
    java.nio.file.Path path7 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
    try {
      int int10 = enhancedBootstrapper0.start(path6, path7, strMap8, false);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
  }

  @Test
  public void test1125() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1125");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener6 = null;
    try {
      databaseManagementServiceClusterImpl3.unregisterDatabaseEventListener(databaseEventListener6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1126() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1126");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl5.shutdownDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1127() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1127");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "hi!");
    org.neo4j.logging.LogProvider logProvider8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder3.setUserLogProvider(
        logProvider8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder3.setMonitors(
        monitors10);
    org.neo4j.logging.LogProvider logProvider12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder3.setUserLogProvider(
        logProvider12);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
  }

  @Test
  public void test1128() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1128");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.setMonitors(
        monitors11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.setMonitors(
        monitors13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = clusteringDBMSBuilder14.setMonitors(
        monitors15);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder18 = clusteringDBMSBuilder14.setMonitors(
        monitors17);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule20 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder14.addURLAccessRule(
        "enterprise", uRLAccessRule20);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule23 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder24 = clusteringDBMSBuilder21.addURLAccessRule(
        "", uRLAccessRule23);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder18);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder21);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder24);
  }

  @Test
  public void test1129() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1129");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    boolean boolean1 = enhancedBootstrapper0.isRunning();
    java.lang.String[] strArray3 = new java.lang.String[]{""};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray3);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray3);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray3);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray3);
    try {
      int int8 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray3);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    org.junit.Assert.assertNotNull(strArray3);
  }

  @Test
  public void test1130() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1130");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder6.addURLAccessRule(
        "", uRLAccessRule10);
    org.neo4j.logging.LogProvider logProvider12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder6.setMonitors(
        monitors16);
    org.neo4j.logging.LogProvider logProvider18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider18);
    org.neo4j.common.DependencyResolver dependencyResolver20 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver20);
    org.neo4j.common.DependencyResolver dependencyResolver22 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder23 = clusteringDBMSBuilder21.setExternalDependencies(
        dependencyResolver22);
    org.neo4j.logging.LogProvider logProvider24 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder25 = clusteringDBMSBuilder23.setUserLogProvider(
        logProvider24);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder21);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder23);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder25);
  }

  @Test
  public void test1131() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1131");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder9.addDatabaseListener(
        databaseEventListener12);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder9.addURLAccessRule(
        "hi!", uRLAccessRule15);
    java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder18 = clusteringDBMSBuilder16.setConfigRaw(
          strMap17);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
  }

  @Test
  public void test1132() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1132");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder6.addURLAccessRule(
        "", uRLAccessRule10);
    org.neo4j.logging.LogProvider logProvider12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver14);
    java.lang.String str16 = clusteringDBMSBuilder6.getEdition();
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule18 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder19 = clusteringDBMSBuilder6.addURLAccessRule(
        "enterprise", uRLAccessRule18);
    org.neo4j.common.DependencyResolver dependencyResolver20 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder21 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver20);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "enterprise" + "'", str16, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder19);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder21);
  }

  @Test
  public void test1133() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1133");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    java.lang.String str11 = clusteringDBMSBuilder5.getEdition();
    org.neo4j.logging.LogProvider logProvider12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider12);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "hi!");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "enterprise" + "'", str11, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
  }

  @Test
  public void test1134() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1134");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    try {
      java.util.List<java.lang.String> strList10 = databaseManagementServiceClusterImpl9.listDatabases();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1135() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1135");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      boolean boolean8 = databaseManagementServiceClusterImpl5.isWraeForSt("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1136() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1136");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.monitoring.Monitors monitors6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder1.setMonitors(
        monitors6);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder1.addURLAccessRule(
        "enterprise", uRLAccessRule9);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder1.addURLAccessRule(
        "hi!", uRLAccessRule12);
    org.neo4j.logging.LogProvider logProvider14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
  }

  @Test
  public void test1137() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1137");
    }
    io.github.onograph.dbms.utils.TokenNamePropertyDTO tokenNamePropertyDTO2 = new io.github.onograph.dbms.utils.TokenNamePropertyDTO(
        "", "");
    java.lang.String str3 = tokenNamePropertyDTO2.getStrNp();
    java.lang.String str4 = tokenNamePropertyDTO2.getStrNt();
    java.lang.String str5 = tokenNamePropertyDTO2.getStrNt();
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
  }

  @Test
  public void test1138() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1138");
    }
    java.time.Clock clock0 = null;
    org.neo4j.kernel.database.DatabaseIdRepository databaseIdRepository1 = null;
    io.github.onograph.dbms.DbmsManagerWatchTagImpl dbmsManagerWatchTagImpl2 = null;
    java.time.ZoneId zoneId3 = null;
    io.github.onograph.dbms.serverproc.BasicProcedureQuarantineDatabaseImpl basicProcedureQuarantineDatabaseImpl4 = io.github.onograph.dbms.serverproc.BasicProcedureQuarantineDatabaseImpl.clsrBasicProcedureQuarantineDatabaseImpl(
        clock0, databaseIdRepository1, dbmsManagerWatchTagImpl2, zoneId3);
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature5 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature6 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature7 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature8 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature9 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature10 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature11 = basicProcedureQuarantineDatabaseImpl4.signature();
    java.lang.Class<?> wildcardClass12 = basicProcedureQuarantineDatabaseImpl4.getClass();
    org.junit.Assert.assertNotNull(basicProcedureQuarantineDatabaseImpl4);
    org.junit.Assert.assertNotNull(procedureSignature5);
    org.junit.Assert.assertNotNull(procedureSignature6);
    org.junit.Assert.assertNotNull(procedureSignature7);
    org.junit.Assert.assertNotNull(procedureSignature8);
    org.junit.Assert.assertNotNull(procedureSignature9);
    org.junit.Assert.assertNotNull(procedureSignature10);
    org.junit.Assert.assertNotNull(procedureSignature11);
    org.junit.Assert.assertNotNull(wildcardClass12);
  }

  @Test
  public void test1139() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1139");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder6.addURLAccessRule(
        "", uRLAccessRule10);
    org.neo4j.logging.LogProvider logProvider12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder6.setMonitors(
        monitors16);
    java.lang.String str18 = clusteringDBMSBuilder6.getEdition();
    try {
      io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl19 = clusteringDBMSBuilder6.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "enterprise" + "'", str18, "enterprise");
  }

  @Test
  public void test1140() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1140");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder7.setMonitors(
        monitors8);
    org.neo4j.logging.LogProvider logProvider10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder7.setUserLogProvider(
        logProvider10);
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService12 = databaseManagementServiceBuilder11.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
  }

  @Test
  public void test1141() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1141");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService2 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    java.lang.String[] strArray11 = new java.lang.String[]{"hi!", "hi!", "enterprise", "",
        "enterprise", "enterprise"};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray11);
    try {
      int int13 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray11);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNull(databaseManagementService2);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertNull(databaseManagementService4);
    org.junit.Assert.assertNotNull(strArray11);
  }

  @Test
  public void test1142() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1142");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    java.nio.file.Path path9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path9);
    org.neo4j.common.DependencyResolver dependencyResolver11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = databaseManagementServiceBuilder10.setExternalDependencies(
        dependencyResolver11);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = databaseManagementServiceBuilder10.addDatabaseListener(
        databaseEventListener13);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = databaseManagementServiceBuilder14.loadPropertiesFromFile(
        "hi!");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = databaseManagementServiceBuilder14.addURLAccessRule(
        "", uRLAccessRule18);
    java.lang.Class<?> wildcardClass20 = databaseManagementServiceBuilder14.getClass();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
    org.junit.Assert.assertNotNull(wildcardClass20);
  }

  @Test
  public void test1143() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1143");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder6.addURLAccessRule(
        "enterprise", uRLAccessRule12);
    java.nio.file.Path path14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        path14);
    java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder6.setConfigRaw(
          strMap16);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
  }

  @Test
  public void test1144() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1144");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder7.setExternalDependencies(
        dependencyResolver8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder9.setMonitors(
        monitors10);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder9.addURLAccessRule(
        "enterprise", uRLAccessRule13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
  }

  @Test
  public void test1145() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1145");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      org.neo4j.graphdb.GraphDatabaseService graphDatabaseService9 = databaseManagementServiceClusterImpl5.database(
          "");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1146() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1146");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl5.dropDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1147() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1147");
    }
    io.github.onograph.cluster.raft.module.dprot.ClusterStructureService clusterStructureService0 = null;
    org.neo4j.kernel.database.DatabaseIdRepository databaseIdRepository1 = null;
    io.github.onograph.dbms.serverproc.DatabaseStateProcedureClusterImpl databaseStateProcedureClusterImpl2 = new io.github.onograph.dbms.serverproc.DatabaseStateProcedureClusterImpl(
        clusterStructureService0, databaseIdRepository1);
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature3 = databaseStateProcedureClusterImpl2.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature4 = databaseStateProcedureClusterImpl2.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature5 = databaseStateProcedureClusterImpl2.signature();
    org.neo4j.kernel.api.procedure.Context context6 = null;
    org.neo4j.values.AnyValue[] anyValueArray7 = new org.neo4j.values.AnyValue[]{};
    org.neo4j.kernel.api.ResourceTracker resourceTracker8 = null;
    try {
      org.neo4j.collection.RawIterator<org.neo4j.values.AnyValue[], org.neo4j.internal.kernel.api.exceptions.ProcedureException> anyValueArrayRawIterator9 = databaseStateProcedureClusterImpl2.apply(
          context6, anyValueArray7, resourceTracker8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalArgumentException; message: Illegal input:[]");
    } catch (java.lang.IllegalArgumentException e) {
    }
    org.junit.Assert.assertNotNull(procedureSignature3);
    org.junit.Assert.assertNotNull(procedureSignature4);
    org.junit.Assert.assertNotNull(procedureSignature5);
    org.junit.Assert.assertNotNull(anyValueArray7);
  }

  @Test
  public void test1148() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1148");
    }
    io.github.onograph.dbms.utils.TokenNamePropertyDTO tokenNamePropertyDTO2 = new io.github.onograph.dbms.utils.TokenNamePropertyDTO(
        "enterprise", "");
    java.lang.String str3 = tokenNamePropertyDTO2.getStrNp();
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterprise" + "'", str3, "enterprise");
  }

  @Test
  public void test1149() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1149");
    }
    io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider commandGetServerIdCommandProvider0 = new io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider();
    org.neo4j.cli.Command.CommandType commandType1 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType2 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType3 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType4 = commandGetServerIdCommandProvider0.commandType();
    int int5 = commandGetServerIdCommandProvider0.getPriority();
    org.neo4j.cli.ExecutionContext executionContext6 = null;
    try {
      io.github.onograph.dbms.commands.CommandGetServerIdImpl commandGetServerIdImpl7 = commandGetServerIdCommandProvider0.createCommand(
          executionContext6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue(
        "'" + commandType1 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType1.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
  }

  @Test
  public void test1150() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1150");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl7.shutdown();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1151() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1151");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder6.addURLAccessRule(
        "", uRLAccessRule10);
    org.neo4j.logging.LogProvider logProvider12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder6.setMonitors(
        monitors16);
    org.neo4j.monitoring.Monitors monitors18 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder19 = clusteringDBMSBuilder17.setMonitors(
        monitors18);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener20 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder19.addDatabaseListener(
        databaseEventListener20);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder21);
  }

  @Test
  public void test1152() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1152");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder3.setMonitors(
        monitors11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder12.setMonitors(
        monitors13);
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService15 = clusteringDBMSBuilder12.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
  }

  @Test
  public void test1153() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1153");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder7.setMonitors(
        monitors8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder7.setMonitors(
        monitors10);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder7.loadPropertiesFromFile(
        "hi!");
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder7.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder7.setUserLogProvider(
        logProvider16);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule19 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder20 = clusteringDBMSBuilder7.addURLAccessRule(
        "hi!", uRLAccessRule19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder20);
  }

  @Test
  public void test1154() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1154");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction10 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction11 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv12 = null;
    metaUpgradeFlowAction11.accept(upgradeMetaEnv12);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = metaUpgradeFlowAction10.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction11);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv15 = null;
    metaUpgradeFlowAction10.accept(upgradeMetaEnv15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction17 = metaUpgradeFlowAction6.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction10);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction18 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv19 = null;
    metaUpgradeFlowAction18.accept(upgradeMetaEnv19);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer21 = metaUpgradeFlowAction17.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction18);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer22 = metaUpgradeFlowAction0.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction18);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction24 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv25 = null;
    metaUpgradeFlowAction24.accept(upgradeMetaEnv25);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction27 = metaUpgradeFlowAction23.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction24);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction28 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction29 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv30 = null;
    metaUpgradeFlowAction29.accept(upgradeMetaEnv30);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction32 = metaUpgradeFlowAction28.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction29);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction33 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction34 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv35 = null;
    metaUpgradeFlowAction34.accept(upgradeMetaEnv35);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction37 = metaUpgradeFlowAction33.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction34);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction38 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction39 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv40 = null;
    metaUpgradeFlowAction39.accept(upgradeMetaEnv40);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = metaUpgradeFlowAction38.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction39);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv43 = null;
    metaUpgradeFlowAction38.accept(upgradeMetaEnv43);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction45 = metaUpgradeFlowAction34.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction38);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction46 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv47 = null;
    metaUpgradeFlowAction46.accept(upgradeMetaEnv47);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer49 = metaUpgradeFlowAction45.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction46);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction50 = metaUpgradeFlowAction28.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction46);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction51 = metaUpgradeFlowAction27.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction50);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer52 = metaUpgradeFlowAction18.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction27);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction53 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction54 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv55 = null;
    metaUpgradeFlowAction54.accept(upgradeMetaEnv55);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction57 = metaUpgradeFlowAction53.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction54);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction58 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction59 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv60 = null;
    metaUpgradeFlowAction59.accept(upgradeMetaEnv60);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction62 = metaUpgradeFlowAction58.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction59);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction63 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction64 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv65 = null;
    metaUpgradeFlowAction64.accept(upgradeMetaEnv65);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction67 = metaUpgradeFlowAction63.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction64);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv68 = null;
    metaUpgradeFlowAction63.accept(upgradeMetaEnv68);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction70 = metaUpgradeFlowAction59.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction63);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction71 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv72 = null;
    metaUpgradeFlowAction71.accept(upgradeMetaEnv72);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer74 = metaUpgradeFlowAction70.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction71);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction75 = metaUpgradeFlowAction53.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction71);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv76 = null;
    metaUpgradeFlowAction75.accept(upgradeMetaEnv76);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction78 = metaUpgradeFlowAction27.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction75);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction79 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction80 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv81 = null;
    metaUpgradeFlowAction80.accept(upgradeMetaEnv81);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction83 = metaUpgradeFlowAction79.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction80);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction84 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction85 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv86 = null;
    metaUpgradeFlowAction85.accept(upgradeMetaEnv86);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction88 = metaUpgradeFlowAction84.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction85);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv89 = null;
    metaUpgradeFlowAction84.accept(upgradeMetaEnv89);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction91 = metaUpgradeFlowAction80.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction84);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction92 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv93 = null;
    metaUpgradeFlowAction92.accept(upgradeMetaEnv93);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer95 = metaUpgradeFlowAction91.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction92);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction96 = metaUpgradeFlowAction75.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction91);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv97 = null;
    metaUpgradeFlowAction91.accept(upgradeMetaEnv97);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction10);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction11);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction17);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction18);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer21);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction24);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction28);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction29);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction32);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction33);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction34);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction37);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction38);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction39);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction45);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction46);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer49);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction50);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction51);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer52);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction53);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction54);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction57);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction58);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction59);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction62);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction63);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction64);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction67);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction70);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction71);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer74);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction75);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction78);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction79);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction80);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction83);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction84);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction85);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction88);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction91);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction92);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer95);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction96);
  }

  @Test
  public void test1155() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1155");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver10);
    java.nio.file.Path path12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path12);
    java.nio.file.Path path14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider16);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule19 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder20 = clusteringDBMSBuilder17.addURLAccessRule(
        "enterprise", uRLAccessRule19);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule22 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder23 = clusteringDBMSBuilder20.addURLAccessRule(
        "enterprise", uRLAccessRule22);
    java.lang.Class<?> wildcardClass24 = clusteringDBMSBuilder20.getClass();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder20);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder23);
    org.junit.Assert.assertNotNull(wildcardClass24);
  }

  @Test
  public void test1156() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1156");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider11);
    java.nio.file.Path path13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder14.setMonitors(
        monitors15);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener17 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder18 = clusteringDBMSBuilder16.addDatabaseListener(
        databaseEventListener17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder18);
  }

  @Test
  public void test1157() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1157");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    org.neo4j.cli.Command.CommandType commandType1 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType2 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    int int3 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.ExecutionContext executionContext4 = null;
    try {
      io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommand nodeStoreWrapperCopyCommand5 = nodeStoreWrapperCopyCommandCommandProvider0.createCommand(
          executionContext4);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue(
        "'" + commandType1 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType1.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
  }

  @Test
  public void test1158() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1158");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.monitoring.Monitors monitors4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setMonitors(
        monitors4);
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver6);
    org.neo4j.common.DependencyResolver dependencyResolver8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver8);
    java.lang.String str10 = clusteringDBMSBuilder9.getEdition();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "enterprise" + "'", str10, "enterprise");
  }

  @Test
  public void test1159() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1159");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder6.addURLAccessRule(
        "", uRLAccessRule10);
    org.neo4j.logging.LogProvider logProvider12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver14);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder15.loadPropertiesFromFile(
        "hi!");
    org.neo4j.monitoring.Monitors monitors18 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder19 = clusteringDBMSBuilder17.setMonitors(
        monitors18);
    try {
      io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl20 = clusteringDBMSBuilder19.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder19);
  }

  @Test
  public void test1160() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1160");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.logging.LogProvider logProvider8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder7.setUserLogProvider(
        logProvider8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "hi!");
    java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder11.setConfigRaw(
          strMap12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
  }

  @Test
  public void test1161() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1161");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver10);
    java.nio.file.Path path12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path12);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder13.addDatabaseListener(
        databaseEventListener14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
  }

  @Test
  public void test1162() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1162");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    java.lang.String str6 = clusteringDBMSBuilder5.getEdition();
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "");
    java.lang.String str9 = clusteringDBMSBuilder8.getEdition();
    java.nio.file.Path path10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder8.loadPropertiesFromFile(
        path10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterprise" + "'", str6, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "enterprise" + "'", str9, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
  }

  @Test
  public void test1163() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1163");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = databaseManagementServiceBuilder7.addDatabaseListener(
        databaseEventListener8);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = databaseManagementServiceBuilder7.loadPropertiesFromFile(
        "");
    java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = databaseManagementServiceBuilder7.setConfigRaw(
          strMap12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
  }

  @Test
  public void test1164() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1164");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    try {
      org.neo4j.graphdb.GraphDatabaseService graphDatabaseService6 = databaseManagementServiceClusterImpl3.database(
          "");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1165() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1165");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv5 = null;
    metaUpgradeFlowAction0.accept(upgradeMetaEnv5);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction7 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction8 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv9 = null;
    metaUpgradeFlowAction8.accept(upgradeMetaEnv9);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction11 = metaUpgradeFlowAction7.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction8);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer12 = metaUpgradeFlowAction0.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction13 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv15 = null;
    metaUpgradeFlowAction14.accept(upgradeMetaEnv15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction17 = metaUpgradeFlowAction13.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction14);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction18 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction19 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv20 = null;
    metaUpgradeFlowAction19.accept(upgradeMetaEnv20);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = metaUpgradeFlowAction18.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction19);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = metaUpgradeFlowAction17.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction18);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv24 = null;
    metaUpgradeFlowAction18.accept(upgradeMetaEnv24);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction26 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction27 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv28 = null;
    metaUpgradeFlowAction27.accept(upgradeMetaEnv28);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction30 = metaUpgradeFlowAction26.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction27);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction31 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction32 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv33 = null;
    metaUpgradeFlowAction32.accept(upgradeMetaEnv33);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction35 = metaUpgradeFlowAction31.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction32);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv36 = null;
    metaUpgradeFlowAction31.accept(upgradeMetaEnv36);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction38 = metaUpgradeFlowAction27.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction31);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction39 = metaUpgradeFlowAction18.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction31);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction40 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction41 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv42 = null;
    metaUpgradeFlowAction41.accept(upgradeMetaEnv42);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction44 = metaUpgradeFlowAction40.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction41);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction45 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction46 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv47 = null;
    metaUpgradeFlowAction46.accept(upgradeMetaEnv47);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction49 = metaUpgradeFlowAction45.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction46);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction50 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction51 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv52 = null;
    metaUpgradeFlowAction51.accept(upgradeMetaEnv52);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction54 = metaUpgradeFlowAction50.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction51);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction55 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction56 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv57 = null;
    metaUpgradeFlowAction56.accept(upgradeMetaEnv57);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction59 = metaUpgradeFlowAction55.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction56);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv60 = null;
    metaUpgradeFlowAction55.accept(upgradeMetaEnv60);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction62 = metaUpgradeFlowAction51.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction55);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction63 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv64 = null;
    metaUpgradeFlowAction63.accept(upgradeMetaEnv64);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer66 = metaUpgradeFlowAction62.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction63);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction67 = metaUpgradeFlowAction45.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction63);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction68 = metaUpgradeFlowAction44.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction67);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction69 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction70 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv71 = null;
    metaUpgradeFlowAction70.accept(upgradeMetaEnv71);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction73 = metaUpgradeFlowAction69.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction70);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction74 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction75 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv76 = null;
    metaUpgradeFlowAction75.accept(upgradeMetaEnv76);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction78 = metaUpgradeFlowAction74.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction75);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv79 = null;
    metaUpgradeFlowAction74.accept(upgradeMetaEnv79);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction81 = metaUpgradeFlowAction70.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction74);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction82 = metaUpgradeFlowAction44.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction81);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction83 = metaUpgradeFlowAction18.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction81);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction84 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction83);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv85 = null;
    metaUpgradeFlowAction83.accept(upgradeMetaEnv85);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction7);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction8);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction11);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer12);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction13);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction17);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction18);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction19);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction26);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction30);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction31);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction32);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction35);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction38);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction39);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction40);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction41);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction44);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction45);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction46);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction49);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction50);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction51);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction54);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction55);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction56);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction59);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction62);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction63);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer66);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction67);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction68);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction69);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction70);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction73);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction74);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction75);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction78);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction81);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction82);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction83);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction84);
  }

  @Test
  public void test1166() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1166");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener6 = null;
    try {
      databaseManagementServiceClusterImpl5.unregisterDatabaseEventListener(databaseEventListener6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1167() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1167");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    try {
      databaseManagementServiceClusterImpl6.startDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1168() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1168");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver10);
    java.nio.file.Path path12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder13.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder13.setUserLogProvider(
        logProvider16);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule19 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder20 = clusteringDBMSBuilder13.addURLAccessRule(
        "hi!", uRLAccessRule19);
    java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder22 = clusteringDBMSBuilder13.setConfigRaw(
          strMap21);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder20);
  }

  @Test
  public void test1169() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1169");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    java.lang.String str11 = clusteringDBMSBuilder10.getEdition();
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder10.loadPropertiesFromFile(
        "");
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService14 = clusteringDBMSBuilder10.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "enterprise" + "'", str11, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
  }

  @Test
  public void test1170() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1170");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule12 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder6.addURLAccessRule(
        "hi!", uRLAccessRule12);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        "hi!");
    java.lang.String str16 = clusteringDBMSBuilder6.getEdition();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "enterprise" + "'", str16, "enterprise");
  }

  @Test
  public void test1171() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1171");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder6.addURLAccessRule(
        "", uRLAccessRule10);
    org.neo4j.logging.LogProvider logProvider12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder15.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener18 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder19 = clusteringDBMSBuilder15.addDatabaseListener(
        databaseEventListener18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder19.setMonitors(
        monitors20);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder21);
  }

  @Test
  public void test1172() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1172");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      org.neo4j.graphdb.GraphDatabaseService graphDatabaseService8 = databaseManagementServiceClusterImpl5.database(
          "");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1173() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1173");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "");
    java.nio.file.Path path10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path10);
    java.nio.file.Path path12 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path12);
    java.nio.file.Path path14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
  }

  @Test
  public void test1174() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1174");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    int int4 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log5 = enhancedBootstrapper0.getLog();
    int int6 = enhancedBootstrapper0.stop();
    int int7 = enhancedBootstrapper0.stop();
    boolean boolean8 = enhancedBootstrapper0.isRunning();
    int int9 = enhancedBootstrapper0.stop();
    boolean boolean10 = enhancedBootstrapper0.isRunning();
    java.lang.String[] strArray12 = new java.lang.String[]{"enterprise"};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray12);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray12);
    try {
      int int15 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray12);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertNotNull(log5);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertNotNull(strArray12);
  }

  @Test
  public void test1175() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1175");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    boolean boolean1 = enhancedBootstrapper0.isRunning();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService2 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    java.nio.file.Path path5 = null;
    java.nio.file.Path path6 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
    try {
      int int9 = enhancedBootstrapper0.start(path5, path6, strMap7, true);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    org.junit.Assert.assertNull(databaseManagementService2);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertNull(databaseManagementService4);
  }

  @Test
  public void test1176() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1176");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    org.neo4j.graphdb.config.Configuration configuration7 = null;
    try {
      databaseManagementServiceClusterImpl5.createDatabase("hi!", configuration7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1177() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1177");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    int int4 = enhancedBootstrapper0.stop();
    int int5 = enhancedBootstrapper0.stop();
    int int6 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService7 = enhancedBootstrapper0.getDatabaseManagementService();
    int int8 = enhancedBootstrapper0.stop();
    java.nio.file.Path path9 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
    try {
      int int11 = enhancedBootstrapper0.start(path9, strMap10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    org.junit.Assert.assertNull(databaseManagementService7);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
  }

  @Test
  public void test1178() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1178");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver10);
    java.nio.file.Path path12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder13.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder13.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = databaseManagementServiceBuilder17.loadPropertiesFromFile(
        "hi!");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
  }

  @Test
  public void test1179() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1179");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService5 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean6 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log7 = enhancedBootstrapper0.getLog();
    org.neo4j.logging.Log log8 = enhancedBootstrapper0.getLog();
    boolean boolean9 = enhancedBootstrapper0.isRunning();
    int int10 = enhancedBootstrapper0.stop();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertNull(databaseManagementService5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNotNull(log7);
    org.junit.Assert.assertNotNull(log8);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
  }

  @Test
  public void test1180() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1180");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl7.createDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1181() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1181");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "hi!");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener8);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = databaseManagementServiceBuilder9.loadPropertiesFromFile(
        "hi!");
    org.neo4j.monitoring.Monitors monitors12 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = databaseManagementServiceBuilder11.setMonitors(
        monitors12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
  }

  @Test
  public void test1182() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1182");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    java.lang.String str6 = clusteringDBMSBuilder3.getEdition();
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.setMonitors(
        monitors7);
    java.lang.String str9 = clusteringDBMSBuilder8.getEdition();
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder8.addURLAccessRule(
        "enterprise", uRLAccessRule11);
    java.lang.String str13 = clusteringDBMSBuilder8.getEdition();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterprise" + "'", str6, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "enterprise" + "'", str9, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "enterprise" + "'", str13, "enterprise");
  }

  @Test
  public void test1183() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1183");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    try {
      org.neo4j.graphdb.GraphDatabaseService graphDatabaseService7 = databaseManagementServiceClusterImpl5.database(
          "");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1184() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1184");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule3 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder4 = clusteringDBMSBuilder1.addURLAccessRule(
        "hi!", uRLAccessRule3);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder4.addURLAccessRule(
        "enterprise", uRLAccessRule6);
    java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = databaseManagementServiceBuilder7.setConfigRaw(
          strMap8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder4);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
  }

  @Test
  public void test1185() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1185");
    }
    io.github.onograph.server.EntryPointImpl entryPointImpl0 = new io.github.onograph.server.EntryPointImpl();
    org.neo4j.server.startup.EntryPoint.Priority priority1 = entryPointImpl0.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority2 = entryPointImpl0.getPriority();
    io.github.onograph.server.EntryPointImpl entryPointImpl3 = new io.github.onograph.server.EntryPointImpl();
    int int4 = entryPointImpl0.compareTo((org.neo4j.server.startup.EntryPoint) entryPointImpl3);
    org.neo4j.server.startup.EntryPoint.Priority priority5 = entryPointImpl0.getPriority();
    io.github.onograph.server.EntryPointImpl entryPointImpl6 = new io.github.onograph.server.EntryPointImpl();
    org.neo4j.server.startup.EntryPoint.Priority priority7 = entryPointImpl6.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority8 = entryPointImpl6.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority9 = entryPointImpl6.getPriority();
    int int10 = entryPointImpl0.compareTo((org.neo4j.server.startup.EntryPoint) entryPointImpl6);
    org.junit.Assert.assertTrue(
        "'" + priority1 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority1.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority2 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority2.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertTrue(
        "'" + priority5 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority5.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority7 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority7.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority8 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority8.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority9 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority9.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
  }

  @Test
  public void test1186() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1186");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl5.shutdown();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1187() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1187");
    }
    io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider commandGetServerIdCommandProvider0 = new io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider();
    org.neo4j.cli.Command.CommandType commandType1 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType2 = commandGetServerIdCommandProvider0.commandType();
    int int3 = commandGetServerIdCommandProvider0.getPriority();
    int int4 = commandGetServerIdCommandProvider0.getPriority();
    int int5 = commandGetServerIdCommandProvider0.getPriority();
    org.junit.Assert.assertTrue(
        "'" + commandType1 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType1.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
  }

  @Test
  public void test1188() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1188");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder6.addURLAccessRule(
        "", uRLAccessRule10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder11.setMonitors(
        monitors12);
    java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder11.setConfigRaw(
          strMap14);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
  }

  @Test
  public void test1189() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1189");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule10);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder11.loadPropertiesFromFile(
        "enterprise");
    java.nio.file.Path path14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder13.loadPropertiesFromFile(
        path14);
    java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder15.setConfigRaw(
          strMap16);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
  }

  @Test
  public void test1190() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1190");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.setUserLogProvider(
        logProvider13);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = clusteringDBMSBuilder14.addDatabaseListener(
        databaseEventListener15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
  }

  @Test
  public void test1191() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1191");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl8);
    try {
      databaseManagementServiceClusterImpl9.createDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1192() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1192");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv5 = null;
    metaUpgradeFlowAction0.accept(upgradeMetaEnv5);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction7 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction8 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv9 = null;
    metaUpgradeFlowAction8.accept(upgradeMetaEnv9);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction11 = metaUpgradeFlowAction7.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction8);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction12 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction13 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv14 = null;
    metaUpgradeFlowAction13.accept(upgradeMetaEnv14);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction16 = metaUpgradeFlowAction12.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction13);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction17 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction18 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv19 = null;
    metaUpgradeFlowAction18.accept(upgradeMetaEnv19);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction21 = metaUpgradeFlowAction17.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction18);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv24 = null;
    metaUpgradeFlowAction23.accept(upgradeMetaEnv24);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction26 = metaUpgradeFlowAction22.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction23);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv27 = null;
    metaUpgradeFlowAction22.accept(upgradeMetaEnv27);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction29 = metaUpgradeFlowAction18.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction22);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction30 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv31 = null;
    metaUpgradeFlowAction30.accept(upgradeMetaEnv31);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer33 = metaUpgradeFlowAction29.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction30);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction34 = metaUpgradeFlowAction12.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction30);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction35 = metaUpgradeFlowAction11.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction34);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction36 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer37 = metaUpgradeFlowAction35.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction36);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction38 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction39 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv40 = null;
    metaUpgradeFlowAction39.accept(upgradeMetaEnv40);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = metaUpgradeFlowAction38.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction39);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction43 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction44 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv45 = null;
    metaUpgradeFlowAction44.accept(upgradeMetaEnv45);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction47 = metaUpgradeFlowAction43.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction44);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction48 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction49 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv50 = null;
    metaUpgradeFlowAction49.accept(upgradeMetaEnv50);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction52 = metaUpgradeFlowAction48.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction49);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction53 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction54 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv55 = null;
    metaUpgradeFlowAction54.accept(upgradeMetaEnv55);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction57 = metaUpgradeFlowAction53.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction54);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv58 = null;
    metaUpgradeFlowAction53.accept(upgradeMetaEnv58);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction60 = metaUpgradeFlowAction49.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction53);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction61 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv62 = null;
    metaUpgradeFlowAction61.accept(upgradeMetaEnv62);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer64 = metaUpgradeFlowAction60.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction61);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction65 = metaUpgradeFlowAction43.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction61);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction66 = metaUpgradeFlowAction42.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction65);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction67 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer68 = metaUpgradeFlowAction66.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction67);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer69 = metaUpgradeFlowAction36.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction67);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction70 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction71 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv72 = null;
    metaUpgradeFlowAction71.accept(upgradeMetaEnv72);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction74 = metaUpgradeFlowAction70.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction71);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction75 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction76 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv77 = null;
    metaUpgradeFlowAction76.accept(upgradeMetaEnv77);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction79 = metaUpgradeFlowAction75.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction76);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv80 = null;
    metaUpgradeFlowAction75.accept(upgradeMetaEnv80);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction82 = metaUpgradeFlowAction71.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction75);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer83 = upgradeMetaEnvConsumer69.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction75);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction84 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction75);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv85 = null;
    metaUpgradeFlowAction84.accept(upgradeMetaEnv85);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction7);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction8);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction11);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction12);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction13);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction16);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction17);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction18);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction21);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction26);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction29);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction30);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer33);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction34);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction35);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction36);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer37);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction38);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction39);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction43);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction44);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction47);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction48);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction49);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction52);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction53);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction54);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction57);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction60);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction61);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer64);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction65);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction66);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction67);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer68);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer69);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction70);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction71);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction74);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction75);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction76);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction79);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction82);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer83);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction84);
  }

  @Test
  public void test1193() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1193");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl5.startDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1194() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1194");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.setMonitors(
        monitors11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.setMonitors(
        monitors13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = clusteringDBMSBuilder14.setMonitors(
        monitors15);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder18 = clusteringDBMSBuilder14.setMonitors(
        monitors17);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule20 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder14.addURLAccessRule(
        "enterprise", uRLAccessRule20);
    org.neo4j.logging.LogProvider logProvider22 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder23 = clusteringDBMSBuilder14.setUserLogProvider(
        logProvider22);
    org.neo4j.common.DependencyResolver dependencyResolver24 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder25 = clusteringDBMSBuilder14.setExternalDependencies(
        dependencyResolver24);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder18);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder21);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder23);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder25);
  }

  @Test
  public void test1195() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1195");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl9.dropDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1196() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1196");
    }
    io.github.onograph.dbms.utils.TokenNamePropertyDTO tokenNamePropertyDTO2 = new io.github.onograph.dbms.utils.TokenNamePropertyDTO(
        "enterprise", "hi!");
    java.lang.String str3 = tokenNamePropertyDTO2.getStrNt();
    java.lang.String str4 = tokenNamePropertyDTO2.getStrNt();
    java.lang.String str5 = tokenNamePropertyDTO2.getStrNp();
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterprise" + "'", str5, "enterprise");
  }

  @Test
  public void test1197() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1197");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.common.DependencyResolver dependencyResolver2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver2);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener4 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder5 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener4);
    org.neo4j.monitoring.Monitors monitors6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.setMonitors(
        monitors6);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider12);
    org.neo4j.logging.LogProvider logProvider14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider14);
    org.neo4j.common.DependencyResolver dependencyResolver16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder9.setExternalDependencies(
        dependencyResolver16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
  }

  @Test
  public void test1198() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1198");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider16);
    java.nio.file.Path path18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        path18);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    java.lang.String str22 = clusteringDBMSBuilder9.getEdition();
    java.nio.file.Path path23 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder24 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        path23);
    org.neo4j.common.DependencyResolver dependencyResolver25 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder26 = clusteringDBMSBuilder9.setExternalDependencies(
        dependencyResolver25);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener27 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder28 = clusteringDBMSBuilder26.addDatabaseListener(
        databaseEventListener27);
    java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder30 = clusteringDBMSBuilder28.setConfigRaw(
          strMap29);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder21);
    org.junit.Assert.assertEquals("'" + str22 + "' != '" + "enterprise" + "'", str22, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder24);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder26);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder28);
  }

  @Test
  public void test1199() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1199");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl9.startDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1200() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1200");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    int int4 = enhancedBootstrapper0.stop();
    int int5 = enhancedBootstrapper0.stop();
    boolean boolean6 = enhancedBootstrapper0.isRunning();
    java.lang.String[] strArray9 = new java.lang.String[]{"enterprise", "enterprise"};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray9);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray9);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray9);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray9);
    try {
      int int14 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray9);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNotNull(strArray9);
  }

  @Test
  public void test1201() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1201");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    java.lang.String str10 = clusteringDBMSBuilder5.getEdition();
    java.nio.file.Path path11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path11);
    java.nio.file.Path path13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder12.loadPropertiesFromFile(
        path13);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = databaseManagementServiceBuilder14.addDatabaseListener(
        databaseEventListener15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "enterprise" + "'", str10, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
  }

  @Test
  public void test1202() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1202");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    int int4 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log5 = enhancedBootstrapper0.getLog();
    int int6 = enhancedBootstrapper0.stop();
    java.nio.file.Path path7 = null;
    java.nio.file.Path path8 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
    try {
      int int11 = enhancedBootstrapper0.start(path7, path8, strMap9, false);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertNotNull(log5);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
  }

  @Test
  public void test1203() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1203");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    int int4 = enhancedBootstrapper0.stop();
    int int5 = enhancedBootstrapper0.stop();
    int int6 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService7 = enhancedBootstrapper0.getDatabaseManagementService();
    java.nio.file.Path path8 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
    try {
      int int10 = enhancedBootstrapper0.start(path8, strMap9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    org.junit.Assert.assertNull(databaseManagementService7);
  }

  @Test
  public void test1204() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1204");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder7.setUserLogProvider(
        logProvider8);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder9.addDatabaseListener(
        databaseEventListener10);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = databaseManagementServiceBuilder11.addURLAccessRule(
        "enterprise", uRLAccessRule13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
  }

  @Test
  public void test1205() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1205");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction10 = metaUpgradeFlowAction4.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction5);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv11 = null;
    metaUpgradeFlowAction5.accept(upgradeMetaEnv11);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction13 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv15 = null;
    metaUpgradeFlowAction14.accept(upgradeMetaEnv15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction17 = metaUpgradeFlowAction13.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction14);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction18 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction19 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv20 = null;
    metaUpgradeFlowAction19.accept(upgradeMetaEnv20);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = metaUpgradeFlowAction18.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction19);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv23 = null;
    metaUpgradeFlowAction18.accept(upgradeMetaEnv23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction25 = metaUpgradeFlowAction14.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction18);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction26 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction27 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv28 = null;
    metaUpgradeFlowAction27.accept(upgradeMetaEnv28);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction30 = metaUpgradeFlowAction26.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction27);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction31 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction32 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv33 = null;
    metaUpgradeFlowAction32.accept(upgradeMetaEnv33);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction35 = metaUpgradeFlowAction31.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction32);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv36 = null;
    metaUpgradeFlowAction31.accept(upgradeMetaEnv36);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction38 = metaUpgradeFlowAction27.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction31);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction39 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv40 = null;
    metaUpgradeFlowAction39.accept(upgradeMetaEnv40);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer42 = metaUpgradeFlowAction38.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction39);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer43 = metaUpgradeFlowAction25.andThen(
        upgradeMetaEnvConsumer42);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv44 = null;
    metaUpgradeFlowAction25.accept(upgradeMetaEnv44);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction46 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction25);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction47 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction48 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv49 = null;
    metaUpgradeFlowAction48.accept(upgradeMetaEnv49);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction51 = metaUpgradeFlowAction47.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction48);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction52 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction53 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv54 = null;
    metaUpgradeFlowAction53.accept(upgradeMetaEnv54);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction56 = metaUpgradeFlowAction52.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction53);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction57 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction58 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv59 = null;
    metaUpgradeFlowAction58.accept(upgradeMetaEnv59);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction61 = metaUpgradeFlowAction57.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction58);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv62 = null;
    metaUpgradeFlowAction57.accept(upgradeMetaEnv62);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction64 = metaUpgradeFlowAction53.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction57);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction65 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv66 = null;
    metaUpgradeFlowAction65.accept(upgradeMetaEnv66);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer68 = metaUpgradeFlowAction64.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction65);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction69 = metaUpgradeFlowAction47.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction65);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv70 = null;
    metaUpgradeFlowAction69.accept(upgradeMetaEnv70);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction72 = metaUpgradeFlowAction25.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction69);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction73 = null;
    try {
      io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction74 = metaUpgradeFlowAction25.andMetaUpgradeFlowAction(
          metaUpgradeFlowAction73);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction10);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction13);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction17);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction18);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction19);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction25);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction26);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction30);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction31);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction32);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction35);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction38);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction39);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer42);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer43);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction46);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction47);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction48);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction51);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction52);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction53);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction56);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction57);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction58);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction61);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction64);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction65);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer68);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction69);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction72);
  }

  @Test
  public void test1206() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1206");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.monitoring.Monitors monitors4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setMonitors(
        monitors4);
    java.lang.String str6 = clusteringDBMSBuilder1.getEdition();
    java.lang.String str7 = clusteringDBMSBuilder1.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterprise" + "'", str6, "enterprise");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "enterprise" + "'", str7, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
  }

  @Test
  public void test1207() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1207");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder6.addURLAccessRule(
        "", uRLAccessRule10);
    org.neo4j.logging.LogProvider logProvider12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder15.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener18 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder19 = clusteringDBMSBuilder15.addDatabaseListener(
        databaseEventListener18);
    org.neo4j.common.DependencyResolver dependencyResolver20 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder21 = clusteringDBMSBuilder19.setExternalDependencies(
        dependencyResolver20);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder19);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder21);
  }

  @Test
  public void test1208() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1208");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver6);
    java.lang.String str8 = clusteringDBMSBuilder5.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver9);
    java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.setConfigRaw(
          strMap11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "enterprise" + "'", str8, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
  }

  @Test
  public void test1209() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1209");
    }
    io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider commandGetServerIdCommandProvider0 = new io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider();
    int int1 = commandGetServerIdCommandProvider0.getPriority();
    int int2 = commandGetServerIdCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType3 = commandGetServerIdCommandProvider0.commandType();
    int int4 = commandGetServerIdCommandProvider0.getPriority();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
  }

  @Test
  public void test1210() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1210");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction10 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction11 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv12 = null;
    metaUpgradeFlowAction11.accept(upgradeMetaEnv12);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = metaUpgradeFlowAction10.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction11);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction15 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction16 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv17 = null;
    metaUpgradeFlowAction16.accept(upgradeMetaEnv17);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction19 = metaUpgradeFlowAction15.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction16);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv20 = null;
    metaUpgradeFlowAction15.accept(upgradeMetaEnv20);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = metaUpgradeFlowAction11.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv24 = null;
    metaUpgradeFlowAction23.accept(upgradeMetaEnv24);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer26 = metaUpgradeFlowAction22.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction27 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction28 = metaUpgradeFlowAction4.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction27);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction29 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction30 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv31 = null;
    metaUpgradeFlowAction30.accept(upgradeMetaEnv31);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction33 = metaUpgradeFlowAction29.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction30);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction34 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction35 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv36 = null;
    metaUpgradeFlowAction35.accept(upgradeMetaEnv36);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction38 = metaUpgradeFlowAction34.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction35);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv39 = null;
    metaUpgradeFlowAction34.accept(upgradeMetaEnv39);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction41 = metaUpgradeFlowAction30.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction34);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = metaUpgradeFlowAction4.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction41);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction43 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction44 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv45 = null;
    metaUpgradeFlowAction44.accept(upgradeMetaEnv45);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction47 = metaUpgradeFlowAction43.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction44);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction48 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction49 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv50 = null;
    metaUpgradeFlowAction49.accept(upgradeMetaEnv50);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction52 = metaUpgradeFlowAction48.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction49);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction53 = metaUpgradeFlowAction47.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction48);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer54 = metaUpgradeFlowAction42.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction48);
    java.lang.Class<?> wildcardClass55 = metaUpgradeFlowAction42.getClass();
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction10);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction11);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction15);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction16);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction19);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer26);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction28);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction29);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction30);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction33);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction34);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction35);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction38);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction41);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction43);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction44);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction47);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction48);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction49);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction52);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction53);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer54);
    org.junit.Assert.assertNotNull(wildcardClass55);
  }

  @Test
  public void test1211() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1211");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder6.addURLAccessRule(
        "", uRLAccessRule10);
    org.neo4j.logging.LogProvider logProvider12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder6.setMonitors(
        monitors16);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder6.addDatabaseListener(
        databaseEventListener18);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
  }

  @Test
  public void test1212() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1212");
    }
    java.lang.String[] strArray2 = new java.lang.String[]{"enterprise", "enterprise"};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray2);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray2);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray2);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray2);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray2);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray2);
    try {
      io.github.onograph.server.EntryPointImpl.startBootstrapper(strArray2);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNotNull(strArray2);
  }

  @Test
  public void test1213() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1213");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    try {
      databaseManagementServiceClusterImpl3.shutdown();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1214() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1214");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.monitoring.Monitors monitors11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder6.setMonitors(
        monitors11);
    java.util.Map<java.lang.String, java.lang.String> strMap13 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = databaseManagementServiceBuilder12.setConfigRaw(
          strMap13);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
  }

  @Test
  public void test1215() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1215");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    java.lang.String str11 = clusteringDBMSBuilder5.getEdition();
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder5.addURLAccessRule(
        "", uRLAccessRule13);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule16);
    java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder19 = clusteringDBMSBuilder17.setConfigRaw(
          strMap18);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "enterprise" + "'", str11, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
  }

  @Test
  public void test1216() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1216");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder7.setMonitors(
        monitors8);
    org.neo4j.logging.LogProvider logProvider10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder7.setUserLogProvider(
        logProvider10);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder7.loadPropertiesFromFile(
        "hi!");
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder7.loadPropertiesFromFile(
        "");
    java.lang.String str16 = clusteringDBMSBuilder15.getEdition();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "enterprise" + "'", str16, "enterprise");
  }

  @Test
  public void test1217() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1217");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder7.setMonitors(
        monitors8);
    org.neo4j.logging.LogProvider logProvider10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder7.setUserLogProvider(
        logProvider10);
    org.neo4j.common.DependencyResolver dependencyResolver12 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = databaseManagementServiceBuilder11.setExternalDependencies(
        dependencyResolver12);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = databaseManagementServiceBuilder13.addDatabaseListener(
        databaseEventListener14);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule17 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder18 = databaseManagementServiceBuilder15.addURLAccessRule(
        "enterprise", uRLAccessRule17);
    java.lang.Class<?> wildcardClass19 = databaseManagementServiceBuilder18.getClass();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder18);
    org.junit.Assert.assertNotNull(wildcardClass19);
  }

  @Test
  public void test1218() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1218");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    int int4 = enhancedBootstrapper0.stop();
    java.lang.String[] strArray6 = new java.lang.String[]{""};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray6);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray6);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray6);
    try {
      int int10 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray6);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertNotNull(strArray6);
  }

  @Test
  public void test1219() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1219");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    int int5 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService6 = enhancedBootstrapper0.getDatabaseManagementService();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNull(databaseManagementService4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertNull(databaseManagementService6);
  }

  @Test
  public void test1220() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1220");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    try {
      databaseManagementServiceClusterImpl8.dropDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1221() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1221");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl8);
    try {
      databaseManagementServiceClusterImpl9.dropDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1222() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1222");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    boolean boolean4 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log5 = enhancedBootstrapper0.getLog();
    java.nio.file.Path path6 = null;
    java.nio.file.Path path7 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
    try {
      int int10 = enhancedBootstrapper0.start(path6, path7, strMap8, false);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(log5);
  }

  @Test
  public void test1223() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1223");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.setMonitors(
        monitors11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.setMonitors(
        monitors13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = clusteringDBMSBuilder14.setMonitors(
        monitors15);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder18 = clusteringDBMSBuilder14.setMonitors(
        monitors17);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule20 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder14.addURLAccessRule(
        "enterprise", uRLAccessRule20);
    java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder23 = clusteringDBMSBuilder21.setConfigRaw(
          strMap22);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder18);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder21);
  }

  @Test
  public void test1224() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1224");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    try {
      databaseManagementServiceClusterImpl4.shutdown();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1225() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1225");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    try {
      databaseManagementServiceClusterImpl3.dropDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1226() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1226");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      java.util.List<java.lang.String> strList10 = databaseManagementServiceClusterImpl5.listDatabases();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1227() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1227");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    try {
      databaseManagementServiceClusterImpl2.createDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1228() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1228");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider16);
    java.nio.file.Path path18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        path18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder9.setMonitors(
        monitors20);
    org.neo4j.logging.LogProvider logProvider22 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder23 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider22);
    org.neo4j.common.DependencyResolver dependencyResolver24 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder25 = clusteringDBMSBuilder9.setExternalDependencies(
        dependencyResolver24);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder21);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder23);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder25);
  }

  @Test
  public void test1229() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1229");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.monitoring.Monitors monitors4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setMonitors(
        monitors4);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        "hi!");
    org.neo4j.common.DependencyResolver dependencyResolver8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder7.setExternalDependencies(
        dependencyResolver8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
  }

  @Test
  public void test1230() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1230");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    java.lang.String str6 = clusteringDBMSBuilder3.getEdition();
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.setMonitors(
        monitors7);
    java.lang.String str9 = clusteringDBMSBuilder8.getEdition();
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder8.loadPropertiesFromFile(
        "");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterprise" + "'", str6, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "enterprise" + "'", str9, "enterprise");
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
  }

  @Test
  public void test1231() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1231");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder9.setConfigRaw(
          strMap12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
  }

  @Test
  public void test1232() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1232");
    }
    io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider commandGetServerIdCommandProvider0 = new io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider();
    int int1 = commandGetServerIdCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType2 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType3 = commandGetServerIdCommandProvider0.commandType();
    int int4 = commandGetServerIdCommandProvider0.getPriority();
    int int5 = commandGetServerIdCommandProvider0.getPriority();
    int int6 = commandGetServerIdCommandProvider0.getPriority();
    int int7 = commandGetServerIdCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType8 = commandGetServerIdCommandProvider0.commandType();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType8 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType8.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
  }

  @Test
  public void test1233() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1233");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    try {
      databaseManagementServiceClusterImpl4.shutdownDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1234() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1234");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    boolean boolean1 = enhancedBootstrapper0.isRunning();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService2 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log5 = enhancedBootstrapper0.getLog();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService6 = enhancedBootstrapper0.getDatabaseManagementService();
    org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    org.junit.Assert.assertNull(databaseManagementService2);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertNull(databaseManagementService4);
    org.junit.Assert.assertNotNull(log5);
    org.junit.Assert.assertNull(databaseManagementService6);
  }

  @Test
  public void test1235() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1235");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder9.setExternalDependencies(
        dependencyResolver14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
  }

  @Test
  public void test1236() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1236");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder5.setMonitors(
        monitors9);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener11);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.loadPropertiesFromFile(
        "hi!");
    org.neo4j.logging.LogProvider logProvider15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder14.setUserLogProvider(
        logProvider15);
    org.neo4j.logging.LogProvider logProvider17 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder18 = clusteringDBMSBuilder14.setUserLogProvider(
        logProvider17);
    java.nio.file.Path path19 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder20 = clusteringDBMSBuilder18.loadPropertiesFromFile(
        path19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder18);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder20);
  }

  @Test
  public void test1237() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1237");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction10 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction11 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv12 = null;
    metaUpgradeFlowAction11.accept(upgradeMetaEnv12);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = metaUpgradeFlowAction10.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction11);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction15 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction16 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv17 = null;
    metaUpgradeFlowAction16.accept(upgradeMetaEnv17);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction19 = metaUpgradeFlowAction15.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction16);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv20 = null;
    metaUpgradeFlowAction15.accept(upgradeMetaEnv20);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = metaUpgradeFlowAction11.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv24 = null;
    metaUpgradeFlowAction23.accept(upgradeMetaEnv24);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer26 = metaUpgradeFlowAction22.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction27 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction28 = metaUpgradeFlowAction4.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction27);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction29 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction30 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv31 = null;
    metaUpgradeFlowAction30.accept(upgradeMetaEnv31);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction33 = metaUpgradeFlowAction29.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction30);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction34 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction35 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv36 = null;
    metaUpgradeFlowAction35.accept(upgradeMetaEnv36);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction38 = metaUpgradeFlowAction34.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction35);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv39 = null;
    metaUpgradeFlowAction34.accept(upgradeMetaEnv39);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction41 = metaUpgradeFlowAction30.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction34);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = metaUpgradeFlowAction4.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction41);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction43 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction44 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv45 = null;
    metaUpgradeFlowAction44.accept(upgradeMetaEnv45);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction47 = metaUpgradeFlowAction43.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction44);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction48 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction49 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv50 = null;
    metaUpgradeFlowAction49.accept(upgradeMetaEnv50);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction52 = metaUpgradeFlowAction48.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction49);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction53 = metaUpgradeFlowAction47.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction48);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer54 = metaUpgradeFlowAction42.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction48);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv55 = null;
    metaUpgradeFlowAction48.accept(upgradeMetaEnv55);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction10);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction11);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction15);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction16);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction19);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer26);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction28);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction29);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction30);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction33);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction34);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction35);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction38);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction41);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction43);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction44);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction47);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction48);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction49);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction52);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction53);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer54);
  }

  @Test
  public void test1238() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1238");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl6.shutdownDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1239() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1239");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.common.DependencyResolver dependencyResolver2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver2);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener4 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder5 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener4);
    java.nio.file.Path path6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path6);
    java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder3.setConfigRaw(
          strMap8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
  }

  @Test
  public void test1240() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1240");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log2 = enhancedBootstrapper0.getLog();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService5 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean6 = enhancedBootstrapper0.isRunning();
    int int7 = enhancedBootstrapper0.stop();
    java.lang.String[] strArray9 = new java.lang.String[]{""};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray9);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray9);
    try {
      int int12 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray9);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNotNull(log2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertNull(databaseManagementService5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    org.junit.Assert.assertNotNull(strArray9);
  }

  @Test
  public void test1241() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1241");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.logging.LogProvider logProvider11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
  }

  @Test
  public void test1242() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1242");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    int int1 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int2 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int3 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType4 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType5 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType6 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType7 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    int int8 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int9 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.ExecutionContext executionContext10 = null;
    try {
      io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommand nodeStoreWrapperCopyCommand11 = nodeStoreWrapperCopyCommandCommandProvider0.createCommand(
          executionContext10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType5 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType5.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType6 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType6.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType7 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType7.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
  }

  @Test
  public void test1243() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1243");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.setUserLogProvider(
        logProvider11);
    try {
      io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl13 = clusteringDBMSBuilder12.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
  }

  @Test
  public void test1244() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1244");
    }
    io.github.onograph.dbms.utils.TokenNamePropertyDTO tokenNamePropertyDTO2 = new io.github.onograph.dbms.utils.TokenNamePropertyDTO(
        "enterprise", "hi!");
    java.lang.String str3 = tokenNamePropertyDTO2.getStrNp();
    java.lang.String str4 = tokenNamePropertyDTO2.getStrNp();
    java.lang.String str5 = tokenNamePropertyDTO2.getStrNt();
    java.lang.String str6 = tokenNamePropertyDTO2.getStrNp();
    java.lang.String str7 = tokenNamePropertyDTO2.getStrNt();
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterprise" + "'", str3, "enterprise");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterprise" + "'", str6, "enterprise");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
  }

  @Test
  public void test1245() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1245");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.monitoring.Monitors monitors4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setMonitors(
        monitors4);
    java.lang.String str6 = clusteringDBMSBuilder5.getEdition();
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder8.addDatabaseListener(
        databaseEventListener9);
    java.lang.Class<?> wildcardClass11 = clusteringDBMSBuilder8.getClass();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterprise" + "'", str6, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(wildcardClass11);
  }

  @Test
  public void test1246() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1246");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver10);
    java.nio.file.Path path12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path12);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
  }

  @Test
  public void test1247() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1247");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.logging.LogProvider logProvider8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder7.setUserLogProvider(
        logProvider8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "");
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.monitoring.Monitors monitors14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder13.setMonitors(
        monitors14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
  }

  @Test
  public void test1248() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1248");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule10);
    java.lang.String str12 = clusteringDBMSBuilder3.getEdition();
    org.neo4j.logging.LogProvider logProvider13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder3.setUserLogProvider(
        logProvider13);
    java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = databaseManagementServiceBuilder14.setConfigRaw(
          strMap15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "enterprise" + "'", str12, "enterprise");
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
  }

  @Test
  public void test1249() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1249");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log2 = enhancedBootstrapper0.getLog();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService5 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean6 = enhancedBootstrapper0.isRunning();
    int int7 = enhancedBootstrapper0.stop();
    java.nio.file.Path path8 = null;
    java.nio.file.Path path9 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
    try {
      int int12 = enhancedBootstrapper0.start(path8, path9, strMap10, false);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNotNull(log2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertNull(databaseManagementService5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
  }

  @Test
  public void test1250() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1250");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl8);
    try {
      databaseManagementServiceClusterImpl9.dropDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1251() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1251");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    try {
      java.util.List<java.lang.String> strList6 = databaseManagementServiceClusterImpl5.listDatabases();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1252() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1252");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver10);
    java.nio.file.Path path12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path12);
    java.nio.file.Path path14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider16);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule19 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder20 = clusteringDBMSBuilder17.addURLAccessRule(
        "enterprise", uRLAccessRule19);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule22 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder23 = clusteringDBMSBuilder20.addURLAccessRule(
        "enterprise", uRLAccessRule22);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule25 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder26 = clusteringDBMSBuilder20.addURLAccessRule(
        "", uRLAccessRule25);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder20);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder23);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder26);
  }

  @Test
  public void test1253() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1253");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    java.lang.String str6 = clusteringDBMSBuilder3.getEdition();
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.setMonitors(
        monitors7);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder8.loadPropertiesFromFile(
        "hi!");
    java.lang.String str11 = clusteringDBMSBuilder8.getEdition();
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService12 = clusteringDBMSBuilder8.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterprise" + "'", str6, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "enterprise" + "'", str11, "enterprise");
  }

  @Test
  public void test1254() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1254");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    int int1 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType2 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    int int3 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int4 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.ExecutionContext executionContext5 = null;
    try {
      io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommand nodeStoreWrapperCopyCommand6 = nodeStoreWrapperCopyCommandCommandProvider0.createCommand(
          executionContext5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
  }

  @Test
  public void test1255() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1255");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule10);
    java.lang.String str12 = clusteringDBMSBuilder3.getEdition();
    org.neo4j.logging.LogProvider logProvider13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder3.setUserLogProvider(
        logProvider13);
    java.nio.file.Path path15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path15);
    java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder18 = clusteringDBMSBuilder3.setConfigRaw(
          strMap17);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "enterprise" + "'", str12, "enterprise");
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
  }

  @Test
  public void test1256() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1256");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    boolean boolean4 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log5 = enhancedBootstrapper0.getLog();
    org.neo4j.logging.Log log6 = enhancedBootstrapper0.getLog();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(log5);
    org.junit.Assert.assertNotNull(log6);
  }

  @Test
  public void test1257() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1257");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "");
    java.nio.file.Path path10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path10);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder5.addURLAccessRule(
        "", uRLAccessRule13);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder14.loadPropertiesFromFile(
        "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
  }

  @Test
  public void test1258() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1258");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        "hi!");
    org.neo4j.common.DependencyResolver dependencyResolver11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver11);
    java.nio.file.Path path13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        path13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
  }

  @Test
  public void test1259() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1259");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService5 = enhancedBootstrapper0.getDatabaseManagementService();
    java.lang.String[] strArray8 = new java.lang.String[]{"enterprise", "enterprise"};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray8);
    try {
      int int10 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray8);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNull(databaseManagementService4);
    org.junit.Assert.assertNull(databaseManagementService5);
    org.junit.Assert.assertNotNull(strArray8);
  }

  @Test
  public void test1260() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1260");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    try {
      databaseManagementServiceClusterImpl2.createDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1261() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1261");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    try {
      databaseManagementServiceClusterImpl3.shutdown();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1262() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1262");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    try {
      databaseManagementServiceClusterImpl7.shutdown();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1263() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1263");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.common.DependencyResolver dependencyResolver2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver2);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener4 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder5 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener4);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder3.addURLAccessRule(
        "hi!", uRLAccessRule11);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder12.addURLAccessRule(
        "", uRLAccessRule14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
  }

  @Test
  public void test1264() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1264");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = databaseManagementServiceBuilder8.setMonitors(
        monitors9);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = databaseManagementServiceBuilder8.addDatabaseListener(
        databaseEventListener11);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = databaseManagementServiceBuilder12.loadPropertiesFromFile(
        "");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
  }

  @Test
  public void test1265() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1265");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl5.dropDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1266() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1266");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    boolean boolean1 = enhancedBootstrapper0.isRunning();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService2 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    java.nio.file.Path path4 = null;
    java.nio.file.Path path5 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
    try {
      int int8 = enhancedBootstrapper0.start(path4, path5, strMap6, true);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    org.junit.Assert.assertNull(databaseManagementService2);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
  }

  @Test
  public void test1267() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1267");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean5 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log6 = enhancedBootstrapper0.getLog();
    boolean boolean7 = enhancedBootstrapper0.isRunning();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNull(databaseManagementService4);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertNotNull(log6);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1268() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1268");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService2 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log3 = enhancedBootstrapper0.getLog();
    java.nio.file.Path path4 = null;
    java.nio.file.Path path5 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
    try {
      int int8 = enhancedBootstrapper0.start(path4, path5, strMap6, true);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNull(databaseManagementService2);
    org.junit.Assert.assertNotNull(log3);
  }

  @Test
  public void test1269() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1269");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder8.addDatabaseListener(
        databaseEventListener9);
    java.nio.file.Path path11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder8.loadPropertiesFromFile(
        path11);
    java.lang.Class<?> wildcardClass13 = databaseManagementServiceBuilder12.getClass();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(wildcardClass13);
  }

  @Test
  public void test1270() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1270");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    java.lang.String str10 = clusteringDBMSBuilder5.getEdition();
    java.nio.file.Path path11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path11);
    java.nio.file.Path path13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder12.loadPropertiesFromFile(
        path13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder12.setMonitors(
        monitors15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "enterprise" + "'", str10, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
  }

  @Test
  public void test1271() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1271");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver10);
    java.nio.file.Path path12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path12);
    java.nio.file.Path path14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider16);
    org.neo4j.monitoring.Monitors monitors18 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder19 = clusteringDBMSBuilder17.setMonitors(
        monitors18);
    org.neo4j.common.DependencyResolver dependencyResolver20 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder19.setExternalDependencies(
        dependencyResolver20);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder23 = clusteringDBMSBuilder19.loadPropertiesFromFile(
        "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder21);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder23);
  }

  @Test
  public void test1272() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1272");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService5 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean6 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log7 = enhancedBootstrapper0.getLog();
    java.nio.file.Path path8 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
    try {
      int int10 = enhancedBootstrapper0.start(path8, strMap9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertNull(databaseManagementService5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNotNull(log7);
  }

  @Test
  public void test1273() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1273");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl5.startDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1274() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1274");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    try {
      databaseManagementServiceClusterImpl9.startDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1275() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1275");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.common.DependencyResolver dependencyResolver11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
  }

  @Test
  public void test1276() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1276");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.setMonitors(
        monitors9);
    org.neo4j.common.DependencyResolver dependencyResolver11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.setExternalDependencies(
        dependencyResolver11);
    org.neo4j.common.DependencyResolver dependencyResolver13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.setExternalDependencies(
        dependencyResolver13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
  }

  @Test
  public void test1277() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1277");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction10 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction11 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv12 = null;
    metaUpgradeFlowAction11.accept(upgradeMetaEnv12);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = metaUpgradeFlowAction10.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction11);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction15 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction16 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv17 = null;
    metaUpgradeFlowAction16.accept(upgradeMetaEnv17);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction19 = metaUpgradeFlowAction15.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction16);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv20 = null;
    metaUpgradeFlowAction15.accept(upgradeMetaEnv20);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = metaUpgradeFlowAction11.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv24 = null;
    metaUpgradeFlowAction23.accept(upgradeMetaEnv24);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer26 = metaUpgradeFlowAction22.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction27 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction28 = metaUpgradeFlowAction4.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction27);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction29 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer30 = metaUpgradeFlowAction28.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction29);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction31 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction32 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv33 = null;
    metaUpgradeFlowAction32.accept(upgradeMetaEnv33);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction35 = metaUpgradeFlowAction31.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction32);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction36 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction37 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv38 = null;
    metaUpgradeFlowAction37.accept(upgradeMetaEnv38);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction40 = metaUpgradeFlowAction36.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction37);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction41 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv43 = null;
    metaUpgradeFlowAction42.accept(upgradeMetaEnv43);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction45 = metaUpgradeFlowAction41.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction42);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction46 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction47 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv48 = null;
    metaUpgradeFlowAction47.accept(upgradeMetaEnv48);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction50 = metaUpgradeFlowAction46.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction47);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv51 = null;
    metaUpgradeFlowAction46.accept(upgradeMetaEnv51);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction53 = metaUpgradeFlowAction42.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction46);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction54 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv55 = null;
    metaUpgradeFlowAction54.accept(upgradeMetaEnv55);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer57 = metaUpgradeFlowAction53.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction54);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction58 = metaUpgradeFlowAction36.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction54);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction59 = metaUpgradeFlowAction35.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction58);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction60 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer61 = metaUpgradeFlowAction59.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction60);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer62 = metaUpgradeFlowAction29.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction60);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv63 = null;
    metaUpgradeFlowAction29.accept(upgradeMetaEnv63);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction10);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction11);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction15);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction16);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction19);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer26);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction28);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction29);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer30);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction31);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction32);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction35);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction36);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction37);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction40);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction41);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction45);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction46);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction47);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction50);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction53);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction54);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer57);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction58);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction59);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction60);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer61);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer62);
  }

  @Test
  public void test1278() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1278");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction10 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction11 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv12 = null;
    metaUpgradeFlowAction11.accept(upgradeMetaEnv12);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = metaUpgradeFlowAction10.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction11);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv15 = null;
    metaUpgradeFlowAction10.accept(upgradeMetaEnv15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction17 = metaUpgradeFlowAction6.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction10);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction18 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv19 = null;
    metaUpgradeFlowAction18.accept(upgradeMetaEnv19);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer21 = metaUpgradeFlowAction17.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction18);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer22 = metaUpgradeFlowAction0.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction18);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction24 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv25 = null;
    metaUpgradeFlowAction24.accept(upgradeMetaEnv25);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction27 = metaUpgradeFlowAction23.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction24);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction28 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction29 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv30 = null;
    metaUpgradeFlowAction29.accept(upgradeMetaEnv30);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction32 = metaUpgradeFlowAction28.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction29);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction33 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction34 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv35 = null;
    metaUpgradeFlowAction34.accept(upgradeMetaEnv35);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction37 = metaUpgradeFlowAction33.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction34);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction38 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction39 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv40 = null;
    metaUpgradeFlowAction39.accept(upgradeMetaEnv40);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = metaUpgradeFlowAction38.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction39);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv43 = null;
    metaUpgradeFlowAction38.accept(upgradeMetaEnv43);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction45 = metaUpgradeFlowAction34.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction38);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction46 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv47 = null;
    metaUpgradeFlowAction46.accept(upgradeMetaEnv47);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer49 = metaUpgradeFlowAction45.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction46);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction50 = metaUpgradeFlowAction28.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction46);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction51 = metaUpgradeFlowAction27.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction50);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer52 = metaUpgradeFlowAction18.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction27);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction53 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction54 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv55 = null;
    metaUpgradeFlowAction54.accept(upgradeMetaEnv55);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction57 = metaUpgradeFlowAction53.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction54);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction58 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction59 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv60 = null;
    metaUpgradeFlowAction59.accept(upgradeMetaEnv60);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction62 = metaUpgradeFlowAction58.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction59);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction63 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction64 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv65 = null;
    metaUpgradeFlowAction64.accept(upgradeMetaEnv65);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction67 = metaUpgradeFlowAction63.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction64);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv68 = null;
    metaUpgradeFlowAction63.accept(upgradeMetaEnv68);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction70 = metaUpgradeFlowAction59.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction63);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction71 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv72 = null;
    metaUpgradeFlowAction71.accept(upgradeMetaEnv72);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer74 = metaUpgradeFlowAction70.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction71);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction75 = metaUpgradeFlowAction53.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction71);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv76 = null;
    metaUpgradeFlowAction75.accept(upgradeMetaEnv76);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction78 = metaUpgradeFlowAction27.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction75);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction79 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction80 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv81 = null;
    metaUpgradeFlowAction80.accept(upgradeMetaEnv81);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction83 = metaUpgradeFlowAction79.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction80);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv84 = null;
    metaUpgradeFlowAction79.accept(upgradeMetaEnv84);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction86 = metaUpgradeFlowAction27.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction79);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction87 = null;
    try {
      io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction88 = metaUpgradeFlowAction79.andMetaUpgradeFlowAction(
          metaUpgradeFlowAction87);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction10);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction11);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction17);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction18);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer21);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction24);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction28);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction29);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction32);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction33);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction34);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction37);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction38);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction39);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction45);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction46);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer49);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction50);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction51);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer52);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction53);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction54);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction57);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction58);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction59);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction62);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction63);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction64);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction67);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction70);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction71);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer74);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction75);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction78);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction79);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction80);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction83);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction86);
  }

  @Test
  public void test1279() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1279");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider11);
    java.nio.file.Path path13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.loadPropertiesFromFile(
        path13);
    java.lang.String str15 = clusteringDBMSBuilder12.getEdition();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "enterprise" + "'", str15, "enterprise");
  }

  @Test
  public void test1280() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1280");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    java.lang.String str6 = clusteringDBMSBuilder3.getEdition();
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.setMonitors(
        monitors7);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder8.loadPropertiesFromFile(
        "hi!");
    java.lang.String str11 = clusteringDBMSBuilder8.getEdition();
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder8.loadPropertiesFromFile(
        "hi!");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterprise" + "'", str6, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "enterprise" + "'", str11, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
  }

  @Test
  public void test1281() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1281");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    java.lang.String str11 = clusteringDBMSBuilder10.getEdition();
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder10.loadPropertiesFromFile(
        "");
    java.nio.file.Path path14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder13.loadPropertiesFromFile(
        path14);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder13.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver18 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder19 = clusteringDBMSBuilder13.setExternalDependencies(
        dependencyResolver18);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder13.loadPropertiesFromFile(
        "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "enterprise" + "'", str11, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder21);
  }

  @Test
  public void test1282() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1282");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.addURLAccessRule(
        "enterprise", uRLAccessRule5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
  }

  @Test
  public void test1283() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1283");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    java.nio.file.Path path9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path9);
    org.neo4j.common.DependencyResolver dependencyResolver11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = databaseManagementServiceBuilder10.setExternalDependencies(
        dependencyResolver11);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = databaseManagementServiceBuilder12.addURLAccessRule(
        "enterprise", uRLAccessRule14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = databaseManagementServiceBuilder12.setUserLogProvider(
        logProvider16);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = databaseManagementServiceBuilder17.addDatabaseListener(
        databaseEventListener18);
    java.lang.Class<?> wildcardClass20 = databaseManagementServiceBuilder19.getClass();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
    org.junit.Assert.assertNotNull(wildcardClass20);
  }

  @Test
  public void test1284() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1284");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    java.lang.String str6 = clusteringDBMSBuilder3.getEdition();
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.setMonitors(
        monitors7);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder8.loadPropertiesFromFile(
        "hi!");
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService11 = clusteringDBMSBuilder10.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterprise" + "'", str6, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
  }

  @Test
  public void test1285() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1285");
    }
    io.github.onograph.dbms.utils.TokenNamePropertyDTO tokenNamePropertyDTO2 = new io.github.onograph.dbms.utils.TokenNamePropertyDTO(
        "hi!", "enterprise");
    java.lang.String str3 = tokenNamePropertyDTO2.getStrNt();
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterprise" + "'", str3, "enterprise");
  }

  @Test
  public void test1286() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1286");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    int int5 = enhancedBootstrapper0.stop();
    int int6 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService7 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService8 = enhancedBootstrapper0.getDatabaseManagementService();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    org.junit.Assert.assertNull(databaseManagementService7);
    org.junit.Assert.assertNull(databaseManagementService8);
  }

  @Test
  public void test1287() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1287");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.monitoring.Monitors monitors4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setMonitors(
        monitors4);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        "hi!");
    org.neo4j.monitoring.Monitors monitors8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder1.setMonitors(
        monitors8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.setExternalDependencies(
        dependencyResolver10);
    org.neo4j.logging.LogProvider logProvider12 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider12);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder9.addDatabaseListener(
        databaseEventListener14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
  }

  @Test
  public void test1288() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1288");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    try {
      databaseManagementServiceClusterImpl2.shutdownDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1289() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1289");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.common.DependencyResolver dependencyResolver11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.setExternalDependencies(
        dependencyResolver11);
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService13 = clusteringDBMSBuilder10.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
  }

  @Test
  public void test1290() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1290");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider11);
    java.nio.file.Path path13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.loadPropertiesFromFile(
        path13);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = clusteringDBMSBuilder12.loadPropertiesFromFile(
        "hi!");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = databaseManagementServiceBuilder16.addURLAccessRule(
        "", uRLAccessRule18);
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService20 = databaseManagementServiceBuilder16.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
  }

  @Test
  public void test1291() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1291");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    int int4 = enhancedBootstrapper0.stop();
    java.lang.String[] strArray9 = new java.lang.String[]{"hi!", "enterprise", "enterprise",
        "enterprise"};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray9);
    try {
      int int11 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray9);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertNotNull(strArray9);
  }

  @Test
  public void test1292() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1292");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    int int5 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService6 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean7 = enhancedBootstrapper0.isRunning();
    java.lang.String[] strArray9 = new java.lang.String[]{""};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray9);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray9);
    try {
      int int12 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray9);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertNull(databaseManagementService6);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(strArray9);
  }

  @Test
  public void test1293() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1293");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "hi!");
    org.neo4j.monitoring.Monitors monitors8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder3.setMonitors(
        monitors8);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.addDatabaseListener(
        databaseEventListener10);
    java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder11.setConfigRaw(
          strMap12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
  }

  @Test
  public void test1294() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1294");
    }
    java.time.Clock clock0 = null;
    org.neo4j.kernel.database.DatabaseIdRepository databaseIdRepository1 = null;
    io.github.onograph.dbms.DbmsManagerWatchTagImpl dbmsManagerWatchTagImpl2 = null;
    java.time.ZoneId zoneId3 = null;
    io.github.onograph.dbms.serverproc.BasicProcedureQuarantineDatabaseImpl basicProcedureQuarantineDatabaseImpl4 = io.github.onograph.dbms.serverproc.BasicProcedureQuarantineDatabaseImpl.stnleBasicProcedureQuarantineDatabaseImpl(
        clock0, databaseIdRepository1, dbmsManagerWatchTagImpl2, zoneId3);
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature5 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature6 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature7 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature8 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature9 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.junit.Assert.assertNotNull(basicProcedureQuarantineDatabaseImpl4);
    org.junit.Assert.assertNotNull(procedureSignature5);
    org.junit.Assert.assertNotNull(procedureSignature6);
    org.junit.Assert.assertNotNull(procedureSignature7);
    org.junit.Assert.assertNotNull(procedureSignature8);
    org.junit.Assert.assertNotNull(procedureSignature9);
  }

  @Test
  public void test1295() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1295");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver9);
    java.nio.file.Path path11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder10.loadPropertiesFromFile(
        path11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
  }

  @Test
  public void test1296() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1296");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl8);
    try {
      org.neo4j.graphdb.GraphDatabaseService graphDatabaseService11 = databaseManagementServiceClusterImpl8.database(
          "enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1297() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1297");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    int int5 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log6 = enhancedBootstrapper0.getLog();
    boolean boolean7 = enhancedBootstrapper0.isRunning();
    int int8 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService9 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean10 = enhancedBootstrapper0.isRunning();
    java.nio.file.Path path11 = null;
    java.nio.file.Path path12 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap13 = null;
    try {
      int int15 = enhancedBootstrapper0.start(path11, path12, strMap13, false);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNull(databaseManagementService4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertNotNull(log6);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    org.junit.Assert.assertNull(databaseManagementService9);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1298() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1298");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    int int5 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log6 = enhancedBootstrapper0.getLog();
    boolean boolean7 = enhancedBootstrapper0.isRunning();
    int int8 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log9 = enhancedBootstrapper0.getLog();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService10 = enhancedBootstrapper0.getDatabaseManagementService();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNull(databaseManagementService4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertNotNull(log6);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    org.junit.Assert.assertNotNull(log9);
    org.junit.Assert.assertNull(databaseManagementService10);
  }

  @Test
  public void test1299() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1299");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService5 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean6 = enhancedBootstrapper0.isRunning();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService7 = enhancedBootstrapper0.getDatabaseManagementService();
    int int8 = enhancedBootstrapper0.stop();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertNull(databaseManagementService5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNull(databaseManagementService7);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
  }

  @Test
  public void test1300() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1300");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.common.DependencyResolver dependencyResolver2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver2);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener4 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder5 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener4);
    org.neo4j.monitoring.Monitors monitors6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.setMonitors(
        monitors6);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener8);
    org.neo4j.logging.LogProvider logProvider10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder3.setUserLogProvider(
        logProvider10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
  }

  @Test
  public void test1301() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1301");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    org.neo4j.graphdb.config.Configuration configuration8 = null;
    try {
      databaseManagementServiceClusterImpl6.createDatabase("", configuration8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1302() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1302");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    try {
      databaseManagementServiceClusterImpl6.createDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1303() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1303");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl6.shutdownDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1304() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1304");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.common.DependencyResolver dependencyResolver11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.setExternalDependencies(
        dependencyResolver11);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder10.addURLAccessRule(
        "hi!", uRLAccessRule14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
  }

  @Test
  public void test1305() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1305");
    }
    io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider commandGetServerIdCommandProvider0 = new io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider();
    org.neo4j.cli.Command.CommandType commandType1 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType2 = commandGetServerIdCommandProvider0.commandType();
    int int3 = commandGetServerIdCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType4 = commandGetServerIdCommandProvider0.commandType();
    int int5 = commandGetServerIdCommandProvider0.getPriority();
    int int6 = commandGetServerIdCommandProvider0.getPriority();
    int int7 = commandGetServerIdCommandProvider0.getPriority();
    org.neo4j.cli.ExecutionContext executionContext8 = null;
    try {
      io.github.onograph.dbms.commands.CommandGetServerIdImpl commandGetServerIdImpl9 = commandGetServerIdCommandProvider0.createCommand(
          executionContext8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue(
        "'" + commandType1 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType1.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
  }

  @Test
  public void test1306() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1306");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    int int5 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log6 = enhancedBootstrapper0.getLog();
    boolean boolean7 = enhancedBootstrapper0.isRunning();
    int int8 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log9 = enhancedBootstrapper0.getLog();
    java.nio.file.Path path10 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
    try {
      int int12 = enhancedBootstrapper0.start(path10, strMap11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNull(databaseManagementService4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertNotNull(log6);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    org.junit.Assert.assertNotNull(log9);
  }

  @Test
  public void test1307() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1307");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.monitoring.Monitors monitors4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setMonitors(
        monitors4);
    java.lang.String str6 = clusteringDBMSBuilder5.getEdition();
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder8.addDatabaseListener(
        databaseEventListener9);
    java.nio.file.Path path11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.loadPropertiesFromFile(
        path11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.setUserLogProvider(
        logProvider13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterprise" + "'", str6, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
  }

  @Test
  public void test1308() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1308");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider5);
    java.lang.String str7 = clusteringDBMSBuilder6.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "enterprise" + "'", str7, "enterprise");
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
  }

  @Test
  public void test1309() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1309");
    }
    java.lang.String[] strArray1 = new java.lang.String[]{""};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray1);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray1);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray1);
    try {
      io.github.onograph.server.EntryPointImpl.startBootstrapper(strArray1);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNotNull(strArray1);
  }

  @Test
  public void test1310() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1310");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction10 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction11 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv12 = null;
    metaUpgradeFlowAction11.accept(upgradeMetaEnv12);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = metaUpgradeFlowAction10.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction11);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction15 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction16 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv17 = null;
    metaUpgradeFlowAction16.accept(upgradeMetaEnv17);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction19 = metaUpgradeFlowAction15.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction16);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv20 = null;
    metaUpgradeFlowAction15.accept(upgradeMetaEnv20);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = metaUpgradeFlowAction11.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv24 = null;
    metaUpgradeFlowAction23.accept(upgradeMetaEnv24);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer26 = metaUpgradeFlowAction22.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction27 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction28 = metaUpgradeFlowAction4.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction27);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction29 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer30 = metaUpgradeFlowAction28.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction29);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction31 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction32 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv33 = null;
    metaUpgradeFlowAction32.accept(upgradeMetaEnv33);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction35 = metaUpgradeFlowAction31.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction32);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction36 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction37 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv38 = null;
    metaUpgradeFlowAction37.accept(upgradeMetaEnv38);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction40 = metaUpgradeFlowAction36.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction37);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction41 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv43 = null;
    metaUpgradeFlowAction42.accept(upgradeMetaEnv43);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction45 = metaUpgradeFlowAction41.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction42);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction46 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction47 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv48 = null;
    metaUpgradeFlowAction47.accept(upgradeMetaEnv48);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction50 = metaUpgradeFlowAction46.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction47);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv51 = null;
    metaUpgradeFlowAction46.accept(upgradeMetaEnv51);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction53 = metaUpgradeFlowAction42.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction46);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction54 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv55 = null;
    metaUpgradeFlowAction54.accept(upgradeMetaEnv55);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer57 = metaUpgradeFlowAction53.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction54);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction58 = metaUpgradeFlowAction36.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction54);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction59 = metaUpgradeFlowAction35.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction58);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction60 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer61 = metaUpgradeFlowAction59.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction60);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer62 = metaUpgradeFlowAction29.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction60);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction63 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction64 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv65 = null;
    metaUpgradeFlowAction64.accept(upgradeMetaEnv65);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction67 = metaUpgradeFlowAction63.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction64);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction68 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction69 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv70 = null;
    metaUpgradeFlowAction69.accept(upgradeMetaEnv70);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction72 = metaUpgradeFlowAction68.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction69);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv73 = null;
    metaUpgradeFlowAction68.accept(upgradeMetaEnv73);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction75 = metaUpgradeFlowAction64.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction68);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer76 = upgradeMetaEnvConsumer62.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction68);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv77 = null;
    metaUpgradeFlowAction68.accept(upgradeMetaEnv77);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction10);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction11);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction15);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction16);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction19);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer26);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction28);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction29);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer30);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction31);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction32);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction35);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction36);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction37);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction40);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction41);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction45);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction46);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction47);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction50);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction53);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction54);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer57);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction58);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction59);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction60);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer61);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer62);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction63);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction64);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction67);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction68);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction69);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction72);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction75);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer76);
  }

  @Test
  public void test1311() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1311");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener8 = null;
    try {
      databaseManagementServiceClusterImpl7.unregisterDatabaseEventListener(databaseEventListener8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1312() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1312");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider16);
    java.nio.file.Path path18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        path18);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    java.lang.String str22 = clusteringDBMSBuilder9.getEdition();
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener23 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder24 = clusteringDBMSBuilder9.addDatabaseListener(
        databaseEventListener23);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder21);
    org.junit.Assert.assertEquals("'" + str22 + "' != '" + "enterprise" + "'", str22, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder24);
  }

  @Test
  public void test1313() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1313");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver10);
    java.nio.file.Path path12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder13.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder13.setUserLogProvider(
        logProvider16);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder17.addDatabaseListener(
        databaseEventListener18);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule21 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder22 = clusteringDBMSBuilder17.addURLAccessRule(
        "hi!", uRLAccessRule21);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener23 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder24 = clusteringDBMSBuilder22.addDatabaseListener(
        databaseEventListener23);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder22);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder24);
  }

  @Test
  public void test1314() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1314");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    java.nio.file.Path path5 = null;
    java.nio.file.Path path6 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
    try {
      int int9 = enhancedBootstrapper0.start(path5, path6, strMap7, true);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNull(databaseManagementService4);
  }

  @Test
  public void test1315() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1315");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv10 = null;
    metaUpgradeFlowAction5.accept(upgradeMetaEnv10);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction12 = metaUpgradeFlowAction1.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction5);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction13 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv15 = null;
    metaUpgradeFlowAction14.accept(upgradeMetaEnv15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction17 = metaUpgradeFlowAction13.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction14);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction18 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction19 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv20 = null;
    metaUpgradeFlowAction19.accept(upgradeMetaEnv20);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = metaUpgradeFlowAction18.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction19);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction24 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv25 = null;
    metaUpgradeFlowAction24.accept(upgradeMetaEnv25);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction27 = metaUpgradeFlowAction23.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction24);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv28 = null;
    metaUpgradeFlowAction23.accept(upgradeMetaEnv28);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction30 = metaUpgradeFlowAction19.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction31 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv32 = null;
    metaUpgradeFlowAction31.accept(upgradeMetaEnv32);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer34 = metaUpgradeFlowAction30.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction31);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer35 = metaUpgradeFlowAction13.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction31);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction36 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction37 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv38 = null;
    metaUpgradeFlowAction37.accept(upgradeMetaEnv38);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction40 = metaUpgradeFlowAction36.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction37);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction41 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv43 = null;
    metaUpgradeFlowAction42.accept(upgradeMetaEnv43);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction45 = metaUpgradeFlowAction41.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction42);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction46 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction47 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv48 = null;
    metaUpgradeFlowAction47.accept(upgradeMetaEnv48);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction50 = metaUpgradeFlowAction46.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction47);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction51 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction52 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv53 = null;
    metaUpgradeFlowAction52.accept(upgradeMetaEnv53);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction55 = metaUpgradeFlowAction51.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction52);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv56 = null;
    metaUpgradeFlowAction51.accept(upgradeMetaEnv56);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction58 = metaUpgradeFlowAction47.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction51);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction59 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv60 = null;
    metaUpgradeFlowAction59.accept(upgradeMetaEnv60);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer62 = metaUpgradeFlowAction58.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction59);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction63 = metaUpgradeFlowAction41.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction59);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction64 = metaUpgradeFlowAction40.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction63);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer65 = metaUpgradeFlowAction31.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction40);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction66 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction31);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction67 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction68 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv69 = null;
    metaUpgradeFlowAction68.accept(upgradeMetaEnv69);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction71 = metaUpgradeFlowAction67.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction68);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction72 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction73 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv74 = null;
    metaUpgradeFlowAction73.accept(upgradeMetaEnv74);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction76 = metaUpgradeFlowAction72.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction73);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv77 = null;
    metaUpgradeFlowAction72.accept(upgradeMetaEnv77);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction79 = metaUpgradeFlowAction68.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction72);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction80 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction79);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv81 = null;
    metaUpgradeFlowAction5.accept(upgradeMetaEnv81);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction12);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction13);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction17);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction18);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction19);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction24);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction30);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction31);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer34);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer35);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction36);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction37);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction40);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction41);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction45);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction46);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction47);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction50);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction51);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction52);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction55);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction58);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction59);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer62);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction63);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction64);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer65);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction66);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction67);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction68);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction71);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction72);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction73);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction76);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction79);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction80);
  }

  @Test
  public void test1316() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1316");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder6.addURLAccessRule(
        "", uRLAccessRule10);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener12 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder6.addDatabaseListener(
        databaseEventListener12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
  }

  @Test
  public void test1317() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1317");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "hi!");
    org.neo4j.monitoring.Monitors monitors8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder3.setMonitors(
        monitors8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.setExternalDependencies(
        dependencyResolver10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
  }

  @Test
  public void test1318() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1318");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    java.nio.file.Path path9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path9);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener11);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "enterprise");
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "hi!");
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService17 = clusteringDBMSBuilder3.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
  }

  @Test
  public void test1319() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1319");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder3.setMonitors(
        monitors9);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener11);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
  }

  @Test
  public void test1320() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1320");
    }
    io.github.onograph.cluster.raft.module.dprot.ClusterStructureService clusterStructureService0 = null;
    org.neo4j.kernel.database.DatabaseIdRepository databaseIdRepository1 = null;
    io.github.onograph.dbms.serverproc.DatabaseStateProcedureClusterImpl databaseStateProcedureClusterImpl2 = new io.github.onograph.dbms.serverproc.DatabaseStateProcedureClusterImpl(
        clusterStructureService0, databaseIdRepository1);
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature3 = databaseStateProcedureClusterImpl2.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature4 = databaseStateProcedureClusterImpl2.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature5 = databaseStateProcedureClusterImpl2.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature6 = databaseStateProcedureClusterImpl2.signature();
    org.neo4j.kernel.api.procedure.Context context7 = null;
    org.neo4j.values.AnyValue[] anyValueArray8 = new org.neo4j.values.AnyValue[]{};
    org.neo4j.kernel.api.ResourceTracker resourceTracker9 = null;
    try {
      org.neo4j.collection.RawIterator<org.neo4j.values.AnyValue[], org.neo4j.internal.kernel.api.exceptions.ProcedureException> anyValueArrayRawIterator10 = databaseStateProcedureClusterImpl2.apply(
          context7, anyValueArray8, resourceTracker9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalArgumentException; message: Illegal input:[]");
    } catch (java.lang.IllegalArgumentException e) {
    }
    org.junit.Assert.assertNotNull(procedureSignature3);
    org.junit.Assert.assertNotNull(procedureSignature4);
    org.junit.Assert.assertNotNull(procedureSignature5);
    org.junit.Assert.assertNotNull(procedureSignature6);
    org.junit.Assert.assertNotNull(anyValueArray8);
  }

  @Test
  public void test1321() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1321");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      org.neo4j.graphdb.GraphDatabaseService graphDatabaseService8 = databaseManagementServiceClusterImpl5.database(
          "");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1322() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1322");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.monitoring.Monitors monitors4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setMonitors(
        monitors4);
    java.lang.String str6 = clusteringDBMSBuilder5.getEdition();
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener7);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "enterprise");
    java.nio.file.Path path11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = databaseManagementServiceBuilder10.loadPropertiesFromFile(
        path11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterprise" + "'", str6, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
  }

  @Test
  public void test1323() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1323");
    }
    java.time.Clock clock0 = null;
    org.neo4j.kernel.database.DatabaseIdRepository databaseIdRepository1 = null;
    io.github.onograph.dbms.DbmsManagerWatchTagImpl dbmsManagerWatchTagImpl2 = null;
    java.time.ZoneId zoneId3 = null;
    io.github.onograph.dbms.serverproc.BasicProcedureQuarantineDatabaseImpl basicProcedureQuarantineDatabaseImpl4 = io.github.onograph.dbms.serverproc.BasicProcedureQuarantineDatabaseImpl.stnleBasicProcedureQuarantineDatabaseImpl(
        clock0, databaseIdRepository1, dbmsManagerWatchTagImpl2, zoneId3);
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature5 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature6 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature7 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.kernel.api.procedure.Context context8 = null;
    org.neo4j.values.AnyValue[] anyValueArray9 = new org.neo4j.values.AnyValue[]{};
    org.neo4j.kernel.api.ResourceTracker resourceTracker10 = null;
    try {
      org.neo4j.collection.RawIterator<org.neo4j.values.AnyValue[], org.neo4j.internal.kernel.api.exceptions.ProcedureException> anyValueArrayRawIterator11 = basicProcedureQuarantineDatabaseImpl4.apply(
          context8, anyValueArray9, resourceTracker10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalArgumentException; message: *** Error: fe8ab484-a650-4ba7-a59f-194832c36aaa");
    } catch (java.lang.IllegalArgumentException e) {
    }
    org.junit.Assert.assertNotNull(basicProcedureQuarantineDatabaseImpl4);
    org.junit.Assert.assertNotNull(procedureSignature5);
    org.junit.Assert.assertNotNull(procedureSignature6);
    org.junit.Assert.assertNotNull(procedureSignature7);
    org.junit.Assert.assertNotNull(anyValueArray9);
  }

  @Test
  public void test1324() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1324");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder7.setMonitors(
        monitors8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder7.setMonitors(
        monitors10);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder7.loadPropertiesFromFile(
        "hi!");
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder7.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder7.setUserLogProvider(
        logProvider16);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder17.addDatabaseListener(
        databaseEventListener18);
    java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder21 = clusteringDBMSBuilder17.setConfigRaw(
          strMap20);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
  }

  @Test
  public void test1325() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1325");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    java.lang.String str9 = clusteringDBMSBuilder3.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder3.setMonitors(
        monitors12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver14);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.common.DependencyResolver dependencyResolver18 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder19 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver18);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener20 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder19.addDatabaseListener(
        databaseEventListener20);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "enterprise" + "'", str9, "enterprise");
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder21);
  }

  @Test
  public void test1326() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1326");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder7.setMonitors(
        monitors8);
    java.lang.String str10 = clusteringDBMSBuilder7.getEdition();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "enterprise" + "'", str10, "enterprise");
  }

  @Test
  public void test1327() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1327");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    java.nio.file.Path path7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        path7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder8.addURLAccessRule(
        "", uRLAccessRule10);
    java.nio.file.Path path12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder11.loadPropertiesFromFile(
        path12);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder11.loadPropertiesFromFile(
        "hi!");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
  }

  @Test
  public void test1328() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1328");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder6.addURLAccessRule(
        "", uRLAccessRule10);
    org.neo4j.logging.LogProvider logProvider12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider12);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder13.loadPropertiesFromFile(
        "hi!");
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder13.setMonitors(
        monitors16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
  }

  @Test
  public void test1329() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1329");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    org.neo4j.graphdb.config.Configuration configuration8 = null;
    try {
      databaseManagementServiceClusterImpl6.createDatabase("", configuration8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1330() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1330");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl6.dropDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1331() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1331");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv10 = null;
    metaUpgradeFlowAction5.accept(upgradeMetaEnv10);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction12 = metaUpgradeFlowAction1.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction5);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction13 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv14 = null;
    metaUpgradeFlowAction13.accept(upgradeMetaEnv14);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer16 = metaUpgradeFlowAction12.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction13);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction17 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction18 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv19 = null;
    metaUpgradeFlowAction18.accept(upgradeMetaEnv19);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction21 = metaUpgradeFlowAction17.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction18);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv24 = null;
    metaUpgradeFlowAction23.accept(upgradeMetaEnv24);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction26 = metaUpgradeFlowAction22.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction27 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction28 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv29 = null;
    metaUpgradeFlowAction28.accept(upgradeMetaEnv29);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction31 = metaUpgradeFlowAction27.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction28);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction32 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction33 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv34 = null;
    metaUpgradeFlowAction33.accept(upgradeMetaEnv34);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction36 = metaUpgradeFlowAction32.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction33);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv37 = null;
    metaUpgradeFlowAction32.accept(upgradeMetaEnv37);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction39 = metaUpgradeFlowAction28.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction32);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction40 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv41 = null;
    metaUpgradeFlowAction40.accept(upgradeMetaEnv41);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer43 = metaUpgradeFlowAction39.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction40);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction44 = metaUpgradeFlowAction22.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction40);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction45 = metaUpgradeFlowAction21.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction44);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction46 = metaUpgradeFlowAction13.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction21);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv47 = null;
    metaUpgradeFlowAction21.accept(upgradeMetaEnv47);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction49 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction50 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv51 = null;
    metaUpgradeFlowAction50.accept(upgradeMetaEnv51);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction53 = metaUpgradeFlowAction49.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction50);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv54 = null;
    metaUpgradeFlowAction49.accept(upgradeMetaEnv54);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction56 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction57 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv58 = null;
    metaUpgradeFlowAction57.accept(upgradeMetaEnv58);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction60 = metaUpgradeFlowAction56.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction57);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer61 = metaUpgradeFlowAction49.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction56);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv62 = null;
    metaUpgradeFlowAction49.accept(upgradeMetaEnv62);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer64 = metaUpgradeFlowAction21.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction49);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv65 = null;
    metaUpgradeFlowAction49.accept(upgradeMetaEnv65);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction12);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction13);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer16);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction17);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction18);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction21);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction26);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction28);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction31);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction32);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction33);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction36);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction39);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction40);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer43);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction44);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction45);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction46);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction49);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction50);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction53);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction56);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction57);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction60);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer61);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer64);
  }

  @Test
  public void test1332() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1332");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    java.lang.String str6 = clusteringDBMSBuilder3.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver7);
    java.lang.Class<?> wildcardClass9 = clusteringDBMSBuilder3.getClass();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterprise" + "'", str6, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(wildcardClass9);
  }

  @Test
  public void test1333() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1333");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener6 = null;
    try {
      databaseManagementServiceClusterImpl2.unregisterDatabaseEventListener(databaseEventListener6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1334() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1334");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver5 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder6 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver5);
    java.nio.file.Path path7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder1.addURLAccessRule(
        "hi!", uRLAccessRule10);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = databaseManagementServiceBuilder11.addURLAccessRule(
        "", uRLAccessRule13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
  }

  @Test
  public void test1335() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1335");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "");
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder5.setMonitors(
        monitors13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
  }

  @Test
  public void test1336() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1336");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder7.addURLAccessRule(
        "hi!", uRLAccessRule9);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder7.addDatabaseListener(
        databaseEventListener11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
  }

  @Test
  public void test1337() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1337");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder6.addURLAccessRule(
        "enterprise", uRLAccessRule12);
    java.nio.file.Path path14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        path14);
    java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder6.setConfigRaw(
          strMap16);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
  }

  @Test
  public void test1338() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1338");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    org.neo4j.graphdb.config.Configuration configuration7 = null;
    try {
      databaseManagementServiceClusterImpl4.createDatabase("enterprise", configuration7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1339() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1339");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    java.lang.String str9 = clusteringDBMSBuilder3.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver10);
    org.neo4j.logging.LogProvider logProvider12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder3.setUserLogProvider(
        logProvider12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder3.setMonitors(
        monitors14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "enterprise" + "'", str9, "enterprise");
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
  }

  @Test
  public void test1340() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1340");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    try {
      databaseManagementServiceClusterImpl3.shutdownDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1341() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1341");
    }
    io.github.onograph.server.EntryPointImpl entryPointImpl0 = new io.github.onograph.server.EntryPointImpl();
    org.neo4j.server.startup.EntryPoint.Priority priority1 = entryPointImpl0.getPriority();
    io.github.onograph.server.EntryPointImpl entryPointImpl2 = new io.github.onograph.server.EntryPointImpl();
    org.neo4j.server.startup.EntryPoint.Priority priority3 = entryPointImpl2.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority4 = entryPointImpl2.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority5 = entryPointImpl2.getPriority();
    io.github.onograph.server.EntryPointImpl entryPointImpl6 = new io.github.onograph.server.EntryPointImpl();
    int int7 = entryPointImpl2.compareTo((org.neo4j.server.startup.EntryPoint) entryPointImpl6);
    org.neo4j.server.startup.EntryPoint.Priority priority8 = entryPointImpl6.getPriority();
    int int9 = entryPointImpl0.compareTo((org.neo4j.server.startup.EntryPoint) entryPointImpl6);
    org.junit.Assert.assertTrue(
        "'" + priority1 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority1.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority3 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority3.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority4 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority4.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority5 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority5.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    org.junit.Assert.assertTrue(
        "'" + priority8 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority8.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
  }

  @Test
  public void test1342() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1342");
    }
    io.github.onograph.dbms.utils.TokenNamePropertyDTO tokenNamePropertyDTO2 = new io.github.onograph.dbms.utils.TokenNamePropertyDTO(
        "hi!", "");
    java.lang.String str3 = tokenNamePropertyDTO2.getStrNp();
    java.lang.String str4 = tokenNamePropertyDTO2.getStrNp();
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
  }

  @Test
  public void test1343() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1343");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    int int4 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log5 = enhancedBootstrapper0.getLog();
    int int6 = enhancedBootstrapper0.stop();
    int int7 = enhancedBootstrapper0.stop();
    boolean boolean8 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log9 = enhancedBootstrapper0.getLog();
    boolean boolean10 = enhancedBootstrapper0.isRunning();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertNotNull(log5);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertNotNull(log9);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1344() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1344");
    }
    java.lang.String[] strArray1 = new java.lang.String[]{"enterprise"};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray1);
    try {
      io.github.onograph.server.EntryPointImpl.startBootstrapper(strArray1);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNotNull(strArray1);
  }

  @Test
  public void test1345() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1345");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder7.setMonitors(
        monitors8);
    org.neo4j.logging.LogProvider logProvider10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder7.setUserLogProvider(
        logProvider10);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder7.loadPropertiesFromFile(
        "hi!");
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder7.loadPropertiesFromFile(
        "");
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder15.loadPropertiesFromFile(
        "enterprise");
    java.lang.Class<?> wildcardClass18 = clusteringDBMSBuilder15.getClass();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(wildcardClass18);
  }

  @Test
  public void test1346() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1346");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log2 = enhancedBootstrapper0.getLog();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService5 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean6 = enhancedBootstrapper0.isRunning();
    boolean boolean7 = enhancedBootstrapper0.isRunning();
    int int8 = enhancedBootstrapper0.stop();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNotNull(log2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertNull(databaseManagementService5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
  }

  @Test
  public void test1347() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1347");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    try {
      databaseManagementServiceClusterImpl3.createDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1348() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1348");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    try {
      databaseManagementServiceClusterImpl4.shutdownDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1349() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1349");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction10 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction11 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv12 = null;
    metaUpgradeFlowAction11.accept(upgradeMetaEnv12);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = metaUpgradeFlowAction10.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction11);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction15 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction16 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv17 = null;
    metaUpgradeFlowAction16.accept(upgradeMetaEnv17);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction19 = metaUpgradeFlowAction15.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction16);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv20 = null;
    metaUpgradeFlowAction15.accept(upgradeMetaEnv20);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = metaUpgradeFlowAction11.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv24 = null;
    metaUpgradeFlowAction23.accept(upgradeMetaEnv24);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer26 = metaUpgradeFlowAction22.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction27 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction28 = metaUpgradeFlowAction4.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction27);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction29 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer30 = metaUpgradeFlowAction28.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction29);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction31 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction32 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv33 = null;
    metaUpgradeFlowAction32.accept(upgradeMetaEnv33);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction35 = metaUpgradeFlowAction31.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction32);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction36 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction37 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv38 = null;
    metaUpgradeFlowAction37.accept(upgradeMetaEnv38);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction40 = metaUpgradeFlowAction36.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction37);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction41 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv43 = null;
    metaUpgradeFlowAction42.accept(upgradeMetaEnv43);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction45 = metaUpgradeFlowAction41.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction42);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv46 = null;
    metaUpgradeFlowAction41.accept(upgradeMetaEnv46);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction48 = metaUpgradeFlowAction37.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction41);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction49 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv50 = null;
    metaUpgradeFlowAction49.accept(upgradeMetaEnv50);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer52 = metaUpgradeFlowAction48.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction49);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction53 = metaUpgradeFlowAction31.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction49);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction54 = metaUpgradeFlowAction28.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction53);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv55 = null;
    metaUpgradeFlowAction28.accept(upgradeMetaEnv55);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction57 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction58 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv59 = null;
    metaUpgradeFlowAction58.accept(upgradeMetaEnv59);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction61 = metaUpgradeFlowAction57.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction58);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction62 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction63 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv64 = null;
    metaUpgradeFlowAction63.accept(upgradeMetaEnv64);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction66 = metaUpgradeFlowAction62.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction63);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv67 = null;
    metaUpgradeFlowAction62.accept(upgradeMetaEnv67);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction69 = metaUpgradeFlowAction58.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction62);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv70 = null;
    metaUpgradeFlowAction62.accept(upgradeMetaEnv70);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction72 = metaUpgradeFlowAction28.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction62);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv73 = null;
    metaUpgradeFlowAction72.accept(upgradeMetaEnv73);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv75 = null;
    metaUpgradeFlowAction72.accept(upgradeMetaEnv75);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction10);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction11);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction15);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction16);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction19);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer26);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction28);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction29);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer30);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction31);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction32);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction35);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction36);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction37);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction40);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction41);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction45);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction48);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction49);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer52);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction53);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction54);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction57);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction58);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction61);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction62);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction63);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction66);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction69);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction72);
  }

  @Test
  public void test1350() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1350");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    try {
      databaseManagementServiceClusterImpl9.createDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1351() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1351");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver10);
    java.nio.file.Path path12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path12);
    java.nio.file.Path path14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider16);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule19 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder20 = clusteringDBMSBuilder17.addURLAccessRule(
        "", uRLAccessRule19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder20);
  }

  @Test
  public void test1352() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1352");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log2 = enhancedBootstrapper0.getLog();
    int int3 = enhancedBootstrapper0.stop();
    java.nio.file.Path path4 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap5 = null;
    try {
      int int6 = enhancedBootstrapper0.start(path4, strMap5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNotNull(log2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
  }

  @Test
  public void test1353() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1353");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      org.neo4j.graphdb.GraphDatabaseService graphDatabaseService10 = databaseManagementServiceClusterImpl5.database(
          "");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1354() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1354");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    int int4 = enhancedBootstrapper0.stop();
    java.lang.String[] strArray6 = new java.lang.String[]{""};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray6);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray6);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray6);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray6);
    try {
      int int11 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray6);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertNotNull(strArray6);
  }

  @Test
  public void test1355() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1355");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder9.addDatabaseListener(
        databaseEventListener12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder13.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder13.loadPropertiesFromFile(
        "");
    java.nio.file.Path path18 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder19 = clusteringDBMSBuilder13.loadPropertiesFromFile(
        path18);
    try {
      io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl20 = clusteringDBMSBuilder13.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder19);
  }

  @Test
  public void test1356() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1356");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.addDatabaseListener(
        databaseEventListener7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
  }

  @Test
  public void test1357() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1357");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    int int4 = enhancedBootstrapper0.stop();
    int int5 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService6 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService7 = enhancedBootstrapper0.getDatabaseManagementService();
    java.lang.Class<?> wildcardClass8 = enhancedBootstrapper0.getClass();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertNull(databaseManagementService6);
    org.junit.Assert.assertNull(databaseManagementService7);
    org.junit.Assert.assertNotNull(wildcardClass8);
  }

  @Test
  public void test1358() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1358");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    try {
      databaseManagementServiceClusterImpl6.dropDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1359() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1359");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    try {
      databaseManagementServiceClusterImpl7.registerDatabaseEventListener(databaseEventListener9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1360() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1360");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    java.lang.String str11 = clusteringDBMSBuilder10.getEdition();
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder10.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.monitoring.Monitors monitors14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder13.setMonitors(
        monitors14);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder13.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder17.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule21 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder22 = databaseManagementServiceBuilder19.addURLAccessRule(
        "hi!", uRLAccessRule21);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "enterprise" + "'", str11, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder22);
  }

  @Test
  public void test1361() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1361");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.setMonitors(
        monitors9);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder6.addDatabaseListener(
        databaseEventListener11);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = databaseManagementServiceBuilder12.addURLAccessRule(
        "", uRLAccessRule14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
  }

  @Test
  public void test1362() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1362");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.setMonitors(
        monitors11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.setMonitors(
        monitors13);
    java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = clusteringDBMSBuilder14.setConfigRaw(
          strMap15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
  }

  @Test
  public void test1363() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1363");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl8);
    try {
      databaseManagementServiceClusterImpl8.startDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1364() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1364");
    }
    java.time.Clock clock0 = null;
    org.neo4j.kernel.database.DatabaseIdRepository databaseIdRepository1 = null;
    io.github.onograph.dbms.DbmsManagerWatchTagImpl dbmsManagerWatchTagImpl2 = null;
    java.time.ZoneId zoneId3 = null;
    io.github.onograph.dbms.serverproc.BasicProcedureQuarantineDatabaseImpl basicProcedureQuarantineDatabaseImpl4 = io.github.onograph.dbms.serverproc.BasicProcedureQuarantineDatabaseImpl.clsrBasicProcedureQuarantineDatabaseImpl(
        clock0, databaseIdRepository1, dbmsManagerWatchTagImpl2, zoneId3);
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature5 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature6 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature7 = basicProcedureQuarantineDatabaseImpl4.signature();
    java.lang.Class<?> wildcardClass8 = procedureSignature7.getClass();
    org.junit.Assert.assertNotNull(basicProcedureQuarantineDatabaseImpl4);
    org.junit.Assert.assertNotNull(procedureSignature5);
    org.junit.Assert.assertNotNull(procedureSignature6);
    org.junit.Assert.assertNotNull(procedureSignature7);
    org.junit.Assert.assertNotNull(wildcardClass8);
  }

  @Test
  public void test1365() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1365");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    java.lang.String str6 = clusteringDBMSBuilder5.getEdition();
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "");
    java.lang.String str9 = clusteringDBMSBuilder8.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder8.setExternalDependencies(
        dependencyResolver10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder8.setMonitors(
        monitors12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterprise" + "'", str6, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "enterprise" + "'", str9, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
  }

  @Test
  public void test1366() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1366");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    java.nio.file.Path path9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path9);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder3.setUserLogProvider(
        logProvider13);
    java.lang.Class<?> wildcardClass15 = clusteringDBMSBuilder14.getClass();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(wildcardClass15);
  }

  @Test
  public void test1367() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1367");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService2 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean5 = enhancedBootstrapper0.isRunning();
    java.nio.file.Path path6 = null;
    java.nio.file.Path path7 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
    try {
      int int10 = enhancedBootstrapper0.start(path6, path7, strMap8, false);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNull(databaseManagementService2);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertNull(databaseManagementService4);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test1368() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1368");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener6 = null;
    try {
      databaseManagementServiceClusterImpl5.registerDatabaseEventListener(databaseEventListener6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1369() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1369");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "hi!");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
  }

  @Test
  public void test1370() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1370");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver9);
    java.lang.String str11 = clusteringDBMSBuilder6.getEdition();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "enterprise" + "'", str11, "enterprise");
  }

  @Test
  public void test1371() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1371");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl7);
    try {
      boolean boolean10 = databaseManagementServiceClusterImpl7.isWraeForSt("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1372() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1372");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule12 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder6.addURLAccessRule(
        "hi!", uRLAccessRule12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = databaseManagementServiceBuilder13.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = databaseManagementServiceBuilder15.loadPropertiesFromFile(
        "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
  }

  @Test
  public void test1373() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1373");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver6);
    java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder7.setConfigRaw(
          strMap8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
  }

  @Test
  public void test1374() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1374");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    try {
      databaseManagementServiceClusterImpl4.startDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1375() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1375");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder7.setExternalDependencies(
        dependencyResolver8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder7.setMonitors(
        monitors10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
  }

  @Test
  public void test1376() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1376");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    try {
      databaseManagementServiceClusterImpl6.dropDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1377() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1377");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log2 = enhancedBootstrapper0.getLog();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService5 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean6 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log7 = enhancedBootstrapper0.getLog();
    org.neo4j.logging.Log log8 = enhancedBootstrapper0.getLog();
    java.nio.file.Path path9 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
    try {
      int int11 = enhancedBootstrapper0.start(path9, strMap10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNotNull(log2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertNull(databaseManagementService5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNotNull(log7);
    org.junit.Assert.assertNotNull(log8);
  }

  @Test
  public void test1378() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1378");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "hi!");
    org.neo4j.monitoring.Monitors monitors8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder3.setMonitors(
        monitors8);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.addDatabaseListener(
        databaseEventListener10);
    java.lang.String str12 = clusteringDBMSBuilder9.getEdition();
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder9.addURLAccessRule(
        "", uRLAccessRule14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder15.setMonitors(
        monitors16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "enterprise" + "'", str12, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
  }

  @Test
  public void test1379() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1379");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider11);
    java.nio.file.Path path13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.loadPropertiesFromFile(
        path13);
    java.nio.file.Path path15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = clusteringDBMSBuilder12.loadPropertiesFromFile(
        path15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
  }

  @Test
  public void test1380() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1380");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    int int1 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int2 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType3 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType4 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    int int5 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int6 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
  }

  @Test
  public void test1381() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1381");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder6.addURLAccessRule(
        "", uRLAccessRule10);
    org.neo4j.logging.LogProvider logProvider12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder6.setMonitors(
        monitors16);
    org.neo4j.monitoring.Monitors monitors18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder17.setMonitors(
        monitors18);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
  }

  @Test
  public void test1382() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1382");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    org.neo4j.graphdb.config.Configuration configuration8 = null;
    try {
      databaseManagementServiceClusterImpl5.createDatabase("", configuration8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1383() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1383");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    java.lang.String str9 = clusteringDBMSBuilder3.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder3.setMonitors(
        monitors12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.common.DependencyResolver dependencyResolver16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver16);
    org.neo4j.common.DependencyResolver dependencyResolver18 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder19 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver18);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "enterprise" + "'", str9, "enterprise");
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder19);
  }

  @Test
  public void test1384() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1384");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "hi!");
    org.neo4j.logging.LogProvider logProvider8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder3.setUserLogProvider(
        logProvider8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder3.setMonitors(
        monitors10);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener12 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener12);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "hi!");
    java.lang.Class<?> wildcardClass16 = clusteringDBMSBuilder3.getClass();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(wildcardClass16);
  }

  @Test
  public void test1385() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1385");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.common.DependencyResolver dependencyResolver2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver2);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener4 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder5 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener4);
    org.neo4j.monitoring.Monitors monitors6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.setMonitors(
        monitors6);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider12);
    org.neo4j.logging.LogProvider logProvider14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider14);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder9.addDatabaseListener(
        databaseEventListener16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
  }

  @Test
  public void test1386() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1386");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder6.addURLAccessRule(
        "", uRLAccessRule10);
    org.neo4j.logging.LogProvider logProvider12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder15.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.common.DependencyResolver dependencyResolver18 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder19 = clusteringDBMSBuilder15.setExternalDependencies(
        dependencyResolver18);
    java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder19.setConfigRaw(
          strMap20);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder19);
  }

  @Test
  public void test1387() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1387");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener6);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener8);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "hi!");
    java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder9.setConfigRaw(
          strMap12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
  }

  @Test
  public void test1388() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1388");
    }
    java.lang.String[] strArray0 = new java.lang.String[]{};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray0);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray0);
    org.junit.Assert.assertNotNull(strArray0);
  }

  @Test
  public void test1389() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1389");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction10 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction11 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv12 = null;
    metaUpgradeFlowAction11.accept(upgradeMetaEnv12);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = metaUpgradeFlowAction10.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction11);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction15 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction16 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv17 = null;
    metaUpgradeFlowAction16.accept(upgradeMetaEnv17);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction19 = metaUpgradeFlowAction15.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction16);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv20 = null;
    metaUpgradeFlowAction15.accept(upgradeMetaEnv20);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = metaUpgradeFlowAction11.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv24 = null;
    metaUpgradeFlowAction23.accept(upgradeMetaEnv24);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer26 = metaUpgradeFlowAction22.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction27 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction28 = metaUpgradeFlowAction4.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction27);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction29 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction30 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv31 = null;
    metaUpgradeFlowAction30.accept(upgradeMetaEnv31);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction33 = metaUpgradeFlowAction29.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction30);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction34 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction35 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv36 = null;
    metaUpgradeFlowAction35.accept(upgradeMetaEnv36);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction38 = metaUpgradeFlowAction34.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction35);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv39 = null;
    metaUpgradeFlowAction34.accept(upgradeMetaEnv39);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction41 = metaUpgradeFlowAction30.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction34);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = metaUpgradeFlowAction4.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction41);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv43 = null;
    metaUpgradeFlowAction41.accept(upgradeMetaEnv43);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer45 = null;
    try {
      java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer46 = metaUpgradeFlowAction41.andThen(
          upgradeMetaEnvConsumer45);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction10);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction11);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction15);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction16);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction19);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer26);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction28);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction29);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction30);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction33);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction34);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction35);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction38);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction41);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
  }

  @Test
  public void test1390() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1390");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    int int4 = enhancedBootstrapper0.stop();
    int int5 = enhancedBootstrapper0.stop();
    int int6 = enhancedBootstrapper0.stop();
    boolean boolean7 = enhancedBootstrapper0.isRunning();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService8 = enhancedBootstrapper0.getDatabaseManagementService();
    java.nio.file.Path path9 = null;
    java.nio.file.Path path10 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
    try {
      int int13 = enhancedBootstrapper0.start(path9, path10, strMap11, false);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNull(databaseManagementService8);
  }

  @Test
  public void test1391() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1391");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl8);
    try {
      java.util.List<java.lang.String> strList10 = databaseManagementServiceClusterImpl9.listDatabases();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1392() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1392");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver6);
    java.lang.String str8 = clusteringDBMSBuilder5.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver9);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.setUserLogProvider(
        logProvider13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "enterprise" + "'", str8, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
  }

  @Test
  public void test1393() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1393");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl8);
    try {
      databaseManagementServiceClusterImpl9.createDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1394() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1394");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.monitoring.Monitors monitors4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setMonitors(
        monitors4);
    java.lang.String str6 = clusteringDBMSBuilder1.getEdition();
    java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder1.setConfigRaw(
          strMap7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterprise" + "'", str6, "enterprise");
  }

  @Test
  public void test1395() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1395");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider16);
    java.nio.file.Path path18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        path18);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.logging.LogProvider logProvider22 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder23 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider22);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule25 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder26 = clusteringDBMSBuilder23.addURLAccessRule(
        "", uRLAccessRule25);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder21);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder23);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder26);
  }

  @Test
  public void test1396() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1396");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl10 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    try {
      boolean boolean12 = databaseManagementServiceClusterImpl6.isWraeForSt("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1397() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1397");
    }
    io.github.onograph.dbms.utils.TokenNamePropertyDTO tokenNamePropertyDTO2 = new io.github.onograph.dbms.utils.TokenNamePropertyDTO(
        "hi!", "");
    java.lang.String str3 = tokenNamePropertyDTO2.getStrNt();
    java.lang.String str4 = tokenNamePropertyDTO2.getStrNp();
    java.lang.String str5 = tokenNamePropertyDTO2.getStrNt();
    java.lang.String str6 = tokenNamePropertyDTO2.getStrNp();
    java.lang.String str7 = tokenNamePropertyDTO2.getStrNp();
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
  }

  @Test
  public void test1398() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1398");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService2 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    java.nio.file.Path path4 = null;
    java.nio.file.Path path5 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
    try {
      int int8 = enhancedBootstrapper0.start(path4, path5, strMap6, false);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNull(databaseManagementService2);
    org.junit.Assert.assertNull(databaseManagementService3);
  }

  @Test
  public void test1399() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1399");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider16);
    java.nio.file.Path path18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        path18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder9.setMonitors(
        monitors20);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule23 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder24 = clusteringDBMSBuilder9.addURLAccessRule(
        "enterprise", uRLAccessRule23);
    java.nio.file.Path path25 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder26 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        path25);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder21);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder24);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder26);
  }

  @Test
  public void test1400() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1400");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "");
    java.nio.file.Path path10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path10);
    java.nio.file.Path path12 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path12);
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService14 = clusteringDBMSBuilder5.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
  }

  @Test
  public void test1401() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1401");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl8);
    try {
      databaseManagementServiceClusterImpl9.startDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1402() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1402");
    }
    io.github.onograph.dbms.utils.TokenNamePropertyDTO tokenNamePropertyDTO2 = new io.github.onograph.dbms.utils.TokenNamePropertyDTO(
        "hi!", "hi!");
    java.lang.String str3 = tokenNamePropertyDTO2.getStrNt();
    java.lang.String str4 = tokenNamePropertyDTO2.getStrNt();
    java.lang.String str5 = tokenNamePropertyDTO2.getStrNt();
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
  }

  @Test
  public void test1403() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1403");
    }
    io.github.onograph.dbms.utils.TokenNamePropertyDTO tokenNamePropertyDTO2 = new io.github.onograph.dbms.utils.TokenNamePropertyDTO(
        "hi!", "hi!");
    java.lang.String str3 = tokenNamePropertyDTO2.getStrNt();
    java.lang.String str4 = tokenNamePropertyDTO2.getStrNp();
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
  }

  @Test
  public void test1404() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1404");
    }
    io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider commandGetServerIdCommandProvider0 = new io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider();
    org.neo4j.cli.Command.CommandType commandType1 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType2 = commandGetServerIdCommandProvider0.commandType();
    int int3 = commandGetServerIdCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType4 = commandGetServerIdCommandProvider0.commandType();
    int int5 = commandGetServerIdCommandProvider0.getPriority();
    int int6 = commandGetServerIdCommandProvider0.getPriority();
    org.neo4j.cli.ExecutionContext executionContext7 = null;
    try {
      io.github.onograph.dbms.commands.CommandGetServerIdImpl commandGetServerIdImpl8 = commandGetServerIdCommandProvider0.createCommand(
          executionContext7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue(
        "'" + commandType1 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType1.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
  }

  @Test
  public void test1405() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1405");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction10 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction11 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv12 = null;
    metaUpgradeFlowAction11.accept(upgradeMetaEnv12);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = metaUpgradeFlowAction10.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction11);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction15 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction16 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv17 = null;
    metaUpgradeFlowAction16.accept(upgradeMetaEnv17);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction19 = metaUpgradeFlowAction15.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction16);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv20 = null;
    metaUpgradeFlowAction15.accept(upgradeMetaEnv20);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = metaUpgradeFlowAction11.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv24 = null;
    metaUpgradeFlowAction23.accept(upgradeMetaEnv24);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer26 = metaUpgradeFlowAction22.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction23);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer27 = metaUpgradeFlowAction5.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction28 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction29 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv30 = null;
    metaUpgradeFlowAction29.accept(upgradeMetaEnv30);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction32 = metaUpgradeFlowAction28.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction29);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction33 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction34 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv35 = null;
    metaUpgradeFlowAction34.accept(upgradeMetaEnv35);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction37 = metaUpgradeFlowAction33.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction34);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction38 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction39 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv40 = null;
    metaUpgradeFlowAction39.accept(upgradeMetaEnv40);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = metaUpgradeFlowAction38.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction39);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction43 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction44 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv45 = null;
    metaUpgradeFlowAction44.accept(upgradeMetaEnv45);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction47 = metaUpgradeFlowAction43.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction44);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv48 = null;
    metaUpgradeFlowAction43.accept(upgradeMetaEnv48);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction50 = metaUpgradeFlowAction39.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction43);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction51 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv52 = null;
    metaUpgradeFlowAction51.accept(upgradeMetaEnv52);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer54 = metaUpgradeFlowAction50.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction51);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction55 = metaUpgradeFlowAction33.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction51);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction56 = metaUpgradeFlowAction32.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction55);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer57 = metaUpgradeFlowAction23.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction32);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction58 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction32);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv59 = null;
    metaUpgradeFlowAction0.accept(upgradeMetaEnv59);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction10);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction11);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction15);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction16);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction19);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer26);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction28);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction29);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction32);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction33);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction34);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction37);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction38);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction39);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction43);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction44);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction47);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction50);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction51);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer54);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction55);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction56);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer57);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction58);
  }

  @Test
  public void test1406() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1406");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.common.DependencyResolver dependencyResolver2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver2);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener4 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder5 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener4);
    org.neo4j.monitoring.Monitors monitors6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.setMonitors(
        monitors6);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder9.addDatabaseListener(
        databaseEventListener12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder13.setMonitors(
        monitors14);
    org.neo4j.common.DependencyResolver dependencyResolver16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder13.setExternalDependencies(
        dependencyResolver16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
  }

  @Test
  public void test1407() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1407");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService5 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean6 = enhancedBootstrapper0.isRunning();
    boolean boolean7 = enhancedBootstrapper0.isRunning();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertNull(databaseManagementService5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1408() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1408");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule12 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder6.addURLAccessRule(
        "hi!", uRLAccessRule12);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder6.addDatabaseListener(
        databaseEventListener14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
  }

  @Test
  public void test1409() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1409");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService2 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log3 = enhancedBootstrapper0.getLog();
    int int4 = enhancedBootstrapper0.stop();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNull(databaseManagementService2);
    org.junit.Assert.assertNotNull(log3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
  }

  @Test
  public void test1410() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1410");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService2 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log3 = enhancedBootstrapper0.getLog();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean5 = enhancedBootstrapper0.isRunning();
    java.lang.String[] strArray7 = new java.lang.String[]{""};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray7);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray7);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray7);
    try {
      int int11 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray7);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNull(databaseManagementService2);
    org.junit.Assert.assertNotNull(log3);
    org.junit.Assert.assertNull(databaseManagementService4);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertNotNull(strArray7);
  }

  @Test
  public void test1411() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1411");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    org.neo4j.graphdb.config.Configuration configuration6 = null;
    try {
      databaseManagementServiceClusterImpl4.createDatabase("", configuration6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1412() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1412");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    java.nio.file.Path path7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        path7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder8.addURLAccessRule(
        "hi!", uRLAccessRule10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
  }

  @Test
  public void test1413() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1413");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    java.nio.file.Path path9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path9);
    java.nio.file.Path path11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path11);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener13);
    java.nio.file.Path path15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder14.loadPropertiesFromFile(
        path15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
  }

  @Test
  public void test1414() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1414");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    org.neo4j.graphdb.config.Configuration configuration10 = null;
    try {
      databaseManagementServiceClusterImpl5.createDatabase("", configuration10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1415() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1415");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.common.DependencyResolver dependencyResolver2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver2);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener4 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder5 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener4);
    org.neo4j.logging.LogProvider logProvider6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder3.setUserLogProvider(
        logProvider6);
    java.lang.String str8 = clusteringDBMSBuilder7.getEdition();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "enterprise" + "'", str8, "enterprise");
  }

  @Test
  public void test1416() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1416");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener8 = null;
    try {
      databaseManagementServiceClusterImpl5.registerDatabaseEventListener(databaseEventListener8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1417() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1417");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    try {
      databaseManagementServiceClusterImpl6.startDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1418() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1418");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.addDatabaseListener(
        databaseEventListener11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder10.setMonitors(
        monitors13);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder14.addDatabaseListener(
        databaseEventListener15);
    org.neo4j.common.DependencyResolver dependencyResolver17 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder18 = clusteringDBMSBuilder14.setExternalDependencies(
        dependencyResolver17);
    java.lang.Class<?> wildcardClass19 = clusteringDBMSBuilder14.getClass();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder18);
    org.junit.Assert.assertNotNull(wildcardClass19);
  }

  @Test
  public void test1419() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1419");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    java.lang.String str11 = clusteringDBMSBuilder5.getEdition();
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder5.addURLAccessRule(
        "", uRLAccessRule13);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder14.addDatabaseListener(
        databaseEventListener15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "enterprise" + "'", str11, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
  }

  @Test
  public void test1420() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1420");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      java.util.List<java.lang.String> strList8 = databaseManagementServiceClusterImpl7.listDatabases();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1421() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1421");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      boolean boolean8 = databaseManagementServiceClusterImpl6.isWraeForSt("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1422() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1422");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      org.neo4j.graphdb.GraphDatabaseService graphDatabaseService11 = databaseManagementServiceClusterImpl5.database(
          "enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1423() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1423");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder9.addDatabaseListener(
        databaseEventListener12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder13.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder13.loadPropertiesFromFile(
        "");
    java.lang.Class<?> wildcardClass18 = databaseManagementServiceBuilder17.getClass();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
    org.junit.Assert.assertNotNull(wildcardClass18);
  }

  @Test
  public void test1424() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1424");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder6.addURLAccessRule(
        "", uRLAccessRule10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder11.setMonitors(
        monitors12);
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService14 = databaseManagementServiceBuilder13.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
  }

  @Test
  public void test1425() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1425");
    }
    io.github.onograph.dbms.utils.TokenNamePropertyDTO tokenNamePropertyDTO2 = new io.github.onograph.dbms.utils.TokenNamePropertyDTO(
        "hi!", "enterprise");
    java.lang.String str3 = tokenNamePropertyDTO2.getStrNp();
    java.lang.String str4 = tokenNamePropertyDTO2.getStrNt();
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
  }

  @Test
  public void test1426() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1426");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setConfigRaw(
          strMap6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
  }

  @Test
  public void test1427() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1427");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    int int4 = enhancedBootstrapper0.stop();
    int int5 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log6 = enhancedBootstrapper0.getLog();
    boolean boolean7 = enhancedBootstrapper0.isRunning();
    int int8 = enhancedBootstrapper0.stop();
    java.nio.file.Path path9 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
    try {
      int int11 = enhancedBootstrapper0.start(path9, strMap10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertNotNull(log6);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
  }

  @Test
  public void test1428() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1428");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    org.neo4j.logging.Log log5 = enhancedBootstrapper0.getLog();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService6 = enhancedBootstrapper0.getDatabaseManagementService();
    java.nio.file.Path path7 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
    try {
      int int9 = enhancedBootstrapper0.start(path7, strMap8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertNotNull(log5);
    org.junit.Assert.assertNull(databaseManagementService6);
  }

  @Test
  public void test1429() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1429");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      boolean boolean8 = databaseManagementServiceClusterImpl6.isWraeForSt("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1430() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1430");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener6);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener8);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "hi!");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder9.addDatabaseListener(
        databaseEventListener12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
  }

  @Test
  public void test1431() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1431");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule12 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder6.addURLAccessRule(
        "hi!", uRLAccessRule12);
    org.neo4j.logging.LogProvider logProvider14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = databaseManagementServiceBuilder13.setUserLogProvider(
        logProvider14);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = databaseManagementServiceBuilder13.addDatabaseListener(
        databaseEventListener16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
  }

  @Test
  public void test1432() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1432");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log2 = enhancedBootstrapper0.getLog();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService5 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean6 = enhancedBootstrapper0.isRunning();
    boolean boolean7 = enhancedBootstrapper0.isRunning();
    java.nio.file.Path path8 = null;
    java.nio.file.Path path9 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
    try {
      int int12 = enhancedBootstrapper0.start(path8, path9, strMap10, false);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNotNull(log2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertNull(databaseManagementService5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1433() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1433");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    java.lang.Class<?> wildcardClass7 = databaseManagementServiceClusterImpl6.getClass();
    org.junit.Assert.assertNotNull(wildcardClass7);
  }

  @Test
  public void test1434() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1434");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl5.startDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1435() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1435");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean5 = enhancedBootstrapper0.isRunning();
    int int6 = enhancedBootstrapper0.stop();
    boolean boolean7 = enhancedBootstrapper0.isRunning();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNull(databaseManagementService4);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1436() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1436");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider11);
    java.nio.file.Path path13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.loadPropertiesFromFile(
        path13);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = clusteringDBMSBuilder12.loadPropertiesFromFile(
        "hi!");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = databaseManagementServiceBuilder16.addURLAccessRule(
        "", uRLAccessRule18);
    org.neo4j.logging.LogProvider logProvider20 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder21 = databaseManagementServiceBuilder19.setUserLogProvider(
        logProvider20);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder21);
  }

  @Test
  public void test1437() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1437");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.monitoring.Monitors monitors4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setMonitors(
        monitors4);
    java.lang.String str6 = clusteringDBMSBuilder5.getEdition();
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener7);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "enterprise");
    java.lang.String str11 = clusteringDBMSBuilder5.getEdition();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterprise" + "'", str6, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "enterprise" + "'", str11, "enterprise");
  }

  @Test
  public void test1438() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1438");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "");
    java.lang.String str13 = clusteringDBMSBuilder12.getEdition();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "enterprise" + "'", str13, "enterprise");
  }

  @Test
  public void test1439() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1439");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder5.setMonitors(
        monitors9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider11);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "hi!");
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService15 = clusteringDBMSBuilder5.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
  }

  @Test
  public void test1440() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1440");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder10.setMonitors(
        monitors11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder10.setUserLogProvider(
        logProvider13);
    java.lang.Class<?> wildcardClass15 = clusteringDBMSBuilder14.getClass();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(wildcardClass15);
  }

  @Test
  public void test1441() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1441");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    org.neo4j.cli.Command.CommandType commandType1 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType2 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType3 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    int int4 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.ExecutionContext executionContext5 = null;
    try {
      io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommand nodeStoreWrapperCopyCommand6 = nodeStoreWrapperCopyCommandCommandProvider0.createCommand(
          executionContext5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue(
        "'" + commandType1 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType1.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
  }

  @Test
  public void test1442() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1442");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder6.addURLAccessRule(
        "", uRLAccessRule10);
    org.neo4j.logging.LogProvider logProvider12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder6.setMonitors(
        monitors16);
    org.neo4j.logging.LogProvider logProvider18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider18);
    org.neo4j.common.DependencyResolver dependencyResolver20 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver20);
    java.nio.file.Path path22 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder23 = clusteringDBMSBuilder21.loadPropertiesFromFile(
        path22);
    org.neo4j.monitoring.Monitors monitors24 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder25 = clusteringDBMSBuilder23.setMonitors(
        monitors24);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder21);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder23);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder25);
  }

  @Test
  public void test1443() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1443");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    int int5 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService6 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean7 = enhancedBootstrapper0.isRunning();
    int int8 = enhancedBootstrapper0.stop();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertNull(databaseManagementService6);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
  }

  @Test
  public void test1444() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1444");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    try {
      databaseManagementServiceClusterImpl5.dropDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1445() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1445");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener8 = null;
    try {
      databaseManagementServiceClusterImpl7.unregisterDatabaseEventListener(databaseEventListener8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1446() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1446");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean5 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log6 = enhancedBootstrapper0.getLog();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService7 = enhancedBootstrapper0.getDatabaseManagementService();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNull(databaseManagementService4);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertNotNull(log6);
    org.junit.Assert.assertNull(databaseManagementService7);
  }

  @Test
  public void test1447() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1447");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log2 = enhancedBootstrapper0.getLog();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService5 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log6 = enhancedBootstrapper0.getLog();
    int int7 = enhancedBootstrapper0.stop();
    java.lang.String[] strArray14 = new java.lang.String[]{"hi!", "hi!", "enterprise", "",
        "enterprise", "enterprise"};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray14);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray14);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray14);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray14);
    try {
      int int19 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray14);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNotNull(log2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertNull(databaseManagementService5);
    org.junit.Assert.assertNotNull(log6);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    org.junit.Assert.assertNotNull(strArray14);
  }

  @Test
  public void test1448() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1448");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    try {
      java.util.List<java.lang.String> strList6 = databaseManagementServiceClusterImpl4.listDatabases();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1449() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1449");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver5 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder6 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver5);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.logging.LogProvider logProvider9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder1.setMonitors(
        monitors11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder12.setUserLogProvider(
        logProvider13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
  }

  @Test
  public void test1450() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1450");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction10 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction11 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv12 = null;
    metaUpgradeFlowAction11.accept(upgradeMetaEnv12);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = metaUpgradeFlowAction10.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction11);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv15 = null;
    metaUpgradeFlowAction10.accept(upgradeMetaEnv15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction17 = metaUpgradeFlowAction6.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction10);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction18 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv19 = null;
    metaUpgradeFlowAction18.accept(upgradeMetaEnv19);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer21 = metaUpgradeFlowAction17.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction18);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction18);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction24 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv25 = null;
    metaUpgradeFlowAction24.accept(upgradeMetaEnv25);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction27 = metaUpgradeFlowAction23.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction24);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction28 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction29 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv30 = null;
    metaUpgradeFlowAction29.accept(upgradeMetaEnv30);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction32 = metaUpgradeFlowAction28.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction29);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv33 = null;
    metaUpgradeFlowAction28.accept(upgradeMetaEnv33);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction35 = metaUpgradeFlowAction24.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction28);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer36 = metaUpgradeFlowAction22.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction28);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv37 = null;
    metaUpgradeFlowAction22.accept(upgradeMetaEnv37);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction39 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction40 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv41 = null;
    metaUpgradeFlowAction40.accept(upgradeMetaEnv41);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction43 = metaUpgradeFlowAction39.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction40);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv44 = null;
    metaUpgradeFlowAction39.accept(upgradeMetaEnv44);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction46 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction47 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv48 = null;
    metaUpgradeFlowAction47.accept(upgradeMetaEnv48);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction50 = metaUpgradeFlowAction46.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction47);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer51 = metaUpgradeFlowAction39.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction46);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction52 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction53 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv54 = null;
    metaUpgradeFlowAction53.accept(upgradeMetaEnv54);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction56 = metaUpgradeFlowAction52.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction53);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction57 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction58 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv59 = null;
    metaUpgradeFlowAction58.accept(upgradeMetaEnv59);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction61 = metaUpgradeFlowAction57.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction58);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv62 = null;
    metaUpgradeFlowAction57.accept(upgradeMetaEnv62);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction64 = metaUpgradeFlowAction53.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction57);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction65 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv66 = null;
    metaUpgradeFlowAction65.accept(upgradeMetaEnv66);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer68 = metaUpgradeFlowAction64.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction65);
    org.neo4j.io.layout.Neo4jLayout neo4jLayout69 = null;
    io.github.onograph.dbms.MetaUpgradeFlowActionStagingImpl metaUpgradeFlowActionStagingImpl70 = new io.github.onograph.dbms.MetaUpgradeFlowActionStagingImpl(
        neo4jLayout69);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer71 = upgradeMetaEnvConsumer68.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowActionStagingImpl70);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer72 = upgradeMetaEnvConsumer51.andThen(
        upgradeMetaEnvConsumer68);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer73 = metaUpgradeFlowAction22.andThen(
        upgradeMetaEnvConsumer51);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction10);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction11);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction17);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction18);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer21);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction24);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction28);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction29);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction32);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction35);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer36);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction39);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction40);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction43);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction46);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction47);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction50);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer51);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction52);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction53);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction56);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction57);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction58);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction61);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction64);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction65);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer68);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer71);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer72);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer73);
  }

  @Test
  public void test1451() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1451");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    try {
      boolean boolean8 = databaseManagementServiceClusterImpl4.isWraeForSt("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1452() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1452");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    int int1 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int2 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int3 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType4 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType5 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    int int6 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType7 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType8 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.ExecutionContext executionContext9 = null;
    try {
      io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommand nodeStoreWrapperCopyCommand10 = nodeStoreWrapperCopyCommandCommandProvider0.createCommand(
          executionContext9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType5 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType5.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType7 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType7.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType8 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType8.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
  }

  @Test
  public void test1453() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1453");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener8 = null;
    try {
      databaseManagementServiceClusterImpl5.registerDatabaseEventListener(databaseEventListener8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1454() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1454");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    try {
      org.neo4j.graphdb.GraphDatabaseService graphDatabaseService9 = databaseManagementServiceClusterImpl6.database(
          "hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1455() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1455");
    }
    io.github.onograph.server.EntryPointImpl entryPointImpl0 = new io.github.onograph.server.EntryPointImpl();
    org.neo4j.server.startup.EntryPoint.Priority priority1 = entryPointImpl0.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority2 = entryPointImpl0.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority3 = entryPointImpl0.getPriority();
    io.github.onograph.server.EntryPointImpl entryPointImpl4 = new io.github.onograph.server.EntryPointImpl();
    int int5 = entryPointImpl0.compareTo((org.neo4j.server.startup.EntryPoint) entryPointImpl4);
    org.neo4j.server.startup.EntryPoint.Priority priority6 = entryPointImpl4.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority7 = entryPointImpl4.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority8 = entryPointImpl4.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority9 = entryPointImpl4.getPriority();
    org.junit.Assert.assertTrue(
        "'" + priority1 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority1.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority2 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority2.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority3 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority3.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertTrue(
        "'" + priority6 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority6.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority7 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority7.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority8 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority8.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority9 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority9.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
  }

  @Test
  public void test1456() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1456");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder7.setUserLogProvider(
        logProvider8);
    java.lang.String str10 = clusteringDBMSBuilder9.getEdition();
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder9.addURLAccessRule(
        "hi!", uRLAccessRule12);
    java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder9.setConfigRaw(
          strMap14);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "enterprise" + "'", str10, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
  }

  @Test
  public void test1457() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1457");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener8 = null;
    try {
      databaseManagementServiceClusterImpl7.unregisterDatabaseEventListener(databaseEventListener8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1458() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1458");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver10);
    java.nio.file.Path path12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path12);
    java.nio.file.Path path14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path14);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder15.loadPropertiesFromFile(
        "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
  }

  @Test
  public void test1459() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1459");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.common.DependencyResolver dependencyResolver2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver2);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener4 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder5 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener4);
    java.lang.String str6 = clusteringDBMSBuilder3.getEdition();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterprise" + "'", str6, "enterprise");
  }

  @Test
  public void test1460() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1460");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService2 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    java.lang.String[] strArray8 = new java.lang.String[]{"enterprise", "enterprise", "hi!", ""};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray8);
    try {
      int int10 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray8);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNull(databaseManagementService2);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertNotNull(strArray8);
  }

  @Test
  public void test1461() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1461");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "hi!");
    org.neo4j.monitoring.Monitors monitors8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder3.setMonitors(
        monitors8);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.addDatabaseListener(
        databaseEventListener10);
    java.nio.file.Path path12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder11.loadPropertiesFromFile(
        path12);
    org.neo4j.logging.LogProvider logProvider14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder11.setUserLogProvider(
        logProvider14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
  }

  @Test
  public void test1462() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1462");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    int int5 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log6 = enhancedBootstrapper0.getLog();
    boolean boolean7 = enhancedBootstrapper0.isRunning();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService8 = enhancedBootstrapper0.getDatabaseManagementService();
    java.nio.file.Path path9 = null;
    java.nio.file.Path path10 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
    try {
      int int13 = enhancedBootstrapper0.start(path9, path10, strMap11, true);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNull(databaseManagementService4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertNotNull(log6);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNull(databaseManagementService8);
  }

  @Test
  public void test1463() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1463");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl8.shutdownDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1464() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1464");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener7 = null;
    try {
      databaseManagementServiceClusterImpl4.registerDatabaseEventListener(databaseEventListener7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1465() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1465");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    java.lang.String str6 = clusteringDBMSBuilder3.getEdition();
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.setMonitors(
        monitors7);
    java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder8.setConfigRaw(
          strMap9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterprise" + "'", str6, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
  }

  @Test
  public void test1466() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1466");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.addDatabaseListener(
        databaseEventListener11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder10.setMonitors(
        monitors13);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder14.addDatabaseListener(
        databaseEventListener15);
    java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder18 = clusteringDBMSBuilder16.setConfigRaw(
          strMap17);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
  }

  @Test
  public void test1467() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1467");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder9.addDatabaseListener(
        databaseEventListener12);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder9.addURLAccessRule(
        "hi!", uRLAccessRule15);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener17 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder18 = clusteringDBMSBuilder16.addDatabaseListener(
        databaseEventListener17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder18);
  }

  @Test
  public void test1468() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1468");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    int int4 = enhancedBootstrapper0.stop();
    int int5 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log6 = enhancedBootstrapper0.getLog();
    org.neo4j.logging.Log log7 = enhancedBootstrapper0.getLog();
    int int8 = enhancedBootstrapper0.stop();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertNotNull(log6);
    org.junit.Assert.assertNotNull(log7);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
  }

  @Test
  public void test1469() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1469");
    }
    io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider commandGetServerIdCommandProvider0 = new io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider();
    org.neo4j.cli.Command.CommandType commandType1 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType2 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType3 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType4 = commandGetServerIdCommandProvider0.commandType();
    int int5 = commandGetServerIdCommandProvider0.getPriority();
    int int6 = commandGetServerIdCommandProvider0.getPriority();
    int int7 = commandGetServerIdCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType8 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType9 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.ExecutionContext executionContext10 = null;
    try {
      io.github.onograph.dbms.commands.CommandGetServerIdImpl commandGetServerIdImpl11 = commandGetServerIdCommandProvider0.createCommand(
          executionContext10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue(
        "'" + commandType1 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType1.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType8 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType8.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType9 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType9.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
  }

  @Test
  public void test1470() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1470");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider11);
    java.nio.file.Path path13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder14.setMonitors(
        monitors15);
    org.neo4j.common.DependencyResolver dependencyResolver17 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder18 = clusteringDBMSBuilder16.setExternalDependencies(
        dependencyResolver17);
    java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder20 = clusteringDBMSBuilder16.setConfigRaw(
          strMap19);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder18);
  }

  @Test
  public void test1471() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1471");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver10);
    org.neo4j.common.DependencyResolver dependencyResolver12 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = databaseManagementServiceBuilder11.setExternalDependencies(
        dependencyResolver12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = databaseManagementServiceBuilder11.setExternalDependencies(
        dependencyResolver14);
    java.nio.file.Path path16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = databaseManagementServiceBuilder15.loadPropertiesFromFile(
        path16);
    org.neo4j.monitoring.Monitors monitors18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = databaseManagementServiceBuilder17.setMonitors(
        monitors18);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
  }

  @Test
  public void test1472() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1472");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder7.setMonitors(
        monitors8);
    org.neo4j.logging.LogProvider logProvider10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder7.setUserLogProvider(
        logProvider10);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder7.loadPropertiesFromFile(
        "hi!");
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder7.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder15.setExternalDependencies(
        dependencyResolver16);
    org.neo4j.monitoring.Monitors monitors18 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder19 = clusteringDBMSBuilder15.setMonitors(
        monitors18);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder19);
  }

  @Test
  public void test1473() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1473");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.addDatabaseListener(
        databaseEventListener7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder6.addURLAccessRule(
        "", uRLAccessRule10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
  }

  @Test
  public void test1474() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1474");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule10);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder11.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder11.addURLAccessRule(
        "enterprise", uRLAccessRule15);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener17 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder18 = clusteringDBMSBuilder11.addDatabaseListener(
        databaseEventListener17);
    org.neo4j.monitoring.Monitors monitors19 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder20 = clusteringDBMSBuilder11.setMonitors(
        monitors19);
    java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder22 = clusteringDBMSBuilder20.setConfigRaw(
          strMap21);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder18);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder20);
  }

  @Test
  public void test1475() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1475");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
  }

  @Test
  public void test1476() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1476");
    }
    io.github.onograph.dbms.utils.TokenNamePropertyDTO tokenNamePropertyDTO2 = new io.github.onograph.dbms.utils.TokenNamePropertyDTO(
        "hi!", "");
    java.lang.String str3 = tokenNamePropertyDTO2.getStrNt();
    java.lang.String str4 = tokenNamePropertyDTO2.getStrNt();
    java.lang.String str5 = tokenNamePropertyDTO2.getStrNp();
    java.lang.String str6 = tokenNamePropertyDTO2.getStrNp();
    java.lang.String str7 = tokenNamePropertyDTO2.getStrNt();
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
  }

  @Test
  public void test1477() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1477");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction10 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction11 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv12 = null;
    metaUpgradeFlowAction11.accept(upgradeMetaEnv12);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = metaUpgradeFlowAction10.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction11);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction15 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction16 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv17 = null;
    metaUpgradeFlowAction16.accept(upgradeMetaEnv17);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction19 = metaUpgradeFlowAction15.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction16);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv20 = null;
    metaUpgradeFlowAction15.accept(upgradeMetaEnv20);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = metaUpgradeFlowAction11.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv24 = null;
    metaUpgradeFlowAction23.accept(upgradeMetaEnv24);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer26 = metaUpgradeFlowAction22.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction27 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction28 = metaUpgradeFlowAction4.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction27);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction29 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer30 = metaUpgradeFlowAction28.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction29);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction31 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction32 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv33 = null;
    metaUpgradeFlowAction32.accept(upgradeMetaEnv33);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction35 = metaUpgradeFlowAction31.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction32);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction36 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction37 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv38 = null;
    metaUpgradeFlowAction37.accept(upgradeMetaEnv38);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction40 = metaUpgradeFlowAction36.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction37);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction41 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv43 = null;
    metaUpgradeFlowAction42.accept(upgradeMetaEnv43);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction45 = metaUpgradeFlowAction41.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction42);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction46 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction47 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv48 = null;
    metaUpgradeFlowAction47.accept(upgradeMetaEnv48);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction50 = metaUpgradeFlowAction46.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction47);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv51 = null;
    metaUpgradeFlowAction46.accept(upgradeMetaEnv51);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction53 = metaUpgradeFlowAction42.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction46);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction54 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv55 = null;
    metaUpgradeFlowAction54.accept(upgradeMetaEnv55);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer57 = metaUpgradeFlowAction53.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction54);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction58 = metaUpgradeFlowAction36.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction54);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction59 = metaUpgradeFlowAction35.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction58);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction60 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer61 = metaUpgradeFlowAction59.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction60);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer62 = metaUpgradeFlowAction29.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction60);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv63 = null;
    metaUpgradeFlowAction60.accept(upgradeMetaEnv63);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction10);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction11);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction15);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction16);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction19);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer26);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction28);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction29);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer30);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction31);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction32);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction35);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction36);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction37);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction40);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction41);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction45);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction46);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction47);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction50);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction53);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction54);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer57);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction58);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction59);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction60);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer61);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer62);
  }

  @Test
  public void test1478() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1478");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    try {
      databaseManagementServiceClusterImpl4.dropDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1479() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1479");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.monitoring.Monitors monitors4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setMonitors(
        monitors4);
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver6);
    org.neo4j.common.DependencyResolver dependencyResolver8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver8);
    org.neo4j.logging.LogProvider logProvider10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider10);
    org.neo4j.logging.LogProvider logProvider12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
  }

  @Test
  public void test1480() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1480");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl7);
    try {
      databaseManagementServiceClusterImpl7.shutdownDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1481() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1481");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule10);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder11.loadPropertiesFromFile(
        "enterprise");
    java.nio.file.Path path14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder13.loadPropertiesFromFile(
        path14);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule17 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder18 = clusteringDBMSBuilder13.addURLAccessRule(
        "enterprise", uRLAccessRule17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder18);
  }

  @Test
  public void test1482() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1482");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.common.DependencyResolver dependencyResolver2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver2);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener4 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder5 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener4);
    org.neo4j.logging.LogProvider logProvider6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder3.setUserLogProvider(
        logProvider6);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "hi!");
    java.nio.file.Path path10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        path10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
  }

  @Test
  public void test1483() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1483");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    java.lang.String str9 = clusteringDBMSBuilder3.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder3.setMonitors(
        monitors12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver14);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.common.DependencyResolver dependencyResolver18 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder19 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver18);
    org.neo4j.logging.LogProvider logProvider20 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder3.setUserLogProvider(
        logProvider20);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "enterprise" + "'", str9, "enterprise");
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder21);
  }

  @Test
  public void test1484() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1484");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    try {
      boolean boolean7 = databaseManagementServiceClusterImpl5.isWraeForSt("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1485() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1485");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    try {
      databaseManagementServiceClusterImpl8.registerDatabaseEventListener(databaseEventListener9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1486() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1486");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      java.util.List<java.lang.String> strList7 = databaseManagementServiceClusterImpl5.listDatabases();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1487() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1487");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    try {
      databaseManagementServiceClusterImpl2.dropDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1488() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1488");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
  }

  @Test
  public void test1489() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1489");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl10 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    try {
      databaseManagementServiceClusterImpl10.shutdown();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1490() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1490");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder8.addDatabaseListener(
        databaseEventListener9);
    java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder8.setConfigRaw(
          strMap11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
  }

  @Test
  public void test1491() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1491");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.common.DependencyResolver dependencyResolver2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver2);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener4 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder5 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener4);
    org.neo4j.monitoring.Monitors monitors6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.setMonitors(
        monitors6);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider12 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder11.setUserLogProvider(
        logProvider12);
    java.lang.Class<?> wildcardClass14 = databaseManagementServiceBuilder13.getClass();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(wildcardClass14);
  }

  @Test
  public void test1492() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1492");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    int int1 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType2 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    int int3 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int4 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int5 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
  }

  @Test
  public void test1493() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1493");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.common.DependencyResolver dependencyResolver2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver2);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener4 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder5 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener4);
    org.neo4j.monitoring.Monitors monitors6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.setMonitors(
        monitors6);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "");
    java.lang.String str12 = clusteringDBMSBuilder11.getEdition();
    java.util.Map<java.lang.String, java.lang.String> strMap13 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder11.setConfigRaw(
          strMap13);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "enterprise" + "'", str12, "enterprise");
  }

  @Test
  public void test1494() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1494");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      org.neo4j.graphdb.GraphDatabaseService graphDatabaseService8 = databaseManagementServiceClusterImpl6.database(
          "hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1495() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1495");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    java.nio.file.Path path9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path9);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder3.setUserLogProvider(
        logProvider13);
    org.neo4j.common.DependencyResolver dependencyResolver15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder14.setExternalDependencies(
        dependencyResolver15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
  }

  @Test
  public void test1496() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1496");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        "hi!");
    org.neo4j.common.DependencyResolver dependencyResolver11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.setMonitors(
        monitors13);
    org.neo4j.logging.LogProvider logProvider15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder14.setUserLogProvider(
        logProvider15);
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService17 = clusteringDBMSBuilder14.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
  }

  @Test
  public void test1497() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1497");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver10);
    java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder11.setConfigRaw(
          strMap12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
  }

  @Test
  public void test1498() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1498");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    java.lang.String str10 = clusteringDBMSBuilder5.getEdition();
    java.nio.file.Path path11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path11);
    java.nio.file.Path path13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder12.loadPropertiesFromFile(
        path13);
    java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder12.setConfigRaw(
          strMap15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "enterprise" + "'", str10, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
  }

  @Test
  public void test1499() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1499");
    }
    java.time.Clock clock0 = null;
    org.neo4j.kernel.database.DatabaseIdRepository databaseIdRepository1 = null;
    io.github.onograph.dbms.DbmsManagerWatchTagImpl dbmsManagerWatchTagImpl2 = null;
    java.time.ZoneId zoneId3 = null;
    io.github.onograph.dbms.serverproc.BasicProcedureQuarantineDatabaseImpl basicProcedureQuarantineDatabaseImpl4 = io.github.onograph.dbms.serverproc.BasicProcedureQuarantineDatabaseImpl.clsrBasicProcedureQuarantineDatabaseImpl(
        clock0, databaseIdRepository1, dbmsManagerWatchTagImpl2, zoneId3);
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature5 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature6 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature7 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature8 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.kernel.api.procedure.Context context9 = null;
    org.neo4j.values.AnyValue anyValue10 = null;
    org.neo4j.values.AnyValue[] anyValueArray11 = new org.neo4j.values.AnyValue[]{anyValue10};
    org.neo4j.kernel.api.ResourceTracker resourceTracker12 = null;
    try {
      org.neo4j.collection.RawIterator<org.neo4j.values.AnyValue[], org.neo4j.internal.kernel.api.exceptions.ProcedureException> anyValueArrayRawIterator13 = basicProcedureQuarantineDatabaseImpl4.apply(
          context9, anyValueArray11, resourceTracker12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalArgumentException; message: *** Error: c3bc6648-f892-4d86-9614-b53ef18de3fb");
    } catch (java.lang.IllegalArgumentException e) {
    }
    org.junit.Assert.assertNotNull(basicProcedureQuarantineDatabaseImpl4);
    org.junit.Assert.assertNotNull(procedureSignature5);
    org.junit.Assert.assertNotNull(procedureSignature6);
    org.junit.Assert.assertNotNull(procedureSignature7);
    org.junit.Assert.assertNotNull(procedureSignature8);
    org.junit.Assert.assertNotNull(anyValueArray11);
  }

  @Test
  public void test1500() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1500");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      boolean boolean9 = databaseManagementServiceClusterImpl5.isWraeForSt("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }
}


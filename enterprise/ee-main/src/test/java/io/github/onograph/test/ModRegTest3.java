package io.github.onograph.test;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class ModRegTest3 {

  public static boolean debug = false;

  @Test
  public void test1501() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1501");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder7.setMonitors(
        monitors8);
    org.neo4j.logging.LogProvider logProvider10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder7.setUserLogProvider(
        logProvider10);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder7.loadPropertiesFromFile(
        "hi!");
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder7.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder15.setExternalDependencies(
        dependencyResolver16);
    try {
      io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl18 = clusteringDBMSBuilder15.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
  }

  @Test
  public void test1502() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1502");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    int int5 = enhancedBootstrapper0.stop();
    int int6 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log7 = enhancedBootstrapper0.getLog();
    java.nio.file.Path path8 = null;
    java.nio.file.Path path9 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
    try {
      int int12 = enhancedBootstrapper0.start(path8, path9, strMap10, true);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    org.junit.Assert.assertNotNull(log7);
  }

  @Test
  public void test1503() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1503");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    try {
      org.neo4j.graphdb.GraphDatabaseService graphDatabaseService9 = databaseManagementServiceClusterImpl6.database(
          "hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1504() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1504");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    try {
      databaseManagementServiceClusterImpl6.createDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1505() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1505");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder5.setMonitors(
        monitors9);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener11);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.loadPropertiesFromFile(
        "hi!");
    java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = clusteringDBMSBuilder12.setConfigRaw(
          strMap15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
  }

  @Test
  public void test1506() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1506");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.setMonitors(
        monitors11);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder10.addURLAccessRule(
        "hi!", uRLAccessRule14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder10.setUserLogProvider(
        logProvider16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
  }

  @Test
  public void test1507() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1507");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    int int4 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log5 = enhancedBootstrapper0.getLog();
    boolean boolean6 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log7 = enhancedBootstrapper0.getLog();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertNotNull(log5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNotNull(log7);
  }

  @Test
  public void test1508() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1508");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log2 = enhancedBootstrapper0.getLog();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService5 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log6 = enhancedBootstrapper0.getLog();
    java.nio.file.Path path7 = null;
    java.nio.file.Path path8 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
    try {
      int int11 = enhancedBootstrapper0.start(path7, path8, strMap9, true);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNotNull(log2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertNull(databaseManagementService5);
    org.junit.Assert.assertNotNull(log6);
  }

  @Test
  public void test1509() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1509");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl1);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener4 = null;
    try {
      databaseManagementServiceClusterImpl3.unregisterDatabaseEventListener(databaseEventListener4);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1510() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1510");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    int int4 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log5 = enhancedBootstrapper0.getLog();
    int int6 = enhancedBootstrapper0.stop();
    int int7 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log8 = enhancedBootstrapper0.getLog();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService9 = enhancedBootstrapper0.getDatabaseManagementService();
    int int10 = enhancedBootstrapper0.stop();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertNotNull(log5);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    org.junit.Assert.assertNotNull(log8);
    org.junit.Assert.assertNull(databaseManagementService9);
    org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
  }

  @Test
  public void test1511() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1511");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    org.neo4j.cli.Command.CommandType commandType1 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType2 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    int int3 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType4 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType5 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    int int6 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.ExecutionContext executionContext7 = null;
    try {
      io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommand nodeStoreWrapperCopyCommand8 = nodeStoreWrapperCopyCommandCommandProvider0.createCommand(
          executionContext7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue(
        "'" + commandType1 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType1.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType5 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType5.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
  }

  @Test
  public void test1512() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1512");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    boolean boolean4 = enhancedBootstrapper0.isRunning();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService5 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService6 = enhancedBootstrapper0.getDatabaseManagementService();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNull(databaseManagementService5);
    org.junit.Assert.assertNull(databaseManagementService6);
  }

  @Test
  public void test1513() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1513");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver9);
    java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder6.setConfigRaw(
          strMap11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
  }

  @Test
  public void test1514() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1514");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder9.addDatabaseListener(
        databaseEventListener12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder9.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder15.addDatabaseListener(
        databaseEventListener16);
    org.neo4j.common.DependencyResolver dependencyResolver18 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder19 = clusteringDBMSBuilder15.setExternalDependencies(
        dependencyResolver18);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder19);
  }

  @Test
  public void test1515() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1515");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        "hi!");
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        "");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
  }

  @Test
  public void test1516() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1516");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction10 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction11 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv12 = null;
    metaUpgradeFlowAction11.accept(upgradeMetaEnv12);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = metaUpgradeFlowAction10.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction11);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv15 = null;
    metaUpgradeFlowAction10.accept(upgradeMetaEnv15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction17 = metaUpgradeFlowAction6.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction10);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction18 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv19 = null;
    metaUpgradeFlowAction18.accept(upgradeMetaEnv19);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer21 = metaUpgradeFlowAction17.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction18);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer22 = metaUpgradeFlowAction0.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction18);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction24 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv25 = null;
    metaUpgradeFlowAction24.accept(upgradeMetaEnv25);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction27 = metaUpgradeFlowAction23.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction24);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction28 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction29 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv30 = null;
    metaUpgradeFlowAction29.accept(upgradeMetaEnv30);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction32 = metaUpgradeFlowAction28.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction29);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction33 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction34 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv35 = null;
    metaUpgradeFlowAction34.accept(upgradeMetaEnv35);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction37 = metaUpgradeFlowAction33.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction34);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction38 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction39 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv40 = null;
    metaUpgradeFlowAction39.accept(upgradeMetaEnv40);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = metaUpgradeFlowAction38.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction39);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv43 = null;
    metaUpgradeFlowAction38.accept(upgradeMetaEnv43);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction45 = metaUpgradeFlowAction34.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction38);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction46 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv47 = null;
    metaUpgradeFlowAction46.accept(upgradeMetaEnv47);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer49 = metaUpgradeFlowAction45.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction46);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction50 = metaUpgradeFlowAction28.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction46);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction51 = metaUpgradeFlowAction27.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction50);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction52 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer53 = metaUpgradeFlowAction51.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction52);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction54 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction55 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv56 = null;
    metaUpgradeFlowAction55.accept(upgradeMetaEnv56);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction58 = metaUpgradeFlowAction54.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction55);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction59 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction60 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv61 = null;
    metaUpgradeFlowAction60.accept(upgradeMetaEnv61);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction63 = metaUpgradeFlowAction59.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction60);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction64 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction65 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv66 = null;
    metaUpgradeFlowAction65.accept(upgradeMetaEnv66);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction68 = metaUpgradeFlowAction64.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction65);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction69 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction70 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv71 = null;
    metaUpgradeFlowAction70.accept(upgradeMetaEnv71);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction73 = metaUpgradeFlowAction69.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction70);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv74 = null;
    metaUpgradeFlowAction69.accept(upgradeMetaEnv74);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction76 = metaUpgradeFlowAction65.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction69);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction77 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv78 = null;
    metaUpgradeFlowAction77.accept(upgradeMetaEnv78);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer80 = metaUpgradeFlowAction76.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction77);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction81 = metaUpgradeFlowAction59.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction77);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction82 = metaUpgradeFlowAction58.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction81);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction83 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer84 = metaUpgradeFlowAction82.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction83);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer85 = metaUpgradeFlowAction52.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction83);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction86 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction83);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction87 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction88 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv89 = null;
    metaUpgradeFlowAction88.accept(upgradeMetaEnv89);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction91 = metaUpgradeFlowAction87.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction88);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction92 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction87);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv93 = null;
    metaUpgradeFlowAction0.accept(upgradeMetaEnv93);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction10);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction11);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction17);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction18);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer21);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction24);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction28);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction29);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction32);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction33);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction34);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction37);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction38);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction39);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction45);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction46);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer49);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction50);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction51);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction52);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer53);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction54);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction55);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction58);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction59);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction60);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction63);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction64);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction65);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction68);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction69);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction70);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction73);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction76);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction77);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer80);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction81);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction82);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction83);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer84);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer85);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction86);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction87);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction88);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction91);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction92);
  }

  @Test
  public void test1517() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1517");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder6.addURLAccessRule(
        "enterprise", uRLAccessRule12);
    java.nio.file.Path path14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        path14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder6.setMonitors(
        monitors16);
    org.neo4j.common.DependencyResolver dependencyResolver18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder17.setExternalDependencies(
        dependencyResolver18);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener20 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder21 = databaseManagementServiceBuilder19.addDatabaseListener(
        databaseEventListener20);
    java.nio.file.Path path22 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder23 = databaseManagementServiceBuilder21.loadPropertiesFromFile(
        path22);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder21);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder23);
  }

  @Test
  public void test1518() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1518");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv10 = null;
    metaUpgradeFlowAction5.accept(upgradeMetaEnv10);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction12 = metaUpgradeFlowAction1.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction5);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv13 = null;
    metaUpgradeFlowAction5.accept(upgradeMetaEnv13);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction15 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction16 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv17 = null;
    metaUpgradeFlowAction16.accept(upgradeMetaEnv17);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction19 = metaUpgradeFlowAction15.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction16);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction20 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction21 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv22 = null;
    metaUpgradeFlowAction21.accept(upgradeMetaEnv22);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction24 = metaUpgradeFlowAction20.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction21);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction25 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction26 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv27 = null;
    metaUpgradeFlowAction26.accept(upgradeMetaEnv27);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction29 = metaUpgradeFlowAction25.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction26);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv30 = null;
    metaUpgradeFlowAction25.accept(upgradeMetaEnv30);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction32 = metaUpgradeFlowAction21.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction25);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction33 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv34 = null;
    metaUpgradeFlowAction33.accept(upgradeMetaEnv34);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer36 = metaUpgradeFlowAction32.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction33);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction37 = metaUpgradeFlowAction15.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction33);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction38 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction39 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv40 = null;
    metaUpgradeFlowAction39.accept(upgradeMetaEnv40);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = metaUpgradeFlowAction38.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction39);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction43 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction44 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv45 = null;
    metaUpgradeFlowAction44.accept(upgradeMetaEnv45);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction47 = metaUpgradeFlowAction43.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction44);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv48 = null;
    metaUpgradeFlowAction43.accept(upgradeMetaEnv48);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction50 = metaUpgradeFlowAction39.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction43);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer51 = metaUpgradeFlowAction37.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction43);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction52 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction53 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv54 = null;
    metaUpgradeFlowAction53.accept(upgradeMetaEnv54);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction56 = metaUpgradeFlowAction52.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction53);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction57 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction58 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv59 = null;
    metaUpgradeFlowAction58.accept(upgradeMetaEnv59);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction61 = metaUpgradeFlowAction57.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction58);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv62 = null;
    metaUpgradeFlowAction57.accept(upgradeMetaEnv62);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction64 = metaUpgradeFlowAction53.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction57);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction65 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv66 = null;
    metaUpgradeFlowAction65.accept(upgradeMetaEnv66);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer68 = metaUpgradeFlowAction64.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction65);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction69 = metaUpgradeFlowAction43.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction65);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction70 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction71 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv72 = null;
    metaUpgradeFlowAction71.accept(upgradeMetaEnv72);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction74 = metaUpgradeFlowAction70.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction71);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction75 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction76 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv77 = null;
    metaUpgradeFlowAction76.accept(upgradeMetaEnv77);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction79 = metaUpgradeFlowAction75.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction76);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction80 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction81 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv82 = null;
    metaUpgradeFlowAction81.accept(upgradeMetaEnv82);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction84 = metaUpgradeFlowAction80.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction81);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv85 = null;
    metaUpgradeFlowAction80.accept(upgradeMetaEnv85);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction87 = metaUpgradeFlowAction76.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction80);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction88 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv89 = null;
    metaUpgradeFlowAction88.accept(upgradeMetaEnv89);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer91 = metaUpgradeFlowAction87.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction88);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction92 = metaUpgradeFlowAction70.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction88);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction93 = metaUpgradeFlowAction65.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction92);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer94 = metaUpgradeFlowAction5.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction93);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer95 = null;
    try {
      java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer96 = metaUpgradeFlowAction5.andThen(
          upgradeMetaEnvConsumer95);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction12);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction15);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction16);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction19);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction20);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction21);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction24);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction25);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction26);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction29);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction32);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction33);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer36);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction37);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction38);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction39);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction43);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction44);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction47);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction50);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer51);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction52);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction53);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction56);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction57);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction58);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction61);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction64);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction65);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer68);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction69);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction70);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction71);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction74);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction75);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction76);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction79);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction80);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction81);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction84);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction87);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction88);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer91);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction92);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction93);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer94);
  }

  @Test
  public void test1519() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1519");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.common.DependencyResolver dependencyResolver2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver2);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener4 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder5 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener4);
    org.neo4j.monitoring.Monitors monitors6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.setMonitors(
        monitors6);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider12);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder15.addDatabaseListener(
        databaseEventListener16);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder19 = clusteringDBMSBuilder15.loadPropertiesFromFile(
        "hi!");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder19);
  }

  @Test
  public void test1520() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1520");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider11);
    java.nio.file.Path path13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.loadPropertiesFromFile(
        path13);
    org.neo4j.logging.LogProvider logProvider15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = clusteringDBMSBuilder14.setUserLogProvider(
        logProvider15);
    org.neo4j.logging.LogProvider logProvider17 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder18 = clusteringDBMSBuilder14.setUserLogProvider(
        logProvider17);
    org.neo4j.monitoring.Monitors monitors19 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder20 = clusteringDBMSBuilder14.setMonitors(
        monitors19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder18);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder20);
  }

  @Test
  public void test1521() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1521");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.setMonitors(
        monitors11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.setMonitors(
        monitors13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = clusteringDBMSBuilder14.setMonitors(
        monitors15);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder18 = clusteringDBMSBuilder14.setMonitors(
        monitors17);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule20 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder14.addURLAccessRule(
        "enterprise", uRLAccessRule20);
    org.neo4j.logging.LogProvider logProvider22 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder23 = clusteringDBMSBuilder14.setUserLogProvider(
        logProvider22);
    org.neo4j.logging.LogProvider logProvider24 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder25 = clusteringDBMSBuilder14.setUserLogProvider(
        logProvider24);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder18);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder21);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder23);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder25);
  }

  @Test
  public void test1522() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1522");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider16);
    java.nio.file.Path path18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        path18);
    org.neo4j.common.DependencyResolver dependencyResolver20 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder21 = databaseManagementServiceBuilder19.setExternalDependencies(
        dependencyResolver20);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder21);
  }

  @Test
  public void test1523() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1523");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    java.lang.String str9 = clusteringDBMSBuilder3.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver10);
    java.nio.file.Path path12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "enterprise" + "'", str9, "enterprise");
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
  }

  @Test
  public void test1524() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1524");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder5.setMonitors(
        monitors9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider11);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "hi!");
    org.neo4j.common.DependencyResolver dependencyResolver15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver15);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener17 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder18 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener17);
    java.nio.file.Path path19 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder20 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder18);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder20);
  }

  @Test
  public void test1525() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1525");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log2 = enhancedBootstrapper0.getLog();
    int int3 = enhancedBootstrapper0.stop();
    int int4 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService5 = enhancedBootstrapper0.getDatabaseManagementService();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNotNull(log2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertNull(databaseManagementService5);
  }

  @Test
  public void test1526() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1526");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    int int5 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log6 = enhancedBootstrapper0.getLog();
    boolean boolean7 = enhancedBootstrapper0.isRunning();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService8 = enhancedBootstrapper0.getDatabaseManagementService();
    int int9 = enhancedBootstrapper0.stop();
    java.lang.String[] strArray12 = new java.lang.String[]{"enterprise", "enterprise"};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray12);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray12);
    try {
      int int15 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray12);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNull(databaseManagementService4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertNotNull(log6);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNull(databaseManagementService8);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    org.junit.Assert.assertNotNull(strArray12);
  }

  @Test
  public void test1527() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1527");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    try {
      boolean boolean6 = databaseManagementServiceClusterImpl4.isWraeForSt("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1528() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1528");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver10);
    java.nio.file.Path path12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder13.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder13.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.common.DependencyResolver dependencyResolver18 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder19 = clusteringDBMSBuilder13.setExternalDependencies(
        dependencyResolver18);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder19);
  }

  @Test
  public void test1529() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1529");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    int int1 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int2 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int3 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType4 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType5 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType6 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType7 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType8 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.ExecutionContext executionContext9 = null;
    try {
      io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommand nodeStoreWrapperCopyCommand10 = nodeStoreWrapperCopyCommandCommandProvider0.createCommand(
          executionContext9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType5 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType5.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType6 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType6.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType7 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType7.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType8 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType8.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
  }

  @Test
  public void test1530() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1530");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    int int1 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType2 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType3 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType4 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType5 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType6 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType7 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType5 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType5.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType6 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType6.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType7 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType7.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
  }

  @Test
  public void test1531() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1531");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder6.addURLAccessRule(
        "", uRLAccessRule10);
    org.neo4j.logging.LogProvider logProvider12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder6.setMonitors(
        monitors16);
    org.neo4j.logging.LogProvider logProvider18 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder19 = clusteringDBMSBuilder17.setUserLogProvider(
        logProvider18);
    java.lang.String str20 = clusteringDBMSBuilder17.getEdition();
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder22 = clusteringDBMSBuilder17.loadPropertiesFromFile(
        "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder19);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "enterprise" + "'", str20, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder22);
  }

  @Test
  public void test1532() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1532");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.monitoring.Monitors monitors4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setMonitors(
        monitors4);
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver6);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder1.addDatabaseListener(
        databaseEventListener10);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener12 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder1.addDatabaseListener(
        databaseEventListener12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
  }

  @Test
  public void test1533() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1533");
    }
    io.github.onograph.dbms.utils.TokenNamePropertyDTO tokenNamePropertyDTO2 = new io.github.onograph.dbms.utils.TokenNamePropertyDTO(
        "", "");
    java.lang.String str3 = tokenNamePropertyDTO2.getStrNp();
    java.lang.String str4 = tokenNamePropertyDTO2.getStrNt();
    java.lang.String str5 = tokenNamePropertyDTO2.getStrNp();
    java.lang.String str6 = tokenNamePropertyDTO2.getStrNp();
    java.lang.String str7 = tokenNamePropertyDTO2.getStrNp();
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
  }

  @Test
  public void test1534() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1534");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder5.setMonitors(
        monitors9);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener11);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.loadPropertiesFromFile(
        "hi!");
    org.neo4j.logging.LogProvider logProvider15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder14.setUserLogProvider(
        logProvider15);
    org.neo4j.logging.LogProvider logProvider17 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder18 = clusteringDBMSBuilder14.setUserLogProvider(
        logProvider17);
    java.lang.String str19 = clusteringDBMSBuilder18.getEdition();
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener20 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder21 = clusteringDBMSBuilder18.addDatabaseListener(
        databaseEventListener20);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder18);
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "enterprise" + "'", str19, "enterprise");
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder21);
  }

  @Test
  public void test1535() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1535");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder6.addURLAccessRule(
        "", uRLAccessRule10);
    org.neo4j.logging.LogProvider logProvider12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder6.setMonitors(
        monitors16);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule19 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder20 = clusteringDBMSBuilder6.addURLAccessRule(
        "enterprise", uRLAccessRule19);
    java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder22 = clusteringDBMSBuilder20.setConfigRaw(
          strMap21);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder20);
  }

  @Test
  public void test1536() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1536");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.setMonitors(
        monitors11);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder10.addURLAccessRule(
        "hi!", uRLAccessRule14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder10.setMonitors(
        monitors16);
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService18 = clusteringDBMSBuilder10.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
  }

  @Test
  public void test1537() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1537");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener8 = null;
    try {
      databaseManagementServiceClusterImpl5.registerDatabaseEventListener(databaseEventListener8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1538() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1538");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.monitoring.Monitors monitors6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder1.setMonitors(
        monitors6);
    java.lang.String str8 = clusteringDBMSBuilder1.getEdition();
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider11);
    java.lang.String str13 = clusteringDBMSBuilder1.getEdition();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "enterprise" + "'", str8, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "enterprise" + "'", str13, "enterprise");
  }

  @Test
  public void test1539() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1539");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder3.getEdition();
    java.nio.file.Path path5 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder6 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder6);
  }

  @Test
  public void test1540() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1540");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    int int1 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int2 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int3 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int4 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int5 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType6 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    int int7 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.ExecutionContext executionContext8 = null;
    try {
      io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommand nodeStoreWrapperCopyCommand9 = nodeStoreWrapperCopyCommandCommandProvider0.createCommand(
          executionContext8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType6 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType6.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
  }

  @Test
  public void test1541() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1541");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule12 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder6.addURLAccessRule(
        "hi!", uRLAccessRule12);
    org.neo4j.logging.LogProvider logProvider14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = databaseManagementServiceBuilder13.setUserLogProvider(
        logProvider14);
    java.lang.Class<?> wildcardClass16 = databaseManagementServiceBuilder13.getClass();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(wildcardClass16);
  }

  @Test
  public void test1542() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1542");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    try {
      java.util.List<java.lang.String> strList5 = databaseManagementServiceClusterImpl4.listDatabases();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1543() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1543");
    }
    io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider commandGetServerIdCommandProvider0 = new io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider();
    org.neo4j.cli.Command.CommandType commandType1 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType2 = commandGetServerIdCommandProvider0.commandType();
    int int3 = commandGetServerIdCommandProvider0.getPriority();
    int int4 = commandGetServerIdCommandProvider0.getPriority();
    java.lang.Class<?> wildcardClass5 = commandGetServerIdCommandProvider0.getClass();
    org.junit.Assert.assertTrue(
        "'" + commandType1 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType1.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    org.junit.Assert.assertNotNull(wildcardClass5);
  }

  @Test
  public void test1544() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1544");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    int int1 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType2 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    int int3 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType4 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType5 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    int int6 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType5 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType5.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
  }

  @Test
  public void test1545() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1545");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider11);
    java.nio.file.Path path13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.loadPropertiesFromFile(
        path13);
    org.neo4j.common.DependencyResolver dependencyResolver15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder12.setExternalDependencies(
        dependencyResolver15);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder18 = clusteringDBMSBuilder16.loadPropertiesFromFile(
        "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder18);
  }

  @Test
  public void test1546() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1546");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder3.setMonitors(
        monitors11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder12.setMonitors(
        monitors13);
    org.neo4j.logging.LogProvider logProvider15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder12.setUserLogProvider(
        logProvider15);
    java.nio.file.Path path17 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder18 = clusteringDBMSBuilder12.loadPropertiesFromFile(
        path17);
    java.lang.Class<?> wildcardClass19 = clusteringDBMSBuilder12.getClass();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder18);
    org.junit.Assert.assertNotNull(wildcardClass19);
  }

  @Test
  public void test1547() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1547");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean2 = enhancedBootstrapper0.isRunning();
    java.nio.file.Path path3 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap4 = null;
    try {
      int int5 = enhancedBootstrapper0.start(path3, strMap4);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
  }

  @Test
  public void test1548() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1548");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    try {
      databaseManagementServiceClusterImpl3.createDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1549() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1549");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.monitoring.Monitors monitors6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder1.setMonitors(
        monitors6);
    java.lang.String str8 = clusteringDBMSBuilder1.getEdition();
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        "");
    java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder10.setConfigRaw(
          strMap11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "enterprise" + "'", str8, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
  }

  @Test
  public void test1550() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1550");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    java.nio.file.Path path9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path9);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder3.setUserLogProvider(
        logProvider13);
    org.neo4j.logging.LogProvider logProvider15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder3.setUserLogProvider(
        logProvider15);
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService17 = clusteringDBMSBuilder3.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
  }

  @Test
  public void test1551() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1551");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    java.lang.String str9 = clusteringDBMSBuilder3.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder3.setMonitors(
        monitors12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder15.setMonitors(
        monitors16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "enterprise" + "'", str9, "enterprise");
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
  }

  @Test
  public void test1552() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1552");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder5.setMonitors(
        monitors9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider11);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "hi!");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder14.addURLAccessRule(
        "hi!", uRLAccessRule16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
  }

  @Test
  public void test1553() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1553");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver5 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder6 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver5);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.logging.LogProvider logProvider9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder1.setMonitors(
        monitors11);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        "hi!");
    try {
      io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl15 = clusteringDBMSBuilder14.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
  }

  @Test
  public void test1554() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1554");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    int int5 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log6 = enhancedBootstrapper0.getLog();
    boolean boolean7 = enhancedBootstrapper0.isRunning();
    int int8 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService9 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log10 = enhancedBootstrapper0.getLog();
    java.nio.file.Path path11 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
    try {
      int int13 = enhancedBootstrapper0.start(path11, strMap12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNull(databaseManagementService4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertNotNull(log6);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    org.junit.Assert.assertNull(databaseManagementService9);
    org.junit.Assert.assertNotNull(log10);
  }

  @Test
  public void test1555() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1555");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    try {
      databaseManagementServiceClusterImpl7.dropDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1556() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1556");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.common.DependencyResolver dependencyResolver2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver2);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener4 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder5 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener4);
    org.neo4j.monitoring.Monitors monitors6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.setMonitors(
        monitors6);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider12);
    java.nio.file.Path path14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        path14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
  }

  @Test
  public void test1557() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1557");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      boolean boolean11 = databaseManagementServiceClusterImpl5.isWraeForSt("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1558() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1558");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    org.neo4j.graphdb.config.Configuration configuration6 = null;
    try {
      databaseManagementServiceClusterImpl3.createDatabase("enterprise", configuration6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1559() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1559");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl10 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    try {
      java.util.List<java.lang.String> strList11 = databaseManagementServiceClusterImpl6.listDatabases();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1560() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1560");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    org.neo4j.cli.Command.CommandType commandType1 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType2 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    int int3 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType4 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    int int5 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType6 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.ExecutionContext executionContext7 = null;
    try {
      io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommand nodeStoreWrapperCopyCommand8 = nodeStoreWrapperCopyCommandCommandProvider0.createCommand(
          executionContext7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue(
        "'" + commandType1 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType1.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType6 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType6.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
  }

  @Test
  public void test1561() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1561");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder7.setMonitors(
        monitors8);
    org.neo4j.logging.LogProvider logProvider10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder7.setUserLogProvider(
        logProvider10);
    org.neo4j.common.DependencyResolver dependencyResolver12 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = databaseManagementServiceBuilder11.setExternalDependencies(
        dependencyResolver12);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = databaseManagementServiceBuilder13.addDatabaseListener(
        databaseEventListener14);
    java.lang.Class<?> wildcardClass16 = databaseManagementServiceBuilder13.getClass();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(wildcardClass16);
  }

  @Test
  public void test1562() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1562");
    }
    java.time.Clock clock0 = null;
    org.neo4j.kernel.database.DatabaseIdRepository databaseIdRepository1 = null;
    io.github.onograph.dbms.DbmsManagerWatchTagImpl dbmsManagerWatchTagImpl2 = null;
    java.time.ZoneId zoneId3 = null;
    io.github.onograph.dbms.serverproc.BasicProcedureQuarantineDatabaseImpl basicProcedureQuarantineDatabaseImpl4 = io.github.onograph.dbms.serverproc.BasicProcedureQuarantineDatabaseImpl.clsrBasicProcedureQuarantineDatabaseImpl(
        clock0, databaseIdRepository1, dbmsManagerWatchTagImpl2, zoneId3);
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature5 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature6 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature7 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature8 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature9 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature10 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.kernel.api.procedure.Context context11 = null;
    org.neo4j.values.AnyValue anyValue12 = null;
    org.neo4j.values.AnyValue[] anyValueArray13 = new org.neo4j.values.AnyValue[]{anyValue12};
    org.neo4j.kernel.api.ResourceTracker resourceTracker14 = null;
    try {
      org.neo4j.collection.RawIterator<org.neo4j.values.AnyValue[], org.neo4j.internal.kernel.api.exceptions.ProcedureException> anyValueArrayRawIterator15 = basicProcedureQuarantineDatabaseImpl4.apply(
          context11, anyValueArray13, resourceTracker14);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalArgumentException; message: *** Error: c3bc6648-f892-4d86-9614-b53ef18de3fb");
    } catch (java.lang.IllegalArgumentException e) {
    }
    org.junit.Assert.assertNotNull(basicProcedureQuarantineDatabaseImpl4);
    org.junit.Assert.assertNotNull(procedureSignature5);
    org.junit.Assert.assertNotNull(procedureSignature6);
    org.junit.Assert.assertNotNull(procedureSignature7);
    org.junit.Assert.assertNotNull(procedureSignature8);
    org.junit.Assert.assertNotNull(procedureSignature9);
    org.junit.Assert.assertNotNull(procedureSignature10);
    org.junit.Assert.assertNotNull(anyValueArray13);
  }

  @Test
  public void test1563() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1563");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    int int1 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int2 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int3 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType4 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType5 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType6 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    int int7 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int8 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType9 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType5 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType5.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType6 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType6.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType9 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType9.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
  }

  @Test
  public void test1564() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1564");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction10 = metaUpgradeFlowAction4.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction5);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv11 = null;
    metaUpgradeFlowAction5.accept(upgradeMetaEnv11);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction13 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv15 = null;
    metaUpgradeFlowAction14.accept(upgradeMetaEnv15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction17 = metaUpgradeFlowAction13.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction14);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction18 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction19 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv20 = null;
    metaUpgradeFlowAction19.accept(upgradeMetaEnv20);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = metaUpgradeFlowAction18.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction19);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction24 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv25 = null;
    metaUpgradeFlowAction24.accept(upgradeMetaEnv25);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction27 = metaUpgradeFlowAction23.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction24);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction28 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction29 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv30 = null;
    metaUpgradeFlowAction29.accept(upgradeMetaEnv30);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction32 = metaUpgradeFlowAction28.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction29);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv33 = null;
    metaUpgradeFlowAction28.accept(upgradeMetaEnv33);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction35 = metaUpgradeFlowAction24.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction28);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction36 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv37 = null;
    metaUpgradeFlowAction36.accept(upgradeMetaEnv37);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer39 = metaUpgradeFlowAction35.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction36);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer40 = metaUpgradeFlowAction18.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction36);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction41 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv43 = null;
    metaUpgradeFlowAction42.accept(upgradeMetaEnv43);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction45 = metaUpgradeFlowAction41.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction42);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction46 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction47 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv48 = null;
    metaUpgradeFlowAction47.accept(upgradeMetaEnv48);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction50 = metaUpgradeFlowAction46.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction47);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction51 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction52 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv53 = null;
    metaUpgradeFlowAction52.accept(upgradeMetaEnv53);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction55 = metaUpgradeFlowAction51.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction52);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction56 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction57 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv58 = null;
    metaUpgradeFlowAction57.accept(upgradeMetaEnv58);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction60 = metaUpgradeFlowAction56.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction57);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv61 = null;
    metaUpgradeFlowAction56.accept(upgradeMetaEnv61);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction63 = metaUpgradeFlowAction52.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction56);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction64 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv65 = null;
    metaUpgradeFlowAction64.accept(upgradeMetaEnv65);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer67 = metaUpgradeFlowAction63.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction64);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction68 = metaUpgradeFlowAction46.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction64);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction69 = metaUpgradeFlowAction45.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction68);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer70 = metaUpgradeFlowAction36.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction45);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction71 = metaUpgradeFlowAction13.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction45);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction72 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction13);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv73 = null;
    metaUpgradeFlowAction5.accept(upgradeMetaEnv73);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv75 = null;
    metaUpgradeFlowAction5.accept(upgradeMetaEnv75);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction10);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction13);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction17);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction18);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction19);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction24);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction28);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction29);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction32);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction35);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction36);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer39);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer40);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction41);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction45);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction46);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction47);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction50);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction51);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction52);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction55);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction56);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction57);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction60);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction63);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction64);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer67);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction68);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction69);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer70);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction71);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction72);
  }

  @Test
  public void test1565() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1565");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder9.addDatabaseListener(
        databaseEventListener12);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder9.addURLAccessRule(
        "hi!", uRLAccessRule15);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder18 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder20 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "hi!");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder18);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder20);
  }

  @Test
  public void test1566() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1566");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "hi!");
    org.neo4j.monitoring.Monitors monitors8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder3.setMonitors(
        monitors8);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.addDatabaseListener(
        databaseEventListener10);
    java.lang.String str12 = clusteringDBMSBuilder9.getEdition();
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder9.addDatabaseListener(
        databaseEventListener13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = clusteringDBMSBuilder9.setMonitors(
        monitors15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "enterprise" + "'", str12, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
  }

  @Test
  public void test1567() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1567");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.addDatabaseListener(
        databaseEventListener7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.addDatabaseListener(
        databaseEventListener9);
    java.nio.file.Path path11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        path11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider13);
    org.neo4j.common.DependencyResolver dependencyResolver15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = clusteringDBMSBuilder14.setExternalDependencies(
        dependencyResolver15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
  }

  @Test
  public void test1568() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1568");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      boolean boolean9 = databaseManagementServiceClusterImpl7.isWraeForSt("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1569() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1569");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener5 = null;
    try {
      databaseManagementServiceClusterImpl4.registerDatabaseEventListener(databaseEventListener5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1570() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1570");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    try {
      databaseManagementServiceClusterImpl8.unregisterDatabaseEventListener(databaseEventListener9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1571() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1571");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule10);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder11.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder11.addURLAccessRule(
        "enterprise", uRLAccessRule15);
    java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder18 = clusteringDBMSBuilder11.setConfigRaw(
          strMap17);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
  }

  @Test
  public void test1572() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1572");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl1);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    org.neo4j.graphdb.config.Configuration configuration5 = null;
    try {
      databaseManagementServiceClusterImpl3.createDatabase("", configuration5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1573() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1573");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    java.lang.String str11 = clusteringDBMSBuilder5.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver12);
    org.neo4j.logging.LogProvider logProvider14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder13.setUserLogProvider(
        logProvider14);
    java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = databaseManagementServiceBuilder15.setConfigRaw(
          strMap16);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "enterprise" + "'", str11, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
  }

  @Test
  public void test1574() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1574");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    java.lang.String str9 = clusteringDBMSBuilder3.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver10);
    java.nio.file.Path path12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path12);
    java.nio.file.Path path14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder13.loadPropertiesFromFile(
        path14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "enterprise" + "'", str9, "enterprise");
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
  }

  @Test
  public void test1575() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1575");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    int int1 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType2 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType3 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType4 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    int int5 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType6 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType6 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType6.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
  }

  @Test
  public void test1576() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1576");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    try {
      org.neo4j.graphdb.GraphDatabaseService graphDatabaseService4 = databaseManagementServiceClusterImpl2.database(
          "hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1577() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1577");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    try {
      java.util.List<java.lang.String> strList7 = databaseManagementServiceClusterImpl6.listDatabases();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1578() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1578");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    try {
      databaseManagementServiceClusterImpl3.dropDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1579() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1579");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder6.addURLAccessRule(
        "", uRLAccessRule10);
    org.neo4j.logging.LogProvider logProvider12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder15.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.common.DependencyResolver dependencyResolver18 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder19 = clusteringDBMSBuilder15.setExternalDependencies(
        dependencyResolver18);
    try {
      io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl20 = clusteringDBMSBuilder19.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder19);
  }

  @Test
  public void test1580() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1580");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.addDatabaseListener(
        databaseEventListener11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder10.setMonitors(
        monitors13);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder14.addDatabaseListener(
        databaseEventListener15);
    org.neo4j.common.DependencyResolver dependencyResolver17 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder18 = clusteringDBMSBuilder14.setExternalDependencies(
        dependencyResolver17);
    org.neo4j.logging.LogProvider logProvider19 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder20 = clusteringDBMSBuilder14.setUserLogProvider(
        logProvider19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder18);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder20);
  }

  @Test
  public void test1581() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1581");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder6.addURLAccessRule(
        "enterprise", uRLAccessRule12);
    java.nio.file.Path path14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        path14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider16);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule19 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder20 = clusteringDBMSBuilder6.addURLAccessRule(
        "hi!", uRLAccessRule19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder20);
  }

  @Test
  public void test1582() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1582");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    boolean boolean1 = enhancedBootstrapper0.isRunning();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService2 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    java.nio.file.Path path5 = null;
    java.nio.file.Path path6 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
    try {
      int int9 = enhancedBootstrapper0.start(path5, path6, strMap7, false);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    org.junit.Assert.assertNull(databaseManagementService2);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(log4);
  }

  @Test
  public void test1583() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1583");
    }
    io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider commandGetServerIdCommandProvider0 = new io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider();
    org.neo4j.cli.Command.CommandType commandType1 = commandGetServerIdCommandProvider0.commandType();
    int int2 = commandGetServerIdCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType3 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType4 = commandGetServerIdCommandProvider0.commandType();
    int int5 = commandGetServerIdCommandProvider0.getPriority();
    org.junit.Assert.assertTrue(
        "'" + commandType1 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType1.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
  }

  @Test
  public void test1584() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1584");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl10 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    try {
      boolean boolean12 = databaseManagementServiceClusterImpl10.isWraeForSt("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1585() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1585");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder7.setMonitors(
        monitors8);
    org.neo4j.logging.LogProvider logProvider10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder7.setUserLogProvider(
        logProvider10);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder7.loadPropertiesFromFile(
        "hi!");
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder7.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder15.setUserLogProvider(
        logProvider16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
  }

  @Test
  public void test1586() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1586");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule10);
    java.lang.String str12 = clusteringDBMSBuilder3.getEdition();
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder3.addURLAccessRule(
        "hi!", uRLAccessRule14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "enterprise" + "'", str12, "enterprise");
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
  }

  @Test
  public void test1587() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1587");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder10.addURLAccessRule(
        "enterprise", uRLAccessRule12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
  }

  @Test
  public void test1588() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1588");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder5.setMonitors(
        monitors9);
    java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder5.setConfigRaw(
          strMap11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
  }

  @Test
  public void test1589() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1589");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "hi!");
    org.neo4j.monitoring.Monitors monitors8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder3.setMonitors(
        monitors8);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.addDatabaseListener(
        databaseEventListener10);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "hi!");
    java.lang.Class<?> wildcardClass14 = clusteringDBMSBuilder9.getClass();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(wildcardClass14);
  }

  @Test
  public void test1590() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1590");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    int int4 = enhancedBootstrapper0.stop();
    int int5 = enhancedBootstrapper0.stop();
    java.nio.file.Path path6 = null;
    java.nio.file.Path path7 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
    try {
      int int10 = enhancedBootstrapper0.start(path6, path7, strMap8, false);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
  }

  @Test
  public void test1591() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1591");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    int int5 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log6 = enhancedBootstrapper0.getLog();
    boolean boolean7 = enhancedBootstrapper0.isRunning();
    int int8 = enhancedBootstrapper0.stop();
    int int9 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService10 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean11 = enhancedBootstrapper0.isRunning();
    java.lang.String[] strArray13 = new java.lang.String[]{""};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray13);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray13);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray13);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray13);
    try {
      int int18 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray13);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNull(databaseManagementService4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertNotNull(log6);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    org.junit.Assert.assertNull(databaseManagementService10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(strArray13);
  }

  @Test
  public void test1592() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1592");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver5 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder6 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver5);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        "enterprise");
    java.nio.file.Path path9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder8.loadPropertiesFromFile(
        path9);
    java.lang.Class<?> wildcardClass11 = clusteringDBMSBuilder8.getClass();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(wildcardClass11);
  }

  @Test
  public void test1593() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1593");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.monitoring.Monitors monitors4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setMonitors(
        monitors4);
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver6);
    org.neo4j.common.DependencyResolver dependencyResolver8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver8);
    org.neo4j.logging.LogProvider logProvider10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
  }

  @Test
  public void test1594() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1594");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.common.DependencyResolver dependencyResolver2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver2);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener4 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder5 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener4);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder3.addURLAccessRule(
        "hi!", uRLAccessRule11);
    org.neo4j.common.DependencyResolver dependencyResolver13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
  }

  @Test
  public void test1595() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1595");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      org.neo4j.graphdb.GraphDatabaseService graphDatabaseService8 = databaseManagementServiceClusterImpl6.database(
          "");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1596() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1596");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    java.lang.String str8 = clusteringDBMSBuilder3.getEdition();
    org.neo4j.monitoring.Monitors monitors9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder3.setMonitors(
        monitors9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "enterprise" + "'", str8, "enterprise");
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
  }

  @Test
  public void test1597() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1597");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv10 = null;
    metaUpgradeFlowAction5.accept(upgradeMetaEnv10);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction12 = metaUpgradeFlowAction1.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction5);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction13 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv14 = null;
    metaUpgradeFlowAction13.accept(upgradeMetaEnv14);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer16 = metaUpgradeFlowAction12.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction13);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction17 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction18 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv19 = null;
    metaUpgradeFlowAction18.accept(upgradeMetaEnv19);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction21 = metaUpgradeFlowAction17.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction18);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv24 = null;
    metaUpgradeFlowAction23.accept(upgradeMetaEnv24);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction26 = metaUpgradeFlowAction22.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction27 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction28 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv29 = null;
    metaUpgradeFlowAction28.accept(upgradeMetaEnv29);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction31 = metaUpgradeFlowAction27.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction28);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction32 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction33 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv34 = null;
    metaUpgradeFlowAction33.accept(upgradeMetaEnv34);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction36 = metaUpgradeFlowAction32.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction33);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv37 = null;
    metaUpgradeFlowAction32.accept(upgradeMetaEnv37);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction39 = metaUpgradeFlowAction28.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction32);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction40 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv41 = null;
    metaUpgradeFlowAction40.accept(upgradeMetaEnv41);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer43 = metaUpgradeFlowAction39.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction40);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction44 = metaUpgradeFlowAction22.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction40);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction45 = metaUpgradeFlowAction21.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction44);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction46 = metaUpgradeFlowAction13.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction21);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv47 = null;
    metaUpgradeFlowAction21.accept(upgradeMetaEnv47);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv49 = null;
    metaUpgradeFlowAction21.accept(upgradeMetaEnv49);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction12);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction13);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer16);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction17);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction18);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction21);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction26);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction28);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction31);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction32);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction33);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction36);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction39);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction40);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer43);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction44);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction45);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction46);
  }

  @Test
  public void test1598() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1598");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    int int1 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService2 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
    org.junit.Assert.assertNull(databaseManagementService2);
    org.junit.Assert.assertNull(databaseManagementService3);
  }

  @Test
  public void test1599() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1599");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    org.neo4j.logging.Log log5 = enhancedBootstrapper0.getLog();
    boolean boolean6 = enhancedBootstrapper0.isRunning();
    java.lang.String[] strArray9 = new java.lang.String[]{"enterprise", "enterprise"};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray9);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray9);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray9);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray9);
    try {
      int int14 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray9);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertNotNull(log5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNotNull(strArray9);
  }

  @Test
  public void test1600() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1600");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener7 = null;
    try {
      databaseManagementServiceClusterImpl6.registerDatabaseEventListener(databaseEventListener7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1601() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1601");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl7);
    try {
      java.util.List<java.lang.String> strList9 = databaseManagementServiceClusterImpl8.listDatabases();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1602() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1602");
    }
    java.lang.String[] strArray4 = new java.lang.String[]{"enterprise", "enterprise", "hi!", ""};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray4);
    try {
      io.github.onograph.server.EntryPointImpl.startBootstrapper(strArray4);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNotNull(strArray4);
  }

  @Test
  public void test1603() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1603");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService2 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    int int5 = enhancedBootstrapper0.stop();
    java.nio.file.Path path6 = null;
    java.nio.file.Path path7 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
    try {
      int int10 = enhancedBootstrapper0.start(path6, path7, strMap8, false);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNull(databaseManagementService2);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
  }

  @Test
  public void test1604() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1604");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder6.addURLAccessRule(
        "", uRLAccessRule10);
    org.neo4j.logging.LogProvider logProvider12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder6.setMonitors(
        monitors16);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule19 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder20 = clusteringDBMSBuilder6.addURLAccessRule(
        "enterprise", uRLAccessRule19);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener21 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder22 = clusteringDBMSBuilder6.addDatabaseListener(
        databaseEventListener21);
    org.neo4j.common.DependencyResolver dependencyResolver23 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder24 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver23);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener25 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder26 = clusteringDBMSBuilder6.addDatabaseListener(
        databaseEventListener25);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder20);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder22);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder24);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder26);
  }

  @Test
  public void test1605() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1605");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.setMonitors(
        monitors11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.setMonitors(
        monitors13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = clusteringDBMSBuilder14.setMonitors(
        monitors15);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder18 = clusteringDBMSBuilder14.setMonitors(
        monitors17);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule20 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder14.addURLAccessRule(
        "enterprise", uRLAccessRule20);
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService22 = clusteringDBMSBuilder14.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder18);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder21);
  }

  @Test
  public void test1606() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1606");
    }
    java.lang.String[] strArray1 = new java.lang.String[]{"enterprise"};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray1);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray1);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray1);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray1);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray1);
    org.junit.Assert.assertNotNull(strArray1);
  }

  @Test
  public void test1607() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1607");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      boolean boolean9 = databaseManagementServiceClusterImpl5.isWraeForSt("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1608() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1608");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver5 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder6 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver5);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        "enterprise");
    java.nio.file.Path path9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder8.loadPropertiesFromFile(
        path9);
    java.nio.file.Path path11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = databaseManagementServiceBuilder10.loadPropertiesFromFile(
        path11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
  }

  @Test
  public void test1609() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1609");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    java.lang.String str11 = clusteringDBMSBuilder10.getEdition();
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder10.loadPropertiesFromFile(
        "");
    java.nio.file.Path path14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder13.loadPropertiesFromFile(
        path14);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder13.loadPropertiesFromFile(
        "");
    java.lang.String str18 = clusteringDBMSBuilder13.getEdition();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "enterprise" + "'", str11, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "enterprise" + "'", str18, "enterprise");
  }

  @Test
  public void test1610() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1610");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv1 = null;
    metaUpgradeFlowAction0.accept(upgradeMetaEnv1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction3 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv5 = null;
    metaUpgradeFlowAction4.accept(upgradeMetaEnv5);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction7 = metaUpgradeFlowAction3.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction4);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction8 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv10 = null;
    metaUpgradeFlowAction9.accept(upgradeMetaEnv10);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction12 = metaUpgradeFlowAction8.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction9);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction13 = metaUpgradeFlowAction7.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction8);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv14 = null;
    metaUpgradeFlowAction8.accept(upgradeMetaEnv14);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction16 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction17 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv18 = null;
    metaUpgradeFlowAction17.accept(upgradeMetaEnv18);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction20 = metaUpgradeFlowAction16.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction17);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction21 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv23 = null;
    metaUpgradeFlowAction22.accept(upgradeMetaEnv23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction25 = metaUpgradeFlowAction21.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction22);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction26 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction27 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv28 = null;
    metaUpgradeFlowAction27.accept(upgradeMetaEnv28);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction30 = metaUpgradeFlowAction26.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction27);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction31 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction32 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv33 = null;
    metaUpgradeFlowAction32.accept(upgradeMetaEnv33);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction35 = metaUpgradeFlowAction31.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction32);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv36 = null;
    metaUpgradeFlowAction31.accept(upgradeMetaEnv36);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction38 = metaUpgradeFlowAction27.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction31);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction39 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv40 = null;
    metaUpgradeFlowAction39.accept(upgradeMetaEnv40);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer42 = metaUpgradeFlowAction38.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction39);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer43 = metaUpgradeFlowAction21.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction39);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction44 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction45 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv46 = null;
    metaUpgradeFlowAction45.accept(upgradeMetaEnv46);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction48 = metaUpgradeFlowAction44.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction45);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction49 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction50 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv51 = null;
    metaUpgradeFlowAction50.accept(upgradeMetaEnv51);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction53 = metaUpgradeFlowAction49.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction50);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction54 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction55 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv56 = null;
    metaUpgradeFlowAction55.accept(upgradeMetaEnv56);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction58 = metaUpgradeFlowAction54.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction55);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction59 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction60 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv61 = null;
    metaUpgradeFlowAction60.accept(upgradeMetaEnv61);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction63 = metaUpgradeFlowAction59.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction60);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv64 = null;
    metaUpgradeFlowAction59.accept(upgradeMetaEnv64);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction66 = metaUpgradeFlowAction55.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction59);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction67 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv68 = null;
    metaUpgradeFlowAction67.accept(upgradeMetaEnv68);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer70 = metaUpgradeFlowAction66.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction67);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction71 = metaUpgradeFlowAction49.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction67);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction72 = metaUpgradeFlowAction48.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction71);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer73 = metaUpgradeFlowAction39.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction48);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction74 = metaUpgradeFlowAction16.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction48);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction75 = metaUpgradeFlowAction8.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction16);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv76 = null;
    metaUpgradeFlowAction8.accept(upgradeMetaEnv76);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer78 = metaUpgradeFlowAction0.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction8);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction3);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction7);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction8);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction12);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction13);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction16);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction17);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction20);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction21);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction25);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction26);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction30);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction31);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction32);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction35);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction38);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction39);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer42);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer43);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction44);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction45);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction48);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction49);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction50);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction53);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction54);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction55);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction58);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction59);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction60);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction63);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction66);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction67);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer70);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction71);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction72);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer73);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction74);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction75);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer78);
  }

  @Test
  public void test1611() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1611");
    }
    java.lang.String[] strArray1 = new java.lang.String[]{""};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray1);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray1);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray1);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray1);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray1);
    try {
      io.github.onograph.server.EntryPointImpl.startBootstrapper(strArray1);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNotNull(strArray1);
  }

  @Test
  public void test1612() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1612");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log2 = enhancedBootstrapper0.getLog();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService5 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log6 = enhancedBootstrapper0.getLog();
    org.neo4j.logging.Log log7 = enhancedBootstrapper0.getLog();
    org.neo4j.logging.Log log8 = enhancedBootstrapper0.getLog();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNotNull(log2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertNull(databaseManagementService5);
    org.junit.Assert.assertNotNull(log6);
    org.junit.Assert.assertNotNull(log7);
    org.junit.Assert.assertNotNull(log8);
  }

  @Test
  public void test1613() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1613");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    int int5 = enhancedBootstrapper0.stop();
    java.lang.String[] strArray9 = new java.lang.String[]{"hi!", "hi!", ""};
    try {
      int int10 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray9);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertNotNull(strArray9);
  }

  @Test
  public void test1614() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1614");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction10 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction11 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv12 = null;
    metaUpgradeFlowAction11.accept(upgradeMetaEnv12);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = metaUpgradeFlowAction10.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction11);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction15 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction16 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv17 = null;
    metaUpgradeFlowAction16.accept(upgradeMetaEnv17);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction19 = metaUpgradeFlowAction15.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction16);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv20 = null;
    metaUpgradeFlowAction15.accept(upgradeMetaEnv20);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = metaUpgradeFlowAction11.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv24 = null;
    metaUpgradeFlowAction23.accept(upgradeMetaEnv24);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer26 = metaUpgradeFlowAction22.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction27 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction28 = metaUpgradeFlowAction4.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction27);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction29 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction30 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv31 = null;
    metaUpgradeFlowAction30.accept(upgradeMetaEnv31);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction33 = metaUpgradeFlowAction29.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction30);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction34 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction35 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv36 = null;
    metaUpgradeFlowAction35.accept(upgradeMetaEnv36);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction38 = metaUpgradeFlowAction34.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction35);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv39 = null;
    metaUpgradeFlowAction34.accept(upgradeMetaEnv39);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction41 = metaUpgradeFlowAction30.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction34);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = metaUpgradeFlowAction4.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction41);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv43 = null;
    metaUpgradeFlowAction41.accept(upgradeMetaEnv43);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction45 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction46 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv47 = null;
    metaUpgradeFlowAction46.accept(upgradeMetaEnv47);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction49 = metaUpgradeFlowAction45.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction46);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction50 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction51 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv52 = null;
    metaUpgradeFlowAction51.accept(upgradeMetaEnv52);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction54 = metaUpgradeFlowAction50.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction51);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv55 = null;
    metaUpgradeFlowAction50.accept(upgradeMetaEnv55);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction57 = metaUpgradeFlowAction46.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction50);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction58 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv59 = null;
    metaUpgradeFlowAction58.accept(upgradeMetaEnv59);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer61 = metaUpgradeFlowAction57.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction58);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction62 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction63 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv64 = null;
    metaUpgradeFlowAction63.accept(upgradeMetaEnv64);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction66 = metaUpgradeFlowAction62.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction63);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction67 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction68 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv69 = null;
    metaUpgradeFlowAction68.accept(upgradeMetaEnv69);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction71 = metaUpgradeFlowAction67.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction68);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction72 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction73 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv74 = null;
    metaUpgradeFlowAction73.accept(upgradeMetaEnv74);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction76 = metaUpgradeFlowAction72.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction73);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction77 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction78 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv79 = null;
    metaUpgradeFlowAction78.accept(upgradeMetaEnv79);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction81 = metaUpgradeFlowAction77.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction78);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv82 = null;
    metaUpgradeFlowAction77.accept(upgradeMetaEnv82);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction84 = metaUpgradeFlowAction73.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction77);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction85 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv86 = null;
    metaUpgradeFlowAction85.accept(upgradeMetaEnv86);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer88 = metaUpgradeFlowAction84.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction85);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction89 = metaUpgradeFlowAction67.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction85);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction90 = metaUpgradeFlowAction66.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction89);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction91 = metaUpgradeFlowAction58.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction66);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer92 = metaUpgradeFlowAction41.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction58);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction10);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction11);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction15);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction16);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction19);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer26);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction28);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction29);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction30);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction33);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction34);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction35);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction38);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction41);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction45);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction46);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction49);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction50);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction51);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction54);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction57);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction58);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer61);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction62);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction63);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction66);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction67);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction68);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction71);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction72);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction73);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction76);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction77);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction78);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction81);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction84);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction85);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer88);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction89);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction90);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction91);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer92);
  }

  @Test
  public void test1615() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1615");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder5.setMonitors(
        monitors9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider13);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
  }

  @Test
  public void test1616() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1616");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.addDatabaseListener(
        databaseEventListener11);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder12.addURLAccessRule(
        "hi!", uRLAccessRule14);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule17 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder18 = clusteringDBMSBuilder12.addURLAccessRule(
        "", uRLAccessRule17);
    java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder20 = clusteringDBMSBuilder12.setConfigRaw(
          strMap19);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder18);
  }

  @Test
  public void test1617() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1617");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.common.DependencyResolver dependencyResolver11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.setExternalDependencies(
        dependencyResolver11);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder10.addURLAccessRule(
        "enterprise", uRLAccessRule14);
    java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder10.setConfigRaw(
          strMap16);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
  }

  @Test
  public void test1618() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1618");
    }
    io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider commandGetServerIdCommandProvider0 = new io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider();
    int int1 = commandGetServerIdCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType2 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType3 = commandGetServerIdCommandProvider0.commandType();
    int int4 = commandGetServerIdCommandProvider0.getPriority();
    int int5 = commandGetServerIdCommandProvider0.getPriority();
    int int6 = commandGetServerIdCommandProvider0.getPriority();
    int int7 = commandGetServerIdCommandProvider0.getPriority();
    int int8 = commandGetServerIdCommandProvider0.getPriority();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
  }

  @Test
  public void test1619() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1619");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    try {
      org.neo4j.graphdb.GraphDatabaseService graphDatabaseService5 = databaseManagementServiceClusterImpl2.database(
          "enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1620() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1620");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver10);
    java.nio.file.Path path12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder13.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule17 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder18 = clusteringDBMSBuilder13.addURLAccessRule(
        "enterprise", uRLAccessRule17);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule20 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder18.addURLAccessRule(
        "enterprise", uRLAccessRule20);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder18);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder21);
  }

  @Test
  public void test1621() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1621");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.addDatabaseListener(
        databaseEventListener7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder10.addDatabaseListener(
        databaseEventListener11);
    java.util.Map<java.lang.String, java.lang.String> strMap13 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder10.setConfigRaw(
          strMap13);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
  }

  @Test
  public void test1622() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1622");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService5 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean6 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log7 = enhancedBootstrapper0.getLog();
    boolean boolean8 = enhancedBootstrapper0.isRunning();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertNull(databaseManagementService5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNotNull(log7);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1623() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1623");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    int int5 = enhancedBootstrapper0.stop();
    int int6 = enhancedBootstrapper0.stop();
    int int7 = enhancedBootstrapper0.stop();
    int int8 = enhancedBootstrapper0.stop();
    boolean boolean9 = enhancedBootstrapper0.isRunning();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService10 = enhancedBootstrapper0.getDatabaseManagementService();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertNull(databaseManagementService10);
  }

  @Test
  public void test1624() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1624");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    java.lang.String str11 = clusteringDBMSBuilder5.getEdition();
    org.neo4j.logging.LogProvider logProvider12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider12);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "enterprise" + "'", str11, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
  }

  @Test
  public void test1625() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1625");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder7.setMonitors(
        monitors8);
    org.neo4j.logging.LogProvider logProvider10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder7.setUserLogProvider(
        logProvider10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder7.setMonitors(
        monitors12);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder7.addDatabaseListener(
        databaseEventListener14);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder7.addDatabaseListener(
        databaseEventListener16);
    org.neo4j.common.DependencyResolver dependencyResolver18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder17.setExternalDependencies(
        dependencyResolver18);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
  }

  @Test
  public void test1626() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1626");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.common.DependencyResolver dependencyResolver8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder7.setExternalDependencies(
        dependencyResolver8);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder7.addURLAccessRule(
        "hi!", uRLAccessRule11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
  }

  @Test
  public void test1627() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1627");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log2 = enhancedBootstrapper0.getLog();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService5 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean6 = enhancedBootstrapper0.isRunning();
    boolean boolean7 = enhancedBootstrapper0.isRunning();
    java.nio.file.Path path8 = null;
    java.nio.file.Path path9 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
    try {
      int int12 = enhancedBootstrapper0.start(path8, path9, strMap10, true);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNotNull(log2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertNull(databaseManagementService5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1628() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1628");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    java.nio.file.Path path9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path9);
    org.neo4j.common.DependencyResolver dependencyResolver11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = databaseManagementServiceBuilder10.setExternalDependencies(
        dependencyResolver11);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = databaseManagementServiceBuilder12.addURLAccessRule(
        "", uRLAccessRule14);
    org.neo4j.common.DependencyResolver dependencyResolver16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = databaseManagementServiceBuilder15.setExternalDependencies(
        dependencyResolver16);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule19 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder20 = databaseManagementServiceBuilder15.addURLAccessRule(
        "enterprise", uRLAccessRule19);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder22 = databaseManagementServiceBuilder15.loadPropertiesFromFile(
        "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder20);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder22);
  }

  @Test
  public void test1629() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1629");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.setExternalDependencies(
        dependencyResolver13);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder14.addURLAccessRule(
        "", uRLAccessRule16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
  }

  @Test
  public void test1630() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1630");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    int int4 = enhancedBootstrapper0.stop();
    int int5 = enhancedBootstrapper0.stop();
    boolean boolean6 = enhancedBootstrapper0.isRunning();
    java.nio.file.Path path7 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
    try {
      int int9 = enhancedBootstrapper0.start(path7, strMap8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1631() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1631");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder6.addURLAccessRule(
        "", uRLAccessRule10);
    org.neo4j.logging.LogProvider logProvider12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder6.setMonitors(
        monitors16);
    org.neo4j.monitoring.Monitors monitors18 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder19 = clusteringDBMSBuilder17.setMonitors(
        monitors18);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule21 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder22 = clusteringDBMSBuilder17.addURLAccessRule(
        "hi!", uRLAccessRule21);
    java.lang.String str23 = clusteringDBMSBuilder22.getEdition();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder22);
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "enterprise" + "'", str23, "enterprise");
  }

  @Test
  public void test1632() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1632");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder5.setMonitors(
        monitors9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider11);
    org.neo4j.common.DependencyResolver dependencyResolver13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver13);
    org.neo4j.logging.LogProvider logProvider15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider15);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder18 = clusteringDBMSBuilder16.loadPropertiesFromFile(
        "enterprise");
    java.nio.file.Path path19 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder20 = clusteringDBMSBuilder16.loadPropertiesFromFile(
        path19);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder22 = databaseManagementServiceBuilder20.loadPropertiesFromFile(
        "hi!");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder18);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder20);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder22);
  }

  @Test
  public void test1633() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1633");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder3.setMonitors(
        monitors11);
    org.neo4j.common.DependencyResolver dependencyResolver13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder12.setExternalDependencies(
        dependencyResolver13);
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService15 = databaseManagementServiceBuilder14.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
  }

  @Test
  public void test1634() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1634");
    }
    io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider commandGetServerIdCommandProvider0 = new io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider();
    org.neo4j.cli.Command.CommandType commandType1 = commandGetServerIdCommandProvider0.commandType();
    int int2 = commandGetServerIdCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType3 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType4 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType5 = commandGetServerIdCommandProvider0.commandType();
    int int6 = commandGetServerIdCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType7 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType8 = commandGetServerIdCommandProvider0.commandType();
    int int9 = commandGetServerIdCommandProvider0.getPriority();
    org.neo4j.cli.ExecutionContext executionContext10 = null;
    try {
      io.github.onograph.dbms.commands.CommandGetServerIdImpl commandGetServerIdImpl11 = commandGetServerIdCommandProvider0.createCommand(
          executionContext10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue(
        "'" + commandType1 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType1.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType5 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType5.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType7 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType7.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType8 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType8.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
  }

  @Test
  public void test1635() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1635");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.common.DependencyResolver dependencyResolver2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver2);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener4 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder5 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener4);
    org.neo4j.logging.LogProvider logProvider6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder3.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
  }

  @Test
  public void test1636() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1636");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider16);
    java.nio.file.Path path18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        path18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder9.setMonitors(
        monitors20);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder23 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder21);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder23);
  }

  @Test
  public void test1637() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1637");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider11);
    java.nio.file.Path path13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.loadPropertiesFromFile(
        path13);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder12.addURLAccessRule(
        "enterprise", uRLAccessRule16);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder19 = clusteringDBMSBuilder17.loadPropertiesFromFile(
        "");
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder19.setMonitors(
        monitors20);
    try {
      io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl22 = clusteringDBMSBuilder21.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder21);
  }

  @Test
  public void test1638() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1638");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    try {
      databaseManagementServiceClusterImpl2.shutdownDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1639() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1639");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService5 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean6 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log7 = enhancedBootstrapper0.getLog();
    java.nio.file.Path path8 = null;
    java.nio.file.Path path9 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
    try {
      int int12 = enhancedBootstrapper0.start(path8, path9, strMap10, false);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNull(databaseManagementService4);
    org.junit.Assert.assertNull(databaseManagementService5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNotNull(log7);
  }

  @Test
  public void test1640() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1640");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder5.setMonitors(
        monitors9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider11);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "hi!");
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder14.setMonitors(
        monitors15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
  }

  @Test
  public void test1641() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1641");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder6.addURLAccessRule(
        "", uRLAccessRule12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
  }

  @Test
  public void test1642() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1642");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl8);
    try {
      databaseManagementServiceClusterImpl8.dropDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1643() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1643");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log2 = enhancedBootstrapper0.getLog();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService5 = enhancedBootstrapper0.getDatabaseManagementService();
    java.nio.file.Path path6 = null;
    java.nio.file.Path path7 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
    try {
      int int10 = enhancedBootstrapper0.start(path6, path7, strMap8, false);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNotNull(log2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertNull(databaseManagementService5);
  }

  @Test
  public void test1644() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1644");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    java.nio.file.Path path9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder8.loadPropertiesFromFile(
        path9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder8.setMonitors(
        monitors11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
  }

  @Test
  public void test1645() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1645");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction10 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction11 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv12 = null;
    metaUpgradeFlowAction11.accept(upgradeMetaEnv12);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = metaUpgradeFlowAction10.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction11);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv15 = null;
    metaUpgradeFlowAction10.accept(upgradeMetaEnv15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction17 = metaUpgradeFlowAction6.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction10);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction18 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv19 = null;
    metaUpgradeFlowAction18.accept(upgradeMetaEnv19);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer21 = metaUpgradeFlowAction17.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction18);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction18);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction24 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv25 = null;
    metaUpgradeFlowAction24.accept(upgradeMetaEnv25);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction27 = metaUpgradeFlowAction23.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction24);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction28 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction29 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv30 = null;
    metaUpgradeFlowAction29.accept(upgradeMetaEnv30);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction32 = metaUpgradeFlowAction28.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction29);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv33 = null;
    metaUpgradeFlowAction28.accept(upgradeMetaEnv33);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction35 = metaUpgradeFlowAction24.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction28);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer36 = metaUpgradeFlowAction22.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction28);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction37 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction38 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv39 = null;
    metaUpgradeFlowAction38.accept(upgradeMetaEnv39);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction41 = metaUpgradeFlowAction37.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction38);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction43 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv44 = null;
    metaUpgradeFlowAction43.accept(upgradeMetaEnv44);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction46 = metaUpgradeFlowAction42.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction43);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv47 = null;
    metaUpgradeFlowAction42.accept(upgradeMetaEnv47);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction49 = metaUpgradeFlowAction38.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction42);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction50 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv51 = null;
    metaUpgradeFlowAction50.accept(upgradeMetaEnv51);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer53 = metaUpgradeFlowAction49.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction50);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction54 = metaUpgradeFlowAction28.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction50);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv55 = null;
    metaUpgradeFlowAction28.accept(upgradeMetaEnv55);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv57 = null;
    metaUpgradeFlowAction28.accept(upgradeMetaEnv57);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction10);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction11);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction17);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction18);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer21);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction24);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction28);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction29);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction32);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction35);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer36);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction37);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction38);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction41);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction43);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction46);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction49);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction50);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer53);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction54);
  }

  @Test
  public void test1646() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1646");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    int int1 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int2 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int3 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType4 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType5 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType6 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType7 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    int int8 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int9 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int10 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType5 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType5.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType6 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType6.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType7 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType7.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
  }

  @Test
  public void test1647() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1647");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule12 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder6.addURLAccessRule(
        "hi!", uRLAccessRule12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder6.setMonitors(
        monitors14);
    org.neo4j.common.DependencyResolver dependencyResolver16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
  }

  @Test
  public void test1648() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1648");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    java.nio.file.Path path12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        path12);
    org.neo4j.logging.LogProvider logProvider14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider14);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder9.addDatabaseListener(
        databaseEventListener16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
  }

  @Test
  public void test1649() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1649");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder3.setMonitors(
        monitors9);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = databaseManagementServiceBuilder12.setMonitors(
        monitors13);
    org.neo4j.logging.LogProvider logProvider15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = databaseManagementServiceBuilder12.setUserLogProvider(
        logProvider15);
    org.neo4j.common.DependencyResolver dependencyResolver17 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder18 = databaseManagementServiceBuilder12.setExternalDependencies(
        dependencyResolver17);
    org.neo4j.monitoring.Monitors monitors19 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder20 = databaseManagementServiceBuilder18.setMonitors(
        monitors19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder18);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder20);
  }

  @Test
  public void test1650() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1650");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver10);
    java.nio.file.Path path12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder13.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder13.setUserLogProvider(
        logProvider16);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder17.addDatabaseListener(
        databaseEventListener18);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule21 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder22 = clusteringDBMSBuilder17.addURLAccessRule(
        "hi!", uRLAccessRule21);
    org.neo4j.logging.LogProvider logProvider23 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder24 = clusteringDBMSBuilder17.setUserLogProvider(
        logProvider23);
    java.lang.Class<?> wildcardClass25 = clusteringDBMSBuilder17.getClass();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder22);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder24);
    org.junit.Assert.assertNotNull(wildcardClass25);
  }

  @Test
  public void test1651() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1651");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      boolean boolean9 = databaseManagementServiceClusterImpl5.isWraeForSt("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1652() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1652");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider14);
    java.lang.Class<?> wildcardClass16 = databaseManagementServiceBuilder15.getClass();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(wildcardClass16);
  }

  @Test
  public void test1653() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1653");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder7.setUserLogProvider(
        logProvider8);
    java.lang.String str10 = clusteringDBMSBuilder9.getEdition();
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder9.addDatabaseListener(
        databaseEventListener11);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = databaseManagementServiceBuilder12.addURLAccessRule(
        "", uRLAccessRule14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "enterprise" + "'", str10, "enterprise");
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
  }

  @Test
  public void test1654() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1654");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService5 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean6 = enhancedBootstrapper0.isRunning();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService7 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log8 = enhancedBootstrapper0.getLog();
    java.lang.String[] strArray10 = new java.lang.String[]{""};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray10);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray10);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray10);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray10);
    try {
      int int15 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray10);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertNull(databaseManagementService5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNull(databaseManagementService7);
    org.junit.Assert.assertNotNull(log8);
    org.junit.Assert.assertNotNull(strArray10);
  }

  @Test
  public void test1655() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1655");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl5.createDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1656() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1656");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    try {
      databaseManagementServiceClusterImpl2.dropDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1657() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1657");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService2 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService5 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean6 = enhancedBootstrapper0.isRunning();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNull(databaseManagementService2);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertNull(databaseManagementService5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1658() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1658");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.common.DependencyResolver dependencyResolver2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver2);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener4 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder5 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener4);
    org.neo4j.monitoring.Monitors monitors6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.setMonitors(
        monitors6);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "");
    java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder11.setConfigRaw(
          strMap12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
  }

  @Test
  public void test1659() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1659");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    java.lang.Class<?> wildcardClass6 = clusteringDBMSBuilder1.getClass();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(wildcardClass6);
  }

  @Test
  public void test1660() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1660");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver6);
    java.lang.String str8 = clusteringDBMSBuilder5.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver9);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.common.DependencyResolver dependencyResolver13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver13);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder14.addURLAccessRule(
        "hi!", uRLAccessRule16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "enterprise" + "'", str8, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
  }

  @Test
  public void test1661() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1661");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder6.addURLAccessRule(
        "", uRLAccessRule10);
    java.lang.String str12 = clusteringDBMSBuilder6.getEdition();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "enterprise" + "'", str12, "enterprise");
  }

  @Test
  public void test1662() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1662");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.setUserLogProvider(
        logProvider11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
  }

  @Test
  public void test1663() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1663");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder7.setMonitors(
        monitors8);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder7.addURLAccessRule(
        "hi!", uRLAccessRule11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder7.setUserLogProvider(
        logProvider13);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder7.addDatabaseListener(
        databaseEventListener15);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder18 = clusteringDBMSBuilder16.setMonitors(
        monitors17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder18);
  }

  @Test
  public void test1664() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1664");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl6.dropDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1665() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1665");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.addDatabaseListener(
        databaseEventListener11);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder12.addURLAccessRule(
        "hi!", uRLAccessRule14);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule17 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder18 = clusteringDBMSBuilder12.addURLAccessRule(
        "", uRLAccessRule17);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder20 = clusteringDBMSBuilder12.loadPropertiesFromFile(
        "");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder18);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder20);
  }

  @Test
  public void test1666() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1666");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    boolean boolean1 = enhancedBootstrapper0.isRunning();
    boolean boolean2 = enhancedBootstrapper0.isRunning();
    org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
  }

  @Test
  public void test1667() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1667");
    }
    io.github.onograph.cluster.raft.module.dprot.ClusterStructureService clusterStructureService0 = null;
    org.neo4j.kernel.database.DatabaseIdRepository databaseIdRepository1 = null;
    io.github.onograph.dbms.serverproc.DatabaseStateProcedureClusterImpl databaseStateProcedureClusterImpl2 = new io.github.onograph.dbms.serverproc.DatabaseStateProcedureClusterImpl(
        clusterStructureService0, databaseIdRepository1);
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature3 = databaseStateProcedureClusterImpl2.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature4 = databaseStateProcedureClusterImpl2.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature5 = databaseStateProcedureClusterImpl2.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature6 = databaseStateProcedureClusterImpl2.signature();
    org.neo4j.kernel.api.procedure.Context context7 = null;
    org.neo4j.values.AnyValue anyValue8 = null;
    org.neo4j.values.AnyValue[] anyValueArray9 = new org.neo4j.values.AnyValue[]{anyValue8};
    org.neo4j.kernel.api.ResourceTracker resourceTracker10 = null;
    try {
      org.neo4j.collection.RawIterator<org.neo4j.values.AnyValue[], org.neo4j.internal.kernel.api.exceptions.ProcedureException> anyValueArrayRawIterator11 = databaseStateProcedureClusterImpl2.apply(
          context7, anyValueArray9, resourceTracker10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalArgumentException; message: Parameter 'databaseName' value should have a string representation. Instead: null");
    } catch (java.lang.IllegalArgumentException e) {
    }
    org.junit.Assert.assertNotNull(procedureSignature3);
    org.junit.Assert.assertNotNull(procedureSignature4);
    org.junit.Assert.assertNotNull(procedureSignature5);
    org.junit.Assert.assertNotNull(procedureSignature6);
    org.junit.Assert.assertNotNull(anyValueArray9);
  }

  @Test
  public void test1668() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1668");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.setUserLogProvider(
        logProvider11);
    java.nio.file.Path path13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder10.loadPropertiesFromFile(
        path13);
    org.neo4j.logging.LogProvider logProvider15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = clusteringDBMSBuilder10.setUserLogProvider(
        logProvider15);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder10.addURLAccessRule(
        "hi!", uRLAccessRule18);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
  }

  @Test
  public void test1669() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1669");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder5.setMonitors(
        monitors10);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener12);
    java.nio.file.Path path14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
  }

  @Test
  public void test1670() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1670");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder1.setMonitors(
        monitors7);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder8.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.setUserLogProvider(
        logProvider11);
    java.lang.Class<?> wildcardClass13 = clusteringDBMSBuilder12.getClass();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(wildcardClass13);
  }

  @Test
  public void test1671() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1671");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService5 = enhancedBootstrapper0.getDatabaseManagementService();
    int int6 = enhancedBootstrapper0.stop();
    int int7 = enhancedBootstrapper0.stop();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNull(databaseManagementService4);
    org.junit.Assert.assertNull(databaseManagementService5);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
  }

  @Test
  public void test1672() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1672");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    boolean boolean1 = enhancedBootstrapper0.isRunning();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService2 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log3 = enhancedBootstrapper0.getLog();
    int int4 = enhancedBootstrapper0.stop();
    java.nio.file.Path path5 = null;
    java.nio.file.Path path6 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
    try {
      int int9 = enhancedBootstrapper0.start(path5, path6, strMap7, true);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    org.junit.Assert.assertNull(databaseManagementService2);
    org.junit.Assert.assertNotNull(log3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
  }

  @Test
  public void test1673() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1673");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv10 = null;
    metaUpgradeFlowAction5.accept(upgradeMetaEnv10);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction12 = metaUpgradeFlowAction1.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction5);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction13 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv15 = null;
    metaUpgradeFlowAction14.accept(upgradeMetaEnv15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction17 = metaUpgradeFlowAction13.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction14);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction18 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction19 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv20 = null;
    metaUpgradeFlowAction19.accept(upgradeMetaEnv20);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = metaUpgradeFlowAction18.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction19);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction24 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv25 = null;
    metaUpgradeFlowAction24.accept(upgradeMetaEnv25);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction27 = metaUpgradeFlowAction23.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction24);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv28 = null;
    metaUpgradeFlowAction23.accept(upgradeMetaEnv28);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction30 = metaUpgradeFlowAction19.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction31 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv32 = null;
    metaUpgradeFlowAction31.accept(upgradeMetaEnv32);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer34 = metaUpgradeFlowAction30.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction31);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction35 = metaUpgradeFlowAction13.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction31);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction36 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction37 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv38 = null;
    metaUpgradeFlowAction37.accept(upgradeMetaEnv38);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction40 = metaUpgradeFlowAction36.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction37);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction41 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv43 = null;
    metaUpgradeFlowAction42.accept(upgradeMetaEnv43);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction45 = metaUpgradeFlowAction41.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction42);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv46 = null;
    metaUpgradeFlowAction41.accept(upgradeMetaEnv46);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction48 = metaUpgradeFlowAction37.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction41);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer49 = metaUpgradeFlowAction35.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction41);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction50 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction51 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv52 = null;
    metaUpgradeFlowAction51.accept(upgradeMetaEnv52);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction54 = metaUpgradeFlowAction50.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction51);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction55 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction56 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv57 = null;
    metaUpgradeFlowAction56.accept(upgradeMetaEnv57);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction59 = metaUpgradeFlowAction55.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction56);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv60 = null;
    metaUpgradeFlowAction55.accept(upgradeMetaEnv60);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction62 = metaUpgradeFlowAction51.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction55);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction63 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv64 = null;
    metaUpgradeFlowAction63.accept(upgradeMetaEnv64);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer66 = metaUpgradeFlowAction62.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction63);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction67 = metaUpgradeFlowAction41.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction63);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction68 = metaUpgradeFlowAction1.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction67);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv69 = null;
    metaUpgradeFlowAction68.accept(upgradeMetaEnv69);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction12);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction13);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction17);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction18);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction19);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction24);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction30);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction31);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer34);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction35);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction36);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction37);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction40);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction41);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction45);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction48);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer49);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction50);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction51);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction54);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction55);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction56);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction59);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction62);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction63);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer66);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction67);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction68);
  }

  @Test
  public void test1674() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1674");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener6);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener8);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder3.addURLAccessRule(
        "enterprise", uRLAccessRule11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder3.setMonitors(
        monitors13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
  }

  @Test
  public void test1675() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1675");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder5.setMonitors(
        monitors9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider11);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "hi!");
    org.neo4j.common.DependencyResolver dependencyResolver15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver15);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener17 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder18 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener17);
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService19 = clusteringDBMSBuilder5.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder18);
  }

  @Test
  public void test1676() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1676");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    int int1 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int2 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int3 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType4 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    int int5 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType6 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType7 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.ExecutionContext executionContext8 = null;
    try {
      io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommand nodeStoreWrapperCopyCommand9 = nodeStoreWrapperCopyCommandCommandProvider0.createCommand(
          executionContext8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType6 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType6.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType7 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType7.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
  }

  @Test
  public void test1677() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1677");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv10 = null;
    metaUpgradeFlowAction5.accept(upgradeMetaEnv10);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction12 = metaUpgradeFlowAction1.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction5);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction13 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv14 = null;
    metaUpgradeFlowAction13.accept(upgradeMetaEnv14);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer16 = metaUpgradeFlowAction12.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction13);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv17 = null;
    metaUpgradeFlowAction12.accept(upgradeMetaEnv17);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction19 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction20 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv21 = null;
    metaUpgradeFlowAction20.accept(upgradeMetaEnv21);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = metaUpgradeFlowAction19.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction20);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction24 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction25 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv26 = null;
    metaUpgradeFlowAction25.accept(upgradeMetaEnv26);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction28 = metaUpgradeFlowAction24.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction25);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction29 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction30 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv31 = null;
    metaUpgradeFlowAction30.accept(upgradeMetaEnv31);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction33 = metaUpgradeFlowAction29.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction30);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction34 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction35 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv36 = null;
    metaUpgradeFlowAction35.accept(upgradeMetaEnv36);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction38 = metaUpgradeFlowAction34.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction35);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv39 = null;
    metaUpgradeFlowAction34.accept(upgradeMetaEnv39);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction41 = metaUpgradeFlowAction30.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction34);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv43 = null;
    metaUpgradeFlowAction42.accept(upgradeMetaEnv43);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer45 = metaUpgradeFlowAction41.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction42);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction46 = metaUpgradeFlowAction24.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction42);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction47 = metaUpgradeFlowAction23.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction46);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction48 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer49 = metaUpgradeFlowAction47.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction48);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction50 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction51 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv52 = null;
    metaUpgradeFlowAction51.accept(upgradeMetaEnv52);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction54 = metaUpgradeFlowAction50.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction51);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction55 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction56 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv57 = null;
    metaUpgradeFlowAction56.accept(upgradeMetaEnv57);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction59 = metaUpgradeFlowAction55.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction56);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction60 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction61 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv62 = null;
    metaUpgradeFlowAction61.accept(upgradeMetaEnv62);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction64 = metaUpgradeFlowAction60.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction61);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv65 = null;
    metaUpgradeFlowAction60.accept(upgradeMetaEnv65);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction67 = metaUpgradeFlowAction56.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction60);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction68 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv69 = null;
    metaUpgradeFlowAction68.accept(upgradeMetaEnv69);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer71 = metaUpgradeFlowAction67.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction68);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction72 = metaUpgradeFlowAction50.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction68);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction73 = metaUpgradeFlowAction47.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction72);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv74 = null;
    metaUpgradeFlowAction47.accept(upgradeMetaEnv74);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction76 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction77 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv78 = null;
    metaUpgradeFlowAction77.accept(upgradeMetaEnv78);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction80 = metaUpgradeFlowAction76.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction77);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction81 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction82 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv83 = null;
    metaUpgradeFlowAction82.accept(upgradeMetaEnv83);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction85 = metaUpgradeFlowAction81.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction82);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv86 = null;
    metaUpgradeFlowAction81.accept(upgradeMetaEnv86);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction88 = metaUpgradeFlowAction77.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction81);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv89 = null;
    metaUpgradeFlowAction81.accept(upgradeMetaEnv89);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction91 = metaUpgradeFlowAction47.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction81);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction92 = metaUpgradeFlowAction12.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction81);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv93 = null;
    metaUpgradeFlowAction12.accept(upgradeMetaEnv93);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction12);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction13);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer16);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction19);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction20);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction24);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction25);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction28);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction29);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction30);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction33);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction34);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction35);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction38);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction41);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer45);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction46);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction47);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction48);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer49);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction50);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction51);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction54);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction55);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction56);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction59);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction60);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction61);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction64);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction67);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction68);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer71);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction72);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction73);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction76);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction77);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction80);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction81);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction82);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction85);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction88);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction91);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction92);
  }

  @Test
  public void test1678() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1678");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl5.startDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1679() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1679");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    java.nio.file.Path path9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path9);
    java.nio.file.Path path11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path11);
    java.lang.String str13 = clusteringDBMSBuilder12.getEdition();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "enterprise" + "'", str13, "enterprise");
  }

  @Test
  public void test1680() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1680");
    }
    java.time.Clock clock0 = null;
    org.neo4j.kernel.database.DatabaseIdRepository databaseIdRepository1 = null;
    io.github.onograph.dbms.DbmsManagerWatchTagImpl dbmsManagerWatchTagImpl2 = null;
    java.time.ZoneId zoneId3 = null;
    io.github.onograph.dbms.serverproc.BasicProcedureQuarantineDatabaseImpl basicProcedureQuarantineDatabaseImpl4 = io.github.onograph.dbms.serverproc.BasicProcedureQuarantineDatabaseImpl.clsrBasicProcedureQuarantineDatabaseImpl(
        clock0, databaseIdRepository1, dbmsManagerWatchTagImpl2, zoneId3);
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature5 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature6 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature7 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature8 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature9 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature10 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature11 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.kernel.api.procedure.Context context12 = null;
    org.neo4j.values.AnyValue anyValue13 = null;
    org.neo4j.values.AnyValue[] anyValueArray14 = new org.neo4j.values.AnyValue[]{anyValue13};
    org.neo4j.kernel.api.ResourceTracker resourceTracker15 = null;
    try {
      org.neo4j.collection.RawIterator<org.neo4j.values.AnyValue[], org.neo4j.internal.kernel.api.exceptions.ProcedureException> anyValueArrayRawIterator16 = basicProcedureQuarantineDatabaseImpl4.apply(
          context12, anyValueArray14, resourceTracker15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalArgumentException; message: *** Error: c3bc6648-f892-4d86-9614-b53ef18de3fb");
    } catch (java.lang.IllegalArgumentException e) {
    }
    org.junit.Assert.assertNotNull(basicProcedureQuarantineDatabaseImpl4);
    org.junit.Assert.assertNotNull(procedureSignature5);
    org.junit.Assert.assertNotNull(procedureSignature6);
    org.junit.Assert.assertNotNull(procedureSignature7);
    org.junit.Assert.assertNotNull(procedureSignature8);
    org.junit.Assert.assertNotNull(procedureSignature9);
    org.junit.Assert.assertNotNull(procedureSignature10);
    org.junit.Assert.assertNotNull(procedureSignature11);
    org.junit.Assert.assertNotNull(anyValueArray14);
  }

  @Test
  public void test1681() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1681");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder9.addDatabaseListener(
        databaseEventListener12);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder9.addURLAccessRule(
        "hi!", uRLAccessRule15);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder18 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener19 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder20 = clusteringDBMSBuilder18.addDatabaseListener(
        databaseEventListener19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder18);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder20);
  }

  @Test
  public void test1682() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1682");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder7.setMonitors(
        monitors8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder7.setMonitors(
        monitors10);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder7.loadPropertiesFromFile(
        "hi!");
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder7.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder7.setUserLogProvider(
        logProvider16);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder17.loadPropertiesFromFile(
        "");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
  }

  @Test
  public void test1683() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1683");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.setMonitors(
        monitors9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
  }

  @Test
  public void test1684() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1684");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean5 = enhancedBootstrapper0.isRunning();
    java.nio.file.Path path6 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
    try {
      int int8 = enhancedBootstrapper0.start(path6, strMap7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNull(databaseManagementService4);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test1685() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1685");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.setExternalDependencies(
        dependencyResolver13);
    org.neo4j.logging.LogProvider logProvider15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = clusteringDBMSBuilder14.setUserLogProvider(
        logProvider15);
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService17 = clusteringDBMSBuilder14.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
  }

  @Test
  public void test1686() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1686");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    try {
      databaseManagementServiceClusterImpl4.shutdownDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1687() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1687");
    }
    java.time.Clock clock0 = null;
    org.neo4j.kernel.database.DatabaseIdRepository databaseIdRepository1 = null;
    io.github.onograph.dbms.DbmsManagerWatchTagImpl dbmsManagerWatchTagImpl2 = null;
    java.time.ZoneId zoneId3 = null;
    io.github.onograph.dbms.serverproc.BasicProcedureQuarantineDatabaseImpl basicProcedureQuarantineDatabaseImpl4 = io.github.onograph.dbms.serverproc.BasicProcedureQuarantineDatabaseImpl.clsrBasicProcedureQuarantineDatabaseImpl(
        clock0, databaseIdRepository1, dbmsManagerWatchTagImpl2, zoneId3);
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature5 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature6 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature7 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature8 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature9 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature10 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature11 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature12 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.junit.Assert.assertNotNull(basicProcedureQuarantineDatabaseImpl4);
    org.junit.Assert.assertNotNull(procedureSignature5);
    org.junit.Assert.assertNotNull(procedureSignature6);
    org.junit.Assert.assertNotNull(procedureSignature7);
    org.junit.Assert.assertNotNull(procedureSignature8);
    org.junit.Assert.assertNotNull(procedureSignature9);
    org.junit.Assert.assertNotNull(procedureSignature10);
    org.junit.Assert.assertNotNull(procedureSignature11);
    org.junit.Assert.assertNotNull(procedureSignature12);
  }

  @Test
  public void test1688() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1688");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder10.setUserLogProvider(
        logProvider11);
    java.nio.file.Path path13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = databaseManagementServiceBuilder12.loadPropertiesFromFile(
        path13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
  }

  @Test
  public void test1689() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1689");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder3.setMonitors(
        monitors11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder12.setMonitors(
        monitors13);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder12.addDatabaseListener(
        databaseEventListener15);
    java.nio.file.Path path17 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder18 = clusteringDBMSBuilder16.loadPropertiesFromFile(
        path17);
    org.neo4j.monitoring.Monitors monitors19 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder20 = clusteringDBMSBuilder16.setMonitors(
        monitors19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder18);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder20);
  }

  @Test
  public void test1690() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1690");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.logging.LogProvider logProvider8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder7.setUserLogProvider(
        logProvider8);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder7.addURLAccessRule(
        "enterprise", uRLAccessRule11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder7.setUserLogProvider(
        logProvider13);
    java.lang.String str15 = clusteringDBMSBuilder7.getEdition();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "enterprise" + "'", str15, "enterprise");
  }

  @Test
  public void test1691() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1691");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.common.DependencyResolver dependencyResolver2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
  }

  @Test
  public void test1692() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1692");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    java.nio.file.Path path9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path9);
    org.neo4j.common.DependencyResolver dependencyResolver11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = databaseManagementServiceBuilder10.setExternalDependencies(
        dependencyResolver11);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = databaseManagementServiceBuilder10.addDatabaseListener(
        databaseEventListener13);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = databaseManagementServiceBuilder10.addDatabaseListener(
        databaseEventListener15);
    org.neo4j.common.DependencyResolver dependencyResolver17 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder18 = databaseManagementServiceBuilder16.setExternalDependencies(
        dependencyResolver17);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder20 = databaseManagementServiceBuilder18.loadPropertiesFromFile(
        "");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder18);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder20);
  }

  @Test
  public void test1693() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1693");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl10 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    try {
      databaseManagementServiceClusterImpl10.createDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1694() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1694");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    try {
      org.neo4j.graphdb.GraphDatabaseService graphDatabaseService3 = databaseManagementServiceClusterImpl1.database(
          "hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1695() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1695");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    org.neo4j.graphdb.config.Configuration configuration8 = null;
    try {
      databaseManagementServiceClusterImpl6.createDatabase("", configuration8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1696() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1696");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener5 = null;
    try {
      databaseManagementServiceClusterImpl4.unregisterDatabaseEventListener(databaseEventListener5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1697() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1697");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver5 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder6 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver5);
    java.nio.file.Path path7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder1.addURLAccessRule(
        "hi!", uRLAccessRule10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder1.setMonitors(
        monitors12);
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService14 = databaseManagementServiceBuilder13.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
  }

  @Test
  public void test1698() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1698");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder3.setMonitors(
        monitors11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder12.setMonitors(
        monitors13);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder12.addDatabaseListener(
        databaseEventListener15);
    java.nio.file.Path path17 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder18 = clusteringDBMSBuilder16.loadPropertiesFromFile(
        path17);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener19 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder20 = clusteringDBMSBuilder16.addDatabaseListener(
        databaseEventListener19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder18);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder20);
  }

  @Test
  public void test1699() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1699");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    java.lang.String str9 = clusteringDBMSBuilder3.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver10);
    org.neo4j.logging.LogProvider logProvider12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder3.setUserLogProvider(
        logProvider12);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "enterprise" + "'", str9, "enterprise");
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
  }

  @Test
  public void test1700() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1700");
    }
    io.github.onograph.server.EntryPointImpl entryPointImpl0 = new io.github.onograph.server.EntryPointImpl();
    org.neo4j.server.startup.EntryPoint.Priority priority1 = entryPointImpl0.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority2 = entryPointImpl0.getPriority();
    io.github.onograph.server.EntryPointImpl entryPointImpl3 = new io.github.onograph.server.EntryPointImpl();
    org.neo4j.server.startup.EntryPoint.Priority priority4 = entryPointImpl3.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority5 = entryPointImpl3.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority6 = entryPointImpl3.getPriority();
    io.github.onograph.server.EntryPointImpl entryPointImpl7 = new io.github.onograph.server.EntryPointImpl();
    int int8 = entryPointImpl3.compareTo((org.neo4j.server.startup.EntryPoint) entryPointImpl7);
    int int9 = entryPointImpl0.compareTo((org.neo4j.server.startup.EntryPoint) entryPointImpl3);
    org.junit.Assert.assertTrue(
        "'" + priority1 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority1.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority2 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority2.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority4 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority4.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority5 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority5.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority6 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority6.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
  }

  @Test
  public void test1701() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1701");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.monitoring.Monitors monitors4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setMonitors(
        monitors4);
    java.lang.String str6 = clusteringDBMSBuilder1.getEdition();
    org.neo4j.logging.LogProvider logProvider7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder1.setMonitors(
        monitors9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterprise" + "'", str6, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
  }

  @Test
  public void test1702() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1702");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    org.neo4j.graphdb.config.Configuration configuration6 = null;
    try {
      databaseManagementServiceClusterImpl4.createDatabase("enterprise", configuration6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1703() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1703");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.monitoring.Monitors monitors4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setMonitors(
        monitors4);
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver6);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.monitoring.Monitors monitors10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder1.setMonitors(
        monitors10);
    java.nio.file.Path path12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path12);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder1.addURLAccessRule(
        "", uRLAccessRule15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
  }

  @Test
  public void test1704() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1704");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl1);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    try {
      databaseManagementServiceClusterImpl3.shutdownDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1705() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1705");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    java.lang.String str9 = clusteringDBMSBuilder3.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver10);
    java.nio.file.Path path12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path12);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "enterprise" + "'", str9, "enterprise");
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
  }

  @Test
  public void test1706() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1706");
    }
    io.github.onograph.server.EntryPointImpl entryPointImpl0 = new io.github.onograph.server.EntryPointImpl();
    org.neo4j.server.startup.EntryPoint.Priority priority1 = entryPointImpl0.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority2 = entryPointImpl0.getPriority();
    io.github.onograph.server.EntryPointImpl entryPointImpl3 = new io.github.onograph.server.EntryPointImpl();
    int int4 = entryPointImpl0.compareTo((org.neo4j.server.startup.EntryPoint) entryPointImpl3);
    io.github.onograph.server.EntryPointImpl entryPointImpl5 = new io.github.onograph.server.EntryPointImpl();
    org.neo4j.server.startup.EntryPoint.Priority priority6 = entryPointImpl5.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority7 = entryPointImpl5.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority8 = entryPointImpl5.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority9 = entryPointImpl5.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority10 = entryPointImpl5.getPriority();
    int int11 = entryPointImpl3.compareTo((org.neo4j.server.startup.EntryPoint) entryPointImpl5);
    org.junit.Assert.assertTrue(
        "'" + priority1 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority1.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority2 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority2.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertTrue(
        "'" + priority6 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority6.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority7 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority7.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority8 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority8.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority9 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority9.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority10 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority10.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
  }

  @Test
  public void test1707() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1707");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    org.neo4j.cli.Command.CommandType commandType1 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType2 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    int int3 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType4 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType5 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    int int6 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int7 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType8 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.junit.Assert.assertTrue(
        "'" + commandType1 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType1.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType5 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType5.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType8 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType8.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
  }

  @Test
  public void test1708() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1708");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    java.lang.String str11 = clusteringDBMSBuilder5.getEdition();
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder5.addURLAccessRule(
        "", uRLAccessRule13);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule16);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder17.addDatabaseListener(
        databaseEventListener18);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "enterprise" + "'", str11, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
  }

  @Test
  public void test1709() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1709");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener7 = null;
    try {
      databaseManagementServiceClusterImpl4.unregisterDatabaseEventListener(databaseEventListener7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1710() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1710");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    try {
      org.neo4j.graphdb.GraphDatabaseService graphDatabaseService8 = databaseManagementServiceClusterImpl6.database(
          "enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1711() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1711");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    int int1 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int2 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int3 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType4 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType5 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType6 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType7 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType8 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType9 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.ExecutionContext executionContext10 = null;
    try {
      io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommand nodeStoreWrapperCopyCommand11 = nodeStoreWrapperCopyCommandCommandProvider0.createCommand(
          executionContext10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType5 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType5.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType6 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType6.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType7 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType7.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType8 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType8.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType9 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType9.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
  }

  @Test
  public void test1712() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1712");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
  }

  @Test
  public void test1713() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1713");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.common.DependencyResolver dependencyResolver2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver2);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener4 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder5 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener4);
    org.neo4j.monitoring.Monitors monitors6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.setMonitors(
        monitors6);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener8);
    java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.setConfigRaw(
          strMap10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
  }

  @Test
  public void test1714() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1714");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder7.setMonitors(
        monitors8);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder7.addURLAccessRule(
        "hi!", uRLAccessRule11);
    java.nio.file.Path path13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder7.loadPropertiesFromFile(
        path13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
  }

  @Test
  public void test1715() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1715");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    int int1 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType2 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType3 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType4 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType5 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType6 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    int int7 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int8 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType5 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType5.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType6 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType6.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
  }

  @Test
  public void test1716() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1716");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    int int5 = enhancedBootstrapper0.stop();
    int int6 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService7 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean8 = enhancedBootstrapper0.isRunning();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    org.junit.Assert.assertNull(databaseManagementService7);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1717() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1717");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder7.setMonitors(
        monitors8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder7.setMonitors(
        monitors10);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder7.loadPropertiesFromFile(
        "hi!");
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder7.setExternalDependencies(
        dependencyResolver14);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder7.loadPropertiesFromFile(
        "");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
  }

  @Test
  public void test1718() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1718");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    int int5 = enhancedBootstrapper0.stop();
    int int6 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService7 = enhancedBootstrapper0.getDatabaseManagementService();
    int int8 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log9 = enhancedBootstrapper0.getLog();
    java.lang.Class<?> wildcardClass10 = log9.getClass();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    org.junit.Assert.assertNull(databaseManagementService7);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    org.junit.Assert.assertNotNull(log9);
    org.junit.Assert.assertNotNull(wildcardClass10);
  }

  @Test
  public void test1719() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1719");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    int int4 = enhancedBootstrapper0.stop();
    int int5 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService6 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService7 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService8 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService9 = enhancedBootstrapper0.getDatabaseManagementService();
    int int10 = enhancedBootstrapper0.stop();
    java.nio.file.Path path11 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
    try {
      int int13 = enhancedBootstrapper0.start(path11, strMap12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertNull(databaseManagementService6);
    org.junit.Assert.assertNull(databaseManagementService7);
    org.junit.Assert.assertNull(databaseManagementService8);
    org.junit.Assert.assertNull(databaseManagementService9);
    org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
  }

  @Test
  public void test1720() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1720");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.monitoring.Monitors monitors6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder1.setMonitors(
        monitors6);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder1.addURLAccessRule(
        "enterprise", uRLAccessRule9);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder1.addURLAccessRule(
        "hi!", uRLAccessRule12);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        "hi!");
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService16 = databaseManagementServiceBuilder15.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
  }

  @Test
  public void test1721() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1721");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "hi!");
    org.neo4j.logging.LogProvider logProvider8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder3.setUserLogProvider(
        logProvider8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder3.setMonitors(
        monitors10);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener12 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = databaseManagementServiceBuilder13.setExternalDependencies(
        dependencyResolver14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
  }

  @Test
  public void test1722() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1722");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl7);
    try {
      databaseManagementServiceClusterImpl7.createDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1723() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1723");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.setMonitors(
        monitors11);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder10.addURLAccessRule(
        "hi!", uRLAccessRule14);
    java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder10.setConfigRaw(
          strMap16);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
  }

  @Test
  public void test1724() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1724");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder6.addURLAccessRule(
        "", uRLAccessRule10);
    org.neo4j.logging.LogProvider logProvider12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder6.setMonitors(
        monitors16);
    org.neo4j.logging.LogProvider logProvider18 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder19 = clusteringDBMSBuilder17.setUserLogProvider(
        logProvider18);
    org.neo4j.common.DependencyResolver dependencyResolver20 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder21 = clusteringDBMSBuilder19.setExternalDependencies(
        dependencyResolver20);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule23 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder24 = clusteringDBMSBuilder19.addURLAccessRule(
        "hi!", uRLAccessRule23);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder26 = clusteringDBMSBuilder24.loadPropertiesFromFile(
        "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder19);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder21);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder24);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder26);
  }

  @Test
  public void test1725() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1725");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder9.addDatabaseListener(
        databaseEventListener12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder9.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder15.addDatabaseListener(
        databaseEventListener16);
    org.neo4j.logging.LogProvider logProvider18 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder19 = clusteringDBMSBuilder15.setUserLogProvider(
        logProvider18);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder19);
  }

  @Test
  public void test1726() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1726");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.monitoring.Monitors monitors6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder1.setMonitors(
        monitors6);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder1.addURLAccessRule(
        "enterprise", uRLAccessRule9);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder1.addURLAccessRule(
        "hi!", uRLAccessRule12);
    java.nio.file.Path path14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
  }

  @Test
  public void test1727() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1727");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder6.addURLAccessRule(
        "", uRLAccessRule10);
    org.neo4j.logging.LogProvider logProvider12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder6.setMonitors(
        monitors16);
    org.neo4j.logging.LogProvider logProvider18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider18);
    org.neo4j.common.DependencyResolver dependencyResolver20 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver20);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener22 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder23 = clusteringDBMSBuilder21.addDatabaseListener(
        databaseEventListener22);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder21);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder23);
  }

  @Test
  public void test1728() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1728");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver10);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder5.addURLAccessRule(
        "", uRLAccessRule13);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = databaseManagementServiceBuilder14.loadPropertiesFromFile(
        "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
  }

  @Test
  public void test1729() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1729");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    int int5 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log6 = enhancedBootstrapper0.getLog();
    boolean boolean7 = enhancedBootstrapper0.isRunning();
    int int8 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log9 = enhancedBootstrapper0.getLog();
    boolean boolean10 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log11 = enhancedBootstrapper0.getLog();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNull(databaseManagementService4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertNotNull(log6);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    org.junit.Assert.assertNotNull(log9);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertNotNull(log11);
  }

  @Test
  public void test1730() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1730");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    try {
      boolean boolean7 = databaseManagementServiceClusterImpl3.isWraeForSt("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1731() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1731");
    }
    io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider commandGetServerIdCommandProvider0 = new io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider();
    int int1 = commandGetServerIdCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType2 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType3 = commandGetServerIdCommandProvider0.commandType();
    int int4 = commandGetServerIdCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType5 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType6 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType7 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.ExecutionContext executionContext8 = null;
    try {
      io.github.onograph.dbms.commands.CommandGetServerIdImpl commandGetServerIdImpl9 = commandGetServerIdCommandProvider0.createCommand(
          executionContext8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType5 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType5.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType6 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType6.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType7 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType7.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
  }

  @Test
  public void test1732() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1732");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    try {
      databaseManagementServiceClusterImpl5.dropDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1733() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1733");
    }
    io.github.onograph.server.EntryPointImpl entryPointImpl0 = new io.github.onograph.server.EntryPointImpl();
    org.neo4j.server.startup.EntryPoint.Priority priority1 = entryPointImpl0.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority2 = entryPointImpl0.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority3 = entryPointImpl0.getPriority();
    io.github.onograph.server.EntryPointImpl entryPointImpl4 = new io.github.onograph.server.EntryPointImpl();
    int int5 = entryPointImpl0.compareTo((org.neo4j.server.startup.EntryPoint) entryPointImpl4);
    org.neo4j.server.startup.EntryPoint.Priority priority6 = entryPointImpl0.getPriority();
    org.junit.Assert.assertTrue(
        "'" + priority1 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority1.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority2 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority2.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority3 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority3.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertTrue(
        "'" + priority6 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority6.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
  }

  @Test
  public void test1734() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1734");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService2 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log3 = enhancedBootstrapper0.getLog();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean5 = enhancedBootstrapper0.isRunning();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService6 = enhancedBootstrapper0.getDatabaseManagementService();
    int int7 = enhancedBootstrapper0.stop();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNull(databaseManagementService2);
    org.junit.Assert.assertNotNull(log3);
    org.junit.Assert.assertNull(databaseManagementService4);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertNull(databaseManagementService6);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
  }

  @Test
  public void test1735() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1735");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    int int1 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int2 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int3 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType4 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType5 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType6 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType7 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType8 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType9 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType10 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType5 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType5.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType6 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType6.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType7 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType7.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType8 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType8.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType9 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType9.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType10 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType10.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
  }

  @Test
  public void test1736() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1736");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.common.DependencyResolver dependencyResolver2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver2);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener4 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder5 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener4);
    org.neo4j.logging.LogProvider logProvider6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder3.setUserLogProvider(
        logProvider6);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "hi!");
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "hi!");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
  }

  @Test
  public void test1737() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1737");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    try {
      databaseManagementServiceClusterImpl2.startDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1738() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1738");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    try {
      databaseManagementServiceClusterImpl9.dropDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1739() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1739");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean5 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log6 = enhancedBootstrapper0.getLog();
    java.nio.file.Path path7 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
    try {
      int int9 = enhancedBootstrapper0.start(path7, strMap8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNull(databaseManagementService4);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertNotNull(log6);
  }

  @Test
  public void test1740() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1740");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    org.neo4j.graphdb.config.Configuration configuration11 = null;
    try {
      databaseManagementServiceClusterImpl5.createDatabase("", configuration11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1741() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1741");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService2 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean5 = enhancedBootstrapper0.isRunning();
    java.lang.String[] strArray8 = new java.lang.String[]{"enterprise", "enterprise"};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray8);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray8);
    try {
      int int11 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray8);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNull(databaseManagementService2);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertNull(databaseManagementService4);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertNotNull(strArray8);
  }

  @Test
  public void test1742() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1742");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder10.loadPropertiesFromFile(
        "hi!");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
  }

  @Test
  public void test1743() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1743");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder7.loadPropertiesFromFile(
        "enterprise");
    java.nio.file.Path path10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder7.loadPropertiesFromFile(
        path10);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener12 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = databaseManagementServiceBuilder11.addDatabaseListener(
        databaseEventListener12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
  }

  @Test
  public void test1744() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1744");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener6);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener8);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder9.addURLAccessRule(
        "", uRLAccessRule11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
  }

  @Test
  public void test1745() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1745");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder9.addDatabaseListener(
        databaseEventListener12);
    org.neo4j.logging.LogProvider logProvider14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder13.setUserLogProvider(
        logProvider14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder13.setUserLogProvider(
        logProvider16);
    org.neo4j.common.DependencyResolver dependencyResolver18 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder19 = clusteringDBMSBuilder17.setExternalDependencies(
        dependencyResolver18);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder19);
  }

  @Test
  public void test1746() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1746");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    try {
      databaseManagementServiceClusterImpl7.dropDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1747() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1747");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv1 = null;
    metaUpgradeFlowAction0.accept(upgradeMetaEnv1);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv3 = null;
    metaUpgradeFlowAction0.accept(upgradeMetaEnv3);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
  }

  @Test
  public void test1748() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1748");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    java.nio.file.Path path9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path9);
    org.neo4j.common.DependencyResolver dependencyResolver11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = databaseManagementServiceBuilder10.setExternalDependencies(
        dependencyResolver11);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = databaseManagementServiceBuilder10.addDatabaseListener(
        databaseEventListener13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = databaseManagementServiceBuilder14.setMonitors(
        monitors15);
    org.neo4j.logging.LogProvider logProvider17 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder18 = databaseManagementServiceBuilder16.setUserLogProvider(
        logProvider17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder18);
  }

  @Test
  public void test1749() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1749");
    }
    java.lang.String[] strArray1 = new java.lang.String[]{"hi!"};
    try {
      io.github.onograph.server.EntryPointImpl.startBootstrapper(strArray1);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNotNull(strArray1);
  }

  @Test
  public void test1750() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1750");
    }
    io.github.onograph.server.EntryPointImpl entryPointImpl0 = new io.github.onograph.server.EntryPointImpl();
    org.neo4j.server.startup.EntryPoint.Priority priority1 = entryPointImpl0.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority2 = entryPointImpl0.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority3 = entryPointImpl0.getPriority();
    io.github.onograph.server.EntryPointImpl entryPointImpl4 = new io.github.onograph.server.EntryPointImpl();
    int int5 = entryPointImpl0.compareTo((org.neo4j.server.startup.EntryPoint) entryPointImpl4);
    org.neo4j.server.startup.EntryPoint.Priority priority6 = entryPointImpl4.getPriority();
    java.lang.Class<?> wildcardClass7 = entryPointImpl4.getClass();
    org.junit.Assert.assertTrue(
        "'" + priority1 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority1.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority2 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority2.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority3 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority3.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertTrue(
        "'" + priority6 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority6.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertNotNull(wildcardClass7);
  }

  @Test
  public void test1751() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1751");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.setMonitors(
        monitors9);
    org.neo4j.common.DependencyResolver dependencyResolver11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.setExternalDependencies(
        dependencyResolver11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder10.setMonitors(
        monitors13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
  }

  @Test
  public void test1752() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1752");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.monitoring.Monitors monitors6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder1.setMonitors(
        monitors6);
    java.lang.String str8 = clusteringDBMSBuilder1.getEdition();
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider11);
    java.util.Map<java.lang.String, java.lang.String> strMap13 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder12.setConfigRaw(
          strMap13);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "enterprise" + "'", str8, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
  }

  @Test
  public void test1753() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1753");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder6.addURLAccessRule(
        "enterprise", uRLAccessRule12);
    java.nio.file.Path path14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        path14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider16);
    org.neo4j.logging.LogProvider logProvider18 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder19 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider18);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        "hi!");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder21);
  }

  @Test
  public void test1754() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1754");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    org.neo4j.graphdb.config.Configuration configuration7 = null;
    try {
      databaseManagementServiceClusterImpl3.createDatabase("enterprise", configuration7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1755() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1755");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl1);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    try {
      boolean boolean5 = databaseManagementServiceClusterImpl3.isWraeForSt("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1756() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1756");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.common.DependencyResolver dependencyResolver2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver2);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener4 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder5 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener4);
    org.neo4j.logging.LogProvider logProvider6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder3.setUserLogProvider(
        logProvider6);
    org.neo4j.common.DependencyResolver dependencyResolver8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder7.setExternalDependencies(
        dependencyResolver8);
    try {
      io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl10 = clusteringDBMSBuilder7.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
  }

  @Test
  public void test1757() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1757");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    int int4 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log5 = enhancedBootstrapper0.getLog();
    int int6 = enhancedBootstrapper0.stop();
    int int7 = enhancedBootstrapper0.stop();
    boolean boolean8 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log9 = enhancedBootstrapper0.getLog();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService10 = enhancedBootstrapper0.getDatabaseManagementService();
    java.nio.file.Path path11 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
    try {
      int int13 = enhancedBootstrapper0.start(path11, strMap12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertNotNull(log5);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertNotNull(log9);
    org.junit.Assert.assertNull(databaseManagementService10);
  }

  @Test
  public void test1758() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1758");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        "hi!");
    org.neo4j.common.DependencyResolver dependencyResolver11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver11);
    java.nio.file.Path path13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.loadPropertiesFromFile(
        path13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder12.setMonitors(
        monitors15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
  }

  @Test
  public void test1759() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1759");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    java.lang.String str6 = clusteringDBMSBuilder3.getEdition();
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder3.setMonitors(
        monitors7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder3.addURLAccessRule(
        "enterprise", uRLAccessRule10);
    java.nio.file.Path path12 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder11.loadPropertiesFromFile(
        path12);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder11.addDatabaseListener(
        databaseEventListener14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterprise" + "'", str6, "enterprise");
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
  }

  @Test
  public void test1760() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1760");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log2 = enhancedBootstrapper0.getLog();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    boolean boolean4 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log5 = enhancedBootstrapper0.getLog();
    java.nio.file.Path path6 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
    try {
      int int8 = enhancedBootstrapper0.start(path6, strMap7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNotNull(log2);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(log5);
  }

  @Test
  public void test1761() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1761");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    java.nio.file.Path path9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path9);
    org.neo4j.common.DependencyResolver dependencyResolver11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = databaseManagementServiceBuilder10.setExternalDependencies(
        dependencyResolver11);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = databaseManagementServiceBuilder10.addDatabaseListener(
        databaseEventListener13);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = databaseManagementServiceBuilder14.loadPropertiesFromFile(
        "hi!");
    org.neo4j.common.DependencyResolver dependencyResolver17 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder18 = databaseManagementServiceBuilder14.setExternalDependencies(
        dependencyResolver17);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule20 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder21 = databaseManagementServiceBuilder14.addURLAccessRule(
        "hi!", uRLAccessRule20);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder18);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder21);
  }

  @Test
  public void test1762() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1762");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.setUserLogProvider(
        logProvider13);
    java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder12.setConfigRaw(
          strMap15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
  }

  @Test
  public void test1763() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1763");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    java.lang.String str11 = clusteringDBMSBuilder5.getEdition();
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder5.addURLAccessRule(
        "", uRLAccessRule13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder14.setMonitors(
        monitors15);
    org.neo4j.logging.LogProvider logProvider17 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder18 = clusteringDBMSBuilder14.setUserLogProvider(
        logProvider17);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener19 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder20 = clusteringDBMSBuilder14.addDatabaseListener(
        databaseEventListener19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "enterprise" + "'", str11, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder18);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder20);
  }

  @Test
  public void test1764() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1764");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log2 = enhancedBootstrapper0.getLog();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService5 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean6 = enhancedBootstrapper0.isRunning();
    int int7 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService8 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService9 = enhancedBootstrapper0.getDatabaseManagementService();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNotNull(log2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertNull(databaseManagementService5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    org.junit.Assert.assertNull(databaseManagementService8);
    org.junit.Assert.assertNull(databaseManagementService9);
  }

  @Test
  public void test1765() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1765");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder10.setMonitors(
        monitors11);
    org.neo4j.common.DependencyResolver dependencyResolver13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = databaseManagementServiceBuilder12.setExternalDependencies(
        dependencyResolver13);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = databaseManagementServiceBuilder12.loadPropertiesFromFile(
        "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
  }

  @Test
  public void test1766() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1766");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv10 = null;
    metaUpgradeFlowAction5.accept(upgradeMetaEnv10);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction12 = metaUpgradeFlowAction1.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction5);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv13 = null;
    metaUpgradeFlowAction5.accept(upgradeMetaEnv13);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction15 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction16 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv17 = null;
    metaUpgradeFlowAction16.accept(upgradeMetaEnv17);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction19 = metaUpgradeFlowAction15.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction16);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction20 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction21 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv22 = null;
    metaUpgradeFlowAction21.accept(upgradeMetaEnv22);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction24 = metaUpgradeFlowAction20.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction21);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction25 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction26 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv27 = null;
    metaUpgradeFlowAction26.accept(upgradeMetaEnv27);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction29 = metaUpgradeFlowAction25.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction26);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv30 = null;
    metaUpgradeFlowAction25.accept(upgradeMetaEnv30);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction32 = metaUpgradeFlowAction21.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction25);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction33 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv34 = null;
    metaUpgradeFlowAction33.accept(upgradeMetaEnv34);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer36 = metaUpgradeFlowAction32.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction33);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction37 = metaUpgradeFlowAction15.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction33);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction38 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction39 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv40 = null;
    metaUpgradeFlowAction39.accept(upgradeMetaEnv40);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = metaUpgradeFlowAction38.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction39);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction43 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction44 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv45 = null;
    metaUpgradeFlowAction44.accept(upgradeMetaEnv45);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction47 = metaUpgradeFlowAction43.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction44);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv48 = null;
    metaUpgradeFlowAction43.accept(upgradeMetaEnv48);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction50 = metaUpgradeFlowAction39.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction43);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer51 = metaUpgradeFlowAction37.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction43);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction52 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction53 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv54 = null;
    metaUpgradeFlowAction53.accept(upgradeMetaEnv54);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction56 = metaUpgradeFlowAction52.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction53);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction57 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction58 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv59 = null;
    metaUpgradeFlowAction58.accept(upgradeMetaEnv59);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction61 = metaUpgradeFlowAction57.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction58);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv62 = null;
    metaUpgradeFlowAction57.accept(upgradeMetaEnv62);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction64 = metaUpgradeFlowAction53.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction57);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction65 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv66 = null;
    metaUpgradeFlowAction65.accept(upgradeMetaEnv66);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer68 = metaUpgradeFlowAction64.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction65);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction69 = metaUpgradeFlowAction43.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction65);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction70 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction71 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv72 = null;
    metaUpgradeFlowAction71.accept(upgradeMetaEnv72);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction74 = metaUpgradeFlowAction70.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction71);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction75 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction76 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv77 = null;
    metaUpgradeFlowAction76.accept(upgradeMetaEnv77);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction79 = metaUpgradeFlowAction75.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction76);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction80 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction81 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv82 = null;
    metaUpgradeFlowAction81.accept(upgradeMetaEnv82);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction84 = metaUpgradeFlowAction80.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction81);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv85 = null;
    metaUpgradeFlowAction80.accept(upgradeMetaEnv85);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction87 = metaUpgradeFlowAction76.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction80);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction88 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv89 = null;
    metaUpgradeFlowAction88.accept(upgradeMetaEnv89);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer91 = metaUpgradeFlowAction87.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction88);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction92 = metaUpgradeFlowAction70.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction88);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction93 = metaUpgradeFlowAction65.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction92);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer94 = metaUpgradeFlowAction5.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction93);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv95 = null;
    metaUpgradeFlowAction5.accept(upgradeMetaEnv95);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction12);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction15);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction16);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction19);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction20);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction21);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction24);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction25);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction26);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction29);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction32);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction33);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer36);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction37);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction38);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction39);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction43);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction44);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction47);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction50);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer51);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction52);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction53);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction56);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction57);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction58);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction61);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction64);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction65);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer68);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction69);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction70);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction71);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction74);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction75);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction76);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction79);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction80);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction81);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction84);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction87);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction88);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer91);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction92);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction93);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer94);
  }

  @Test
  public void test1767() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1767");
    }
    java.lang.String[] strArray1 = new java.lang.String[]{""};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray1);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray1);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray1);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray1);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray1);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray1);
    org.junit.Assert.assertNotNull(strArray1);
  }

  @Test
  public void test1768() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1768");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    org.neo4j.graphdb.config.Configuration configuration9 = null;
    try {
      databaseManagementServiceClusterImpl7.createDatabase("enterprise", configuration9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1769() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1769");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.monitoring.Monitors monitors8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder7.setMonitors(
        monitors8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder7.setExternalDependencies(
        dependencyResolver10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
  }

  @Test
  public void test1770() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1770");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl1);
    try {
      databaseManagementServiceClusterImpl1.createDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1771() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1771");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    try {
      databaseManagementServiceClusterImpl3.shutdownDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1772() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1772");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv10 = null;
    metaUpgradeFlowAction5.accept(upgradeMetaEnv10);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction12 = metaUpgradeFlowAction1.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction5);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction13 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv15 = null;
    metaUpgradeFlowAction14.accept(upgradeMetaEnv15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction17 = metaUpgradeFlowAction13.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction14);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction18 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction19 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv20 = null;
    metaUpgradeFlowAction19.accept(upgradeMetaEnv20);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = metaUpgradeFlowAction18.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction19);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction24 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv25 = null;
    metaUpgradeFlowAction24.accept(upgradeMetaEnv25);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction27 = metaUpgradeFlowAction23.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction24);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv28 = null;
    metaUpgradeFlowAction23.accept(upgradeMetaEnv28);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction30 = metaUpgradeFlowAction19.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction31 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv32 = null;
    metaUpgradeFlowAction31.accept(upgradeMetaEnv32);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer34 = metaUpgradeFlowAction30.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction31);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer35 = metaUpgradeFlowAction13.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction31);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction36 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction37 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv38 = null;
    metaUpgradeFlowAction37.accept(upgradeMetaEnv38);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction40 = metaUpgradeFlowAction36.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction37);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction41 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv43 = null;
    metaUpgradeFlowAction42.accept(upgradeMetaEnv43);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction45 = metaUpgradeFlowAction41.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction42);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction46 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction47 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv48 = null;
    metaUpgradeFlowAction47.accept(upgradeMetaEnv48);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction50 = metaUpgradeFlowAction46.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction47);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction51 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction52 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv53 = null;
    metaUpgradeFlowAction52.accept(upgradeMetaEnv53);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction55 = metaUpgradeFlowAction51.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction52);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv56 = null;
    metaUpgradeFlowAction51.accept(upgradeMetaEnv56);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction58 = metaUpgradeFlowAction47.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction51);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction59 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv60 = null;
    metaUpgradeFlowAction59.accept(upgradeMetaEnv60);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer62 = metaUpgradeFlowAction58.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction59);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction63 = metaUpgradeFlowAction41.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction59);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction64 = metaUpgradeFlowAction40.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction63);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer65 = metaUpgradeFlowAction31.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction40);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction66 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction31);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction67 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction68 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv69 = null;
    metaUpgradeFlowAction68.accept(upgradeMetaEnv69);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction71 = metaUpgradeFlowAction67.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction68);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction72 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction73 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv74 = null;
    metaUpgradeFlowAction73.accept(upgradeMetaEnv74);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction76 = metaUpgradeFlowAction72.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction73);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction77 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction78 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv79 = null;
    metaUpgradeFlowAction78.accept(upgradeMetaEnv79);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction81 = metaUpgradeFlowAction77.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction78);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv82 = null;
    metaUpgradeFlowAction77.accept(upgradeMetaEnv82);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction84 = metaUpgradeFlowAction73.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction77);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction85 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv86 = null;
    metaUpgradeFlowAction85.accept(upgradeMetaEnv86);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer88 = metaUpgradeFlowAction84.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction85);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction89 = metaUpgradeFlowAction67.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction85);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction90 = metaUpgradeFlowAction31.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction67);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction12);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction13);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction17);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction18);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction19);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction24);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction30);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction31);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer34);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer35);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction36);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction37);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction40);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction41);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction45);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction46);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction47);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction50);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction51);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction52);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction55);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction58);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction59);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer62);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction63);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction64);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer65);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction66);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction67);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction68);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction71);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction72);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction73);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction76);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction77);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction78);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction81);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction84);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction85);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer88);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction89);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction90);
  }

  @Test
  public void test1773() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1773");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider16);
    java.nio.file.Path path18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        path18);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.logging.LogProvider logProvider22 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder23 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider22);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule25 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder26 = clusteringDBMSBuilder9.addURLAccessRule(
        "hi!", uRLAccessRule25);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder21);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder23);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder26);
  }

  @Test
  public void test1774() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1774");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver6);
    java.lang.String str8 = clusteringDBMSBuilder5.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.common.DependencyResolver dependencyResolver11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver11);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = databaseManagementServiceBuilder12.addURLAccessRule(
        "hi!", uRLAccessRule14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "enterprise" + "'", str8, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
  }

  @Test
  public void test1775() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1775");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder5.setMonitors(
        monitors9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider11);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "hi!");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder5.addURLAccessRule(
        "enterprise", uRLAccessRule16);
    org.neo4j.common.DependencyResolver dependencyResolver18 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder19 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver18);
    java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder5.setConfigRaw(
          strMap20);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder19);
  }

  @Test
  public void test1776() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1776");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.addDatabaseListener(
        databaseEventListener11);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder12.addURLAccessRule(
        "hi!", uRLAccessRule14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder15.setMonitors(
        monitors16);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule19 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder20 = clusteringDBMSBuilder17.addURLAccessRule(
        "hi!", uRLAccessRule19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder20);
  }

  @Test
  public void test1777() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1777");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl5.createDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1778() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1778");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.addDatabaseListener(
        databaseEventListener11);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder12.addURLAccessRule(
        "hi!", uRLAccessRule14);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule17 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder18 = clusteringDBMSBuilder12.addURLAccessRule(
        "", uRLAccessRule17);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener19 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder20 = databaseManagementServiceBuilder18.addDatabaseListener(
        databaseEventListener19);
    org.neo4j.logging.LogProvider logProvider21 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder22 = databaseManagementServiceBuilder20.setUserLogProvider(
        logProvider21);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder18);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder20);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder22);
  }

  @Test
  public void test1779() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1779");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = databaseManagementServiceBuilder7.addDatabaseListener(
        databaseEventListener8);
    java.nio.file.Path path10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = databaseManagementServiceBuilder7.loadPropertiesFromFile(
        path10);
    java.nio.file.Path path12 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = databaseManagementServiceBuilder7.loadPropertiesFromFile(
        path12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
  }

  @Test
  public void test1780() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1780");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl5.startDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1781() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1781");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    java.nio.file.Path path7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        path7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder8.setExternalDependencies(
        dependencyResolver9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
  }

  @Test
  public void test1782() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1782");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      databaseManagementServiceClusterImpl5.shutdown();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1783() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1783");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl8);
    try {
      databaseManagementServiceClusterImpl8.dropDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1784() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1784");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder3.setMonitors(
        monitors9);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener11);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.monitoring.Monitors monitors15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = clusteringDBMSBuilder14.setMonitors(
        monitors15);
    org.neo4j.logging.LogProvider logProvider17 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder18 = clusteringDBMSBuilder14.setUserLogProvider(
        logProvider17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder18);
  }

  @Test
  public void test1785() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1785");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    try {
      databaseManagementServiceClusterImpl5.shutdownDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1786() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1786");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    org.neo4j.cli.Command.CommandType commandType1 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType2 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType3 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType4 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.ExecutionContext executionContext5 = null;
    try {
      io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommand nodeStoreWrapperCopyCommand6 = nodeStoreWrapperCopyCommandCommandProvider0.createCommand(
          executionContext5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue(
        "'" + commandType1 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType1.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
  }

  @Test
  public void test1787() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1787");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    int int1 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType2 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType3 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType4 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    int int5 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int6 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
  }

  @Test
  public void test1788() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1788");
    }
    io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider commandGetServerIdCommandProvider0 = new io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider();
    org.neo4j.cli.Command.CommandType commandType1 = commandGetServerIdCommandProvider0.commandType();
    int int2 = commandGetServerIdCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType3 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType4 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.ExecutionContext executionContext5 = null;
    try {
      io.github.onograph.dbms.commands.CommandGetServerIdImpl commandGetServerIdImpl6 = commandGetServerIdCommandProvider0.createCommand(
          executionContext5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue(
        "'" + commandType1 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType1.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
  }

  @Test
  public void test1789() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1789");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.monitoring.Monitors monitors11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder6.setMonitors(
        monitors11);
    java.nio.file.Path path13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        path13);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = clusteringDBMSBuilder14.loadPropertiesFromFile(
        "enterprise");
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder18 = clusteringDBMSBuilder14.loadPropertiesFromFile(
        "hi!");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder18);
  }

  @Test
  public void test1790() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1790");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    try {
      databaseManagementServiceClusterImpl8.shutdownDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1791() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1791");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver9);
    java.nio.file.Path path11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder3.setMonitors(
        monitors13);
    java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder14.setConfigRaw(
          strMap15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
  }

  @Test
  public void test1792() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1792");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver10);
    java.nio.file.Path path12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder13.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder13.setUserLogProvider(
        logProvider16);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder17.addDatabaseListener(
        databaseEventListener18);
    java.lang.String str20 = clusteringDBMSBuilder17.getEdition();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "enterprise" + "'", str20, "enterprise");
  }

  @Test
  public void test1793() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1793");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    int int1 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType2 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    int int3 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType4 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType5 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.ExecutionContext executionContext6 = null;
    try {
      io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommand nodeStoreWrapperCopyCommand7 = nodeStoreWrapperCopyCommandCommandProvider0.createCommand(
          executionContext6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType5 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType5.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
  }

  @Test
  public void test1794() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1794");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl7);
    try {
      boolean boolean10 = databaseManagementServiceClusterImpl8.isWraeForSt("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1795() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1795");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    try {
      databaseManagementServiceClusterImpl7.createDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1796() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1796");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    org.neo4j.logging.Log log5 = enhancedBootstrapper0.getLog();
    boolean boolean6 = enhancedBootstrapper0.isRunning();
    java.lang.String[] strArray8 = new java.lang.String[]{"enterprise"};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray8);
    try {
      int int10 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray8);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertNotNull(log5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNotNull(strArray8);
  }

  @Test
  public void test1797() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1797");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.monitoring.Monitors monitors6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder1.setMonitors(
        monitors6);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder7.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.logging.LogProvider logProvider10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = databaseManagementServiceBuilder9.setUserLogProvider(
        logProvider10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
  }

  @Test
  public void test1798() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1798");
    }
    java.time.Clock clock0 = null;
    org.neo4j.kernel.database.DatabaseIdRepository databaseIdRepository1 = null;
    io.github.onograph.dbms.DbmsManagerWatchTagImpl dbmsManagerWatchTagImpl2 = null;
    java.time.ZoneId zoneId3 = null;
    io.github.onograph.dbms.serverproc.BasicProcedureQuarantineDatabaseImpl basicProcedureQuarantineDatabaseImpl4 = io.github.onograph.dbms.serverproc.BasicProcedureQuarantineDatabaseImpl.stnleBasicProcedureQuarantineDatabaseImpl(
        clock0, databaseIdRepository1, dbmsManagerWatchTagImpl2, zoneId3);
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature5 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature6 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.kernel.api.procedure.Context context7 = null;
    org.neo4j.values.AnyValue[] anyValueArray8 = new org.neo4j.values.AnyValue[]{};
    org.neo4j.kernel.api.ResourceTracker resourceTracker9 = null;
    try {
      org.neo4j.collection.RawIterator<org.neo4j.values.AnyValue[], org.neo4j.internal.kernel.api.exceptions.ProcedureException> anyValueArrayRawIterator10 = basicProcedureQuarantineDatabaseImpl4.apply(
          context7, anyValueArray8, resourceTracker9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalArgumentException; message: *** Error: fe8ab484-a650-4ba7-a59f-194832c36aaa");
    } catch (java.lang.IllegalArgumentException e) {
    }
    org.junit.Assert.assertNotNull(basicProcedureQuarantineDatabaseImpl4);
    org.junit.Assert.assertNotNull(procedureSignature5);
    org.junit.Assert.assertNotNull(procedureSignature6);
    org.junit.Assert.assertNotNull(anyValueArray8);
  }

  @Test
  public void test1799() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1799");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder9.addDatabaseListener(
        databaseEventListener12);
    java.nio.file.Path path14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder13.loadPropertiesFromFile(
        path14);
    java.nio.file.Path path16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder13.loadPropertiesFromFile(
        path16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
  }

  @Test
  public void test1800() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1800");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      boolean boolean11 = databaseManagementServiceClusterImpl5.isWraeForSt("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1801() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1801");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.setMonitors(
        monitors8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
  }

  @Test
  public void test1802() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1802");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      boolean boolean8 = databaseManagementServiceClusterImpl6.isWraeForSt("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1803() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1803");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder7.setMonitors(
        monitors8);
    org.neo4j.logging.LogProvider logProvider10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder7.setUserLogProvider(
        logProvider10);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder7.loadPropertiesFromFile(
        "hi!");
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder7.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder15.setExternalDependencies(
        dependencyResolver16);
    java.lang.String str18 = clusteringDBMSBuilder15.getEdition();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "enterprise" + "'", str18, "enterprise");
  }

  @Test
  public void test1804() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1804");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder3.setMonitors(
        monitors9);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = databaseManagementServiceBuilder12.setMonitors(
        monitors13);
    try {
      org.neo4j.dbms.api.DatabaseManagementService databaseManagementService15 = databaseManagementServiceBuilder12.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
  }

  @Test
  public void test1805() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1805");
    }
    io.github.onograph.server.EntryPointImpl entryPointImpl0 = new io.github.onograph.server.EntryPointImpl();
    io.github.onograph.server.EntryPointImpl entryPointImpl1 = new io.github.onograph.server.EntryPointImpl();
    org.neo4j.server.startup.EntryPoint.Priority priority2 = entryPointImpl1.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority3 = entryPointImpl1.getPriority();
    io.github.onograph.server.EntryPointImpl entryPointImpl4 = new io.github.onograph.server.EntryPointImpl();
    int int5 = entryPointImpl1.compareTo((org.neo4j.server.startup.EntryPoint) entryPointImpl4);
    org.neo4j.server.startup.EntryPoint.Priority priority6 = entryPointImpl1.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority7 = entryPointImpl1.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority8 = entryPointImpl1.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority9 = entryPointImpl1.getPriority();
    int int10 = entryPointImpl0.compareTo((org.neo4j.server.startup.EntryPoint) entryPointImpl1);
    org.junit.Assert.assertTrue(
        "'" + priority2 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority2.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority3 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority3.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertTrue(
        "'" + priority6 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority6.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority7 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority7.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority8 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority8.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority9 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority9.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
  }

  @Test
  public void test1806() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1806");
    }
    io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider commandGetServerIdCommandProvider0 = new io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider();
    int int1 = commandGetServerIdCommandProvider0.getPriority();
    int int2 = commandGetServerIdCommandProvider0.getPriority();
    int int3 = commandGetServerIdCommandProvider0.getPriority();
    int int4 = commandGetServerIdCommandProvider0.getPriority();
    int int5 = commandGetServerIdCommandProvider0.getPriority();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
  }

  @Test
  public void test1807() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1807");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    boolean boolean1 = enhancedBootstrapper0.isRunning();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService2 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    int int5 = enhancedBootstrapper0.stop();
    org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    org.junit.Assert.assertNull(databaseManagementService2);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertNull(databaseManagementService4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
  }

  @Test
  public void test1808() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1808");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    try {
      boolean boolean7 = databaseManagementServiceClusterImpl2.isWraeForSt("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1809() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1809");
    }
    io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider nodeStoreWrapperCopyCommandCommandProvider0 = new io.github.onograph.dbms.commands.NodeStoreWrapperCopyCommandCommandProvider();
    int int1 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int2 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int3 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType4 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType5 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType6 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType7 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    int int8 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    int int9 = nodeStoreWrapperCopyCommandCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType10 = nodeStoreWrapperCopyCommandCommandProvider0.commandType();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType5 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType5.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType6 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType6.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue(
        "'" + commandType7 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType7.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType10 + "' != '" + org.neo4j.cli.Command.CommandType.STORE_COPY + "'",
        commandType10.equals(org.neo4j.cli.Command.CommandType.STORE_COPY));
  }

  @Test
  public void test1810() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1810");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    java.lang.String str11 = clusteringDBMSBuilder5.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver12);
    org.neo4j.logging.LogProvider logProvider14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder13.setUserLogProvider(
        logProvider14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder13.setMonitors(
        monitors16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "enterprise" + "'", str11, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
  }

  @Test
  public void test1811() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1811");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService5 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean6 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log7 = enhancedBootstrapper0.getLog();
    java.nio.file.Path path8 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
    try {
      int int10 = enhancedBootstrapper0.start(path8, strMap9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNull(databaseManagementService4);
    org.junit.Assert.assertNull(databaseManagementService5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNotNull(log7);
  }

  @Test
  public void test1812() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1812");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService5 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService6 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log7 = enhancedBootstrapper0.getLog();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService8 = enhancedBootstrapper0.getDatabaseManagementService();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNull(databaseManagementService4);
    org.junit.Assert.assertNull(databaseManagementService5);
    org.junit.Assert.assertNull(databaseManagementService6);
    org.junit.Assert.assertNotNull(log7);
    org.junit.Assert.assertNull(databaseManagementService8);
  }

  @Test
  public void test1813() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1813");
    }
    io.github.onograph.server.EntryPointImpl entryPointImpl0 = new io.github.onograph.server.EntryPointImpl();
    org.neo4j.server.startup.EntryPoint.Priority priority1 = entryPointImpl0.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority2 = entryPointImpl0.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority3 = entryPointImpl0.getPriority();
    io.github.onograph.server.EntryPointImpl entryPointImpl4 = new io.github.onograph.server.EntryPointImpl();
    io.github.onograph.server.EntryPointImpl entryPointImpl5 = new io.github.onograph.server.EntryPointImpl();
    int int6 = entryPointImpl4.compareTo((org.neo4j.server.startup.EntryPoint) entryPointImpl5);
    int int7 = entryPointImpl0.compareTo((org.neo4j.server.startup.EntryPoint) entryPointImpl5);
    org.junit.Assert.assertTrue(
        "'" + priority1 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority1.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority2 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority2.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority3 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority3.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
  }

  @Test
  public void test1814() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1814");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder7.setMonitors(
        monitors8);
    org.neo4j.logging.LogProvider logProvider10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder7.setUserLogProvider(
        logProvider10);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder7.loadPropertiesFromFile(
        "hi!");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder7.loadPropertiesFromFile(
        "hi!");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
  }

  @Test
  public void test1815() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1815");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver10);
    java.nio.file.Path path12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path12);
    java.nio.file.Path path14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider16);
    org.neo4j.monitoring.Monitors monitors18 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder19 = clusteringDBMSBuilder17.setMonitors(
        monitors18);
    org.neo4j.common.DependencyResolver dependencyResolver20 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder17.setExternalDependencies(
        dependencyResolver20);
    org.neo4j.logging.LogProvider logProvider22 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder23 = clusteringDBMSBuilder21.setUserLogProvider(
        logProvider22);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder21);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder23);
  }

  @Test
  public void test1816() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1816");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        "hi!");
    org.neo4j.common.DependencyResolver dependencyResolver11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.setMonitors(
        monitors13);
    java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = clusteringDBMSBuilder14.setConfigRaw(
          strMap15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
  }

  @Test
  public void test1817() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1817");
    }
    io.github.onograph.dbms.utils.TokenNamePropertyDTO tokenNamePropertyDTO2 = new io.github.onograph.dbms.utils.TokenNamePropertyDTO(
        "hi!", "hi!");
    java.lang.String str3 = tokenNamePropertyDTO2.getStrNt();
    java.lang.String str4 = tokenNamePropertyDTO2.getStrNt();
    java.lang.String str5 = tokenNamePropertyDTO2.getStrNp();
    java.lang.String str6 = tokenNamePropertyDTO2.getStrNp();
    java.lang.String str7 = tokenNamePropertyDTO2.getStrNt();
    java.lang.String str8 = tokenNamePropertyDTO2.getStrNt();
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
  }

  @Test
  public void test1818() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1818");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder7.setExternalDependencies(
        dependencyResolver8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder9.setMonitors(
        monitors10);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder9.addDatabaseListener(
        databaseEventListener12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
  }

  @Test
  public void test1819() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1819");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        "hi!");
    org.neo4j.common.DependencyResolver dependencyResolver11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.setMonitors(
        monitors13);
    org.neo4j.logging.LogProvider logProvider15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder12.setUserLogProvider(
        logProvider15);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder18 = clusteringDBMSBuilder16.setMonitors(
        monitors17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder18);
  }

  @Test
  public void test1820() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1820");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log2 = enhancedBootstrapper0.getLog();
    int int3 = enhancedBootstrapper0.stop();
    java.lang.String[] strArray6 = new java.lang.String[]{"enterprise", "enterprise"};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray6);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray6);
    try {
      int int9 = org.neo4j.server.NeoBootstrapper.start(
          (org.neo4j.server.Bootstrapper) enhancedBootstrapper0, strArray6);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNotNull(log2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNotNull(strArray6);
  }

  @Test
  public void test1821() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1821");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.setMonitors(
        monitors11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.setMonitors(
        monitors13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = clusteringDBMSBuilder14.setMonitors(
        monitors15);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder18 = clusteringDBMSBuilder14.setMonitors(
        monitors17);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener19 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder20 = clusteringDBMSBuilder18.addDatabaseListener(
        databaseEventListener19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder18);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder20);
  }

  @Test
  public void test1822() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1822");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.addDatabaseListener(
        databaseEventListener7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder10.addDatabaseListener(
        databaseEventListener11);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder10.addDatabaseListener(
        databaseEventListener13);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder10.addDatabaseListener(
        databaseEventListener15);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder18 = clusteringDBMSBuilder10.setMonitors(
        monitors17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder18);
  }

  @Test
  public void test1823() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1823");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.setMonitors(
        monitors9);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder6.addDatabaseListener(
        databaseEventListener11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider13);
    try {
      io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl15 = clusteringDBMSBuilder6.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
  }

  @Test
  public void test1824() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1824");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener6);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addURLAccessRule(
        "enterprise", uRLAccessRule9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
  }

  @Test
  public void test1825() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1825");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "hi!");
    org.neo4j.logging.LogProvider logProvider8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder3.setUserLogProvider(
        logProvider8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder3.setMonitors(
        monitors10);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener12 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener12);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = databaseManagementServiceBuilder13.addURLAccessRule(
        "hi!", uRLAccessRule15);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder18 = databaseManagementServiceBuilder16.loadPropertiesFromFile(
        "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder18);
  }

  @Test
  public void test1826() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1826");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    java.lang.String str9 = clusteringDBMSBuilder3.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder3.setMonitors(
        monitors12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder13.setMonitors(
        monitors14);
    org.neo4j.common.DependencyResolver dependencyResolver16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder13.setExternalDependencies(
        dependencyResolver16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "enterprise" + "'", str9, "enterprise");
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
  }

  @Test
  public void test1827() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1827");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider14);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener18 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder19 = clusteringDBMSBuilder17.addDatabaseListener(
        databaseEventListener18);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder19);
  }

  @Test
  public void test1828() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1828");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    int int5 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService6 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log7 = enhancedBootstrapper0.getLog();
    boolean boolean8 = enhancedBootstrapper0.isRunning();
    java.nio.file.Path path9 = null;
    java.nio.file.Path path10 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
    try {
      int int13 = enhancedBootstrapper0.start(path9, path10, strMap11, true);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertNull(databaseManagementService6);
    org.junit.Assert.assertNotNull(log7);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1829() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1829");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder7.loadPropertiesFromFile(
        "enterprise");
    java.nio.file.Path path10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        path10);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder11.addDatabaseListener(
        databaseEventListener12);
    try {
      io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl14 = clusteringDBMSBuilder13.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
  }

  @Test
  public void test1830() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1830");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver10);
    java.nio.file.Path path12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder13.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder13.setUserLogProvider(
        logProvider16);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder17.addDatabaseListener(
        databaseEventListener18);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener20 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder21 = clusteringDBMSBuilder17.addDatabaseListener(
        databaseEventListener20);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder21);
  }

  @Test
  public void test1831() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1831");
    }
    io.github.onograph.dbms.utils.TokenNamePropertyDTO tokenNamePropertyDTO2 = new io.github.onograph.dbms.utils.TokenNamePropertyDTO(
        "hi!", "");
    java.lang.String str3 = tokenNamePropertyDTO2.getStrNt();
    java.lang.String str4 = tokenNamePropertyDTO2.getStrNp();
    java.lang.String str5 = tokenNamePropertyDTO2.getStrNp();
    java.lang.String str6 = tokenNamePropertyDTO2.getStrNp();
    java.lang.String str7 = tokenNamePropertyDTO2.getStrNt();
    java.lang.String str8 = tokenNamePropertyDTO2.getStrNp();
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
  }

  @Test
  public void test1832() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1832");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    int int4 = enhancedBootstrapper0.stop();
    int int5 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService6 = enhancedBootstrapper0.getDatabaseManagementService();
    int int7 = enhancedBootstrapper0.stop();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertNull(databaseManagementService6);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
  }

  @Test
  public void test1833() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1833");
    }
    io.github.onograph.server.EntryPointImpl entryPointImpl0 = new io.github.onograph.server.EntryPointImpl();
    org.neo4j.server.startup.EntryPoint.Priority priority1 = entryPointImpl0.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority2 = entryPointImpl0.getPriority();
    io.github.onograph.server.EntryPointImpl entryPointImpl3 = new io.github.onograph.server.EntryPointImpl();
    int int4 = entryPointImpl0.compareTo((org.neo4j.server.startup.EntryPoint) entryPointImpl3);
    org.neo4j.server.startup.EntryPoint.Priority priority5 = entryPointImpl0.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority6 = entryPointImpl0.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority7 = entryPointImpl0.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority8 = entryPointImpl0.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority9 = entryPointImpl0.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority10 = entryPointImpl0.getPriority();
    org.junit.Assert.assertTrue(
        "'" + priority1 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority1.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority2 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority2.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertTrue(
        "'" + priority5 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority5.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority6 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority6.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority7 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority7.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority8 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority8.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority9 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority9.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority10 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority10.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
  }

  @Test
  public void test1834() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1834");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService5 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean6 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log7 = enhancedBootstrapper0.getLog();
    int int8 = enhancedBootstrapper0.stop();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNull(databaseManagementService4);
    org.junit.Assert.assertNull(databaseManagementService5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNotNull(log7);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
  }

  @Test
  public void test1835() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1835");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.setUserLogProvider(
        logProvider11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder10.setMonitors(
        monitors13);
    try {
      io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl15 = clusteringDBMSBuilder10.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
  }

  @Test
  public void test1836() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1836");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    boolean boolean3 = enhancedBootstrapper0.isRunning();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    int int5 = enhancedBootstrapper0.stop();
    int int6 = enhancedBootstrapper0.stop();
    boolean boolean7 = enhancedBootstrapper0.isRunning();
    int int8 = enhancedBootstrapper0.stop();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
  }

  @Test
  public void test1837() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1837");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "hi!");
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = databaseManagementServiceBuilder7.setMonitors(
        monitors8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
  }

  @Test
  public void test1838() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1838");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    try {
      java.util.List<java.lang.String> strList7 = databaseManagementServiceClusterImpl4.listDatabases();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1839() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1839");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction10 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction11 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv12 = null;
    metaUpgradeFlowAction11.accept(upgradeMetaEnv12);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = metaUpgradeFlowAction10.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction11);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction15 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction16 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv17 = null;
    metaUpgradeFlowAction16.accept(upgradeMetaEnv17);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction19 = metaUpgradeFlowAction15.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction16);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv20 = null;
    metaUpgradeFlowAction15.accept(upgradeMetaEnv20);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = metaUpgradeFlowAction11.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction23 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv24 = null;
    metaUpgradeFlowAction23.accept(upgradeMetaEnv24);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer26 = metaUpgradeFlowAction22.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction27 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction28 = metaUpgradeFlowAction4.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction27);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction29 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction30 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv31 = null;
    metaUpgradeFlowAction30.accept(upgradeMetaEnv31);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction33 = metaUpgradeFlowAction29.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction30);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction34 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction35 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv36 = null;
    metaUpgradeFlowAction35.accept(upgradeMetaEnv36);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction38 = metaUpgradeFlowAction34.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction35);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv39 = null;
    metaUpgradeFlowAction34.accept(upgradeMetaEnv39);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction41 = metaUpgradeFlowAction30.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction34);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = metaUpgradeFlowAction4.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction41);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv43 = null;
    metaUpgradeFlowAction42.accept(upgradeMetaEnv43);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction10);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction11);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction15);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction16);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction19);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction23);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer26);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction28);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction29);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction30);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction33);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction34);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction35);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction38);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction41);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
  }

  @Test
  public void test1840() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1840");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.monitoring.Monitors monitors4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setMonitors(
        monitors4);
    java.lang.String str6 = clusteringDBMSBuilder5.getEdition();
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener7);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.logging.LogProvider logProvider11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = databaseManagementServiceBuilder10.setUserLogProvider(
        logProvider11);
    java.nio.file.Path path13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = databaseManagementServiceBuilder12.loadPropertiesFromFile(
        path13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterprise" + "'", str6, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
  }

  @Test
  public void test1841() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1841");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.setMonitors(
        monitors11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder12.setMonitors(
        monitors13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = clusteringDBMSBuilder14.setMonitors(
        monitors15);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder18 = clusteringDBMSBuilder14.setMonitors(
        monitors17);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule20 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder14.addURLAccessRule(
        "enterprise", uRLAccessRule20);
    org.neo4j.logging.LogProvider logProvider22 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder23 = clusteringDBMSBuilder14.setUserLogProvider(
        logProvider22);
    org.neo4j.monitoring.Monitors monitors24 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder25 = clusteringDBMSBuilder14.setMonitors(
        monitors24);
    java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
    try {
      org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder27 = clusteringDBMSBuilder14.setConfigRaw(
          strMap26);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder18);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder21);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder23);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder25);
  }

  @Test
  public void test1842() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1842");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    try {
      databaseManagementServiceClusterImpl5.shutdownDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1843() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1843");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      java.util.List<java.lang.String> strList7 = databaseManagementServiceClusterImpl6.listDatabases();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1844() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1844");
    }
    io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider commandGetServerIdCommandProvider0 = new io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider();
    org.neo4j.cli.Command.CommandType commandType1 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType2 = commandGetServerIdCommandProvider0.commandType();
    int int3 = commandGetServerIdCommandProvider0.getPriority();
    int int4 = commandGetServerIdCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType5 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType6 = commandGetServerIdCommandProvider0.commandType();
    org.junit.Assert.assertTrue(
        "'" + commandType1 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType1.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType5 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType5.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType6 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType6.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
  }

  @Test
  public void test1845() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1845");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.monitoring.Monitors monitors4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setMonitors(
        monitors4);
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver6);
    org.neo4j.common.DependencyResolver dependencyResolver8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver8);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
  }

  @Test
  public void test1846() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1846");
    }
    io.github.onograph.server.EntryPointImpl entryPointImpl0 = new io.github.onograph.server.EntryPointImpl();
    org.neo4j.server.startup.EntryPoint.Priority priority1 = entryPointImpl0.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority2 = entryPointImpl0.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority3 = entryPointImpl0.getPriority();
    io.github.onograph.server.EntryPointImpl entryPointImpl4 = new io.github.onograph.server.EntryPointImpl();
    int int5 = entryPointImpl0.compareTo((org.neo4j.server.startup.EntryPoint) entryPointImpl4);
    org.neo4j.server.startup.EntryPoint.Priority priority6 = entryPointImpl4.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority7 = entryPointImpl4.getPriority();
    org.neo4j.server.startup.EntryPoint entryPoint8 = null;
    try {
      int int9 = entryPointImpl4.compareTo(entryPoint8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue(
        "'" + priority1 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority1.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority2 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority2.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority3 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority3.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertTrue(
        "'" + priority6 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority6.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority7 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority7.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
  }

  @Test
  public void test1847() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1847");
    }
    io.github.onograph.dbms.utils.TokenNamePropertyDTO tokenNamePropertyDTO2 = new io.github.onograph.dbms.utils.TokenNamePropertyDTO(
        "hi!", "hi!");
    java.lang.String str3 = tokenNamePropertyDTO2.getStrNt();
    java.lang.String str4 = tokenNamePropertyDTO2.getStrNt();
    java.lang.String str5 = tokenNamePropertyDTO2.getStrNp();
    java.lang.String str6 = tokenNamePropertyDTO2.getStrNt();
    java.lang.String str7 = tokenNamePropertyDTO2.getStrNp();
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
  }

  @Test
  public void test1848() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1848");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
  }

  @Test
  public void test1849() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1849");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    boolean boolean4 = enhancedBootstrapper0.isRunning();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService5 = enhancedBootstrapper0.getDatabaseManagementService();
    java.nio.file.Path path6 = null;
    java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
    try {
      int int8 = enhancedBootstrapper0.start(path6, strMap7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNull(databaseManagementService5);
  }

  @Test
  public void test1850() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1850");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction10 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction11 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv12 = null;
    metaUpgradeFlowAction11.accept(upgradeMetaEnv12);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = metaUpgradeFlowAction10.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction11);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv15 = null;
    metaUpgradeFlowAction10.accept(upgradeMetaEnv15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction17 = metaUpgradeFlowAction6.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction10);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction18 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv19 = null;
    metaUpgradeFlowAction18.accept(upgradeMetaEnv19);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer21 = metaUpgradeFlowAction17.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction18);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer22 = metaUpgradeFlowAction0.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction18);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv23 = null;
    metaUpgradeFlowAction18.accept(upgradeMetaEnv23);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction10);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction11);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction17);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction18);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer21);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer22);
  }

  @Test
  public void test1851() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1851");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule10);
    java.lang.String str12 = clusteringDBMSBuilder3.getEdition();
    org.neo4j.logging.LogProvider logProvider13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder3.setUserLogProvider(
        logProvider13);
    java.nio.file.Path path15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path15);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder18 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "enterprise" + "'", str12, "enterprise");
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder18);
  }

  @Test
  public void test1852() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1852");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    try {
      databaseManagementServiceClusterImpl5.dropDatabase("hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1853() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1853");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.nio.file.Path path4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.addDatabaseListener(
        databaseEventListener11);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder12.addURLAccessRule(
        "hi!", uRLAccessRule14);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule17 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder18 = clusteringDBMSBuilder12.addURLAccessRule(
        "", uRLAccessRule17);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener19 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder20 = databaseManagementServiceBuilder18.addDatabaseListener(
        databaseEventListener19);
    java.nio.file.Path path21 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder22 = databaseManagementServiceBuilder18.loadPropertiesFromFile(
        path21);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder18);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder20);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder22);
  }

  @Test
  public void test1854() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1854");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    try {
      databaseManagementServiceClusterImpl6.shutdownDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1855() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1855");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    java.lang.String str6 = clusteringDBMSBuilder3.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver7);
    try {
      io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = clusteringDBMSBuilder8.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterprise" + "'", str6, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
  }

  @Test
  public void test1856() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1856");
    }
    java.lang.String[] strArray5 = new java.lang.String[]{"", "enterprise", "enterprise",
        "enterprise", "hi!"};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray5);
    try {
      io.github.onograph.server.EntryPointImpl.startBootstrapper(strArray5);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNotNull(strArray5);
  }

  @Test
  public void test1857() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1857");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction5 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction6 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = null;
    metaUpgradeFlowAction6.accept(upgradeMetaEnv7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction9 = metaUpgradeFlowAction5.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction6);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction10 = metaUpgradeFlowAction4.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction5);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction11 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction12 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv13 = null;
    metaUpgradeFlowAction12.accept(upgradeMetaEnv13);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction15 = metaUpgradeFlowAction11.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction12);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction16 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction17 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv18 = null;
    metaUpgradeFlowAction17.accept(upgradeMetaEnv18);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction20 = metaUpgradeFlowAction16.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction17);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction21 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv23 = null;
    metaUpgradeFlowAction22.accept(upgradeMetaEnv23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction25 = metaUpgradeFlowAction21.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction22);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction26 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction27 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv28 = null;
    metaUpgradeFlowAction27.accept(upgradeMetaEnv28);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction30 = metaUpgradeFlowAction26.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction27);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv31 = null;
    metaUpgradeFlowAction26.accept(upgradeMetaEnv31);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction33 = metaUpgradeFlowAction22.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction26);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction34 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv35 = null;
    metaUpgradeFlowAction34.accept(upgradeMetaEnv35);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer37 = metaUpgradeFlowAction33.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction34);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction38 = metaUpgradeFlowAction16.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction34);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction39 = metaUpgradeFlowAction15.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction38);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction40 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer41 = metaUpgradeFlowAction39.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction40);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction42 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction43 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv44 = null;
    metaUpgradeFlowAction43.accept(upgradeMetaEnv44);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction46 = metaUpgradeFlowAction42.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction43);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction47 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction48 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv49 = null;
    metaUpgradeFlowAction48.accept(upgradeMetaEnv49);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction51 = metaUpgradeFlowAction47.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction48);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction52 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction53 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv54 = null;
    metaUpgradeFlowAction53.accept(upgradeMetaEnv54);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction56 = metaUpgradeFlowAction52.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction53);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv57 = null;
    metaUpgradeFlowAction52.accept(upgradeMetaEnv57);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction59 = metaUpgradeFlowAction48.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction52);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction60 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv61 = null;
    metaUpgradeFlowAction60.accept(upgradeMetaEnv61);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer63 = metaUpgradeFlowAction59.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction60);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction64 = metaUpgradeFlowAction42.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction60);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction65 = metaUpgradeFlowAction39.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction64);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction66 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction67 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv68 = null;
    metaUpgradeFlowAction67.accept(upgradeMetaEnv68);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction70 = metaUpgradeFlowAction66.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction67);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction71 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction72 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv73 = null;
    metaUpgradeFlowAction72.accept(upgradeMetaEnv73);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction75 = metaUpgradeFlowAction71.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction72);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv76 = null;
    metaUpgradeFlowAction71.accept(upgradeMetaEnv76);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction78 = metaUpgradeFlowAction67.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction71);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction79 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv80 = null;
    metaUpgradeFlowAction79.accept(upgradeMetaEnv80);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer82 = metaUpgradeFlowAction78.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction79);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer83 = metaUpgradeFlowAction65.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction79);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction84 = metaUpgradeFlowAction4.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction65);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv85 = null;
    metaUpgradeFlowAction4.accept(upgradeMetaEnv85);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction5);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction6);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction9);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction10);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction11);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction12);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction15);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction16);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction17);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction20);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction21);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction25);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction26);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction27);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction30);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction33);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction34);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer37);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction38);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction39);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction40);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer41);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction42);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction43);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction46);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction47);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction48);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction51);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction52);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction53);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction56);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction59);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction60);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer63);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction64);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction65);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction66);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction67);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction70);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction71);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction72);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction75);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction78);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction79);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer82);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer83);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction84);
  }

  @Test
  public void test1858() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1858");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider14);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "");
    java.lang.String str18 = clusteringDBMSBuilder17.getEdition();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "enterprise" + "'", str18, "enterprise");
  }

  @Test
  public void test1859() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1859");
    }
    org.neo4j.server.Bootstrapper bootstrapper0 = null;
    java.lang.String[] strArray6 = new java.lang.String[]{"", "enterprise", "enterprise",
        "enterprise", "hi!"};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray6);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray6);
    try {
      int int9 = org.neo4j.server.NeoBootstrapper.start(bootstrapper0, strArray6);
      org.junit.Assert.fail(
          "Expected exception of type org.neo4j.server.ServerStartupException; message: Argument --home-dir is required and was not provided.");
    } catch (org.neo4j.server.ServerStartupException e) {
    }
    org.junit.Assert.assertNotNull(strArray6);
  }

  @Test
  public void test1860() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1860");
    }
    io.github.onograph.dbms.utils.TokenNamePropertyDTO tokenNamePropertyDTO2 = new io.github.onograph.dbms.utils.TokenNamePropertyDTO(
        "hi!", "enterprise");
    java.lang.String str3 = tokenNamePropertyDTO2.getStrNp();
    java.lang.String str4 = tokenNamePropertyDTO2.getStrNp();
    java.lang.String str5 = tokenNamePropertyDTO2.getStrNp();
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
  }

  @Test
  public void test1861() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1861");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver10);
    org.neo4j.common.DependencyResolver dependencyResolver12 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = databaseManagementServiceBuilder11.setExternalDependencies(
        dependencyResolver12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = databaseManagementServiceBuilder11.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.common.DependencyResolver dependencyResolver16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = databaseManagementServiceBuilder11.setExternalDependencies(
        dependencyResolver16);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = databaseManagementServiceBuilder17.loadPropertiesFromFile(
        "hi!");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
  }

  @Test
  public void test1862() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1862");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule3 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder4 = clusteringDBMSBuilder1.addURLAccessRule(
        "hi!", uRLAccessRule3);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder4.addURLAccessRule(
        "enterprise", uRLAccessRule6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder4.loadPropertiesFromFile(
        path8);
    java.lang.String str10 = clusteringDBMSBuilder9.getEdition();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder4);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "enterprise" + "'", str10, "enterprise");
  }

  @Test
  public void test1863() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1863");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder6.addURLAccessRule(
        "", uRLAccessRule10);
    org.neo4j.logging.LogProvider logProvider12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider12);
    org.neo4j.common.DependencyResolver dependencyResolver14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder6.setMonitors(
        monitors16);
    org.neo4j.logging.LogProvider logProvider18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder6.setUserLogProvider(
        logProvider18);
    org.neo4j.common.DependencyResolver dependencyResolver20 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver20);
    org.neo4j.common.DependencyResolver dependencyResolver22 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder23 = clusteringDBMSBuilder21.setExternalDependencies(
        dependencyResolver22);
    java.nio.file.Path path24 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder25 = clusteringDBMSBuilder21.loadPropertiesFromFile(
        path24);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener26 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder27 = clusteringDBMSBuilder21.addDatabaseListener(
        databaseEventListener26);
    org.neo4j.logging.LogProvider logProvider28 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder29 = clusteringDBMSBuilder27.setUserLogProvider(
        logProvider28);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder21);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder23);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder25);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder27);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder29);
  }

  @Test
  public void test1864() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1864");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    java.nio.file.Path path9 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder10 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path9);
    org.neo4j.common.DependencyResolver dependencyResolver11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = databaseManagementServiceBuilder10.setExternalDependencies(
        dependencyResolver11);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = databaseManagementServiceBuilder10.addDatabaseListener(
        databaseEventListener13);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener15 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder16 = databaseManagementServiceBuilder10.addDatabaseListener(
        databaseEventListener15);
    org.neo4j.logging.LogProvider logProvider17 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder18 = databaseManagementServiceBuilder16.setUserLogProvider(
        logProvider17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder16);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder18);
  }

  @Test
  public void test1865() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1865");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.setMonitors(
        monitors7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder10.setUserLogProvider(
        logProvider11);
    java.lang.String str13 = clusteringDBMSBuilder10.getEdition();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "enterprise" + "'", str13, "enterprise");
  }

  @Test
  public void test1866() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1866");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log2 = enhancedBootstrapper0.getLog();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log4 = enhancedBootstrapper0.getLog();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService5 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean6 = enhancedBootstrapper0.isRunning();
    int int7 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log8 = enhancedBootstrapper0.getLog();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService9 = enhancedBootstrapper0.getDatabaseManagementService();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNotNull(log2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNotNull(log4);
    org.junit.Assert.assertNull(databaseManagementService5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    org.junit.Assert.assertNotNull(log8);
    org.junit.Assert.assertNull(databaseManagementService9);
  }

  @Test
  public void test1867() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1867");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.monitoring.Monitors monitors6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder1.setMonitors(
        monitors6);
    java.lang.String str8 = clusteringDBMSBuilder1.getEdition();
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider11);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder12.addURLAccessRule(
        "hi!", uRLAccessRule14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "enterprise" + "'", str8, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
  }

  @Test
  public void test1868() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1868");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      org.neo4j.graphdb.GraphDatabaseService graphDatabaseService11 = databaseManagementServiceClusterImpl9.database(
          "hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1869() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1869");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    int int4 = enhancedBootstrapper0.stop();
    int int5 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log6 = enhancedBootstrapper0.getLog();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService7 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.logging.Log log8 = enhancedBootstrapper0.getLog();
    int int9 = enhancedBootstrapper0.stop();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertNotNull(log6);
    org.junit.Assert.assertNull(databaseManagementService7);
    org.junit.Assert.assertNotNull(log8);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
  }

  @Test
  public void test1870() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1870");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.setMonitors(
        monitors11);
    java.nio.file.Path path13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder10.loadPropertiesFromFile(
        path13);
    org.neo4j.common.DependencyResolver dependencyResolver15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder10.setExternalDependencies(
        dependencyResolver15);
    org.neo4j.common.DependencyResolver dependencyResolver17 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder18 = clusteringDBMSBuilder16.setExternalDependencies(
        dependencyResolver17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder18);
  }

  @Test
  public void test1871() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1871");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl8);
    try {
      databaseManagementServiceClusterImpl9.shutdownDatabase("enterprise");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1872() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1872");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    try {
      databaseManagementServiceClusterImpl6.createDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1873() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1873");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    org.neo4j.common.DependencyResolver dependencyResolver5 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder6 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver5);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        "enterprise");
    java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
    try {
      io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder8.setConfigRaw(
          strMap9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
  }

  @Test
  public void test1874() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1874");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.common.DependencyResolver dependencyResolver6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setExternalDependencies(
        dependencyResolver6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder7.setMonitors(
        monitors8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder7.setMonitors(
        monitors10);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder7.loadPropertiesFromFile(
        "hi!");
    java.lang.String str14 = clusteringDBMSBuilder7.getEdition();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "enterprise" + "'", str14, "enterprise");
  }

  @Test
  public void test1875() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1875");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener12 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder9.addDatabaseListener(
        databaseEventListener12);
    java.nio.file.Path path14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder13.loadPropertiesFromFile(
        path14);
    java.lang.Class<?> wildcardClass16 = databaseManagementServiceBuilder15.getClass();
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(wildcardClass16);
  }

  @Test
  public void test1876() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1876");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder3.setMonitors(
        monitors11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder12.setMonitors(
        monitors13);
    java.lang.String str15 = clusteringDBMSBuilder12.getEdition();
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder12.setMonitors(
        monitors16);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "enterprise" + "'", str15, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
  }

  @Test
  public void test1877() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1877");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider16);
    java.nio.file.Path path18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        path18);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder23 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.monitoring.Monitors monitors24 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder25 = clusteringDBMSBuilder9.setMonitors(
        monitors24);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder27 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "hi!");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder21);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder23);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder25);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder27);
  }

  @Test
  public void test1878() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1878");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule10 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule10);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder13 = clusteringDBMSBuilder11.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder13.loadPropertiesFromFile(
        "hi!");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = databaseManagementServiceBuilder15.loadPropertiesFromFile(
        "");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
  }

  @Test
  public void test1879() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1879");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    org.neo4j.graphdb.config.Configuration configuration8 = null;
    try {
      databaseManagementServiceClusterImpl5.createDatabase("", configuration8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1880() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1880");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    java.nio.file.Path path8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        path8);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder11 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider14 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder15 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider14);
    org.neo4j.logging.LogProvider logProvider16 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder17 = clusteringDBMSBuilder9.setUserLogProvider(
        logProvider16);
    java.nio.file.Path path18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        path18);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        "enterprise");
    java.lang.String str22 = clusteringDBMSBuilder9.getEdition();
    java.nio.file.Path path23 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder24 = clusteringDBMSBuilder9.loadPropertiesFromFile(
        path23);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder26 = clusteringDBMSBuilder24.loadPropertiesFromFile(
        "");
    org.neo4j.monitoring.Monitors monitors27 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder28 = clusteringDBMSBuilder24.setMonitors(
        monitors27);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder15);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder21);
    org.junit.Assert.assertEquals("'" + str22 + "' != '" + "enterprise" + "'", str22, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder24);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder26);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder28);
  }

  @Test
  public void test1881() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1881");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    try {
      java.util.List<java.lang.String> strList7 = databaseManagementServiceClusterImpl5.listDatabases();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1882() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1882");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl8);
    try {
      databaseManagementServiceClusterImpl9.dropDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1883() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1883");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl6);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    try {
      databaseManagementServiceClusterImpl7.unregisterDatabaseEventListener(databaseEventListener9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1884() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1884");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl8);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl10 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl8);
    try {
      databaseManagementServiceClusterImpl8.dropDatabase("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1885() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1885");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = databaseManagementServiceBuilder7.addDatabaseListener(
        databaseEventListener8);
    java.nio.file.Path path10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = databaseManagementServiceBuilder7.loadPropertiesFromFile(
        path10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = databaseManagementServiceBuilder7.setMonitors(
        monitors12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
  }

  @Test
  public void test1886() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1886");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = databaseManagementServiceBuilder7.addDatabaseListener(
        databaseEventListener8);
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = databaseManagementServiceBuilder7.loadPropertiesFromFile(
        "");
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder13 = databaseManagementServiceBuilder7.loadPropertiesFromFile(
        "");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder13);
  }

  @Test
  public void test1887() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1887");
    }
    java.lang.String[] strArray5 = new java.lang.String[]{"", "enterprise", "enterprise",
        "enterprise", "hi!"};
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray5);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray5);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray5);
    io.github.onograph.server.EntryPointImpl.stopBootstrapper(strArray5);
    org.junit.Assert.assertNotNull(strArray5);
  }

  @Test
  public void test1888() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1888");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.logging.LogProvider logProvider6 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder7 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder7.setMonitors(
        monitors8);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule11 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder12 = clusteringDBMSBuilder7.addURLAccessRule(
        "hi!", uRLAccessRule11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder7.setUserLogProvider(
        logProvider13);
    try {
      io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl15 = clusteringDBMSBuilder7.build();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
  }

  @Test
  public void test1889() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1889");
    }
    io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider commandGetServerIdCommandProvider0 = new io.github.onograph.dbms.commands.CommandGetServerIdCommandProvider();
    org.neo4j.cli.Command.CommandType commandType1 = commandGetServerIdCommandProvider0.commandType();
    int int2 = commandGetServerIdCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType3 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType4 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType5 = commandGetServerIdCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType6 = commandGetServerIdCommandProvider0.commandType();
    int int7 = commandGetServerIdCommandProvider0.getPriority();
    org.junit.Assert.assertTrue(
        "'" + commandType1 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType1.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType5 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType5.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue(
        "'" + commandType6 + "' != '" + org.neo4j.cli.Command.CommandType.GET_SERVER_ID + "'",
        commandType6.equals(org.neo4j.cli.Command.CommandType.GET_SERVER_ID));
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
  }

  @Test
  public void test1890() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1890");
    }
    io.github.onograph.server.EntryPointImpl entryPointImpl0 = new io.github.onograph.server.EntryPointImpl();
    org.neo4j.server.startup.EntryPoint.Priority priority1 = entryPointImpl0.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority2 = entryPointImpl0.getPriority();
    io.github.onograph.server.EntryPointImpl entryPointImpl3 = new io.github.onograph.server.EntryPointImpl();
    int int4 = entryPointImpl0.compareTo((org.neo4j.server.startup.EntryPoint) entryPointImpl3);
    org.neo4j.server.startup.EntryPoint.Priority priority5 = entryPointImpl0.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority6 = entryPointImpl0.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority7 = entryPointImpl0.getPriority();
    org.neo4j.server.startup.EntryPoint.Priority priority8 = entryPointImpl0.getPriority();
    java.lang.Class<?> wildcardClass9 = entryPointImpl0.getClass();
    org.junit.Assert.assertTrue(
        "'" + priority1 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority1.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority2 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority2.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertTrue(
        "'" + priority5 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority5.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority6 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority6.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority7 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority7.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertTrue(
        "'" + priority8 + "' != '" + org.neo4j.server.startup.EntryPoint.Priority.MEDIUM + "'",
        priority8.equals(org.neo4j.server.startup.EntryPoint.Priority.MEDIUM));
    org.junit.Assert.assertNotNull(wildcardClass9);
  }

  @Test
  public void test1891() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1891");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl3);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl7 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl8 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl9 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl8);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener10 = null;
    try {
      databaseManagementServiceClusterImpl9.unregisterDatabaseEventListener(
          databaseEventListener10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1892() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1892");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        "");
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder3.addURLAccessRule(
        "", uRLAccessRule7);
    org.neo4j.common.DependencyResolver dependencyResolver9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder3.setExternalDependencies(
        dependencyResolver9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder10.setMonitors(
        monitors11);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule14 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder15 = clusteringDBMSBuilder10.addURLAccessRule(
        "hi!", uRLAccessRule14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder17 = clusteringDBMSBuilder10.setMonitors(
        monitors16);
    org.neo4j.monitoring.Monitors monitors18 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder19 = clusteringDBMSBuilder17.setMonitors(
        monitors18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder21 = clusteringDBMSBuilder17.setMonitors(
        monitors20);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder15);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder17);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder19);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder21);
  }

  @Test
  public void test1893() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1893");
    }
    java.time.Clock clock0 = null;
    org.neo4j.kernel.database.DatabaseIdRepository databaseIdRepository1 = null;
    io.github.onograph.dbms.DbmsManagerWatchTagImpl dbmsManagerWatchTagImpl2 = null;
    java.time.ZoneId zoneId3 = null;
    io.github.onograph.dbms.serverproc.BasicProcedureQuarantineDatabaseImpl basicProcedureQuarantineDatabaseImpl4 = io.github.onograph.dbms.serverproc.BasicProcedureQuarantineDatabaseImpl.clsrBasicProcedureQuarantineDatabaseImpl(
        clock0, databaseIdRepository1, dbmsManagerWatchTagImpl2, zoneId3);
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature5 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature6 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature7 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature8 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature9 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature10 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.internal.kernel.api.procs.ProcedureSignature procedureSignature11 = basicProcedureQuarantineDatabaseImpl4.signature();
    org.neo4j.kernel.api.procedure.Context context12 = null;
    org.neo4j.values.AnyValue[] anyValueArray13 = new org.neo4j.values.AnyValue[]{};
    org.neo4j.kernel.api.ResourceTracker resourceTracker14 = null;
    try {
      org.neo4j.collection.RawIterator<org.neo4j.values.AnyValue[], org.neo4j.internal.kernel.api.exceptions.ProcedureException> anyValueArrayRawIterator15 = basicProcedureQuarantineDatabaseImpl4.apply(
          context12, anyValueArray13, resourceTracker14);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalArgumentException; message: *** Error: fe8ab484-a650-4ba7-a59f-194832c36aaa");
    } catch (java.lang.IllegalArgumentException e) {
    }
    org.junit.Assert.assertNotNull(basicProcedureQuarantineDatabaseImpl4);
    org.junit.Assert.assertNotNull(procedureSignature5);
    org.junit.Assert.assertNotNull(procedureSignature6);
    org.junit.Assert.assertNotNull(procedureSignature7);
    org.junit.Assert.assertNotNull(procedureSignature8);
    org.junit.Assert.assertNotNull(procedureSignature9);
    org.junit.Assert.assertNotNull(procedureSignature10);
    org.junit.Assert.assertNotNull(procedureSignature11);
    org.junit.Assert.assertNotNull(anyValueArray13);
  }

  @Test
  public void test1894() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1894");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService2 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService3 = enhancedBootstrapper0.getDatabaseManagementService();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    boolean boolean5 = enhancedBootstrapper0.isRunning();
    int int6 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService7 = enhancedBootstrapper0.getDatabaseManagementService();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertNull(databaseManagementService2);
    org.junit.Assert.assertNull(databaseManagementService3);
    org.junit.Assert.assertNull(databaseManagementService4);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    org.junit.Assert.assertNull(databaseManagementService7);
  }

  @Test
  public void test1895() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1895");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.common.DependencyResolver dependencyResolver2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver2);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener4 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder5 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener4);
    java.nio.file.Path path6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path6);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener8 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder9 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder9);
  }

  @Test
  public void test1896() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1896");
    }
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction0 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction1 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv2 = null;
    metaUpgradeFlowAction1.accept(upgradeMetaEnv2);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction4 = metaUpgradeFlowAction0.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction1);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv5 = null;
    metaUpgradeFlowAction0.accept(upgradeMetaEnv5);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction7 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction8 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv9 = null;
    metaUpgradeFlowAction8.accept(upgradeMetaEnv9);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction11 = metaUpgradeFlowAction7.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction8);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer12 = metaUpgradeFlowAction0.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction7);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction13 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction14 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv15 = null;
    metaUpgradeFlowAction14.accept(upgradeMetaEnv15);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction17 = metaUpgradeFlowAction13.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction14);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction18 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction19 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv20 = null;
    metaUpgradeFlowAction19.accept(upgradeMetaEnv20);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction22 = metaUpgradeFlowAction18.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction19);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv23 = null;
    metaUpgradeFlowAction18.accept(upgradeMetaEnv23);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction25 = metaUpgradeFlowAction14.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction18);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction26 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv27 = null;
    metaUpgradeFlowAction26.accept(upgradeMetaEnv27);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer29 = metaUpgradeFlowAction25.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction26);
    org.neo4j.io.layout.Neo4jLayout neo4jLayout30 = null;
    io.github.onograph.dbms.MetaUpgradeFlowActionStagingImpl metaUpgradeFlowActionStagingImpl31 = new io.github.onograph.dbms.MetaUpgradeFlowActionStagingImpl(
        neo4jLayout30);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer32 = upgradeMetaEnvConsumer29.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowActionStagingImpl31);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer33 = upgradeMetaEnvConsumer12.andThen(
        upgradeMetaEnvConsumer29);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction34 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction35 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv36 = null;
    metaUpgradeFlowAction35.accept(upgradeMetaEnv36);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction38 = metaUpgradeFlowAction34.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction35);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction39 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction40 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv41 = null;
    metaUpgradeFlowAction40.accept(upgradeMetaEnv41);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction43 = metaUpgradeFlowAction39.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction40);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv44 = null;
    metaUpgradeFlowAction39.accept(upgradeMetaEnv44);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction46 = metaUpgradeFlowAction35.andMetaUpgradeFlowAction(
        metaUpgradeFlowAction39);
    io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction metaUpgradeFlowAction47 = io.github.onograph.cluster.raft.share.meta.cm.MetaUpgradeFlowAction.DEFAULT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv48 = null;
    metaUpgradeFlowAction47.accept(upgradeMetaEnv48);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer50 = metaUpgradeFlowAction46.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction47);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv> upgradeMetaEnvConsumer51 = upgradeMetaEnvConsumer29.andThen(
        (java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv>) metaUpgradeFlowAction46);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction0);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction1);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction4);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction7);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction8);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction11);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer12);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction13);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction14);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction17);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction18);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction19);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction22);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction25);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction26);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer29);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer32);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer33);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction34);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction35);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction38);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction39);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction40);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction43);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction46);
    org.junit.Assert.assertNotNull(metaUpgradeFlowAction47);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer50);
    org.junit.Assert.assertNotNull(upgradeMetaEnvConsumer51);
  }

  @Test
  public void test1897() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1897");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    java.lang.String str4 = clusteringDBMSBuilder1.getEdition();
    java.nio.file.Path path5 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder6 = clusteringDBMSBuilder1.loadPropertiesFromFile(
        path5);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener7 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder8 = clusteringDBMSBuilder6.addDatabaseListener(
        databaseEventListener7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder6.addDatabaseListener(
        databaseEventListener9);
    java.nio.file.Path path11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder6.loadPropertiesFromFile(
        path11);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener13 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder14 = clusteringDBMSBuilder6.addDatabaseListener(
        databaseEventListener13);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterprise" + "'", str4, "enterprise");
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder6);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder14);
  }

  @Test
  public void test1898() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1898");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setMonitors(
        monitors2);
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder5 = clusteringDBMSBuilder1.setUserLogProvider(
        logProvider4);
    org.neo4j.graphdb.security.URLAccessRule uRLAccessRule7 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder8 = clusteringDBMSBuilder5.addURLAccessRule(
        "hi!", uRLAccessRule7);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener9 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder10 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder12 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider11);
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder14 = clusteringDBMSBuilder5.loadPropertiesFromFile(
        "hi!");
    org.neo4j.logging.LogProvider logProvider15 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder16 = clusteringDBMSBuilder5.setUserLogProvider(
        logProvider15);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener17 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder18 = clusteringDBMSBuilder5.addDatabaseListener(
        databaseEventListener17);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder8);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder12);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder14);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder16);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder18);
  }

  @Test
  public void test1899() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1899");
    }
    io.github.onograph.server.EnhancedBootstrapper enhancedBootstrapper0 = new io.github.onograph.server.EnhancedBootstrapper();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService1 = enhancedBootstrapper0.getDatabaseManagementService();
    int int2 = enhancedBootstrapper0.stop();
    int int3 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService4 = enhancedBootstrapper0.getDatabaseManagementService();
    int int5 = enhancedBootstrapper0.stop();
    org.neo4j.logging.Log log6 = enhancedBootstrapper0.getLog();
    boolean boolean7 = enhancedBootstrapper0.isRunning();
    int int8 = enhancedBootstrapper0.stop();
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService9 = enhancedBootstrapper0.getDatabaseManagementService();
    int int10 = enhancedBootstrapper0.stop();
    org.junit.Assert.assertNull(databaseManagementService1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNull(databaseManagementService4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertNotNull(log6);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    org.junit.Assert.assertNull(databaseManagementService9);
    org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
  }

  @Test
  public void test1900() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1900");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder1 = new io.github.onograph.dbms.service.ClusteringDBMSBuilder(
        path0);
    org.neo4j.common.DependencyResolver dependencyResolver2 = null;
    io.github.onograph.dbms.service.ClusteringDBMSBuilder clusteringDBMSBuilder3 = clusteringDBMSBuilder1.setExternalDependencies(
        dependencyResolver2);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener4 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder5 = clusteringDBMSBuilder3.addDatabaseListener(
        databaseEventListener4);
    java.nio.file.Path path6 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder7 = clusteringDBMSBuilder3.loadPropertiesFromFile(
        path6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder9 = clusteringDBMSBuilder3.setMonitors(
        monitors8);
    org.neo4j.common.DependencyResolver dependencyResolver10 = null;
    org.neo4j.dbms.api.DatabaseManagementServiceBuilder databaseManagementServiceBuilder11 = databaseManagementServiceBuilder9.setExternalDependencies(
        dependencyResolver10);
    org.junit.Assert.assertNotNull(clusteringDBMSBuilder3);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder5);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder7);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder9);
    org.junit.Assert.assertNotNull(databaseManagementServiceBuilder11);
  }

  @Test
  public void test1901() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1901");
    }
    org.neo4j.dbms.api.DatabaseManagementService databaseManagementService0 = null;
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl1 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl2 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        databaseManagementService0);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl3 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl4 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl2);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl5 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl4);
    io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl databaseManagementServiceClusterImpl6 = new io.github.onograph.dbms.service.DatabaseManagementServiceClusterImpl(
        (org.neo4j.dbms.api.DatabaseManagementService) databaseManagementServiceClusterImpl5);
    org.neo4j.graphdb.event.DatabaseEventListener databaseEventListener7 = null;
    try {
      databaseManagementServiceClusterImpl5.unregisterDatabaseEventListener(databaseEventListener7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }
}


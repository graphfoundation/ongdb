package io.github.onograph.test;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class ModRegTest3 {

  public static boolean debug = false;

  @Test
  public void test1501() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1501");
    }
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat0 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat0.marc();
    syncStat0.norlad();
    syncStat0.marc();
    syncStat0.clerut();
    syncStat0.norlad();
    syncStat0.recnam();
    syncStat0.norlad();
    syncStat0.norlad();
  }

  @Test
  public void test1502() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1502");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl extensionFactoryGdbMetricsImpl0 = new io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl();
    java.lang.String str1 = extensionFactoryGdbMetricsImpl0.toString();
    java.lang.String str2 = extensionFactoryGdbMetricsImpl0.getName();
    java.util.function.LongSupplier longSupplier3 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter4 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier3);
    metricsMeter4.mark(100L);
    metricsMeter4.mark();
    metricsMeter4.mark((long) 10);
    double double10 = metricsMeter4.getMeanRate();
    double double11 = metricsMeter4.getMeanRate();
    metricsMeter4.mark();
    metricsMeter4.mark((long) '4');
    double double15 = metricsMeter4.getMeanRate();
    double double16 = metricsMeter4.getFiveMinuteRate();
    double double17 = metricsMeter4.getMeanRate();
    metricsMeter4.mark();
    double double19 = metricsMeter4.getOneMinuteRate();
    long long20 = metricsMeter4.getCount();
    boolean boolean21 = extensionFactoryGdbMetricsImpl0.equals((java.lang.Object) long20);
    java.lang.String str22 = extensionFactoryGdbMetricsImpl0.toString();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str1, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "databaseMetrics" + "'", str2,
        "databaseMetrics");
    org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
    org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
    org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
    org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    org.junit.Assert.assertEquals(
        "'" + str22 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str22, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
  }

  @Test
  public void test1503() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1503");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager10, databaseOperationCounts17);
    org.neo4j.memory.MemoryPools memoryPools19 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl21 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager10, memoryPools19,
        "db.operation.count.create");
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager10, monitors22);
    org.neo4j.monitoring.Monitors monitors24 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl25 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager10, monitors24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    java.lang.Throwable throwable27 = null;
    queryExecutionMonitorMetricsImpl25.endFailure(executingQuery26, throwable27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryExecutionMonitorMetricsImpl25.endFailure(executingQuery29,
        "causal_clustering.core.discovery.cluster.converged");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryExecutionMonitorMetricsImpl25.startProcessing(executingQuery32);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    queryExecutionMonitorMetricsImpl25.endFailure(executingQuery34,
        "causal_clustering.core.discovery.cluster.converged");
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1504() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1504");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.covgGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.secvg(true);
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
  }

  @Test
  public void test1505() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1505");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts2 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter3 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager1,
        databaseOperationCounts2);
    try {
      gdbActionsAdapter3.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1506() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1506");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl2 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.drop", metricRegistryManager1);
    java.lang.String str4 = jVMAdapterGarbageCollectionImpl2.moydmdmineString(
        "dbms.pool.<pool>.db.operation.count.failed");
    io.github.onograph.metrics.incoming.EnterpriseMetricsType enterpriseMetricsType5 = jVMAdapterGarbageCollectionImpl2.getGrp();
    try {
      jVMAdapterGarbageCollectionImpl2.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "dbms.pool.<pool>.db.operation.count.failed" + "'", str4,
        "dbms.pool.<pool>.db.operation.count.failed");
    org.junit.Assert.assertTrue("'" + enterpriseMetricsType5 + "' != '"
            + io.github.onograph.metrics.incoming.EnterpriseMetricsType.EMT_JVM + "'",
        enterpriseMetricsType5.equals(
            io.github.onograph.metrics.incoming.EnterpriseMetricsType.EMT_JVM));
  }

  @Test
  public void test1507() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1507");
    }
    org.neo4j.monitoring.Monitors monitors5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager12, memoryPools13,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager12);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter17 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitors5, metricRegistryManager12);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager12,
        databaseOperationCounts18);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier20 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter21 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager12, webContainerThreadInfoSupplier20);
    org.neo4j.memory.MemoryPools memoryPools22 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl23 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, memoryPools22);
    org.neo4j.monitoring.Monitors monitors24 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter25 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed",
        metricRegistryManager12, monitors24);
    try {
      boltAdapter25.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1508() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1508");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.monitoring.Monitors monitors5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter14 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors5, metricRegistryManager11);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl16 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager11, monitors15);
    org.neo4j.memory.MemoryPools memoryPools17 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl19 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, memoryPools17,
        "pool.<pool>.<database>.causal_clustering.core.discovery.replicated_data");
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter20 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "dbms.pool.<pool>.vm.heap.used", monitors1, metricRegistryManager11);
    try {
      readReplicaNodeAdapter20.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1509() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1509");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl1 = null;
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl6 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray11 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList12 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean13 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList12,
        globbingPatternArray11);
    com.codahale.metrics.MetricRegistry metricRegistry14 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager15 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList12,
        metricRegistry14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter17 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager15, monitors16);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager15, storeEntityCountersSupplier18,
        pageCacheTracer19);
    org.neo4j.scheduler.JobScheduler jobScheduler21 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction22 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager15,
        jobScheduler21, fileSystemAbstraction22, databaseLayout23);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager15,
        transactionLogCounters25);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier27 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter28 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "vm.heap.committed", monitorsClusterConsensusImpl6, metricRegistryManager15,
        coreNodeLeaderCheckSupplier27);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl29 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager15);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier30 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter31 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager15,
        storeEntityCountersSupplier30);
    org.neo4j.memory.MemoryPools memoryPools32 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl33 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "pool.<pool>.<database>.db.operation.count.drop", metricRegistryManager15, memoryPools32);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier34 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter35 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "pool.<pool>.<database>.db.operation.count.start", monitorsClusterConsensusImpl1,
        metricRegistryManager15, coreNodeLeaderCheckSupplier34);
    try {
      consensusCoreNodeAdapter35.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
  }

  @Test
  public void test1510() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1510");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusElectionTerm consensusElectionTerm0 = new io.github.onograph.metrics.incoming.cluster.ConsensusElectionTerm();
    long long1 = consensusElectionTerm0.getTermLength();
    long long2 = consensusElectionTerm0.getTermLength();
    consensusElectionTerm0.termLength((long) (short) 10);
    consensusElectionTerm0.termLength((long) (byte) -1);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
  }

  @Test
  public void test1511() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1511");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    livingCacheMeta0.seeec(100);
    livingCacheMeta0.cacheMiss();
    long long5 = livingCacheMeta0.gems();
    livingCacheMeta0.sememt((int) (byte) 1);
    livingCacheMeta0.cacheHit();
    long long9 = livingCacheMeta0.gems();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
  }

  @Test
  public void test1512() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1512");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    java.lang.String str1 = metricsServiceExtensionFactory0.toString();
    java.lang.String str2 = metricsServiceExtensionFactory0.toString();
    java.lang.String str3 = metricsServiceExtensionFactory0.getName();
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager5 = null;
    org.neo4j.memory.MemoryPools memoryPools6 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl7 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "db.operation.count.drop", metricRegistryManager5, memoryPools6);
    boolean boolean8 = metricsServiceExtensionFactory0.equals(
        (java.lang.Object) metricRegistryManager5);
    java.lang.String str9 = metricsServiceExtensionFactory0.getName();
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = null;
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager11, memoryPools12);
    java.lang.String str15 = memoryPoolsAdapterNeoStackImpl13.moydmdmineString(
        "db.operation.count.create");
    java.lang.String str17 = memoryPoolsAdapterNeoStackImpl13.moydmdmineString(
        "dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message");
    boolean boolean18 = metricsServiceExtensionFactory0.equals((java.lang.Object) str17);
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str1, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str2, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "globalMetrics" + "'", str3,
        "globalMetrics");
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "globalMetrics" + "'", str9,
        "globalMetrics");
    org.junit.Assert.assertEquals(
        "'" + str15 + "' != '" + "dbms.pool.<pool>.db.operation.count.create" + "'", str15,
        "dbms.pool.<pool>.db.operation.count.create");
    org.junit.Assert.assertEquals("'" + str17 + "' != '"
            + "dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message"
            + "'", str17,
        "dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message");
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
  }

  @Test
  public void test1513() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1513");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    livingCacheMeta0.seeec(100);
    livingCacheMeta0.seeec((int) (byte) 0);
    long long6 = livingCacheMeta0.getICe();
    long long7 = livingCacheMeta0.getSizeCnt();
    livingCacheMeta0.cacheMiss();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
  }

  @Test
  public void test1514() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1514");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark(100L);
    metricsMeter1.mark();
    double double5 = metricsMeter1.getMeanRate();
    double double6 = metricsMeter1.getFiveMinuteRate();
    metricsMeter1.mark((long) (short) 0);
    double double9 = metricsMeter1.getFifteenMinuteRate();
    metricsMeter1.mark();
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
  }

  @Test
  public void test1515() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1515");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory2 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager9, monitors13);
    boolean boolean15 = metricsServiceExtensionFactory2.equals(
        (java.lang.Object) metricRegistryManager9);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager9);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl18 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager9, monitors17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryExecutionMonitorMetricsImpl18.startExecution(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryExecutionMonitorMetricsImpl18.startProcessing(executingQuery21);
    try {
      queryExecutionMonitorMetricsImpl18.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
  }

  @Test
  public void test1516() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1516");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.scheduler.JobScheduler jobScheduler19 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager13,
        jobScheduler19, fileSystemAbstraction20, databaseLayout21);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter24 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager13, monitors23);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters25 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter26 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "", metricRegistryManager13, pageCacheCounters25);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl27 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "db.query.execution", metricRegistryManager13);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter28 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "pool.<pool>.<database>.db.operation.count.start", monitors2, metricRegistryManager13);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl29 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.query.execution", metricRegistryManager13);
    jVMAdapterThreadMXImpl29.start();
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test1517() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1517");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier18 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter19 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl5, metricRegistryManager12,
        coreNodeLeaderCheckSupplier18);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier20 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager12,
        storeEntityCountersSupplier20, pageCacheTracer21);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, transactionLogCounters23);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "neo4j.count.node", metricRegistryManager12, databaseOperationCounts25);
    org.neo4j.monitoring.Monitors monitors27 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl28 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "db.operation.count.start", metricRegistryManager12, monitors27);
    try {
      queryExecutionMonitorMetricsImpl28.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1518() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1518");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl1 = null;
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier18 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter19 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl5, metricRegistryManager12,
        coreNodeLeaderCheckSupplier18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter21 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager12, monitors20);
    org.neo4j.scheduler.JobScheduler jobScheduler22 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction23 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout24 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter25 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager12,
        jobScheduler22, fileSystemAbstraction23, databaseLayout24);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier26 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter27 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "databaseMetrics", monitorsClusterConsensusImpl1, metricRegistryManager12,
        coreNodeLeaderCheckSupplier26);
    try {
      consensusCoreNodeAdapter27.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1519() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1519");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.covgGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge3 = clusterMembersCount0.covgGauge();
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge3);
  }

  @Test
  public void test1520() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1520");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType1 = null;
    com.codahale.metrics.Timer timer2 = consensusMessageStats0.getTimer(raftConsensusMessageType1);
    long long3 = consensusMessageStats0.dea();
    long long4 = consensusMessageStats0.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType5 = null;
    com.codahale.metrics.Timer timer6 = consensusMessageStats0.getTimer(raftConsensusMessageType5);
    com.codahale.metrics.Timer timer7 = consensusMessageStats0.getTimer();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType8 = null;
    com.codahale.metrics.Timer timer9 = consensusMessageStats0.getTimer(raftConsensusMessageType8);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType10 = null;
    com.codahale.metrics.Timer timer11 = consensusMessageStats0.getTimer(
        raftConsensusMessageType10);
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertNull(timer2);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    org.junit.Assert.assertNull(timer6);
    org.junit.Assert.assertNotNull(timer7);
    org.junit.Assert.assertNull(timer9);
    org.junit.Assert.assertNull(timer11);
  }

  @Test
  public void test1521() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1521");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager10);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl17 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "db.operation.count.start", metricRegistryManager10);
    org.neo4j.memory.MemoryPools memoryPools18 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl19 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "db.operation.count.start", metricRegistryManager10, memoryPools18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter21 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "dbms.pool.<pool>.causal_clustering.core.discovery.cluster.converged",
        metricRegistryManager10, monitors20);
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1522() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1522");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    java.lang.String str1 = metricsServiceExtensionFactory0.toString();
    java.lang.String str2 = metricsServiceExtensionFactory0.toString();
    java.lang.String str3 = metricsServiceExtensionFactory0.getName();
    java.lang.String str4 = metricsServiceExtensionFactory0.getName();
    java.lang.String str5 = metricsServiceExtensionFactory0.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext6 = null;
    io.github.onograph.metrics.MetricsServiceExtensionFactory.RequiredComponents requiredComponents7 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle8 = metricsServiceExtensionFactory0.newInstance(
          extensionContext6, requiredComponents7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str1, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str2, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "globalMetrics" + "'", str3,
        "globalMetrics");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "globalMetrics" + "'", str4,
        "globalMetrics");
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str5, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
  }

  @Test
  public void test1523() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1523");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter9 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager7,
        monitors8);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier10 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer11 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter12 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager7, storeEntityCountersSupplier10,
        pageCacheTracer11);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl13 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "db.operation.count.failed", metricRegistryManager7);
    io.github.onograph.metrics.incoming.EnterpriseMetricsType enterpriseMetricsType14 = jVMAdapterFileStatImpl13.getGrp();
    jVMAdapterFileStatImpl13.start();
    jVMAdapterFileStatImpl13.start();
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertTrue("'" + enterpriseMetricsType14 + "' != '"
            + io.github.onograph.metrics.incoming.EnterpriseMetricsType.EMT_JVM + "'",
        enterpriseMetricsType14.equals(
            io.github.onograph.metrics.incoming.EnterpriseMetricsType.EMT_JVM));
  }

  @Test
  public void test1524() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1524");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType1 = null;
    com.codahale.metrics.Timer timer2 = consensusMessageStats0.getTimer(raftConsensusMessageType1);
    long long3 = consensusMessageStats0.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType4 = null;
    com.codahale.metrics.Timer timer5 = consensusMessageStats0.getTimer(raftConsensusMessageType4);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType6 = null;
    com.codahale.metrics.Timer timer7 = consensusMessageStats0.getTimer(raftConsensusMessageType6);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType8 = null;
    com.codahale.metrics.Timer timer9 = consensusMessageStats0.getTimer(raftConsensusMessageType8);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType10 = null;
    com.codahale.metrics.Timer timer11 = consensusMessageStats0.getTimer(
        raftConsensusMessageType10);
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertNull(timer2);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertNull(timer5);
    org.junit.Assert.assertNull(timer7);
    org.junit.Assert.assertNull(timer9);
    org.junit.Assert.assertNull(timer11);
  }

  @Test
  public void test1525() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1525");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark(100L);
    metricsMeter1.mark();
    metricsMeter1.mark((long) 10);
    double double7 = metricsMeter1.getMeanRate();
    double double8 = metricsMeter1.getMeanRate();
    metricsMeter1.mark();
    metricsMeter1.mark();
    metricsMeter1.mark(10L);
    long long13 = metricsMeter1.getCount();
    metricsMeter1.mark();
    double double15 = metricsMeter1.getFifteenMinuteRate();
    long long16 = metricsMeter1.getCount();
    org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
  }

  @Test
  public void test1526() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1526");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl((int) (short) -1);
    clusterMembersCount0.sembs((int) (byte) 1);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge7 = clusterMembersCount0.covgGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge8 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge9 = clusterMembersCount0.covgGauge();
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge7);
    org.junit.Assert.assertNotNull(intGauge8);
    org.junit.Assert.assertNotNull(intGauge9);
  }

  @Test
  public void test1527() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1527");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusLogAdditions consensusLogAdditions0 = new io.github.onograph.metrics.incoming.cluster.ConsensusLogAdditions();
    long long1 = consensusLogAdditions0.apeie();
    consensusLogAdditions0.apeie(0L);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
  }

  @Test
  public void test1528() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1528");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter8 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager6,
        monitors7);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl9 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager6);
    java.lang.String str11 = jVMAdapterMemoryHeapImpl9.moydmdmineString("hi!");
    jVMAdapterMemoryHeapImpl9.start();
    jVMAdapterMemoryHeapImpl9.start();
    jVMAdapterMemoryHeapImpl9.start();
    jVMAdapterMemoryHeapImpl9.start();
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
  }

  @Test
  public void test1529() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1529");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    clusterMembersCount0.secvg(true);
    clusterMembersCount0.seuehl((int) (byte) 1);
    clusterMembersCount0.sembs((int) (short) 100);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge7 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge8 = clusterMembersCount0.unehlGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge9 = clusterMembersCount0.covgGauge();
    clusterMembersCount0.secvg(false);
    org.junit.Assert.assertNotNull(intGauge7);
    org.junit.Assert.assertNotNull(intGauge8);
    org.junit.Assert.assertNotNull(intGauge9);
  }

  @Test
  public void test1530() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1530");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager10, databaseOperationCounts17);
    org.neo4j.memory.MemoryPools memoryPools19 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl21 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager10, memoryPools19,
        "db.operation.count.create");
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager10, monitors22);
    org.neo4j.monitoring.Monitors monitors24 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl25 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager10, monitors24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    java.lang.Throwable throwable27 = null;
    queryExecutionMonitorMetricsImpl25.endFailure(executingQuery26, throwable27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryExecutionMonitorMetricsImpl25.startExecution(executingQuery29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryExecutionMonitorMetricsImpl25.endFailure(executingQuery31,
        "pool.<pool>.<database>.db.operation.count.create");
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1531() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1531");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier18 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter19 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager12, webContainerThreadInfoSupplier18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager12, monitors20);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager12, storeEntityCountersSupplier22);
    org.neo4j.memory.MemoryPools memoryPools24 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl26 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager12,
        memoryPools24, "db.operation.count.stop");
    org.neo4j.monitoring.Monitors monitors27 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter28 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.query.execution", metricRegistryManager12, monitors27);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl29 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "dbms.pool.<pool>.vm.heap.max", metricRegistryManager12);
    jVMAdapterMBImpl29.shutdown();
    java.lang.String str32 = jVMAdapterMBImpl29.moydmdmineString(
        "pool.<pool>.<database>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship");
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertEquals("'" + str32 + "' != '"
            + "pool.<pool>.<database>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship" + "'",
        str32, "pool.<pool>.<database>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship");
  }

  @Test
  public void test1532() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1532");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager11, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager11, databaseOperationCounts18);
    org.neo4j.memory.MemoryPools memoryPools20 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl22 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager11, memoryPools20,
        "db.operation.count.create");
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager11, monitors23);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager11,
        transactionLogCounters25);
    org.neo4j.monitoring.Monitors monitors27 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter28 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager11, monitors27);
    java.lang.String str30 = cypherPlanAdapter28.moydmdmineString(
        "pool.<pool>.<database>.vm.heap.used");
    try {
      cypherPlanAdapter28.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str30 + "' != '" + "pool.<pool>.<database>.vm.heap.used" + "'", str30,
        "pool.<pool>.<database>.vm.heap.used");
  }

  @Test
  public void test1533() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1533");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    org.neo4j.memory.MemoryPools memoryPools2 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl3 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager1, memoryPools2);
    java.lang.String str5 = memoryPoolsAdapterNeoStackImpl3.moydmdmineString(
        "pool.<pool>.<database>.db.operation.count.start");
    java.lang.String str7 = memoryPoolsAdapterNeoStackImpl3.moydmdmineString(
        "dbms.pool.<pool>.vm.heap.max");
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.start"
            + "'", str5, "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.start");
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "dbms.pool.<pool>.dbms.pool.<pool>.vm.heap.max" + "'", str7,
        "dbms.pool.<pool>.dbms.pool.<pool>.vm.heap.max");
  }

  @Test
  public void test1534() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1534");
    }
    io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl transactionSizeMonitorImpl0 = new io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl();
    transactionSizeMonitorImpl0.addNativeTransactionSize((long) ' ');
    transactionSizeMonitorImpl0.addHeapTransactionSize(100L);
    transactionSizeMonitorImpl0.addHeapTransactionSize((long) (byte) 0);
    transactionSizeMonitorImpl0.addNativeTransactionSize((long) 0);
  }

  @Test
  public void test1535() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1535");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark(100L);
    metricsMeter1.mark();
    metricsMeter1.mark((long) 10);
    double double7 = metricsMeter1.getMeanRate();
    double double8 = metricsMeter1.getMeanRate();
    metricsMeter1.mark();
    metricsMeter1.mark((long) '4');
    double double12 = metricsMeter1.getMeanRate();
    double double13 = metricsMeter1.getFiveMinuteRate();
    double double14 = metricsMeter1.getMeanRate();
    metricsMeter1.mark();
    double double16 = metricsMeter1.getFiveMinuteRate();
    org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
  }

  @Test
  public void test1536() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1536");
    }
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat0 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat0.marc();
    syncStat0.suslrle();
    syncStat0.suslrle();
  }

  @Test
  public void test1537() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1537");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    java.lang.String str1 = metricsServiceExtensionFactory0.toString();
    java.lang.String str2 = metricsServiceExtensionFactory0.toString();
    java.lang.String str3 = metricsServiceExtensionFactory0.getName();
    java.util.function.LongSupplier longSupplier4 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter5 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier4);
    metricsMeter5.mark(100L);
    boolean boolean8 = metricsServiceExtensionFactory0.equals((java.lang.Object) metricsMeter5);
    java.lang.String str9 = metricsServiceExtensionFactory0.toString();
    java.util.function.LongSupplier longSupplier10 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter11 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier10);
    metricsMeter11.mark(100L);
    metricsMeter11.mark();
    metricsMeter11.mark((long) 10);
    double double17 = metricsMeter11.getMeanRate();
    double double18 = metricsMeter11.getMeanRate();
    metricsMeter11.mark();
    metricsMeter11.mark((long) '4');
    metricsMeter11.mark((long) 1);
    boolean boolean24 = metricsServiceExtensionFactory0.equals((java.lang.Object) metricsMeter11);
    java.lang.String str25 = metricsServiceExtensionFactory0.toString();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str1, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str2, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "globalMetrics" + "'", str3,
        "globalMetrics");
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str9, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
    org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertEquals(
        "'" + str25 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str25, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
  }

  @Test
  public void test1538() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1538");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager11,
        jobScheduler17, fileSystemAbstraction18, databaseLayout19);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager11,
        storeEntityCountersSupplier21);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "dbms.pool.<pool>.vm.heap.used", metricRegistryManager11);
    boolean boolean25 = metricRegistryManager11.isEnlForSt("db.operation.count.drop");
    org.neo4j.monitoring.Monitors monitors26 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl27 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "", metricRegistryManager11, monitors26);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters28 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter29 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager11,
        transactionLogCounters28);
    try {
      gdbTransactionLogAdapter29.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
  }

  @Test
  public void test1539() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1539");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.scheduler.JobScheduler jobScheduler18 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction19 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager12,
        jobScheduler18, fileSystemAbstraction19, databaseLayout20);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager12,
        storeEntityCountersSupplier22);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "dbms.pool.<pool>.vm.heap.used", metricRegistryManager12);
    boolean boolean26 = metricRegistryManager12.isEnlForSt("db.operation.count.drop");
    org.neo4j.monitoring.Monitors monitors27 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl28 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "", metricRegistryManager12, monitors27);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters29 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter30 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager12,
        transactionLogCounters29);
    org.neo4j.monitoring.Monitors monitors31 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl32 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship",
        metricRegistryManager12, monitors31);
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
  }

  @Test
  public void test1540() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1540");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl clusterDataWatcherMetricsImpl0 = new io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl();
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType1 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType1);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType3 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge4 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType3);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType5 = null;
    try {
      clusterDataWatcherMetricsImpl0.seivldasForCl(clusterDataType5, 100);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge4);
  }

  @Test
  public void test1541() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1541");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager10, jobScheduler17,
        fileSystemAbstraction18, databaseLayout19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager10);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.failed", metricRegistryManager10);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl24 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager10, monitors23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryExecutionMonitorMetricsImpl24.startProcessing(executingQuery25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryExecutionMonitorMetricsImpl24.beforeEnd(executingQuery27, true);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryExecutionMonitorMetricsImpl24.startExecution(executingQuery30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryExecutionMonitorMetricsImpl24.startExecution(executingQuery32);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    queryExecutionMonitorMetricsImpl24.startExecution(executingQuery34);
    try {
      queryExecutionMonitorMetricsImpl24.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1542() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1542");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    livingCacheMeta0.cacheHit();
    livingCacheMeta0.cacheHit();
    long long5 = livingCacheMeta0.getLgBm();
    livingCacheMeta0.sembe(0L);
    livingCacheMeta0.seeec(0);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
  }

  @Test
  public void test1543() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1543");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl14 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "db.operation.count.drop", metricRegistryManager10);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.operation.count.failed", metricRegistryManager10, databaseOperationCounts15);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "globalMetrics", metricRegistryManager10, storeEntityCountersSupplier17);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters19 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter20 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "globalMetrics", metricRegistryManager10, checkpointCounters19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "pool.<pool>.<database>.vm.heap.used", metricRegistryManager10);
    try {
      jVMAdapterMBImpl21.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1544() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1544");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager11, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.scheduler.JobScheduler jobScheduler18 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction19 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager11, jobScheduler18,
        fileSystemAbstraction19, databaseLayout20);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager11);
    org.neo4j.memory.MemoryPools memoryPools23 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl25 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager11, memoryPools23,
        "pool.<pool>.<database>.db.operation.count.start");
    org.neo4j.memory.MemoryPools memoryPools26 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl27 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "pool.<pool>.<database>.pool.<pool>.<database>.db.operation.count.drop",
        metricRegistryManager11, memoryPools26);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters28 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter29 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "pool.<pool>.<database>.vm.heap.used", metricRegistryManager11, checkpointCounters28);
    try {
      checkpointCounterAdapter29.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1545() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1545");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    livingCacheMeta0.sememt((int) (byte) 0);
    livingCacheMeta0.cacheMiss();
    long long6 = livingCacheMeta0.getLgBm();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
  }

  @Test
  public void test1546() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1546");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    livingCacheMeta0.seeec(100);
    livingCacheMeta0.cacheMiss();
    long long5 = livingCacheMeta0.gems();
    livingCacheMeta0.sememt((int) (byte) 1);
    livingCacheMeta0.cacheHit();
    livingCacheMeta0.seeec((int) (short) 100);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
  }

  @Test
  public void test1547() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1547");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl extensionFactoryGdbMetricsImpl0 = new io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext1 = null;
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents2 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle3 = extensionFactoryGdbMetricsImpl0.newInstance(
        extensionContext1, dependentComponents2);
    org.neo4j.monitoring.Monitors monitors5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager12, memoryPools13,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter17 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager12, monitors16);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter18 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "db.query.execution", monitors5, metricRegistryManager12);
    boolean boolean19 = extensionFactoryGdbMetricsImpl0.equals(
        (java.lang.Object) readReplicaNodeAdapter18);
    java.lang.String str20 = extensionFactoryGdbMetricsImpl0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext21 = null;
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents22 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle23 = extensionFactoryGdbMetricsImpl0.newInstance(
        extensionContext21, dependentComponents22);
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta24 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long25 = livingCacheMeta24.gems();
    long long26 = livingCacheMeta24.getSizeCnt();
    livingCacheMeta24.setabys((long) 1);
    livingCacheMeta24.cacheHit();
    boolean boolean30 = extensionFactoryGdbMetricsImpl0.equals(
        (java.lang.Object) livingCacheMeta24);
    livingCacheMeta24.sememt((int) (short) 1);
    org.junit.Assert.assertNotNull(lifecycle3);
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "databaseMetrics" + "'", str20,
        "databaseMetrics");
    org.junit.Assert.assertNotNull(lifecycle23);
    org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
    org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
  }

  @Test
  public void test1548() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1548");
    }
    org.neo4j.monitoring.Monitors monitors4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray10 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList11 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        globbingPatternArray10);
    com.codahale.metrics.MetricRegistry metricRegistry13 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager14 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        metricRegistry13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter16 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager14, monitors15);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager14, storeEntityCountersSupplier17,
        pageCacheTracer18);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl20 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager14);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "db.operation.count.start", metricRegistryManager14);
    org.neo4j.scheduler.JobScheduler jobScheduler22 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction23 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout24 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter25 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.drop", metricRegistryManager14, jobScheduler22, fileSystemAbstraction23,
        databaseLayout24);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter26 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", monitors4, metricRegistryManager14);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters27 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter28 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager14,
        pageCacheCounters27);
    org.neo4j.monitoring.Monitors monitors29 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl30 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager14, monitors29);
    org.neo4j.memory.MemoryPools memoryPools31 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl32 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "pool.<pool>.<database>.dbms.pool.<pool>.pool.<pool>.<database>.db.query.execution",
        metricRegistryManager14, memoryPools31);
    org.junit.Assert.assertNotNull(globbingPatternArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
  }

  @Test
  public void test1549() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1549");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier7 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters8 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter9 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager6,
        transactionIdStoreSupplier7, transactionCounters8);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl10 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager6);
    jVMAdapterMBImpl10.start();
    java.lang.String str13 = jVMAdapterMBImpl10.moydmdmineString("dbms.pool.<pool>.vm.heap.used");
    java.lang.String str15 = jVMAdapterMBImpl10.moydmdmineString(
        "pool.<pool>.<database>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship");
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "dbms.pool.<pool>.vm.heap.used" + "'",
        str13, "dbms.pool.<pool>.vm.heap.used");
    org.junit.Assert.assertEquals("'" + str15 + "' != '"
            + "pool.<pool>.<database>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship" + "'",
        str15, "pool.<pool>.<database>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship");
  }

  @Test
  public void test1550() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1550");
    }
    org.neo4j.monitoring.Monitors monitors6 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.memory.MemoryPools memoryPools14 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl16 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager13, memoryPools14,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl17 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager13);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter18 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitors6, metricRegistryManager13);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager13,
        databaseOperationCounts19);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier21 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter22 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager13, webContainerThreadInfoSupplier21);
    org.neo4j.memory.MemoryPools memoryPools23 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl24 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, memoryPools23);
    org.neo4j.monitoring.Monitors monitors25 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter26 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed",
        metricRegistryManager13, monitors25);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier27 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter28 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.vm.heap.max", metricRegistryManager13,
        webContainerThreadInfoSupplier27);
    jettyAdapter28.start();
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test1551() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1551");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.scheduler.JobScheduler jobScheduler15 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager9,
        jobScheduler15, fileSystemAbstraction16, databaseLayout17);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier19 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        storeEntityCountersSupplier19, pageCacheTracer20);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "db.operation.count.drop", metricRegistryManager9, transactionLogCounters22);
    gdbTransactionLogAdapter23.start();
    gdbTransactionLogAdapter23.shutdown();
    gdbTransactionLogAdapter23.start();
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1552() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1552");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier16 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter17 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl3, metricRegistryManager10,
        coreNodeLeaderCheckSupplier16);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager10,
        storeEntityCountersSupplier18, pageCacheTracer19);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, transactionLogCounters21);
    try {
      metricRegistryManager10.reoForSt("db.operation.count.drop");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1553() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1553");
    }
    io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl transactionSizeMonitorImpl0 = new io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl();
    transactionSizeMonitorImpl0.addNativeTransactionSize((long) ' ');
    transactionSizeMonitorImpl0.addHeapTransactionSize(100L);
    transactionSizeMonitorImpl0.addHeapTransactionSize((long) (byte) 0);
    transactionSizeMonitorImpl0.addHeapTransactionSize((long) (byte) 10);
  }

  @Test
  public void test1554() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1554");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.memory.MemoryPools memoryPools9 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl11 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager8, memoryPools9,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager8, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager8, databaseOperationCounts15);
    org.neo4j.memory.MemoryPools memoryPools17 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl19 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.stop", metricRegistryManager8, memoryPools17,
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message");
    try {
      java.util.SortedSet<java.lang.String> strSet20 = metricRegistryManager8.geneSortedSet();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1555() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1555");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager7, monitors11);
    boolean boolean13 = metricsServiceExtensionFactory0.equals(
        (java.lang.Object) metricRegistryManager7);
    org.neo4j.monitoring.Monitors monitors18 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray21 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList22 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean23 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList22,
        globbingPatternArray21);
    com.codahale.metrics.MetricRegistry metricRegistry24 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager25 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList22,
        metricRegistry24);
    org.neo4j.memory.MemoryPools memoryPools26 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl28 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager25, memoryPools26,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl29 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager25);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter30 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitors18, metricRegistryManager25);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts31 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter32 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager25,
        databaseOperationCounts31);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier33 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter34 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager25, webContainerThreadInfoSupplier33);
    org.neo4j.memory.MemoryPools memoryPools35 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl36 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager25, memoryPools35);
    boolean boolean37 = metricsServiceExtensionFactory0.equals(
        (java.lang.Object) metricRegistryManager25);
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat38 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat38.marc();
    syncStat38.norlad();
    syncStat38.marc();
    syncStat38.suslrle();
    syncStat38.clerut();
    syncStat38.clerut();
    boolean boolean45 = metricsServiceExtensionFactory0.equals((java.lang.Object) syncStat38);
    syncStat38.recnam();
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertNotNull(globbingPatternArray21);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
  }

  @Test
  public void test1556() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1556");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType1 = null;
    com.codahale.metrics.Timer timer2 = consensusMessageStats0.getTimer(raftConsensusMessageType1);
    long long3 = consensusMessageStats0.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType4 = null;
    com.codahale.metrics.Timer timer5 = consensusMessageStats0.getTimer(raftConsensusMessageType4);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType6 = null;
    com.codahale.metrics.Timer timer7 = consensusMessageStats0.getTimer(raftConsensusMessageType6);
    long long8 = consensusMessageStats0.dea();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats9 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType10 = null;
    com.codahale.metrics.Timer timer11 = consensusMessageStats9.getTimer(
        raftConsensusMessageType10);
    long long12 = consensusMessageStats9.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType13 = null;
    com.codahale.metrics.Timer timer14 = consensusMessageStats9.getTimer(
        raftConsensusMessageType13);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType15 = null;
    com.codahale.metrics.Timer timer16 = consensusMessageStats9.getTimer(
        raftConsensusMessageType15);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType17 = null;
    com.codahale.metrics.Timer timer18 = consensusMessageStats9.getTimer(
        raftConsensusMessageType17);
    java.time.Duration duration19 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats9.sedaForDu(duration19);
    consensusMessageStats0.sedaForDu(duration19);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType22 = null;
    com.codahale.metrics.Timer timer23 = consensusMessageStats0.getTimer(
        raftConsensusMessageType22);
    long long24 = consensusMessageStats0.dea();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats25 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType26 = null;
    com.codahale.metrics.Timer timer27 = consensusMessageStats25.getTimer(
        raftConsensusMessageType26);
    long long28 = consensusMessageStats25.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType29 = null;
    com.codahale.metrics.Timer timer30 = consensusMessageStats25.getTimer(
        raftConsensusMessageType29);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType31 = null;
    com.codahale.metrics.Timer timer32 = consensusMessageStats25.getTimer(
        raftConsensusMessageType31);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType33 = null;
    com.codahale.metrics.Timer timer34 = consensusMessageStats25.getTimer(
        raftConsensusMessageType33);
    java.time.Duration duration35 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats25.sedaForDu(duration35);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats37 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long38 = consensusMessageStats37.dea();
    com.codahale.metrics.Timer timer39 = consensusMessageStats37.getTimer();
    com.codahale.metrics.Timer timer40 = consensusMessageStats37.getTimer();
    java.time.Duration duration41 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats37.sedaForDu(duration41);
    consensusMessageStats25.sedaForDu(duration41);
    consensusMessageStats0.sedaForDu(duration41);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats45 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType46 = null;
    com.codahale.metrics.Timer timer47 = consensusMessageStats45.getTimer(
        raftConsensusMessageType46);
    long long48 = consensusMessageStats45.dea();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats49 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType50 = null;
    com.codahale.metrics.Timer timer51 = consensusMessageStats49.getTimer(
        raftConsensusMessageType50);
    long long52 = consensusMessageStats49.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType53 = null;
    com.codahale.metrics.Timer timer54 = consensusMessageStats49.getTimer(
        raftConsensusMessageType53);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType55 = null;
    com.codahale.metrics.Timer timer56 = consensusMessageStats49.getTimer(
        raftConsensusMessageType55);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType57 = null;
    com.codahale.metrics.Timer timer58 = consensusMessageStats49.getTimer(
        raftConsensusMessageType57);
    java.time.Duration duration59 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats49.sedaForDu(duration59);
    consensusMessageStats45.sedaForDu(duration59);
    consensusMessageStats0.sedaForDu(duration59);
    com.codahale.metrics.Timer timer63 = consensusMessageStats0.getTimer();
    long long64 = consensusMessageStats0.dea();
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertNull(timer2);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertNull(timer5);
    org.junit.Assert.assertNull(timer7);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    org.junit.Assert.assertNotNull(consensusMessageStats9);
    org.junit.Assert.assertNull(timer11);
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    org.junit.Assert.assertNull(timer14);
    org.junit.Assert.assertNull(timer16);
    org.junit.Assert.assertNull(timer18);
    org.junit.Assert.assertNotNull(duration19);
    org.junit.Assert.assertNull(timer23);
    org.junit.Assert.assertTrue("'" + long24 + "' != '" + 600000L + "'", long24 == 600000L);
    org.junit.Assert.assertNotNull(consensusMessageStats25);
    org.junit.Assert.assertNull(timer27);
    org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
    org.junit.Assert.assertNull(timer30);
    org.junit.Assert.assertNull(timer32);
    org.junit.Assert.assertNull(timer34);
    org.junit.Assert.assertNotNull(duration35);
    org.junit.Assert.assertNotNull(consensusMessageStats37);
    org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
    org.junit.Assert.assertNotNull(timer39);
    org.junit.Assert.assertNotNull(timer40);
    org.junit.Assert.assertNotNull(duration41);
    org.junit.Assert.assertNotNull(consensusMessageStats45);
    org.junit.Assert.assertNull(timer47);
    org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
    org.junit.Assert.assertNotNull(consensusMessageStats49);
    org.junit.Assert.assertNull(timer51);
    org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
    org.junit.Assert.assertNull(timer54);
    org.junit.Assert.assertNull(timer56);
    org.junit.Assert.assertNull(timer58);
    org.junit.Assert.assertNotNull(duration59);
    org.junit.Assert.assertNotNull(timer63);
    org.junit.Assert.assertTrue("'" + long64 + "' != '" + 600000L + "'", long64 == 600000L);
  }

  @Test
  public void test1557() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1557");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.memory.MemoryPools memoryPools9 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl11 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager8, memoryPools9,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager8, monitors12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl14 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager8);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager8);
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1558() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1558");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusElectionTerm consensusElectionTerm0 = new io.github.onograph.metrics.incoming.cluster.ConsensusElectionTerm();
    consensusElectionTerm0.termLength((long) (byte) 100);
    long long3 = consensusElectionTerm0.getTermLength();
    long long4 = consensusElectionTerm0.getTermLength();
    consensusElectionTerm0.termLength((long) (short) -1);
    long long7 = consensusElectionTerm0.getTermLength();
    java.lang.Class<?> wildcardClass8 = consensusElectionTerm0.getClass();
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 100L + "'", long3 == 100L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 100L + "'", long4 == 100L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
    org.junit.Assert.assertNotNull(wildcardClass8);
  }

  @Test
  public void test1559() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1559");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager8, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.scheduler.JobScheduler jobScheduler14 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction15 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager8,
        jobScheduler14, fileSystemAbstraction15, databaseLayout16);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager8,
        transactionLogCounters18);
    gdbTransactionLogAdapter19.start();
    gdbTransactionLogAdapter19.start();
    gdbTransactionLogAdapter19.start();
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1560() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1560");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark(100L);
    metricsMeter1.mark();
    metricsMeter1.mark((long) 10);
    metricsMeter1.mark();
    long long8 = metricsMeter1.getCount();
    double double9 = metricsMeter1.getFiveMinuteRate();
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
  }

  @Test
  public void test1561() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1561");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl18 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager10,
        monitors17);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier19 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter20 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitorsClusterConsensusImpl2,
        metricRegistryManager10, coreNodeLeaderCheckSupplier19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager10);
    jVMAdapterFileStatImpl21.start();
    try {
      jVMAdapterFileStatImpl21.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1562() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1562");
    }
    org.neo4j.monitoring.Monitors monitors3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier18 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter19 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager12, webContainerThreadInfoSupplier18);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier20 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "hi!", metricRegistryManager12, storeEntityCountersSupplier20, pageCacheTracer21);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter23 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "db.operation.count.recovered", monitors3, metricRegistryManager12);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters24 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter25 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "vm.heap.max", metricRegistryManager12, pageCacheCounters24);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl26 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "dbms.pool.<pool>.db.operation.count.create", metricRegistryManager12);
    jVMAdapterMemoryHeapImpl26.start();
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1563() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1563");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.memory.MemoryPools memoryPools14 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl16 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager13, memoryPools14,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter18 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager13, monitors17);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl19 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager13);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier20 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters21 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, transactionIdStoreSupplier20, transactionCounters21);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter24 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "db.operation.count.stop", metricRegistryManager13, monitors23);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "vm.heap.used", metricRegistryManager13);
    org.neo4j.scheduler.JobScheduler jobScheduler26 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction27 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout28 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter29 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager13, jobScheduler26,
        fileSystemAbstraction27, databaseLayout28);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl30 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "db.operation.count.stop", metricRegistryManager13);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl31 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "dbms.pool.<pool>.db.operation.count.create", metricRegistryManager13);
    jVMAdapterFileStatImpl31.start();
    jVMAdapterFileStatImpl31.start();
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test1564() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1564");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    org.neo4j.memory.MemoryPools memoryPools2 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl3 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "db.operation.count.drop", metricRegistryManager1, memoryPools2);
    java.lang.String str5 = memoryPoolsAdapterNeoStackImpl3.moydmdmineString("db.query.execution");
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "dbms.pool.<pool>.db.query.execution" + "'", str5,
        "dbms.pool.<pool>.db.query.execution");
  }

  @Test
  public void test1565() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1565");
    }
    io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl transactionSizeMonitorImpl0 = new io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl();
    transactionSizeMonitorImpl0.addNativeTransactionSize((long) ' ');
    transactionSizeMonitorImpl0.addHeapTransactionSize(100L);
    transactionSizeMonitorImpl0.addNativeTransactionSize(0L);
    transactionSizeMonitorImpl0.addNativeTransactionSize((-1L));
    transactionSizeMonitorImpl0.addHeapTransactionSize((long) (byte) 100);
    transactionSizeMonitorImpl0.addHeapTransactionSize(0L);
    transactionSizeMonitorImpl0.addHeapTransactionSize(0L);
  }

  @Test
  public void test1566() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1566");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager9);
    org.neo4j.memory.MemoryPools memoryPools16 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl17 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "db.operation.count.start", metricRegistryManager9, memoryPools16);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl18 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "dbms.pool.<pool>.db.operation.count.failed", metricRegistryManager9);
    jVMAdapterThreadMXImpl18.start();
    jVMAdapterThreadMXImpl18.start();
    jVMAdapterThreadMXImpl18.start();
    try {
      jVMAdapterThreadMXImpl18.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1567() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1567");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl1 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager2 = null;
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier3 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter4 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed",
        monitorsClusterConsensusImpl1, metricRegistryManager2, coreNodeLeaderCheckSupplier3);
    try {
      consensusCoreNodeAdapter4.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1568() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1568");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier10 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters11 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter12 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager9,
        transactionIdStoreSupplier10, transactionCounters11);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl13 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager9);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier14 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters15 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "vm.heap.used", metricRegistryManager9, transactionIdStoreSupplier14,
        transactionCounters15);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters17 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter18 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "db.operation.count.drop", metricRegistryManager9, checkpointCounters17);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier19 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager9,
        storeEntityCountersSupplier19, pageCacheTracer20);
    try {
      gdbStatsAdapter21.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1569() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1569");
    }
    io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl transactionSizeMonitorImpl0 = new io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl();
    transactionSizeMonitorImpl0.addNativeTransactionSize((long) ' ');
    transactionSizeMonitorImpl0.addHeapTransactionSize((long) (short) 10);
  }

  @Test
  public void test1570() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1570");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusElectionTerm consensusElectionTerm0 = new io.github.onograph.metrics.incoming.cluster.ConsensusElectionTerm();
    consensusElectionTerm0.termLength((long) (byte) 100);
    long long3 = consensusElectionTerm0.getTermLength();
    long long4 = consensusElectionTerm0.getTermLength();
    consensusElectionTerm0.termLength((long) (short) -1);
    long long7 = consensusElectionTerm0.getTermLength();
    consensusElectionTerm0.termLength((long) (short) 1);
    long long10 = consensusElectionTerm0.getTermLength();
    consensusElectionTerm0.termLength((long) (byte) 100);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 100L + "'", long3 == 100L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 100L + "'", long4 == 100L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
  }

  @Test
  public void test1571() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1571");
    }
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat0 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat0.marc();
    syncStat0.norlad();
    syncStat0.marc();
    syncStat0.clerut();
    syncStat0.clerut();
    syncStat0.norlad();
    syncStat0.clerut();
    syncStat0.marc();
    syncStat0.marc();
  }

  @Test
  public void test1572() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1572");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl6 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier19 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter20 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl6, metricRegistryManager13,
        coreNodeLeaderCheckSupplier19);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier21 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager13,
        storeEntityCountersSupplier21, pageCacheTracer22);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters24 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter25 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, transactionLogCounters24);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts26 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter27 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "neo4j.count.node", metricRegistryManager13, databaseOperationCounts26);
    org.neo4j.monitoring.Monitors monitors28 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl29 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "db.operation.count.start", metricRegistryManager13, monitors28);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters30 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter31 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "db.operation.count.failed", metricRegistryManager13, pageCacheCounters30);
    com.codahale.metrics.MetricFilter metricFilter32 = null;
    try {
      metricRegistryManager13.reomcnForMe(metricFilter32);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test1573() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1573");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10,
        jobScheduler16, fileSystemAbstraction17, databaseLayout18);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter20 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "", monitors2, metricRegistryManager10);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier21 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter22 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager10, webContainerThreadInfoSupplier21);
    jettyAdapter22.start();
    jettyAdapter22.shutdown();
    jettyAdapter22.start();
    try {
      jettyAdapter22.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1574() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1574");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl clusterDataWatcherMetricsImpl0 = new io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl();
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType1 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType1);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType3 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge4 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType3);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType5 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge6 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType5);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType7 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge8 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType7);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType9 = null;
    try {
      clusterDataWatcherMetricsImpl0.seivldasForCl(clusterDataType9, 0);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge4);
    org.junit.Assert.assertNotNull(intGauge6);
    org.junit.Assert.assertNotNull(intGauge8);
  }

  @Test
  public void test1575() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1575");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager10, jobScheduler17,
        fileSystemAbstraction18, databaseLayout19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager10);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.failed", metricRegistryManager10);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl24 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager10, monitors23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryExecutionMonitorMetricsImpl24.startProcessing(executingQuery25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryExecutionMonitorMetricsImpl24.beforeEnd(executingQuery27, false);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryExecutionMonitorMetricsImpl24.endFailure(executingQuery30, "pool.<pool>.<database>.");
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1576() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1576");
    }
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl0 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl();
    io.github.onograph.metrics.incoming.EnterpriseMetricsType enterpriseMetricsType1 = memoryPoolsAdapterGdbImpl0.getGrp();
    java.lang.String str3 = memoryPoolsAdapterGdbImpl0.moydmdmineString(
        "causal_clustering.core.discovery.cluster.converged");
    java.lang.String str5 = memoryPoolsAdapterGdbImpl0.moydmdmineString("");
    java.lang.String str7 = memoryPoolsAdapterGdbImpl0.moydmdmineString(
        "pool.<pool>.<database>.db.operation.count.drop");
    org.junit.Assert.assertTrue("'" + enterpriseMetricsType1 + "' != '"
            + io.github.onograph.metrics.incoming.EnterpriseMetricsType.EMT_GENERIC + "'",
        enterpriseMetricsType1.equals(
            io.github.onograph.metrics.incoming.EnterpriseMetricsType.EMT_GENERIC));
    org.junit.Assert.assertEquals("'" + str3 + "' != '"
            + "pool.<pool>.<database>.causal_clustering.core.discovery.cluster.converged" + "'", str3,
        "pool.<pool>.<database>.causal_clustering.core.discovery.cluster.converged");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pool.<pool>.<database>." + "'", str5,
        "pool.<pool>.<database>.");
    org.junit.Assert.assertEquals("'" + str7 + "' != '"
            + "pool.<pool>.<database>.pool.<pool>.<database>.db.operation.count.drop" + "'", str7,
        "pool.<pool>.<database>.pool.<pool>.<database>.db.operation.count.drop");
  }

  @Test
  public void test1577() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1577");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.getLgBm();
    livingCacheMeta0.sememt(10);
    long long6 = livingCacheMeta0.gems();
    long long7 = livingCacheMeta0.getLgBm();
    livingCacheMeta0.sembe((long) 10);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
  }

  @Test
  public void test1578() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1578");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    java.lang.String str1 = metricsServiceExtensionFactory0.toString();
    java.lang.String str2 = metricsServiceExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext3 = null;
    io.github.onograph.metrics.MetricsServiceExtensionFactory.RequiredComponents requiredComponents4 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle5 = metricsServiceExtensionFactory0.newInstance(
          extensionContext3, requiredComponents4);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str1, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "globalMetrics" + "'", str2,
        "globalMetrics");
  }

  @Test
  public void test1579() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1579");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager10,
        storeEntityCountersSupplier17, pageCacheTracer18);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter20 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "dbms.pool.<pool>.db.operation.count.failed", monitors1, metricRegistryManager10);
    try {
      discoveryCoreNodeAdapter20.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1580() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1580");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier16 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter17 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager10, webContainerThreadInfoSupplier16);
    org.neo4j.monitoring.Monitors monitors18 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl19 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager10, monitors18);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager10, storeEntityCountersSupplier20);
    org.neo4j.memory.MemoryPools memoryPools22 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl24 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager10,
        memoryPools22, "db.operation.count.stop");
    try {
      memoryPoolsAdapterGdbImpl24.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1581() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1581");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier16 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter17 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager10, webContainerThreadInfoSupplier16);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "hi!", metricRegistryManager10, storeEntityCountersSupplier18, pageCacheTracer19);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier21 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter22 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "db.operation.count.failed", metricRegistryManager10, webContainerThreadInfoSupplier21);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager10,
        storeEntityCountersSupplier23);
    try {
      metricRegistryManager10.reoForSt("neo4j.count.relationship");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1582() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1582");
    }
    org.neo4j.monitoring.Monitors monitors4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.scheduler.JobScheduler jobScheduler18 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction19 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager12,
        jobScheduler18, fileSystemAbstraction19, databaseLayout20);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter22 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "", monitors4, metricRegistryManager12);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier23 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter24 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager12, webContainerThreadInfoSupplier23);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier25 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter26 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "db.operation.count.start", metricRegistryManager12, webContainerThreadInfoSupplier25);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters27 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter28 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager12,
        transactionLogCounters27);
    try {
      gdbTransactionLogAdapter28.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1583() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1583");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager10, jobScheduler17,
        fileSystemAbstraction18, databaseLayout19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager10);
    org.neo4j.memory.MemoryPools memoryPools22 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl24 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager10, memoryPools22,
        "pool.<pool>.<database>.db.operation.count.start");
    org.neo4j.monitoring.Monitors monitors25 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter26 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "dbms.pool.<pool>.globalMetrics", metricRegistryManager10, monitors25);
    try {
      boltAdapter26.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1584() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1584");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents0 = null;
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext1 = null;
    io.github.onograph.metrics.gdb.GdbMetricsLifecycle gdbMetricsLifecycle2 = new io.github.onograph.metrics.gdb.GdbMetricsLifecycle(
        dependentComponents0, extensionContext1);
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.stop();
    gdbMetricsLifecycle2.start();
    try {
      gdbMetricsLifecycle2.init();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1585() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1585");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter15 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.members", monitors2, metricRegistryManager9);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed",
        metricRegistryManager9);
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1586() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1586");
    }
    org.neo4j.monitoring.Monitors monitors5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager12, memoryPools13,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter17 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager12, monitors16);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter18 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "db.query.execution", monitors5, metricRegistryManager12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl19 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "dbms.pool.<pool>.db.operation.count.failed", metricRegistryManager12);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager12, transactionLogCounters20);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager12, storeEntityCountersSupplier23);
    boolean boolean26 = metricRegistryManager12.isEnlForSt("dbms.pool.<pool>.vm.heap.max");
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
  }

  @Test
  public void test1587() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1587");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusLogAdditions consensusLogAdditions0 = new io.github.onograph.metrics.incoming.cluster.ConsensusLogAdditions();
    consensusLogAdditions0.apeie((long) 10);
    long long3 = consensusLogAdditions0.apeie();
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
  }

  @Test
  public void test1588() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1588");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    livingCacheMeta0.seeec(100);
    long long4 = livingCacheMeta0.getLgBm();
    livingCacheMeta0.sememt((int) (short) -1);
    livingCacheMeta0.cacheMiss();
    long long8 = livingCacheMeta0.gems();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1L + "'", long8 == 1L);
  }

  @Test
  public void test1589() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1589");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark(100L);
    metricsMeter1.mark();
    metricsMeter1.mark((long) 10);
    double double7 = metricsMeter1.getMeanRate();
    double double8 = metricsMeter1.getMeanRate();
    double double9 = metricsMeter1.getOneMinuteRate();
    double double10 = metricsMeter1.getOneMinuteRate();
    double double11 = metricsMeter1.getOneMinuteRate();
    double double12 = metricsMeter1.getOneMinuteRate();
    org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
  }

  @Test
  public void test1590() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1590");
    }
    org.neo4j.monitoring.Monitors monitors5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager12, memoryPools13,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager12);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter17 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitors5, metricRegistryManager12);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager12,
        databaseOperationCounts18);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters20 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter21 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager12, checkpointCounters20);
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter23 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager12,
        monitors22);
    org.neo4j.monitoring.Monitors monitors24 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter25 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "globalMetrics", metricRegistryManager12, monitors24);
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1591() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1591");
    }
    io.github.onograph.metrics.MetricsReportProvider metricsReportProvider0 = new io.github.onograph.metrics.MetricsReportProvider();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    metricsReportProvider0.init(fileSystemAbstraction1, "db.operation.count.drop", config3, path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    metricsReportProvider0.init(fileSystemAbstraction6, "", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    metricsReportProvider0.init(fileSystemAbstraction11,
        "dbms.pool.<pool>.neo4j.count.relationship", config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    metricsReportProvider0.init(fileSystemAbstraction16,
        "causal_clustering.core.discovery.replicated_data", config18, path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    metricsReportProvider0.init(fileSystemAbstraction21, "", config23, path24);
  }

  @Test
  public void test1592() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1592");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusLogAdditions consensusLogAdditions0 = new io.github.onograph.metrics.incoming.cluster.ConsensusLogAdditions();
    long long1 = consensusLogAdditions0.apeie();
    long long2 = consensusLogAdditions0.apeie();
    long long3 = consensusLogAdditions0.apeie();
    long long4 = consensusLogAdditions0.apeie();
    consensusLogAdditions0.apeie(0L);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
  }

  @Test
  public void test1593() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1593");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier9 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters10 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter11 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager8,
        transactionIdStoreSupplier9, transactionCounters10);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl12 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager8);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier13 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters14 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "vm.heap.used", metricRegistryManager8, transactionIdStoreSupplier13,
        transactionCounters14);
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "pool.<pool>.<database>.pool.<pool>.<database>.db.operation.count.failed",
        metricRegistryManager8, jobScheduler16, fileSystemAbstraction17, databaseLayout18);
    try {
      gdbStoreStatsAdapter19.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1594() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1594");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    double double2 = metricsMeter1.getFiveMinuteRate();
    metricsMeter1.mark((long) 10);
    metricsMeter1.mark();
    org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
  }

  @Test
  public void test1595() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1595");
    }
    org.neo4j.monitoring.Monitors monitors3 = null;
    org.neo4j.monitoring.Monitors monitors5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter14 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors5, metricRegistryManager11);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter15 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "neo4j.count.node", monitors3, metricRegistryManager11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "databaseMetrics", metricRegistryManager11, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager11, databaseOperationCounts19);
    try {
      gdbActionsAdapter20.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1596() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1596");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats1 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long2 = consensusMessageStats1.dea();
    com.codahale.metrics.Timer timer3 = consensusMessageStats1.getTimer();
    com.codahale.metrics.Timer timer4 = consensusMessageStats1.getTimer();
    boolean boolean5 = metricsServiceExtensionFactory0.equals((java.lang.Object) timer4);
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray10 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList11 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        globbingPatternArray10);
    com.codahale.metrics.MetricRegistry metricRegistry13 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager14 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        metricRegistry13);
    org.neo4j.memory.MemoryPools memoryPools15 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl17 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager14, memoryPools15,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager14, storeEntityCountersSupplier18,
        pageCacheTracer19);
    org.neo4j.scheduler.JobScheduler jobScheduler21 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction22 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager14, jobScheduler21,
        fileSystemAbstraction22, databaseLayout23);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "", metricRegistryManager14, transactionLogCounters25);
    gdbTransactionLogAdapter26.start();
    boolean boolean28 = metricsServiceExtensionFactory0.equals(
        (java.lang.Object) gdbTransactionLogAdapter26);
    java.lang.String str29 = metricsServiceExtensionFactory0.toString();
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray34 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList35 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean36 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList35,
        globbingPatternArray34);
    com.codahale.metrics.MetricRegistry metricRegistry37 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager38 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList35,
        metricRegistry37);
    org.neo4j.memory.MemoryPools memoryPools39 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl41 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager38, memoryPools39,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier42 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer43 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter44 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager38, storeEntityCountersSupplier42,
        pageCacheTracer43);
    org.neo4j.monitoring.Monitors monitors45 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl46 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager38,
        monitors45);
    org.neo4j.monitoring.Monitors monitors47 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter48 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager38, monitors47);
    boolean boolean49 = metricsServiceExtensionFactory0.equals((java.lang.Object) monitors47);
    org.junit.Assert.assertNotNull(consensusMessageStats1);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertNotNull(timer3);
    org.junit.Assert.assertNotNull(timer4);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertNotNull(globbingPatternArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertEquals(
        "'" + str29 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str29, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertNotNull(globbingPatternArray34);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
  }

  @Test
  public void test1597() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1597");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl((int) (short) -1);
    clusterMembersCount0.sembs((int) (byte) 1);
    clusterMembersCount0.secvg(false);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge9 = clusterMembersCount0.mebsGauge();
    clusterMembersCount0.seuehl((int) (short) 1);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge12 = clusterMembersCount0.covgGauge();
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge9);
    org.junit.Assert.assertNotNull(intGauge12);
  }

  @Test
  public void test1598() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1598");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.scheduler.JobScheduler jobScheduler18 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction19 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager12,
        jobScheduler18, fileSystemAbstraction19, databaseLayout20);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager12,
        storeEntityCountersSupplier22);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "dbms.pool.<pool>.vm.heap.used", metricRegistryManager12);
    boolean boolean26 = metricRegistryManager12.isEnlForSt("db.operation.count.drop");
    org.neo4j.monitoring.Monitors monitors27 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl28 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "", metricRegistryManager12, monitors27);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters29 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter30 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager12,
        transactionLogCounters29);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl31 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "", metricRegistryManager12);
    jVMAdapterThreadMXImpl31.start();
    try {
      jVMAdapterThreadMXImpl31.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
  }

  @Test
  public void test1599() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1599");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager11, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.scheduler.JobScheduler jobScheduler18 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction19 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager11, jobScheduler18,
        fileSystemAbstraction19, databaseLayout20);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager11);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl24 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "db.operation.count.create", metricRegistryManager11, monitors23);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "databaseMetrics", metricRegistryManager11);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters26 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter27 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "vm.heap.max", metricRegistryManager11, pageCacheCounters26);
    try {
      neoPageCacheAdapter27.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1600() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1600");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.getLgBm();
    livingCacheMeta0.sememt(10);
    livingCacheMeta0.setabys((long) 100);
    livingCacheMeta0.sememt((int) (byte) 100);
    livingCacheMeta0.setabys((long) (-1));
    livingCacheMeta0.seeec((int) (byte) -1);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
  }

  @Test
  public void test1601() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1601");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    org.neo4j.memory.MemoryPools memoryPools7 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl9 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager6, memoryPools7,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl10 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "db.operation.count.drop", metricRegistryManager6);
    try {
      metricRegistryManager6.reoForSt(
          "pool.<pool>.<database>.dbms.pool.<pool>.pool.<pool>.<database>.db.query.execution");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test1602() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1602");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray1 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList2 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean3 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList2,
        globbingPatternArray1);
    com.codahale.metrics.MetricRegistry metricRegistry4 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager5 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList2,
        metricRegistry4);
    org.neo4j.memory.MemoryPools memoryPools6 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl8 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager5, memoryPools6,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.lang.String str10 = memoryPoolsAdapterGdbImpl8.moydmdmineString(
        "causal_clustering.core.last_leader_message");
    java.lang.String str12 = memoryPoolsAdapterGdbImpl8.moydmdmineString("db.query.execution");
    try {
      memoryPoolsAdapterGdbImpl8.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray1);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "pool.<pool>.<database>.causal_clustering.core.last_leader_message"
            + "'", str10, "pool.<pool>.<database>.causal_clustering.core.last_leader_message");
    org.junit.Assert.assertEquals(
        "'" + str12 + "' != '" + "pool.<pool>.<database>.db.query.execution" + "'", str12,
        "pool.<pool>.<database>.db.query.execution");
  }

  @Test
  public void test1603() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1603");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager10);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier17 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter18 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "db.operation.count.failed", monitorsClusterConsensusImpl2, metricRegistryManager10,
        coreNodeLeaderCheckSupplier17);
    org.neo4j.memory.MemoryPools memoryPools19 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl21 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "dbms.pool.<pool>.dbms.pool.<pool>.vm.heap.max", metricRegistryManager10, memoryPools19,
        "");
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1604() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1604");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    double double2 = metricsMeter1.getOneMinuteRate();
    long long3 = metricsMeter1.getCount();
    metricsMeter1.mark();
    metricsMeter1.mark(0L);
    org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
  }

  @Test
  public void test1605() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1605");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager12, memoryPools13,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager12, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager12, databaseOperationCounts19);
    org.neo4j.memory.MemoryPools memoryPools21 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl23 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager12, memoryPools21,
        "db.operation.count.create");
    org.neo4j.monitoring.Monitors monitors24 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager12, monitors24);
    org.neo4j.monitoring.Monitors monitors26 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl27 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager12, monitors26);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl28 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters29 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter30 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "vm.heap.max", metricRegistryManager12, transactionLogCounters29);
    gdbTransactionLogAdapter30.start();
    gdbTransactionLogAdapter30.start();
    gdbTransactionLogAdapter30.start();
    gdbTransactionLogAdapter30.start();
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1606() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1606");
    }
    io.github.onograph.metrics.incoming.cluster.PetConsensusLogApplied petConsensusLogApplied0 = new io.github.onograph.metrics.incoming.cluster.PetConsensusLogApplied();
    long long1 = petConsensusLogApplied0.apldid();
    petConsensusLogApplied0.apldid(0L);
    long long4 = petConsensusLogApplied0.apldid();
    petConsensusLogApplied0.apldid((long) '#');
    petConsensusLogApplied0.apldid((long) (byte) -1);
    long long9 = petConsensusLogApplied0.apldid();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
  }

  @Test
  public void test1607() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1607");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    livingCacheMeta0.seeec(100);
    livingCacheMeta0.sememt((int) (short) 1);
    livingCacheMeta0.sembe((long) 0);
    long long8 = livingCacheMeta0.getSizeCnt();
    livingCacheMeta0.sememt((int) (short) 1);
    long long11 = livingCacheMeta0.getLgBm();
    long long12 = livingCacheMeta0.gems();
    long long13 = livingCacheMeta0.getICe();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    org.junit.Assert.assertTrue("'" + long13 + "' != '" + 100L + "'", long13 == 100L);
  }

  @Test
  public void test1608() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1608");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl((int) (byte) 0);
    clusterMembersCount0.secvg(true);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge7 = clusterMembersCount0.mebsGauge();
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge7);
  }

  @Test
  public void test1609() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1609");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl5 = null;
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl7 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray10 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList11 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        globbingPatternArray10);
    com.codahale.metrics.MetricRegistry metricRegistry13 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager14 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        metricRegistry13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter16 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager14, monitors15);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager14, storeEntityCountersSupplier17,
        pageCacheTracer18);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier20 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter21 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl7, metricRegistryManager14,
        coreNodeLeaderCheckSupplier20);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier22 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter23 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "db.operation.count.recovered", monitorsClusterConsensusImpl5, metricRegistryManager14,
        coreNodeLeaderCheckSupplier22);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "db.operation.count.start", metricRegistryManager14);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters25 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter26 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "vm.heap.max", metricRegistryManager14, pageCacheCounters25);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter27 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "dbms.pool.<pool>.globalMetrics", monitors1, metricRegistryManager14);
    org.junit.Assert.assertNotNull(globbingPatternArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
  }

  @Test
  public void test1610() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1610");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter1 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter();
    boolean boolean2 = metricsServiceExtensionFactory0.equals(
        (java.lang.Object) gdbTransactionLogAdapter1);
    java.lang.String str3 = metricsServiceExtensionFactory0.getName();
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray10 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList11 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        globbingPatternArray10);
    com.codahale.metrics.MetricRegistry metricRegistry13 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager14 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        metricRegistry13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter16 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager14, monitors15);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager14, storeEntityCountersSupplier17,
        pageCacheTracer18);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl20 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager14);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "db.operation.count.start", metricRegistryManager14);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager14);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier23 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters24 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter25 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "dbms.pool.<pool>.db.operation.count.failed", metricRegistryManager14,
        transactionIdStoreSupplier23, transactionCounters24);
    boolean boolean26 = metricsServiceExtensionFactory0.equals(
        (java.lang.Object) transactionCounters24);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext27 = null;
    io.github.onograph.metrics.MetricsServiceExtensionFactory.RequiredComponents requiredComponents28 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle29 = metricsServiceExtensionFactory0.newInstance(
          extensionContext27, requiredComponents28);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "globalMetrics" + "'", str3,
        "globalMetrics");
    org.junit.Assert.assertNotNull(globbingPatternArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
  }

  @Test
  public void test1611() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1611");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory1 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.memory.MemoryPools memoryPools9 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl11 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager8, memoryPools9,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager8, monitors12);
    boolean boolean14 = metricsServiceExtensionFactory1.equals(
        (java.lang.Object) metricRegistryManager8);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager8);
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
  }

  @Test
  public void test1612() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1612");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl extensionFactoryGdbMetricsImpl0 = new io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl();
    java.lang.String str1 = extensionFactoryGdbMetricsImpl0.toString();
    java.lang.String str2 = extensionFactoryGdbMetricsImpl0.toString();
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager9, monitors13);
    boolean boolean15 = extensionFactoryGdbMetricsImpl0.equals(
        (java.lang.Object) "db.operation.count.start");
    io.github.onograph.metrics.incoming.cluster.SubmittedConsensusLogCommitIndexMetric submittedConsensusLogCommitIndexMetric16 = new io.github.onograph.metrics.incoming.cluster.SubmittedConsensusLogCommitIndexMetric();
    submittedConsensusLogCommitIndexMetric16.comie(0L);
    long long19 = submittedConsensusLogCommitIndexMetric16.comie();
    submittedConsensusLogCommitIndexMetric16.comie((long) (byte) 0);
    long long22 = submittedConsensusLogCommitIndexMetric16.comie();
    boolean boolean23 = extensionFactoryGdbMetricsImpl0.equals((java.lang.Object) long22);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext24 = null;
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents25 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle26 = extensionFactoryGdbMetricsImpl0.newInstance(
        extensionContext24, dependentComponents25);
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray31 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList32 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean33 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList32,
        globbingPatternArray31);
    com.codahale.metrics.MetricRegistry metricRegistry34 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager35 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList32,
        metricRegistry34);
    org.neo4j.monitoring.Monitors monitors36 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter37 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager35, monitors36);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier38 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer39 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter40 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager35, storeEntityCountersSupplier38,
        pageCacheTracer39);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl41 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager35);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl42 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.query.execution", metricRegistryManager35);
    jVMAdapterMBImpl42.shutdown();
    boolean boolean44 = extensionFactoryGdbMetricsImpl0.equals(
        (java.lang.Object) jVMAdapterMBImpl42);
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount45 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge46 = clusterMembersCount45.covgGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge47 = clusterMembersCount45.unehlGauge();
    clusterMembersCount45.seuehl((int) ' ');
    boolean boolean50 = extensionFactoryGdbMetricsImpl0.equals(
        (java.lang.Object) clusterMembersCount45);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext51 = null;
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents52 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle53 = extensionFactoryGdbMetricsImpl0.newInstance(
        extensionContext51, dependentComponents52);
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str1, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str2, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
    org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertNotNull(lifecycle26);
    org.junit.Assert.assertNotNull(globbingPatternArray31);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    org.junit.Assert.assertNotNull(intGauge46);
    org.junit.Assert.assertNotNull(intGauge47);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    org.junit.Assert.assertNotNull(lifecycle53);
  }

  @Test
  public void test1613() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1613");
    }
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat0 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat0.marc();
    syncStat0.norlad();
    syncStat0.marc();
    syncStat0.clerut();
    syncStat0.clerut();
    syncStat0.recnam();
    syncStat0.suslrle();
    syncStat0.recnam();
    syncStat0.recnam();
    syncStat0.recnam();
    syncStat0.recnam();
    syncStat0.norlad();
  }

  @Test
  public void test1614() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1614");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray12 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList13 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean14 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList13,
        globbingPatternArray12);
    com.codahale.metrics.MetricRegistry metricRegistry15 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager16 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList13,
        metricRegistry15);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter18 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager16, monitors17);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier19 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager16, storeEntityCountersSupplier19,
        pageCacheTracer20);
    org.neo4j.scheduler.JobScheduler jobScheduler22 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction23 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout24 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter25 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager16,
        jobScheduler22, fileSystemAbstraction23, databaseLayout24);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter26 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "", monitors8, metricRegistryManager16);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier27 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter28 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager16, webContainerThreadInfoSupplier27);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl29 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "db.operation.count.stop", metricRegistryManager16);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts30 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter31 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager16,
        databaseOperationCounts30);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters32 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter33 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager16,
        checkpointCounters32);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl34 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager16);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter35 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "dbms.pool.<pool>.db.query.execution", monitors1, metricRegistryManager16);
    try {
      readReplicaNodeAdapter35.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray12);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
  }

  @Test
  public void test1615() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1615");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray10 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList11 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        globbingPatternArray10);
    com.codahale.metrics.MetricRegistry metricRegistry13 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager14 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        metricRegistry13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter16 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager14, monitors15);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager14, storeEntityCountersSupplier17,
        pageCacheTracer18);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier20 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter21 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager14, webContainerThreadInfoSupplier20);
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager14, monitors22);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier24 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter25 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager14, storeEntityCountersSupplier24);
    org.neo4j.memory.MemoryPools memoryPools26 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl28 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager14,
        memoryPools26, "db.operation.count.stop");
    org.neo4j.memory.MemoryPools memoryPools29 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl30 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "db.operation.count.start", metricRegistryManager14, memoryPools29);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl31 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "vm.heap.max", metricRegistryManager14);
    boolean boolean33 = metricRegistryManager14.isEnlForSt(
        "dbms.pool.<pool>.db.operation.count.failed");
    org.neo4j.monitoring.Monitors monitors34 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl35 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "dbms.pool.<pool>.dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager14, monitors34);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl36 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager14);
    jVMAdapterMBImpl36.start();
    org.junit.Assert.assertNotNull(globbingPatternArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
  }

  @Test
  public void test1616() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1616");
    }
    io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl transactionSizeMonitorImpl0 = new io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl();
    transactionSizeMonitorImpl0.addNativeTransactionSize((long) ' ');
    transactionSizeMonitorImpl0.addHeapTransactionSize(100L);
    transactionSizeMonitorImpl0.addNativeTransactionSize((long) 10);
    transactionSizeMonitorImpl0.addHeapTransactionSize(600000L);
  }

  @Test
  public void test1617() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1617");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.memory.MemoryPools memoryPools9 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl11 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager8, memoryPools9,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager8, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl16 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager8,
        monitors15);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters17 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter18 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "db.operation.count.start", metricRegistryManager8, checkpointCounters17);
    try {
      checkpointCounterAdapter18.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1618() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1618");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager9, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager9, jobScheduler16,
        fileSystemAbstraction17, databaseLayout18);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl20 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager9);
    org.neo4j.monitoring.Monitors monitors21 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl22 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "db.operation.count.create", metricRegistryManager9, monitors21);
    try {
      queryExecutionMonitorMetricsImpl22.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1619() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1619");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10,
        jobScheduler16, fileSystemAbstraction17, databaseLayout18);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier20 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, storeEntityCountersSupplier20, pageCacheTracer21);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "db.operation.count.drop", metricRegistryManager10, transactionLogCounters23);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10);
    jVMAdapterThreadMXImpl25.start();
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1620() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1620");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    livingCacheMeta0.seeec(100);
    livingCacheMeta0.seeec((int) (byte) 0);
    livingCacheMeta0.setabys((-1L));
    livingCacheMeta0.seeec((int) (short) 10);
    livingCacheMeta0.setabys(100L);
    long long12 = livingCacheMeta0.getICe();
    livingCacheMeta0.seeec((int) (short) 1);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10L + "'", long12 == 10L);
  }

  @Test
  public void test1621() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1621");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl12 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager9);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl13 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "db.operation.count.recovered", metricRegistryManager9);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl14 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "", metricRegistryManager9);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.db.operation.count.failed", metricRegistryManager9,
        databaseOperationCounts15);
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1622() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1622");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl((int) (short) -1);
    clusterMembersCount0.sembs((int) (byte) 1);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge7 = clusterMembersCount0.mebsGauge();
    clusterMembersCount0.secvg(true);
    clusterMembersCount0.secvg(true);
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge7);
  }

  @Test
  public void test1623() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1623");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.scheduler.JobScheduler jobScheduler18 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction19 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager12,
        jobScheduler18, fileSystemAbstraction19, databaseLayout20);
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter23 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager12, monitors22);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters24 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter25 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "", metricRegistryManager12, pageCacheCounters24);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl26 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "db.query.execution", metricRegistryManager12);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter27 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "pool.<pool>.<database>.db.operation.count.start", monitors1, metricRegistryManager12);
    txCatchupAdapter27.shutdown();
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1624() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1624");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl clusterDataWatcherMetricsImpl0 = new io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl();
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType1 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType1);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType3 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge4 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType3);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType5 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge6 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType5);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType7 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge8 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType7);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType9 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge10 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType9);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType11 = null;
    try {
      clusterDataWatcherMetricsImpl0.sevsdsiForCl(clusterDataType11, (int) (short) 10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge4);
    org.junit.Assert.assertNotNull(intGauge6);
    org.junit.Assert.assertNotNull(intGauge8);
    org.junit.Assert.assertNotNull(intGauge10);
  }

  @Test
  public void test1625() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1625");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier18 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter19 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl5, metricRegistryManager12,
        coreNodeLeaderCheckSupplier18);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier20 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager12,
        storeEntityCountersSupplier20, pageCacheTracer21);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, transactionLogCounters23);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "neo4j.count.node", metricRegistryManager12, databaseOperationCounts25);
    org.neo4j.monitoring.Monitors monitors27 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl28 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "db.operation.count.start", metricRegistryManager12, monitors27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryExecutionMonitorMetricsImpl28.startExecution(executingQuery29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryExecutionMonitorMetricsImpl28.beforeEnd(executingQuery31, true);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    queryExecutionMonitorMetricsImpl28.beforeEnd(executingQuery34, false);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryExecutionMonitorMetricsImpl28.endFailure(executingQuery37,
        "causal_clustering.core.discovery.cluster.unreachable");
    try {
      queryExecutionMonitorMetricsImpl28.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1626() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1626");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl clusterDataWatcherMetricsImpl0 = new io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl();
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType1 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType1);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType3 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge4 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType3);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType5 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge6 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType5);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType7 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge8 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType7);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType9 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge10 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType9);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType11 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge12 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType11);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType13 = null;
    try {
      clusterDataWatcherMetricsImpl0.seivldasForCl(clusterDataType13, (int) (byte) 100);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge4);
    org.junit.Assert.assertNotNull(intGauge6);
    org.junit.Assert.assertNotNull(intGauge8);
    org.junit.Assert.assertNotNull(intGauge10);
    org.junit.Assert.assertNotNull(intGauge12);
  }

  @Test
  public void test1627() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1627");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    clusterMembersCount0.secvg(true);
    clusterMembersCount0.seuehl(0);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge5 = clusterMembersCount0.mebsGauge();
    org.junit.Assert.assertNotNull(intGauge5);
  }

  @Test
  public void test1628() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1628");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gems();
    long long4 = livingCacheMeta0.gems();
    livingCacheMeta0.setabys((long) 100);
    livingCacheMeta0.cacheHit();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
  }

  @Test
  public void test1629() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1629");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10,
        jobScheduler16, fileSystemAbstraction17, databaseLayout18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter21 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager10, monitors20);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters22 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter23 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "", metricRegistryManager10, pageCacheCounters22);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "db.operation.count.create", metricRegistryManager10);
    java.lang.String str26 = jVMAdapterMBImpl24.moydmdmineString(
        "pool.<pool>.<database>.causal_clustering.core.discovery.replicated_data");
    java.lang.String str28 = jVMAdapterMBImpl24.moydmdmineString(
        "pool.<pool>.<database>.db.operation.count.failed");
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertEquals("'" + str26 + "' != '"
            + "pool.<pool>.<database>.causal_clustering.core.discovery.replicated_data" + "'", str26,
        "pool.<pool>.<database>.causal_clustering.core.discovery.replicated_data");
    org.junit.Assert.assertEquals(
        "'" + str28 + "' != '" + "pool.<pool>.<database>.db.operation.count.failed" + "'", str28,
        "pool.<pool>.<database>.db.operation.count.failed");
  }

  @Test
  public void test1630() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1630");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl clusterDataWatcherMetricsImpl0 = new io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl();
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType1 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType1);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType3 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge4 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType3);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType5 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge6 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType5);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType7 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge8 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType7);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType9 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge10 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType9);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType11 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge12 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType11);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge4);
    org.junit.Assert.assertNotNull(intGauge6);
    org.junit.Assert.assertNotNull(intGauge8);
    org.junit.Assert.assertNotNull(intGauge10);
    org.junit.Assert.assertNotNull(intGauge12);
  }

  @Test
  public void test1631() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1631");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    double double2 = metricsMeter1.getOneMinuteRate();
    double double3 = metricsMeter1.getFiveMinuteRate();
    metricsMeter1.mark((long) 'a');
    double double6 = metricsMeter1.getFiveMinuteRate();
    org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
    org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
  }

  @Test
  public void test1632() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1632");
    }
    io.github.onograph.metrics.incoming.cluster.SubmittedConsensusLogCommitIndexMetric submittedConsensusLogCommitIndexMetric0 = new io.github.onograph.metrics.incoming.cluster.SubmittedConsensusLogCommitIndexMetric();
    submittedConsensusLogCommitIndexMetric0.comie(0L);
    long long3 = submittedConsensusLogCommitIndexMetric0.comie();
    long long4 = submittedConsensusLogCommitIndexMetric0.comie();
    long long5 = submittedConsensusLogCommitIndexMetric0.comie();
    submittedConsensusLogCommitIndexMetric0.comie(1L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
  }

  @Test
  public void test1633() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1633");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.scheduler.JobScheduler jobScheduler15 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager9,
        jobScheduler15, fileSystemAbstraction16, databaseLayout17);
    org.neo4j.monitoring.Monitors monitors19 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter20 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager9, monitors19);
    org.neo4j.memory.MemoryPools memoryPools21 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl22 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "hi!", metricRegistryManager9, memoryPools21);
    java.lang.String str24 = memoryPoolsAdapterNeoStackImpl22.moydmdmineString(
        "dbms.pool.<pool>.db.operation.count.failed");
    try {
      memoryPoolsAdapterNeoStackImpl22.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str24 + "' != '" + "dbms.pool.<pool>.dbms.pool.<pool>.db.operation.count.failed"
            + "'", str24, "dbms.pool.<pool>.dbms.pool.<pool>.db.operation.count.failed");
  }

  @Test
  public void test1634() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1634");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl7 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "db.operation.count.stop", metricRegistryManager6);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl8 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.query.execution", metricRegistryManager6);
    try {
      jVMAdapterMemoryHeapImpl8.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test1635() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1635");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray10 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList11 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        globbingPatternArray10);
    com.codahale.metrics.MetricRegistry metricRegistry13 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager14 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        metricRegistry13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter16 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager14, monitors15);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager14, storeEntityCountersSupplier17,
        pageCacheTracer18);
    org.neo4j.scheduler.JobScheduler jobScheduler20 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager14,
        jobScheduler20, fileSystemAbstraction21, databaseLayout22);
    org.neo4j.monitoring.Monitors monitors24 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter25 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager14, monitors24);
    org.neo4j.memory.MemoryPools memoryPools26 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl27 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "hi!", metricRegistryManager14, memoryPools26);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier28 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer29 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter30 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager14, storeEntityCountersSupplier28,
        pageCacheTracer29);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier31 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter32 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "db.operation.count.failed", monitorsClusterConsensusImpl3, metricRegistryManager14,
        coreNodeLeaderCheckSupplier31);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters33 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter34 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager14, checkpointCounters33);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier35 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter36 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "db.operation.count.recovered", metricRegistryManager14, storeEntityCountersSupplier35);
    com.codahale.metrics.MetricFilter metricFilter37 = null;
    try {
      metricRegistryManager14.reomcnForMe(metricFilter37);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
  }

  @Test
  public void test1636() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1636");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl13 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager9);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter14 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitors2, metricRegistryManager9);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager9,
        storeEntityCountersSupplier15, pageCacheTracer16);
    try {
      gdbStatsAdapter17.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1637() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1637");
    }
    io.github.onograph.metrics.incoming.cluster.SubmittedConsensusLogCommitIndexMetric submittedConsensusLogCommitIndexMetric0 = new io.github.onograph.metrics.incoming.cluster.SubmittedConsensusLogCommitIndexMetric();
    long long1 = submittedConsensusLogCommitIndexMetric0.comie();
    long long2 = submittedConsensusLogCommitIndexMetric0.comie();
    long long3 = submittedConsensusLogCommitIndexMetric0.comie();
    submittedConsensusLogCommitIndexMetric0.comie(10L);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
  }

  @Test
  public void test1638() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1638");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents0 = null;
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext1 = null;
    io.github.onograph.metrics.gdb.GdbMetricsLifecycle gdbMetricsLifecycle2 = new io.github.onograph.metrics.gdb.GdbMetricsLifecycle(
        dependentComponents0, extensionContext1);
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.stop();
    try {
      gdbMetricsLifecycle2.init();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1639() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1639");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager11,
        jobScheduler17, fileSystemAbstraction18, databaseLayout19);
    org.neo4j.monitoring.Monitors monitors21 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter22 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager11, monitors21);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters23 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter24 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "", metricRegistryManager11, pageCacheCounters23);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "db.operation.count.create", metricRegistryManager11);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters26 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter27 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "db.operation.count.stop", metricRegistryManager11, transactionLogCounters26);
    gdbTransactionLogAdapter27.start();
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1640() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1640");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory2 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager9, monitors13);
    boolean boolean15 = metricsServiceExtensionFactory2.equals(
        (java.lang.Object) metricRegistryManager9);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager9);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl18 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager9, monitors17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryExecutionMonitorMetricsImpl18.startExecution(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryExecutionMonitorMetricsImpl18.startProcessing(executingQuery21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryExecutionMonitorMetricsImpl18.beforeEnd(executingQuery23, false);
    java.lang.String str27 = queryExecutionMonitorMetricsImpl18.moydmdmineString(
        "dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryExecutionMonitorMetricsImpl18.beforeEnd(executingQuery28, false);
    try {
      queryExecutionMonitorMetricsImpl18.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertEquals(
        "'" + str27 + "' != '" + "dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data"
            + "'", str27, "dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data");
  }

  @Test
  public void test1641() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1641");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType1 = null;
    com.codahale.metrics.Timer timer2 = consensusMessageStats0.getTimer(raftConsensusMessageType1);
    long long3 = consensusMessageStats0.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType4 = null;
    com.codahale.metrics.Timer timer5 = consensusMessageStats0.getTimer(raftConsensusMessageType4);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType6 = null;
    com.codahale.metrics.Timer timer7 = consensusMessageStats0.getTimer(raftConsensusMessageType6);
    long long8 = consensusMessageStats0.dea();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats9 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType10 = null;
    com.codahale.metrics.Timer timer11 = consensusMessageStats9.getTimer(
        raftConsensusMessageType10);
    long long12 = consensusMessageStats9.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType13 = null;
    com.codahale.metrics.Timer timer14 = consensusMessageStats9.getTimer(
        raftConsensusMessageType13);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType15 = null;
    com.codahale.metrics.Timer timer16 = consensusMessageStats9.getTimer(
        raftConsensusMessageType15);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType17 = null;
    com.codahale.metrics.Timer timer18 = consensusMessageStats9.getTimer(
        raftConsensusMessageType17);
    java.time.Duration duration19 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats9.sedaForDu(duration19);
    consensusMessageStats0.sedaForDu(duration19);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType22 = null;
    com.codahale.metrics.Timer timer23 = consensusMessageStats0.getTimer(
        raftConsensusMessageType22);
    java.time.Duration duration24 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType25 = null;
    try {
      consensusMessageStats0.upateForCoDu(duration24, raftConsensusMessageType25);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertNull(timer2);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertNull(timer5);
    org.junit.Assert.assertNull(timer7);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    org.junit.Assert.assertNotNull(consensusMessageStats9);
    org.junit.Assert.assertNull(timer11);
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    org.junit.Assert.assertNull(timer14);
    org.junit.Assert.assertNull(timer16);
    org.junit.Assert.assertNull(timer18);
    org.junit.Assert.assertNotNull(duration19);
    org.junit.Assert.assertNull(timer23);
    org.junit.Assert.assertNotNull(duration24);
  }

  @Test
  public void test1642() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1642");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long1 = consensusMessageStats0.dea();
    com.codahale.metrics.Timer timer2 = consensusMessageStats0.getTimer();
    com.codahale.metrics.Timer timer3 = consensusMessageStats0.getTimer();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats4 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType5 = null;
    com.codahale.metrics.Timer timer6 = consensusMessageStats4.getTimer(raftConsensusMessageType5);
    long long7 = consensusMessageStats4.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType8 = null;
    com.codahale.metrics.Timer timer9 = consensusMessageStats4.getTimer(raftConsensusMessageType8);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType10 = null;
    com.codahale.metrics.Timer timer11 = consensusMessageStats4.getTimer(
        raftConsensusMessageType10);
    long long12 = consensusMessageStats4.dea();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats13 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType14 = null;
    com.codahale.metrics.Timer timer15 = consensusMessageStats13.getTimer(
        raftConsensusMessageType14);
    long long16 = consensusMessageStats13.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType17 = null;
    com.codahale.metrics.Timer timer18 = consensusMessageStats13.getTimer(
        raftConsensusMessageType17);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType19 = null;
    com.codahale.metrics.Timer timer20 = consensusMessageStats13.getTimer(
        raftConsensusMessageType19);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType21 = null;
    com.codahale.metrics.Timer timer22 = consensusMessageStats13.getTimer(
        raftConsensusMessageType21);
    java.time.Duration duration23 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats13.sedaForDu(duration23);
    consensusMessageStats4.sedaForDu(duration23);
    consensusMessageStats0.sedaForDu(duration23);
    long long27 = consensusMessageStats0.dea();
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertNotNull(timer2);
    org.junit.Assert.assertNotNull(timer3);
    org.junit.Assert.assertNotNull(consensusMessageStats4);
    org.junit.Assert.assertNull(timer6);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    org.junit.Assert.assertNull(timer9);
    org.junit.Assert.assertNull(timer11);
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    org.junit.Assert.assertNotNull(consensusMessageStats13);
    org.junit.Assert.assertNull(timer15);
    org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
    org.junit.Assert.assertNull(timer18);
    org.junit.Assert.assertNull(timer20);
    org.junit.Assert.assertNull(timer22);
    org.junit.Assert.assertNotNull(duration23);
    org.junit.Assert.assertTrue("'" + long27 + "' != '" + 600000L + "'", long27 == 600000L);
  }

  @Test
  public void test1643() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1643");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory2 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager9, monitors13);
    boolean boolean15 = metricsServiceExtensionFactory2.equals(
        (java.lang.Object) metricRegistryManager9);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter17 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.query.execution", metricRegistryManager9,
        monitors16);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl18 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager9);
    try {
      java.util.SortedSet<java.lang.String> strSet19 = metricRegistryManager9.geneSortedSet();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
  }

  @Test
  public void test1644() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1644");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl((int) (short) -1);
    clusterMembersCount0.sembs((int) (byte) 1);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge7 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge8 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge9 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge10 = clusterMembersCount0.unehlGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge11 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.secvg(true);
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge7);
    org.junit.Assert.assertNotNull(intGauge8);
    org.junit.Assert.assertNotNull(intGauge9);
    org.junit.Assert.assertNotNull(intGauge10);
    org.junit.Assert.assertNotNull(intGauge11);
  }

  @Test
  public void test1645() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1645");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    clusterMembersCount0.secvg(true);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge3 = clusterMembersCount0.covgGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge4 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge5 = clusterMembersCount0.covgGauge();
    org.junit.Assert.assertNotNull(intGauge3);
    org.junit.Assert.assertNotNull(intGauge4);
    org.junit.Assert.assertNotNull(intGauge5);
  }

  @Test
  public void test1646() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1646");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    clusterMembersCount0.secvg(true);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge3 = clusterMembersCount0.covgGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge4 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge5 = clusterMembersCount0.mebsGauge();
    clusterMembersCount0.sembs((int) ' ');
    org.junit.Assert.assertNotNull(intGauge3);
    org.junit.Assert.assertNotNull(intGauge4);
    org.junit.Assert.assertNotNull(intGauge5);
  }

  @Test
  public void test1647() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1647");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager9, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager9, jobScheduler16,
        fileSystemAbstraction17, databaseLayout18);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl20 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "vm.heap.max", metricRegistryManager9);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier21 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter22 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.committed", metricRegistryManager9, webContainerThreadInfoSupplier21);
    try {
      jettyAdapter22.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1648() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1648");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl14 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "db.operation.count.drop", metricRegistryManager10);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.operation.count.failed", metricRegistryManager10, databaseOperationCounts15);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "globalMetrics", metricRegistryManager10, storeEntityCountersSupplier17);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters19 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter20 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "globalMetrics", metricRegistryManager10, checkpointCounters19);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier21 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed",
        metricRegistryManager10, storeEntityCountersSupplier21, pageCacheTracer22);
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1649() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1649");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager12, memoryPools13,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager12, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager12, databaseOperationCounts19);
    org.neo4j.memory.MemoryPools memoryPools21 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl23 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager12, memoryPools21,
        "db.operation.count.create");
    org.neo4j.monitoring.Monitors monitors24 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager12, monitors24);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters26 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter27 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager12,
        transactionLogCounters26);
    org.neo4j.monitoring.Monitors monitors28 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter29 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager12, monitors28);
    org.neo4j.scheduler.JobScheduler jobScheduler30 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout32 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter33 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.members", metricRegistryManager12, jobScheduler30,
        fileSystemAbstraction31, databaseLayout32);
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1650() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1650");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.memory.MemoryPools memoryPools14 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl16 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager13, memoryPools14,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter18 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager13, monitors17);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl19 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager13);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier20 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters21 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, transactionIdStoreSupplier20, transactionCounters21);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter24 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "db.operation.count.stop", metricRegistryManager13, monitors23);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "vm.heap.used", metricRegistryManager13);
    org.neo4j.scheduler.JobScheduler jobScheduler26 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction27 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout28 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter29 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager13, jobScheduler26,
        fileSystemAbstraction27, databaseLayout28);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl30 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "db.operation.count.stop", metricRegistryManager13);
    org.neo4j.monitoring.Monitors monitors31 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl32 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "db.operation.count.create", metricRegistryManager13, monitors31);
    try {
      jVMAdapterSDPImpl32.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test1651() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1651");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl6 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray13 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList14 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean15 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList14,
        globbingPatternArray13);
    com.codahale.metrics.MetricRegistry metricRegistry16 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager17 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList14,
        metricRegistry16);
    org.neo4j.monitoring.Monitors monitors18 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter19 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager17, monitors18);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier20 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager17, storeEntityCountersSupplier20,
        pageCacheTracer21);
    org.neo4j.scheduler.JobScheduler jobScheduler23 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction24 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager17,
        jobScheduler23, fileSystemAbstraction24, databaseLayout25);
    org.neo4j.monitoring.Monitors monitors27 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter28 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager17, monitors27);
    org.neo4j.memory.MemoryPools memoryPools29 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl30 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "hi!", metricRegistryManager17, memoryPools29);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier31 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer32 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter33 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager17, storeEntityCountersSupplier31,
        pageCacheTracer32);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier34 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter35 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "db.operation.count.failed", monitorsClusterConsensusImpl6, metricRegistryManager17,
        coreNodeLeaderCheckSupplier34);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl36 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "pool.<pool>.<database>.causal_clustering.core.discovery.cluster.converged",
        metricRegistryManager17);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl37 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "hi!", metricRegistryManager17);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters38 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter39 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager17,
        pageCacheCounters38);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter40 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        monitors1, metricRegistryManager17);
    try {
      txCatchupAdapter40.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray13);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
  }

  @Test
  public void test1652() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1652");
    }
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray10 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList11 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        globbingPatternArray10);
    com.codahale.metrics.MetricRegistry metricRegistry13 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager14 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        metricRegistry13);
    org.neo4j.memory.MemoryPools memoryPools15 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl17 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager14, memoryPools15,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl18 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager14);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter19 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitors7, metricRegistryManager14);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager14,
        databaseOperationCounts20);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier22 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter23 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager14, webContainerThreadInfoSupplier22);
    org.neo4j.memory.MemoryPools memoryPools24 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl25 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager14, memoryPools24);
    org.neo4j.monitoring.Monitors monitors26 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter27 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed",
        metricRegistryManager14, monitors26);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier28 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter29 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.vm.heap.max", metricRegistryManager14,
        webContainerThreadInfoSupplier28);
    org.neo4j.memory.MemoryPools memoryPools30 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl31 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "dbms.pool.<pool>.db.operation.count.create", metricRegistryManager14, memoryPools30);
    org.junit.Assert.assertNotNull(globbingPatternArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
  }

  @Test
  public void test1653() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1653");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager7, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl15 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager7,
        monitors14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery16,
        "pool.<pool>.<database>.db.operation.count.failed");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryExecutionMonitorMetricsImpl15.startProcessing(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery21, throwable22);
    try {
      queryExecutionMonitorMetricsImpl15.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test1654() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1654");
    }
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat0 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat0.marc();
    syncStat0.norlad();
    syncStat0.recnam();
    syncStat0.suslrle();
    syncStat0.suslrle();
    syncStat0.marc();
  }

  @Test
  public void test1655() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1655");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl2 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.start", metricRegistryManager1);
    java.lang.String str4 = jVMAdapterGarbageCollectionImpl2.moydmdmineString(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message");
    java.lang.String str6 = jVMAdapterGarbageCollectionImpl2.moydmdmineString(
        "causal_clustering.core.last_leader_message");
    java.lang.String str8 = jVMAdapterGarbageCollectionImpl2.moydmdmineString(
        "pool.<pool>.<database>.dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed");
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "pool.<pool>.<database>.causal_clustering.core.last_leader_message"
            + "'", str4, "pool.<pool>.<database>.causal_clustering.core.last_leader_message");
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "causal_clustering.core.last_leader_message" + "'", str6,
        "causal_clustering.core.last_leader_message");
    org.junit.Assert.assertEquals("'" + str8 + "' != '"
            + "pool.<pool>.<database>.dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed"
            + "'", str8,
        "pool.<pool>.<database>.dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed");
  }

  @Test
  public void test1656() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1656");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    clusterMembersCount0.secvg(true);
    clusterMembersCount0.seuehl((int) (byte) 1);
    clusterMembersCount0.secvg(true);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge7 = clusterMembersCount0.unehlGauge();
    org.junit.Assert.assertNotNull(intGauge7);
  }

  @Test
  public void test1657() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1657");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray1 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList2 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean3 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList2,
        globbingPatternArray1);
    com.codahale.metrics.MetricRegistry metricRegistry4 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager5 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList2,
        metricRegistry4);
    org.neo4j.monitoring.Monitors monitors6 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl7 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager5, monitors6);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery8 = null;
    queryExecutionMonitorMetricsImpl7.startProcessing(executingQuery8);
    try {
      queryExecutionMonitorMetricsImpl7.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray1);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
  }

  @Test
  public void test1658() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1658");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl18 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager10,
        monitors17);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier19 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter20 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitorsClusterConsensusImpl2,
        metricRegistryManager10, coreNodeLeaderCheckSupplier19);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager10,
        databaseOperationCounts21);
    gdbActionsAdapter22.start();
    gdbActionsAdapter22.start();
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1659() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1659");
    }
    org.neo4j.monitoring.Monitors monitors6 = null;
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray10 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList11 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        globbingPatternArray10);
    com.codahale.metrics.MetricRegistry metricRegistry13 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager14 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        metricRegistry13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter16 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager14, monitors15);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter17 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors8, metricRegistryManager14);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter18 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "neo4j.count.node", monitors6, metricRegistryManager14);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters19 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter20 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager14,
        pageCacheCounters19);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier21 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter22 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager14, webContainerThreadInfoSupplier21);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl24 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.pool.<pool>.<database>.db.operation.count.drop",
        metricRegistryManager14, monitors23);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier25 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer26 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter27 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "databaseMetrics", metricRegistryManager14, storeEntityCountersSupplier25,
        pageCacheTracer26);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl28 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "", metricRegistryManager14);
    org.junit.Assert.assertNotNull(globbingPatternArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
  }

  @Test
  public void test1660() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1660");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl extensionFactoryGdbMetricsImpl0 = new io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl();
    java.lang.String str1 = extensionFactoryGdbMetricsImpl0.toString();
    java.lang.String str2 = extensionFactoryGdbMetricsImpl0.toString();
    java.lang.String str3 = extensionFactoryGdbMetricsImpl0.toString();
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl7 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray10 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList11 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        globbingPatternArray10);
    com.codahale.metrics.MetricRegistry metricRegistry13 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager14 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        metricRegistry13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter16 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager14, monitors15);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager14, storeEntityCountersSupplier17,
        pageCacheTracer18);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier20 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter21 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl7, metricRegistryManager14,
        coreNodeLeaderCheckSupplier20);
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter23 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager14, monitors22);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters24 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter25 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager14,
        transactionLogCounters24);
    gdbTransactionLogAdapter25.start();
    boolean boolean27 = extensionFactoryGdbMetricsImpl0.equals(
        (java.lang.Object) gdbTransactionLogAdapter25);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext28 = null;
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents29 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle30 = extensionFactoryGdbMetricsImpl0.newInstance(
        extensionContext28, dependentComponents29);
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str1, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str2, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str3, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertNotNull(globbingPatternArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertNotNull(lifecycle30);
  }

  @Test
  public void test1661() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1661");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier17 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter18 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl4, metricRegistryManager11,
        coreNodeLeaderCheckSupplier17);
    org.neo4j.monitoring.Monitors monitors19 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl20 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "db.query.execution", metricRegistryManager11, monitors19);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter21 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "dbms.pool.<pool>.db.operation.count.failed", monitors1, metricRegistryManager11);
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1662() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1662");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier15 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter16 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl2, metricRegistryManager9,
        coreNodeLeaderCheckSupplier15);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl18 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "db.query.execution", metricRegistryManager9, monitors17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryExecutionMonitorMetricsImpl18.endFailure(executingQuery19,
        "causal_clustering.core.last_leader_message");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryExecutionMonitorMetricsImpl18.startExecution(executingQuery22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    java.lang.Throwable throwable25 = null;
    queryExecutionMonitorMetricsImpl18.endFailure(executingQuery24, throwable25);
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1663() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1663");
    }
    org.neo4j.monitoring.Monitors monitors3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl14 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter15 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitors3, metricRegistryManager10);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl17 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed",
        metricRegistryManager10, monitors16);
    org.neo4j.monitoring.Monitors monitors18 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter19 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager10, monitors18);
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1664() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1664");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier7 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters8 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter9 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager6,
        transactionIdStoreSupplier7, transactionCounters8);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl10 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager6);
    jVMAdapterMBImpl10.start();
    try {
      jVMAdapterMBImpl10.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test1665() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1665");
    }
    org.neo4j.monitoring.Monitors monitors3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl14 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter15 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitors3, metricRegistryManager10);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager10,
        databaseOperationCounts16);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters18 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter19 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager10, checkpointCounters18);
    try {
      checkpointCounterAdapter19.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1666() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1666");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier12 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters13 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager11,
        transactionIdStoreSupplier12, transactionCounters13);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier16 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters17 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "vm.heap.used", metricRegistryManager11, transactionIdStoreSupplier16,
        transactionCounters17);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters19 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter20 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "db.operation.count.drop", metricRegistryManager11, checkpointCounters19);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, transactionLogCounters21);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter23 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "db.operation.count.failed", monitors1, metricRegistryManager11);
    try {
      readReplicaNodeAdapter23.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1667() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1667");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl6 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier19 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter20 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl6, metricRegistryManager13,
        coreNodeLeaderCheckSupplier19);
    org.neo4j.monitoring.Monitors monitors21 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter22 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager13, monitors21);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "db.operation.count.create", metricRegistryManager13);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "vm.heap.max", metricRegistryManager13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "hi!", metricRegistryManager13, storeEntityCountersSupplier25);
    org.neo4j.monitoring.Monitors monitors27 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter28 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "vm.heap.used", metricRegistryManager13, monitors27);
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test1668() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1668");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl extensionFactoryGdbMetricsImpl0 = new io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl();
    java.lang.String str1 = extensionFactoryGdbMetricsImpl0.toString();
    java.lang.String str2 = extensionFactoryGdbMetricsImpl0.toString();
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager9, monitors13);
    boolean boolean15 = extensionFactoryGdbMetricsImpl0.equals(
        (java.lang.Object) "db.operation.count.start");
    java.lang.String str16 = extensionFactoryGdbMetricsImpl0.toString();
    java.lang.String str17 = extensionFactoryGdbMetricsImpl0.getName();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str1, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str2, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertEquals(
        "'" + str16 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str16, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "databaseMetrics" + "'", str17,
        "databaseMetrics");
  }

  @Test
  public void test1669() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1669");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray10 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList11 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        globbingPatternArray10);
    com.codahale.metrics.MetricRegistry metricRegistry13 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager14 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        metricRegistry13);
    org.neo4j.memory.MemoryPools memoryPools15 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl17 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager14, memoryPools15,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager14, storeEntityCountersSupplier18,
        pageCacheTracer19);
    org.neo4j.scheduler.JobScheduler jobScheduler21 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction22 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager14, jobScheduler21,
        fileSystemAbstraction22, databaseLayout23);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager14);
    org.neo4j.memory.MemoryPools memoryPools26 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl28 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager14, memoryPools26,
        "pool.<pool>.<database>.db.operation.count.start");
    org.neo4j.memory.MemoryPools memoryPools29 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl30 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "pool.<pool>.<database>.pool.<pool>.<database>.db.operation.count.drop",
        metricRegistryManager14, memoryPools29);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier31 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter32 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager14, webContainerThreadInfoSupplier31);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter33 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", monitors2, metricRegistryManager14);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl34 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "neo4j.count.relationship", metricRegistryManager14);
    org.junit.Assert.assertNotNull(globbingPatternArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
  }

  @Test
  public void test1670() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1670");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl((int) (short) -1);
    clusterMembersCount0.sembs((int) (byte) 1);
    clusterMembersCount0.secvg(false);
    clusterMembersCount0.secvg(true);
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
  }

  @Test
  public void test1671() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1671");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.scheduler.JobScheduler jobScheduler15 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager9,
        jobScheduler15, fileSystemAbstraction16, databaseLayout17);
    org.neo4j.monitoring.Monitors monitors19 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter20 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager9, monitors19);
    org.neo4j.memory.MemoryPools memoryPools21 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl22 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "hi!", metricRegistryManager9, memoryPools21);
    memoryPoolsAdapterNeoStackImpl22.init();
    java.lang.String str25 = memoryPoolsAdapterNeoStackImpl22.moydmdmineString(
        "dbms.pool.<pool>.neo4j.count.relationship");
    java.lang.String str27 = memoryPoolsAdapterNeoStackImpl22.moydmdmineString(
        "dbms.pool.<pool>.vm.heap.max");
    try {
      memoryPoolsAdapterNeoStackImpl22.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str25 + "' != '" + "dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship" + "'",
        str25, "dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship");
    org.junit.Assert.assertEquals(
        "'" + str27 + "' != '" + "dbms.pool.<pool>.dbms.pool.<pool>.vm.heap.max" + "'", str27,
        "dbms.pool.<pool>.dbms.pool.<pool>.vm.heap.max");
  }

  @Test
  public void test1672() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1672");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.scheduler.JobScheduler jobScheduler15 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager9,
        jobScheduler15, fileSystemAbstraction16, databaseLayout17);
    org.neo4j.monitoring.Monitors monitors19 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter20 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager9, monitors19);
    org.neo4j.memory.MemoryPools memoryPools21 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl22 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "hi!", metricRegistryManager9, memoryPools21);
    memoryPoolsAdapterNeoStackImpl22.init();
    java.lang.String str25 = memoryPoolsAdapterNeoStackImpl22.moydmdmineString(
        "dbms.pool.<pool>.neo4j.count.relationship");
    try {
      memoryPoolsAdapterNeoStackImpl22.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str25 + "' != '" + "dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship" + "'",
        str25, "dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship");
  }

  @Test
  public void test1673() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1673");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager7, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl15 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager7,
        monitors14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery16,
        "pool.<pool>.<database>.db.operation.count.failed");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery19, "db.query.execution");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryExecutionMonitorMetricsImpl15.startExecution(executingQuery22);
    queryExecutionMonitorMetricsImpl15.init();
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    try {
      queryExecutionMonitorMetricsImpl15.endSuccess(executingQuery25);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test1674() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1674");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager7, monitors11);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl13 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager7);
    java.lang.String str15 = jVMAdapterPoolImpl13.moydmdmineString("db.operation.count.drop");
    jVMAdapterPoolImpl13.start();
    jVMAdapterPoolImpl13.start();
    jVMAdapterPoolImpl13.start();
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "db.operation.count.drop" + "'", str15,
        "db.operation.count.drop");
  }

  @Test
  public void test1675() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1675");
    }
    org.neo4j.monitoring.Monitors monitors4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager12, memoryPools13,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter17 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager12, monitors16);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl18 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.recovered", metricRegistryManager12);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter19 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", monitors4,
        metricRegistryManager12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl20 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.create", metricRegistryManager12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12);
    try {
      jVMAdapterMBImpl22.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1676() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1676");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager8, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.scheduler.JobScheduler jobScheduler14 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction15 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager8,
        jobScheduler14, fileSystemAbstraction15, databaseLayout16);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        storeEntityCountersSupplier18, pageCacheTracer19);
    gdbStatsAdapter20.start();
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1677() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1677");
    }
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat0 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat0.marc();
    syncStat0.norlad();
    syncStat0.marc();
    syncStat0.suslrle();
    syncStat0.clerut();
    syncStat0.clerut();
    syncStat0.recnam();
    syncStat0.marc();
    syncStat0.recnam();
    syncStat0.clerut();
  }

  @Test
  public void test1678() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1678");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.memory.MemoryPools memoryPools15 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl17 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.query.execution", metricRegistryManager9, memoryPools15,
        "pool.<pool>.<database>.db.operation.count.start");
    org.neo4j.scheduler.JobScheduler jobScheduler18 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction19 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager9,
        jobScheduler18, fileSystemAbstraction19, databaseLayout20);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters22 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter23 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager9,
        checkpointCounters22);
    try {
      checkpointCounterAdapter23.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1679() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1679");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier7 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters8 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter9 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager6,
        transactionIdStoreSupplier7, transactionCounters8);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl10 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager6);
    jVMAdapterMBImpl10.start();
    java.lang.String str13 = jVMAdapterMBImpl10.moydmdmineString("dbms.pool.<pool>.vm.heap.used");
    jVMAdapterMBImpl10.start();
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "dbms.pool.<pool>.vm.heap.used" + "'",
        str13, "dbms.pool.<pool>.vm.heap.used");
  }

  @Test
  public void test1680() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1680");
    }
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat0 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat0.marc();
    syncStat0.marc();
    syncStat0.norlad();
    syncStat0.marc();
  }

  @Test
  public void test1681() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1681");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    long long2 = livingCacheMeta0.getSizeCnt();
    livingCacheMeta0.seeec((int) (short) 10);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
  }

  @Test
  public void test1682() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1682");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl2 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "neo4j.count.relationship", metricRegistryManager1);
    try {
      jVMAdapterFileStatImpl2.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1683() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1683");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager7, monitors11);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl13 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.recovered", metricRegistryManager7);
    jVMAdapterGarbageCollectionImpl13.shutdown();
    try {
      jVMAdapterGarbageCollectionImpl13.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test1684() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1684");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier7 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters8 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter9 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager6,
        transactionIdStoreSupplier7, transactionCounters8);
    boolean boolean11 = metricRegistryManager6.isEnlForSt("");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl12 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager6);
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test1685() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1685");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl13 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager9);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter14 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitors2, metricRegistryManager9);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager9,
        storeEntityCountersSupplier15, pageCacheTracer16);
    try {
      java.util.SortedSet<java.lang.String> strSet18 = metricRegistryManager9.geneSortedSet();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1686() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1686");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier18 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter19 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager12, webContainerThreadInfoSupplier18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager12, monitors20);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager12, storeEntityCountersSupplier22);
    org.neo4j.memory.MemoryPools memoryPools24 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl26 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager12,
        memoryPools24, "db.operation.count.stop");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier27 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter28 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager12,
        storeEntityCountersSupplier27);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl29 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed",
        metricRegistryManager12);
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1687() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1687");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager11, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager11, databaseOperationCounts18);
    org.neo4j.memory.MemoryPools memoryPools20 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl22 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager11, memoryPools20,
        "db.operation.count.create");
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager11, monitors23);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "dbms.pool.<pool>.db.operation.count.create", metricRegistryManager11);
    org.neo4j.monitoring.Monitors monitors26 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter27 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "dbms.pool.<pool>.causal_clustering.core.discovery.cluster.members",
        metricRegistryManager11, monitors26);
    try {
      cypherPlanAdapter27.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1688() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1688");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl clusterDataWatcherMetricsImpl0 = new io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl();
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType1 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType1);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType3 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge4 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType3);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType5 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge6 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType5);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType7 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge8 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType7);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType9 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge10 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType9);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType11 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge12 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType11);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge4);
    org.junit.Assert.assertNotNull(intGauge6);
    org.junit.Assert.assertNotNull(intGauge8);
    org.junit.Assert.assertNotNull(intGauge10);
    org.junit.Assert.assertNotNull(intGauge12);
  }

  @Test
  public void test1689() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1689");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.scheduler.JobScheduler jobScheduler19 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager13,
        jobScheduler19, fileSystemAbstraction20, databaseLayout21);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter24 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager13, monitors23);
    org.neo4j.memory.MemoryPools memoryPools25 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl26 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "hi!", metricRegistryManager13, memoryPools25);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier27 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters28 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter29 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager13,
        transactionIdStoreSupplier27, transactionCounters28);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier30 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter31 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "pool.<pool>.<database>.db.operation.count.start", monitorsClusterConsensusImpl2,
        metricRegistryManager13, coreNodeLeaderCheckSupplier30);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters32 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter33 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager13,
        transactionLogCounters32);
    try {
      gdbTransactionLogAdapter33.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test1690() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1690");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    long long2 = livingCacheMeta0.getSizeCnt();
    livingCacheMeta0.setabys((long) 1);
    long long5 = livingCacheMeta0.gehs();
    livingCacheMeta0.sembe((long) 10);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
  }

  @Test
  public void test1691() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1691");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager7, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl15 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager7,
        monitors14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery16,
        "pool.<pool>.<database>.db.operation.count.failed");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery19, "db.query.execution");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryExecutionMonitorMetricsImpl15.startExecution(executingQuery22);
    queryExecutionMonitorMetricsImpl15.init();
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    java.lang.Throwable throwable26 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery25, throwable26);
    java.lang.Class<?> wildcardClass28 = queryExecutionMonitorMetricsImpl15.getClass();
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertNotNull(wildcardClass28);
  }

  @Test
  public void test1692() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1692");
    }
    io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl transactionSizeMonitorImpl0 = new io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl();
    transactionSizeMonitorImpl0.addNativeTransactionSize((long) ' ');
    transactionSizeMonitorImpl0.addNativeTransactionSize(0L);
    transactionSizeMonitorImpl0.addHeapTransactionSize((long) 10);
    transactionSizeMonitorImpl0.addHeapTransactionSize((-1L));
  }

  @Test
  public void test1693() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1693");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray10 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList11 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        globbingPatternArray10);
    com.codahale.metrics.MetricRegistry metricRegistry13 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager14 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        metricRegistry13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter16 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager14, monitors15);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager14, storeEntityCountersSupplier17,
        pageCacheTracer18);
    org.neo4j.scheduler.JobScheduler jobScheduler20 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager14,
        jobScheduler20, fileSystemAbstraction21, databaseLayout22);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters24 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter25 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager14,
        transactionLogCounters24);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier26 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter27 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "vm.heap.committed", monitorsClusterConsensusImpl5, metricRegistryManager14,
        coreNodeLeaderCheckSupplier26);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl28 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier29 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter30 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager14,
        storeEntityCountersSupplier29);
    org.neo4j.memory.MemoryPools memoryPools31 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl32 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "pool.<pool>.<database>.db.operation.count.drop", metricRegistryManager14, memoryPools31);
    org.neo4j.memory.MemoryPools memoryPools33 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl35 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.recovered", metricRegistryManager14, memoryPools33, "hi!");
    org.junit.Assert.assertNotNull(globbingPatternArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
  }

  @Test
  public void test1694() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1694");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents0 = null;
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext1 = null;
    io.github.onograph.metrics.gdb.GdbMetricsLifecycle gdbMetricsLifecycle2 = new io.github.onograph.metrics.gdb.GdbMetricsLifecycle(
        dependentComponents0, extensionContext1);
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.stop();
    try {
      gdbMetricsLifecycle2.init();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1695() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1695");
    }
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl0 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl();
    java.lang.String str2 = memoryPoolsAdapterNeoStackImpl0.moydmdmineString(
        "pool.<pool>.<database>.db.query.execution");
    java.lang.String str4 = memoryPoolsAdapterNeoStackImpl0.moydmdmineString(
        "dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "dbms.pool.<pool>.pool.<pool>.<database>.db.query.execution" + "'",
        str2, "dbms.pool.<pool>.pool.<pool>.<database>.db.query.execution");
    org.junit.Assert.assertEquals("'" + str4 + "' != '"
            + "dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed"
            + "'", str4,
        "dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed");
  }

  @Test
  public void test1696() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1696");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gehs();
    livingCacheMeta0.sembe((long) 100);
    livingCacheMeta0.cacheMiss();
    long long7 = livingCacheMeta0.getICe();
    livingCacheMeta0.setabys((long) (byte) -1);
    long long10 = livingCacheMeta0.getLgBm();
    livingCacheMeta0.seeec((int) ' ');
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 100L + "'", long10 == 100L);
  }

  @Test
  public void test1697() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1697");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    double double2 = metricsMeter1.getOneMinuteRate();
    long long3 = metricsMeter1.getCount();
    double double4 = metricsMeter1.getFiveMinuteRate();
    org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
  }

  @Test
  public void test1698() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1698");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl extensionFactoryGdbMetricsImpl0 = new io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl();
    java.lang.String str1 = extensionFactoryGdbMetricsImpl0.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext2 = null;
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents3 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle4 = extensionFactoryGdbMetricsImpl0.newInstance(
        extensionContext2, dependentComponents3);
    java.lang.String str5 = extensionFactoryGdbMetricsImpl0.getName();
    java.lang.String str6 = extensionFactoryGdbMetricsImpl0.getName();
    org.neo4j.monitoring.Monitors monitors10 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray14 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList15 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean16 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList15,
        globbingPatternArray14);
    com.codahale.metrics.MetricRegistry metricRegistry17 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager18 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList15,
        metricRegistry17);
    org.neo4j.monitoring.Monitors monitors19 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter20 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager18, monitors19);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier21 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager18, storeEntityCountersSupplier21,
        pageCacheTracer22);
    org.neo4j.scheduler.JobScheduler jobScheduler24 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction25 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout26 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter27 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager18,
        jobScheduler24, fileSystemAbstraction25, databaseLayout26);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter28 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "", monitors10, metricRegistryManager18);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier29 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter30 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager18, webContainerThreadInfoSupplier29);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl31 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "db.operation.count.drop", metricRegistryManager18);
    jVMAdapterFileStatImpl31.start();
    boolean boolean33 = extensionFactoryGdbMetricsImpl0.equals(
        (java.lang.Object) jVMAdapterFileStatImpl31);
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str1, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertNotNull(lifecycle4);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "databaseMetrics" + "'", str5,
        "databaseMetrics");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "databaseMetrics" + "'", str6,
        "databaseMetrics");
    org.junit.Assert.assertNotNull(globbingPatternArray14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
  }

  @Test
  public void test1699() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1699");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl clusterDataWatcherMetricsImpl0 = new io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl();
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType1 = null;
    try {
      clusterDataWatcherMetricsImpl0.sevsdsiForCl(clusterDataType1, 10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1700() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1700");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark((long) (-1));
    double double4 = metricsMeter1.getFifteenMinuteRate();
    double double5 = metricsMeter1.getFifteenMinuteRate();
    metricsMeter1.mark();
    org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
  }

  @Test
  public void test1701() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1701");
    }
    io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl transactionSizeMonitorImpl0 = new io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl();
    transactionSizeMonitorImpl0.addNativeTransactionSize((long) ' ');
    transactionSizeMonitorImpl0.addNativeTransactionSize((long) (-1));
    transactionSizeMonitorImpl0.addHeapTransactionSize((long) (short) 0);
    transactionSizeMonitorImpl0.addNativeTransactionSize(10L);
  }

  @Test
  public void test1702() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1702");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager11, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.scheduler.JobScheduler jobScheduler18 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction19 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager11, jobScheduler18,
        fileSystemAbstraction19, databaseLayout20);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager11);
    org.neo4j.memory.MemoryPools memoryPools23 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl25 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager11, memoryPools23,
        "pool.<pool>.<database>.db.operation.count.start");
    org.neo4j.memory.MemoryPools memoryPools26 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl27 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "pool.<pool>.<database>.pool.<pool>.<database>.db.operation.count.drop",
        metricRegistryManager11, memoryPools26);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters28 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter29 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "pool.<pool>.<database>.vm.heap.used", metricRegistryManager11, checkpointCounters28);
    try {
      checkpointCounterAdapter29.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1703() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1703");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    double double2 = metricsMeter1.getFiveMinuteRate();
    metricsMeter1.mark((long) 10);
    double double5 = metricsMeter1.getMeanRate();
    org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
  }

  @Test
  public void test1704() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1704");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.scheduler.JobScheduler jobScheduler15 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager9,
        jobScheduler15, fileSystemAbstraction16, databaseLayout17);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl19 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager9);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier20 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager9,
        storeEntityCountersSupplier20, pageCacheTracer21);
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1705() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1705");
    }
    org.neo4j.monitoring.Monitors monitors3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl14 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter15 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitors3, metricRegistryManager10);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl17 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10,
        monitors16);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters18 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter19 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "pool.<pool>.<database>.vm.heap.used", metricRegistryManager10, checkpointCounters18);
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1706() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1706");
    }
    org.neo4j.monitoring.Monitors monitors3 = null;
    org.neo4j.monitoring.Monitors monitors5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter14 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors5, metricRegistryManager11);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter15 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "neo4j.count.node", monitors3, metricRegistryManager11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "databaseMetrics", metricRegistryManager11, storeEntityCountersSupplier16,
        pageCacheTracer17);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl19 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "neo4j.count.node", metricRegistryManager11);
    try {
      jVMAdapterFileStatImpl19.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1707() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1707");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl extensionFactoryGdbMetricsImpl0 = new io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl();
    java.lang.String str1 = extensionFactoryGdbMetricsImpl0.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext2 = null;
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents3 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle4 = extensionFactoryGdbMetricsImpl0.newInstance(
        extensionContext2, dependentComponents3);
    java.lang.String str5 = extensionFactoryGdbMetricsImpl0.getName();
    io.github.onograph.metrics.MetricsReportProvider metricsReportProvider6 = new io.github.onograph.metrics.MetricsReportProvider();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction7 = null;
    org.neo4j.configuration.Config config9 = null;
    java.nio.file.Path path10 = null;
    metricsReportProvider6.init(fileSystemAbstraction7, "db.operation.count.drop", config9, path10);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction12 = null;
    org.neo4j.configuration.Config config14 = null;
    java.nio.file.Path path15 = null;
    metricsReportProvider6.init(fileSystemAbstraction12, "", config14, path15);
    boolean boolean17 = extensionFactoryGdbMetricsImpl0.equals((java.lang.Object) config14);
    io.github.onograph.metrics.incoming.cluster.SubmittedConsensusLogCommitIndexMetric submittedConsensusLogCommitIndexMetric18 = new io.github.onograph.metrics.incoming.cluster.SubmittedConsensusLogCommitIndexMetric();
    long long19 = submittedConsensusLogCommitIndexMetric18.comie();
    submittedConsensusLogCommitIndexMetric18.comie((long) 1);
    long long22 = submittedConsensusLogCommitIndexMetric18.comie();
    boolean boolean23 = extensionFactoryGdbMetricsImpl0.equals((java.lang.Object) long22);
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str1, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertNotNull(lifecycle4);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "databaseMetrics" + "'", str5,
        "databaseMetrics");
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
    org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
  }

  @Test
  public void test1708() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1708");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier17 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter18 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl4, metricRegistryManager11,
        coreNodeLeaderCheckSupplier17);
    org.neo4j.monitoring.Monitors monitors19 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter20 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager11, monitors19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "db.operation.count.create", metricRegistryManager11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier22 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "causal_clustering.core.discovery.cluster.members", metricRegistryManager11,
        storeEntityCountersSupplier22, pageCacheTracer23);
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1709() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1709");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    livingCacheMeta0.seeec(100);
    long long4 = livingCacheMeta0.getLgBm();
    long long5 = livingCacheMeta0.getIEm();
    livingCacheMeta0.setabys((long) 0);
    livingCacheMeta0.sembe((long) (byte) 1);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
  }

  @Test
  public void test1710() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1710");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter7 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship", monitors1,
        metricRegistryManager6);
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test1711() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1711");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl2 = null;
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier17 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter18 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl4, metricRegistryManager11,
        coreNodeLeaderCheckSupplier17);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier19 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter20 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "db.operation.count.recovered", monitorsClusterConsensusImpl2, metricRegistryManager11,
        coreNodeLeaderCheckSupplier19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "vm.heap.max", metricRegistryManager11);
    java.lang.String str23 = jVMAdapterPoolImpl21.moydmdmineString(
        "causal_clustering.core.discovery.cluster.members");
    jVMAdapterPoolImpl21.start();
    java.lang.String str26 = jVMAdapterPoolImpl21.moydmdmineString("dbms.pool.<pool>.vm.heap.max");
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str23 + "' != '" + "causal_clustering.core.discovery.cluster.members" + "'", str23,
        "causal_clustering.core.discovery.cluster.members");
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "dbms.pool.<pool>.vm.heap.max" + "'",
        str26, "dbms.pool.<pool>.vm.heap.max");
  }

  @Test
  public void test1712() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1712");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats1 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long2 = consensusMessageStats1.dea();
    com.codahale.metrics.Timer timer3 = consensusMessageStats1.getTimer();
    com.codahale.metrics.Timer timer4 = consensusMessageStats1.getTimer();
    boolean boolean5 = metricsServiceExtensionFactory0.equals((java.lang.Object) timer4);
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.memory.MemoryPools memoryPools14 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl16 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager13, memoryPools14,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager13, storeEntityCountersSupplier17,
        pageCacheTracer18);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager13, databaseOperationCounts20);
    gdbActionsAdapter21.start();
    gdbActionsAdapter21.start();
    boolean boolean24 = metricsServiceExtensionFactory0.equals(
        (java.lang.Object) gdbActionsAdapter21);
    java.util.function.LongSupplier longSupplier25 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter26 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier25);
    metricsMeter26.mark(100L);
    metricsMeter26.mark();
    metricsMeter26.mark((long) 10);
    double double32 = metricsMeter26.getMeanRate();
    double double33 = metricsMeter26.getMeanRate();
    metricsMeter26.mark();
    metricsMeter26.mark();
    boolean boolean36 = metricsServiceExtensionFactory0.equals((java.lang.Object) metricsMeter26);
    double double37 = metricsMeter26.getFiveMinuteRate();
    org.junit.Assert.assertNotNull(consensusMessageStats1);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertNotNull(timer3);
    org.junit.Assert.assertNotNull(timer4);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
    org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
  }

  @Test
  public void test1713() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1713");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "db.operation.count.drop", metricRegistryManager11);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.operation.count.failed", metricRegistryManager11, databaseOperationCounts16);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "globalMetrics", metricRegistryManager11, storeEntityCountersSupplier18);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters20 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter21 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "globalMetrics", metricRegistryManager11, checkpointCounters20);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "pool.<pool>.<database>.vm.heap.used", metricRegistryManager11);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter24 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager11, monitors23);
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1714() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1714");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark(100L);
    metricsMeter1.mark();
    metricsMeter1.mark((long) 10);
    double double7 = metricsMeter1.getMeanRate();
    double double8 = metricsMeter1.getMeanRate();
    metricsMeter1.mark();
    metricsMeter1.mark((long) '4');
    double double12 = metricsMeter1.getMeanRate();
    double double13 = metricsMeter1.getFiveMinuteRate();
    double double14 = metricsMeter1.getMeanRate();
    double double15 = metricsMeter1.getFifteenMinuteRate();
    double double16 = metricsMeter1.getFifteenMinuteRate();
    double double17 = metricsMeter1.getFifteenMinuteRate();
    org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
    org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
  }

  @Test
  public void test1715() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1715");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.monitoring.Monitors monitors3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl17 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "db.operation.count.failed", metricRegistryManager11);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter18 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", monitors3, metricRegistryManager11);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter19 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        monitors1, metricRegistryManager11);
    try {
      discoveryCoreNodeAdapter19.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1716() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1716");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl2 = null;
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier17 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter18 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl4, metricRegistryManager11,
        coreNodeLeaderCheckSupplier17);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier19 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter20 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "db.operation.count.recovered", monitorsClusterConsensusImpl2, metricRegistryManager11,
        coreNodeLeaderCheckSupplier19);
    org.neo4j.monitoring.Monitors monitors21 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl22 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager11, monitors21);
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1717() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1717");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl2 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.drop", metricRegistryManager1);
    java.lang.String str4 = jVMAdapterGarbageCollectionImpl2.moydmdmineString("");
    java.lang.String str6 = jVMAdapterGarbageCollectionImpl2.moydmdmineString(
        "db.operation.count.stop");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "db.operation.count.stop" + "'", str6,
        "db.operation.count.stop");
  }

  @Test
  public void test1718() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1718");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl18 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl19 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "db.operation.count.start", metricRegistryManager12);
    org.neo4j.scheduler.JobScheduler jobScheduler20 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.drop", metricRegistryManager12, jobScheduler20, fileSystemAbstraction21,
        databaseLayout22);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter24 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", monitors2, metricRegistryManager12);
    org.neo4j.scheduler.JobScheduler jobScheduler25 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout27 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter28 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed",
        metricRegistryManager12, jobScheduler25, fileSystemAbstraction26, databaseLayout27);
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1719() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1719");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType1 = null;
    com.codahale.metrics.Timer timer2 = consensusMessageStats0.getTimer(raftConsensusMessageType1);
    long long3 = consensusMessageStats0.dea();
    long long4 = consensusMessageStats0.dea();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats5 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long6 = consensusMessageStats5.dea();
    java.time.Duration duration7 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats5.sedaForDu(duration7);
    consensusMessageStats0.sedaForDu(duration7);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType10 = null;
    com.codahale.metrics.Timer timer11 = consensusMessageStats0.getTimer(
        raftConsensusMessageType10);
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertNull(timer2);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    org.junit.Assert.assertNotNull(consensusMessageStats5);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    org.junit.Assert.assertNotNull(duration7);
    org.junit.Assert.assertNull(timer11);
  }

  @Test
  public void test1720() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1720");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.monitoring.Monitors monitors6 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter15 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors6, metricRegistryManager12);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl17 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager12, monitors16);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.query.execution", metricRegistryManager12,
        storeEntityCountersSupplier18, pageCacheTracer19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "dbms.pool.<pool>.causal_clustering.core.discovery.cluster.converged",
        metricRegistryManager12);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter22 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data", monitors1,
        metricRegistryManager12);
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1721() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1721");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.monitoring.Monitors monitors5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter14 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors5, metricRegistryManager11);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl16 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager11, monitors15);
    org.neo4j.memory.MemoryPools memoryPools17 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl19 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, memoryPools17,
        "pool.<pool>.<database>.causal_clustering.core.discovery.replicated_data");
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter20 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "dbms.pool.<pool>.vm.heap.used", monitors1, metricRegistryManager11);
    try {
      metricRegistryManager11.reoForSt(
          "pool.<pool>.<database>.causal_clustering.core.discovery.cluster.converged");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1722() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1722");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gems();
    livingCacheMeta0.setabys((long) (short) -1);
    long long6 = livingCacheMeta0.getSizeCnt();
    livingCacheMeta0.setabys((long) (byte) 1);
    long long9 = livingCacheMeta0.getLgBm();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
  }

  @Test
  public void test1723() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1723");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager10, jobScheduler17,
        fileSystemAbstraction18, databaseLayout19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager10);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.failed", metricRegistryManager10);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl24 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager10, monitors23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    java.lang.Throwable throwable26 = null;
    queryExecutionMonitorMetricsImpl24.endFailure(executingQuery25, throwable26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryExecutionMonitorMetricsImpl24.beforeEnd(executingQuery28, false);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryExecutionMonitorMetricsImpl24.endFailure(executingQuery31, "db.query.execution");
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1724() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1724");
    }
    org.neo4j.monitoring.Monitors monitors5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter14 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors5, metricRegistryManager11);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl16 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager11, monitors15);
    org.neo4j.memory.MemoryPools memoryPools17 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl19 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, memoryPools17,
        "pool.<pool>.<database>.causal_clustering.core.discovery.replicated_data");
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters20 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter21 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "db.operation.count.create", metricRegistryManager11, pageCacheCounters20);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "db.operation.count.stop", metricRegistryManager11);
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1725() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1725");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier2 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer3 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter4 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "hi!", metricRegistryManager1, storeEntityCountersSupplier2, pageCacheTracer3);
    try {
      gdbStatsAdapter4.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1726() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1726");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats1 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long2 = consensusMessageStats1.dea();
    com.codahale.metrics.Timer timer3 = consensusMessageStats1.getTimer();
    com.codahale.metrics.Timer timer4 = consensusMessageStats1.getTimer();
    boolean boolean5 = metricsServiceExtensionFactory0.equals((java.lang.Object) timer4);
    java.lang.String str6 = metricsServiceExtensionFactory0.getName();
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl12 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray15 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList16 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean17 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList16,
        globbingPatternArray15);
    com.codahale.metrics.MetricRegistry metricRegistry18 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager19 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList16,
        metricRegistry18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter21 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager19, monitors20);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier22 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager19, storeEntityCountersSupplier22,
        pageCacheTracer23);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier25 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter26 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl12, metricRegistryManager19,
        coreNodeLeaderCheckSupplier25);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier27 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer28 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter29 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager19,
        storeEntityCountersSupplier27, pageCacheTracer28);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters30 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter31 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager19, transactionLogCounters30);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts32 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter33 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "neo4j.count.node", metricRegistryManager19, databaseOperationCounts32);
    org.neo4j.monitoring.Monitors monitors34 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl35 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "db.operation.count.start", metricRegistryManager19, monitors34);
    boolean boolean36 = metricsServiceExtensionFactory0.equals(
        (java.lang.Object) metricRegistryManager19);
    java.lang.String str37 = metricsServiceExtensionFactory0.getName();
    java.lang.String str38 = metricsServiceExtensionFactory0.getName();
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray44 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList45 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean46 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList45,
        globbingPatternArray44);
    com.codahale.metrics.MetricRegistry metricRegistry47 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager48 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList45,
        metricRegistry47);
    org.neo4j.memory.MemoryPools memoryPools49 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl51 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager48, memoryPools49,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier52 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer53 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter54 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager48, storeEntityCountersSupplier52,
        pageCacheTracer53);
    org.neo4j.scheduler.JobScheduler jobScheduler55 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction56 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout57 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter58 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager48, jobScheduler55,
        fileSystemAbstraction56, databaseLayout57);
    org.neo4j.scheduler.JobScheduler jobScheduler59 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction60 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout61 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter62 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "hi!", metricRegistryManager48, jobScheduler59, fileSystemAbstraction60, databaseLayout61);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters63 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter64 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "pool.<pool>.<database>.db.operation.count.create", metricRegistryManager48,
        pageCacheCounters63);
    boolean boolean65 = metricsServiceExtensionFactory0.equals(
        (java.lang.Object) "pool.<pool>.<database>.db.operation.count.create");
    io.github.onograph.metrics.incoming.cluster.PetConsensusLogApplied petConsensusLogApplied66 = new io.github.onograph.metrics.incoming.cluster.PetConsensusLogApplied();
    petConsensusLogApplied66.apldid((long) (short) 100);
    petConsensusLogApplied66.apldid(0L);
    petConsensusLogApplied66.apldid((long) 100);
    boolean boolean73 = metricsServiceExtensionFactory0.equals((java.lang.Object) 100);
    org.junit.Assert.assertNotNull(consensusMessageStats1);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertNotNull(timer3);
    org.junit.Assert.assertNotNull(timer4);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "globalMetrics" + "'", str6,
        "globalMetrics");
    org.junit.Assert.assertNotNull(globbingPatternArray15);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertEquals("'" + str37 + "' != '" + "globalMetrics" + "'", str37,
        "globalMetrics");
    org.junit.Assert.assertEquals("'" + str38 + "' != '" + "globalMetrics" + "'", str38,
        "globalMetrics");
    org.junit.Assert.assertNotNull(globbingPatternArray44);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
  }

  @Test
  public void test1727() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1727");
    }
    io.github.onograph.metrics.incoming.cluster.PetConsensusLogApplied petConsensusLogApplied0 = new io.github.onograph.metrics.incoming.cluster.PetConsensusLogApplied();
    petConsensusLogApplied0.apldid((long) (short) 100);
    petConsensusLogApplied0.apldid((long) (byte) 1);
  }

  @Test
  public void test1728() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1728");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats1 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long2 = consensusMessageStats1.dea();
    com.codahale.metrics.Timer timer3 = consensusMessageStats1.getTimer();
    com.codahale.metrics.Timer timer4 = consensusMessageStats1.getTimer();
    boolean boolean5 = metricsServiceExtensionFactory0.equals((java.lang.Object) timer4);
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray10 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList11 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        globbingPatternArray10);
    com.codahale.metrics.MetricRegistry metricRegistry13 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager14 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        metricRegistry13);
    org.neo4j.memory.MemoryPools memoryPools15 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl17 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager14, memoryPools15,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager14, storeEntityCountersSupplier18,
        pageCacheTracer19);
    org.neo4j.scheduler.JobScheduler jobScheduler21 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction22 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager14, jobScheduler21,
        fileSystemAbstraction22, databaseLayout23);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "", metricRegistryManager14, transactionLogCounters25);
    gdbTransactionLogAdapter26.start();
    boolean boolean28 = metricsServiceExtensionFactory0.equals(
        (java.lang.Object) gdbTransactionLogAdapter26);
    java.lang.String str29 = metricsServiceExtensionFactory0.toString();
    java.lang.String str30 = metricsServiceExtensionFactory0.toString();
    java.lang.String str31 = metricsServiceExtensionFactory0.toString();
    org.junit.Assert.assertNotNull(consensusMessageStats1);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertNotNull(timer3);
    org.junit.Assert.assertNotNull(timer4);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertNotNull(globbingPatternArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertEquals(
        "'" + str29 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str29, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals(
        "'" + str30 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str30, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals(
        "'" + str31 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str31, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
  }

  @Test
  public void test1729() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1729");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl extensionFactoryGdbMetricsImpl0 = new io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl();
    java.lang.String str1 = extensionFactoryGdbMetricsImpl0.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext2 = null;
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents3 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle4 = extensionFactoryGdbMetricsImpl0.newInstance(
        extensionContext2, dependentComponents3);
    java.lang.String str5 = extensionFactoryGdbMetricsImpl0.toString();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str1, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertNotNull(lifecycle4);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str5, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
  }

  @Test
  public void test1730() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1730");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10,
        jobScheduler16, fileSystemAbstraction17, databaseLayout18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter21 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager10, monitors20);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters22 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter23 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "", metricRegistryManager10, pageCacheCounters22);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "db.operation.count.create", metricRegistryManager10);
    jVMAdapterMBImpl24.start();
    try {
      jVMAdapterMBImpl24.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1731() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1731");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl((int) (short) -1);
    clusterMembersCount0.sembs((int) (byte) 1);
    clusterMembersCount0.secvg(false);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge9 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.secvg(false);
    clusterMembersCount0.sembs((int) ' ');
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge9);
  }

  @Test
  public void test1732() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1732");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier15 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter16 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl2, metricRegistryManager9,
        coreNodeLeaderCheckSupplier15);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager9,
        storeEntityCountersSupplier17, pageCacheTracer18);
    gdbStatsAdapter19.start();
    gdbStatsAdapter19.shutdown();
    try {
      gdbStatsAdapter19.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1733() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1733");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier19 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter20 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager13, webContainerThreadInfoSupplier19);
    org.neo4j.monitoring.Monitors monitors21 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager13, monitors21);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager13, storeEntityCountersSupplier23);
    org.neo4j.memory.MemoryPools memoryPools25 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl27 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager13,
        memoryPools25, "db.operation.count.stop");
    org.neo4j.monitoring.Monitors monitors28 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter29 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.query.execution", metricRegistryManager13, monitors28);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier30 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer31 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter32 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.node", metricRegistryManager13, storeEntityCountersSupplier30,
        pageCacheTracer31);
    org.neo4j.memory.MemoryPools memoryPools33 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl35 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "globalMetrics", metricRegistryManager13, memoryPools33, "pool.<pool>.<database>.");
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test1734() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1734");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl18 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier19 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager12,
        storeEntityCountersSupplier19, pageCacheTracer20);
    org.neo4j.memory.MemoryPools memoryPools22 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl24 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager12,
        memoryPools22, "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters25 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter26 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "dbms.pool.<pool>.db.operation.count.create", metricRegistryManager12,
        checkpointCounters25);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts27 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter28 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.operation.count.drop", metricRegistryManager12, databaseOperationCounts27);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters29 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter30 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "pool.<pool>.<database>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager12, transactionLogCounters29);
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1735() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1735");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl((int) (short) -1);
    clusterMembersCount0.sembs((int) (byte) 1);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge7 = clusterMembersCount0.covgGauge();
    clusterMembersCount0.secvg(true);
    clusterMembersCount0.seuehl((int) (byte) 0);
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge7);
  }

  @Test
  public void test1736() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1736");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier15 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter16 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl2, metricRegistryManager9,
        coreNodeLeaderCheckSupplier15);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl18 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "db.query.execution", metricRegistryManager9, monitors17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryExecutionMonitorMetricsImpl18.endFailure(executingQuery19,
        "causal_clustering.core.last_leader_message");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryExecutionMonitorMetricsImpl18.startExecution(executingQuery22);
    try {
      queryExecutionMonitorMetricsImpl18.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1737() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1737");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl17 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager11);
    org.neo4j.memory.MemoryPools memoryPools18 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl19 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "db.operation.count.start", metricRegistryManager11, memoryPools18);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl20 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "dbms.pool.<pool>.db.operation.count.failed", metricRegistryManager11);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter21 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "neo4j.count.node", monitors1, metricRegistryManager11);
    try {
      txCatchupAdapter21.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1738() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1738");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl8 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager7);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter9 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "dbms.pool.<pool>.db.operation.count.create", monitors1, metricRegistryManager7);
    try {
      java.util.SortedSet<java.lang.String> strSet10 = metricRegistryManager7.geneSortedSet();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test1739() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1739");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier18 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter19 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager12, webContainerThreadInfoSupplier18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager12, monitors20);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager12, storeEntityCountersSupplier22);
    org.neo4j.memory.MemoryPools memoryPools24 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl26 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager12,
        memoryPools24, "db.operation.count.stop");
    org.neo4j.monitoring.Monitors monitors27 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter28 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.query.execution", metricRegistryManager12, monitors27);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl29 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "dbms.pool.<pool>.vm.heap.max", metricRegistryManager12);
    jVMAdapterMBImpl29.start();
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1740() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1740");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray11 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList12 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean13 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList12,
        globbingPatternArray11);
    com.codahale.metrics.MetricRegistry metricRegistry14 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager15 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList12,
        metricRegistry14);
    org.neo4j.memory.MemoryPools memoryPools16 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl18 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager15, memoryPools16,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors19 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter20 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager15, monitors19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager15);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier22 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters23 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager15, transactionIdStoreSupplier22, transactionCounters23);
    org.neo4j.monitoring.Monitors monitors25 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter26 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "db.operation.count.stop", metricRegistryManager15, monitors25);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl27 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "vm.heap.used", metricRegistryManager15);
    org.neo4j.scheduler.JobScheduler jobScheduler28 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction29 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout30 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter31 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager15, jobScheduler28,
        fileSystemAbstraction29, databaseLayout30);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl32 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "db.operation.count.stop", metricRegistryManager15);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl33 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "dbms.pool.<pool>.db.operation.count.create", metricRegistryManager15);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters34 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter35 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "vm.heap.max", metricRegistryManager15, checkpointCounters34);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl36 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed",
        metricRegistryManager15);
    org.junit.Assert.assertNotNull(globbingPatternArray11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
  }

  @Test
  public void test1741() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1741");
    }
    org.neo4j.monitoring.Monitors monitors4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter16 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager11, monitors15);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter17 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "db.query.execution", monitors4, metricRegistryManager11);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl18 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "dbms.pool.<pool>.db.operation.count.failed", metricRegistryManager11);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager11, transactionLogCounters19);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "", metricRegistryManager11, databaseOperationCounts21);
    gdbActionsAdapter22.init();
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1742() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1742");
    }
    org.neo4j.monitoring.Monitors monitors4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager11);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter16 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.members", monitors4, metricRegistryManager11);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier17 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter18 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "db.query.execution", metricRegistryManager11, webContainerThreadInfoSupplier17);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters19 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter20 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "", metricRegistryManager11, pageCacheCounters19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "", metricRegistryManager11);
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1743() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1743");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    org.neo4j.scheduler.JobScheduler jobScheduler2 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction3 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout4 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter5 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager1, jobScheduler2,
        fileSystemAbstraction3, databaseLayout4);
    try {
      gdbStoreStatsAdapter5.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1744() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1744");
    }
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat0 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat0.marc();
    syncStat0.norlad();
    syncStat0.clerut();
    syncStat0.norlad();
    syncStat0.recnam();
    syncStat0.norlad();
  }

  @Test
  public void test1745() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1745");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.memory.MemoryPools memoryPools9 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl11 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager8, memoryPools9,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl12 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "db.operation.count.drop", metricRegistryManager8);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.operation.count.failed", metricRegistryManager8, databaseOperationCounts13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "globalMetrics", metricRegistryManager8, storeEntityCountersSupplier15);
    gdbElementStatsAdapter16.start();
    gdbElementStatsAdapter16.start();
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1746() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1746");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray1 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList2 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean3 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList2,
        globbingPatternArray1);
    com.codahale.metrics.MetricRegistry metricRegistry4 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager5 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList2,
        metricRegistry4);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList2,
        metricRegistry6);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList2,
        metricRegistry8);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList2,
        metricRegistry10);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList2,
        metricRegistry12);
    com.codahale.metrics.MetricRegistry metricRegistry14 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager15 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList2,
        metricRegistry14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter17 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager15, monitors16);
    org.junit.Assert.assertNotNull(globbingPatternArray1);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
  }

  @Test
  public void test1747() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1747");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents0 = null;
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext1 = null;
    io.github.onograph.metrics.gdb.GdbMetricsLifecycle gdbMetricsLifecycle2 = new io.github.onograph.metrics.gdb.GdbMetricsLifecycle(
        dependentComponents0, extensionContext1);
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.stop();
  }

  @Test
  public void test1748() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1748");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    livingCacheMeta0.seeec(100);
    livingCacheMeta0.sememt((int) (short) 1);
    livingCacheMeta0.sembe((long) 0);
    long long8 = livingCacheMeta0.getSizeCnt();
    livingCacheMeta0.sememt((int) (short) 1);
    livingCacheMeta0.setabys(0L);
    long long13 = livingCacheMeta0.gehs();
    long long14 = livingCacheMeta0.getSizeCnt();
    livingCacheMeta0.sememt((int) (byte) -1);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
  }

  @Test
  public void test1749() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1749");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.memory.MemoryPools memoryPools9 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl11 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager8, memoryPools9,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager8, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.scheduler.JobScheduler jobScheduler15 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager8, jobScheduler15,
        fileSystemAbstraction16, databaseLayout17);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl19 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "dbms.pool.<pool>.db.operation.count.failed", metricRegistryManager8);
    jVMAdapterThreadMXImpl19.start();
    jVMAdapterThreadMXImpl19.start();
    jVMAdapterThreadMXImpl19.start();
    try {
      jVMAdapterThreadMXImpl19.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1750() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1750");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager12, memoryPools13,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager12, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.monitoring.Monitors monitors19 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl20 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager12,
        monitors19);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier21 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter22 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitorsClusterConsensusImpl4,
        metricRegistryManager12, coreNodeLeaderCheckSupplier21);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager12,
        databaseOperationCounts23);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "databaseMetrics", metricRegistryManager12);
    org.neo4j.memory.MemoryPools memoryPools26 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl27 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "db.operation.count.recovered", metricRegistryManager12, memoryPools26);
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1751() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1751");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl extensionFactoryGdbMetricsImpl0 = new io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext1 = null;
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents2 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle3 = extensionFactoryGdbMetricsImpl0.newInstance(
        extensionContext1, dependentComponents2);
    java.lang.String str4 = extensionFactoryGdbMetricsImpl0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext5 = null;
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents6 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle7 = extensionFactoryGdbMetricsImpl0.newInstance(
        extensionContext5, dependentComponents6);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext8 = null;
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents9 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle10 = extensionFactoryGdbMetricsImpl0.newInstance(
        extensionContext8, dependentComponents9);
    java.lang.String str11 = extensionFactoryGdbMetricsImpl0.toString();
    java.lang.String str12 = extensionFactoryGdbMetricsImpl0.getName();
    java.lang.String str13 = extensionFactoryGdbMetricsImpl0.getName();
    org.junit.Assert.assertNotNull(lifecycle3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "databaseMetrics" + "'", str4,
        "databaseMetrics");
    org.junit.Assert.assertNotNull(lifecycle7);
    org.junit.Assert.assertNotNull(lifecycle10);
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str11, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "databaseMetrics" + "'", str12,
        "databaseMetrics");
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "databaseMetrics" + "'", str13,
        "databaseMetrics");
  }

  @Test
  public void test1752() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1752");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    livingCacheMeta0.seeec(100);
    long long4 = livingCacheMeta0.getLgBm();
    livingCacheMeta0.sememt((int) (short) -1);
    livingCacheMeta0.cacheMiss();
    livingCacheMeta0.seeec((int) (byte) -1);
    livingCacheMeta0.sememt((int) 'a');
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
  }

  @Test
  public void test1753() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1753");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl extensionFactoryGdbMetricsImpl0 = new io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl();
    java.lang.String str1 = extensionFactoryGdbMetricsImpl0.toString();
    java.lang.String str2 = extensionFactoryGdbMetricsImpl0.toString();
    java.lang.String str3 = extensionFactoryGdbMetricsImpl0.toString();
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl7 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray10 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList11 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        globbingPatternArray10);
    com.codahale.metrics.MetricRegistry metricRegistry13 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager14 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        metricRegistry13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter16 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager14, monitors15);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager14, storeEntityCountersSupplier17,
        pageCacheTracer18);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier20 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter21 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl7, metricRegistryManager14,
        coreNodeLeaderCheckSupplier20);
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter23 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager14, monitors22);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters24 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter25 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager14,
        transactionLogCounters24);
    gdbTransactionLogAdapter25.start();
    boolean boolean27 = extensionFactoryGdbMetricsImpl0.equals(
        (java.lang.Object) gdbTransactionLogAdapter25);
    org.neo4j.monitoring.Monitors monitors31 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray34 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList35 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean36 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList35,
        globbingPatternArray34);
    com.codahale.metrics.MetricRegistry metricRegistry37 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager38 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList35,
        metricRegistry37);
    org.neo4j.memory.MemoryPools memoryPools39 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl41 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager38, memoryPools39,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl42 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager38);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter43 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitors31, metricRegistryManager38);
    org.neo4j.monitoring.Monitors monitors44 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl45 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager38,
        monitors44);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl46 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager38);
    jVMAdapterGarbageCollectionImpl46.start();
    boolean boolean48 = extensionFactoryGdbMetricsImpl0.equals(
        (java.lang.Object) jVMAdapterGarbageCollectionImpl46);
    java.lang.String str49 = extensionFactoryGdbMetricsImpl0.toString();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str1, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str2, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str3, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertNotNull(globbingPatternArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertNotNull(globbingPatternArray34);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    org.junit.Assert.assertEquals(
        "'" + str49 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str49, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
  }

  @Test
  public void test1754() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1754");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl2 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager1);
    try {
      jVMAdapterGarbageCollectionImpl2.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1755() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1755");
    }
    org.neo4j.monitoring.Monitors monitors6 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.memory.MemoryPools memoryPools14 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl16 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager13, memoryPools14,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl17 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager13);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter18 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.members", monitors6, metricRegistryManager13);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier19 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter20 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "db.query.execution", metricRegistryManager13, webContainerThreadInfoSupplier19);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters21 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter22 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "", metricRegistryManager13, pageCacheCounters21);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, databaseOperationCounts23);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "pool.<pool>.<database>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager13, databaseOperationCounts25);
    org.neo4j.monitoring.Monitors monitors27 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter28 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "causal_clustering.core.discovery.cluster.members", metricRegistryManager13, monitors27);
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test1756() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1756");
    }
    org.neo4j.monitoring.Monitors monitors3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter12 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors3, metricRegistryManager9);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters13 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter14 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "db.operation.count.recovered", metricRegistryManager9, pageCacheCounters13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter16 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager9,
        monitors15);
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1757() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1757");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl((int) (short) -1);
    clusterMembersCount0.seuehl((int) (short) 100);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge7 = clusterMembersCount0.mebsGauge();
    clusterMembersCount0.sembs((int) (byte) -1);
    clusterMembersCount0.seuehl((int) (byte) -1);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge12 = clusterMembersCount0.mebsGauge();
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge7);
    org.junit.Assert.assertNotNull(intGauge12);
  }

  @Test
  public void test1758() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1758");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents0 = null;
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext1 = null;
    io.github.onograph.metrics.gdb.GdbMetricsLifecycle gdbMetricsLifecycle2 = new io.github.onograph.metrics.gdb.GdbMetricsLifecycle(
        dependentComponents0, extensionContext1);
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.stop();
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.shutdown();
  }

  @Test
  public void test1759() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1759");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl8 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray11 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList12 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean13 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList12,
        globbingPatternArray11);
    com.codahale.metrics.MetricRegistry metricRegistry14 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager15 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList12,
        metricRegistry14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter17 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager15, monitors16);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager15, storeEntityCountersSupplier18,
        pageCacheTracer19);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier21 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter22 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl8, metricRegistryManager15,
        coreNodeLeaderCheckSupplier21);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier23 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer24 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter25 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager15,
        storeEntityCountersSupplier23, pageCacheTracer24);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters26 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter27 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager15, transactionLogCounters26);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts28 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter29 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "neo4j.count.node", metricRegistryManager15, databaseOperationCounts28);
    org.neo4j.monitoring.Monitors monitors30 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl31 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "db.operation.count.start", metricRegistryManager15, monitors30);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl32 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "dbms.pool.<pool>.vm.heap.max", metricRegistryManager15);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters33 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter34 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "", metricRegistryManager15, checkpointCounters33);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl35 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "dbms.pool.<pool>.dbms.pool.<pool>.vm.heap.max", metricRegistryManager15);
    try {
      jVMAdapterFileStatImpl35.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
  }

  @Test
  public void test1760() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1760");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager9, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager9, jobScheduler16,
        fileSystemAbstraction17, databaseLayout18);
    org.neo4j.scheduler.JobScheduler jobScheduler20 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "hi!", metricRegistryManager9, jobScheduler20, fileSystemAbstraction21, databaseLayout22);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "", metricRegistryManager9);
    java.lang.String str26 = jVMAdapterPoolImpl24.moydmdmineString(
        "dbms.pool.<pool>.db.operation.count.failed");
    jVMAdapterPoolImpl24.start();
    java.lang.String str29 = jVMAdapterPoolImpl24.moydmdmineString("vm.heap.used");
    jVMAdapterPoolImpl24.init();
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str26 + "' != '" + "dbms.pool.<pool>.db.operation.count.failed" + "'", str26,
        "dbms.pool.<pool>.db.operation.count.failed");
    org.junit.Assert.assertEquals("'" + str29 + "' != '" + "vm.heap.used" + "'", str29,
        "vm.heap.used");
  }

  @Test
  public void test1761() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1761");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager7, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl15 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager7,
        monitors14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery16,
        "pool.<pool>.<database>.db.operation.count.failed");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery19, "db.query.execution");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryExecutionMonitorMetricsImpl15.startExecution(executingQuery22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery24, "db.operation.count.start");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryExecutionMonitorMetricsImpl15.beforeEnd(executingQuery27, true);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery30,
        "dbms.pool.<pool>.db.operation.count.create");
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test1762() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1762");
    }
    org.neo4j.monitoring.Monitors monitors5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager12, memoryPools13,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager12);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter17 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitors5, metricRegistryManager12);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager12,
        databaseOperationCounts18);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters20 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter21 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager12, checkpointCounters20);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "db.operation.count.drop", metricRegistryManager12, transactionLogCounters22);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier24 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter25 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "pool.<pool>.<database>.vm.heap.used", metricRegistryManager12,
        webContainerThreadInfoSupplier24);
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1763() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1763");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "db.operation.count.failed", metricRegistryManager9);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager9);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl18 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "pool.<pool>.<database>.db.query.execution", metricRegistryManager9, monitors17);
    try {
      jVMAdapterSDPImpl18.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1764() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1764");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10,
        jobScheduler16, fileSystemAbstraction17, databaseLayout18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter21 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager10, monitors20);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters22 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter23 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "", metricRegistryManager10, pageCacheCounters22);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters24 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter25 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "vm.heap.max", metricRegistryManager10, transactionLogCounters24);
    gdbTransactionLogAdapter25.start();
    gdbTransactionLogAdapter25.start();
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1765() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1765");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier19 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter20 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager13, webContainerThreadInfoSupplier19);
    org.neo4j.monitoring.Monitors monitors21 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager13, monitors21);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager13, storeEntityCountersSupplier23);
    org.neo4j.scheduler.JobScheduler jobScheduler25 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout27 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter28 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "", metricRegistryManager13, jobScheduler25, fileSystemAbstraction26, databaseLayout27);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters29 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter30 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager13,
        pageCacheCounters29);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier31 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter32 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "hi!", metricRegistryManager13, storeEntityCountersSupplier31);
    org.neo4j.monitoring.Monitors monitors33 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl34 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.query.execution", metricRegistryManager13,
        monitors33);
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test1766() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1766");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter16 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager11, monitors15);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl17 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.recovered", metricRegistryManager11);
    org.neo4j.memory.MemoryPools memoryPools18 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl20 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager11, memoryPools18,
        "db.operation.count.create");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "db.operation.count.create", metricRegistryManager11);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "dbms.pool.<pool>.db.operation.count.create", metricRegistryManager11);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier23 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters24 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter25 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "", metricRegistryManager11, transactionIdStoreSupplier23, transactionCounters24);
    java.lang.Class<?> wildcardClass26 = metricRegistryManager11.getClass();
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertNotNull(wildcardClass26);
  }

  @Test
  public void test1767() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1767");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "db.operation.count.failed", metricRegistryManager10);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter17 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", monitors2, metricRegistryManager10);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl18 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager10);
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1768() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1768");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gems();
    livingCacheMeta0.sememt((int) (byte) 0);
    livingCacheMeta0.sememt((int) (short) 0);
    long long8 = livingCacheMeta0.gehs();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
  }

  @Test
  public void test1769() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1769");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager7, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl15 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager7,
        monitors14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery16,
        "pool.<pool>.<database>.db.operation.count.failed");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryExecutionMonitorMetricsImpl15.startProcessing(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryExecutionMonitorMetricsImpl15.beforeEnd(executingQuery21, false);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryExecutionMonitorMetricsImpl15.beforeEnd(executingQuery24, false);
    try {
      queryExecutionMonitorMetricsImpl15.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test1770() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1770");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager9, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager9, jobScheduler16,
        fileSystemAbstraction17, databaseLayout18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager9, monitors20);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager9);
    java.lang.String str24 = jVMAdapterMBImpl22.moydmdmineString(
        "dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed");
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals("'" + str24 + "' != '"
            + "dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed"
            + "'", str24,
        "dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed");
  }

  @Test
  public void test1771() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1771");
    }
    org.neo4j.monitoring.Monitors monitors5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager12, memoryPools13,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager12);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter17 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitors5, metricRegistryManager12);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager12,
        databaseOperationCounts18);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier20 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters21 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.start", metricRegistryManager12,
        transactionIdStoreSupplier20, transactionCounters21);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters23 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter24 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "globalMetrics", metricRegistryManager12, pageCacheCounters23);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier25 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters26 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter27 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, transactionIdStoreSupplier25, transactionCounters26);
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1772() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1772");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray10 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList11 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        globbingPatternArray10);
    com.codahale.metrics.MetricRegistry metricRegistry13 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager14 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        metricRegistry13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter16 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager14, monitors15);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager14, storeEntityCountersSupplier17,
        pageCacheTracer18);
    org.neo4j.scheduler.JobScheduler jobScheduler20 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager14,
        jobScheduler20, fileSystemAbstraction21, databaseLayout22);
    org.neo4j.monitoring.Monitors monitors24 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter25 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager14, monitors24);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters26 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter27 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "", metricRegistryManager14, pageCacheCounters26);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl28 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "db.operation.count.create", metricRegistryManager14);
    org.neo4j.monitoring.Monitors monitors29 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter30 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.query.execution", metricRegistryManager14, monitors29);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter31 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "db.operation.count.drop", monitors2, metricRegistryManager14);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier32 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters33 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter34 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager14,
        transactionIdStoreSupplier32, transactionCounters33);
    try {
      globalTransactionStatsAdapter34.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
  }

  @Test
  public void test1773() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1773");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl extensionFactoryGdbMetricsImpl0 = new io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl();
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray1 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList2 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean3 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList2,
        globbingPatternArray1);
    com.codahale.metrics.MetricRegistry metricRegistry4 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager5 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList2,
        metricRegistry4);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList2,
        metricRegistry6);
    boolean boolean8 = extensionFactoryGdbMetricsImpl0.equals((java.lang.Object) metricRegistry6);
    java.lang.String str9 = extensionFactoryGdbMetricsImpl0.getName();
    java.lang.String str10 = extensionFactoryGdbMetricsImpl0.toString();
    org.junit.Assert.assertNotNull(globbingPatternArray1);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "databaseMetrics" + "'", str9,
        "databaseMetrics");
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str10, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
  }

  @Test
  public void test1774() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1774");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.monitoring.Monitors monitors4 = null;
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.monitoring.Monitors monitors10 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray14 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList15 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean16 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList15,
        globbingPatternArray14);
    com.codahale.metrics.MetricRegistry metricRegistry17 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager18 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList15,
        metricRegistry17);
    org.neo4j.monitoring.Monitors monitors19 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter20 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager18, monitors19);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier21 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager18, storeEntityCountersSupplier21,
        pageCacheTracer22);
    org.neo4j.scheduler.JobScheduler jobScheduler24 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction25 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout26 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter27 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager18,
        jobScheduler24, fileSystemAbstraction25, databaseLayout26);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter28 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "", monitors10, metricRegistryManager18);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier29 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter30 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager18, webContainerThreadInfoSupplier29);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter31 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "db.operation.count.stop", monitors7, metricRegistryManager18);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl32 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "", metricRegistryManager18);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter33 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "dbms.pool.<pool>.db.operation.count.create", monitors4, metricRegistryManager18);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter34 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.db.operation.count.failed", monitors2,
        metricRegistryManager18);
    org.neo4j.memory.MemoryPools memoryPools35 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl37 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed",
        metricRegistryManager18, memoryPools35, "db.operation.count.drop");
    org.junit.Assert.assertNotNull(globbingPatternArray14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
  }

  @Test
  public void test1775() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1775");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager11, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager11, databaseOperationCounts18);
    org.neo4j.memory.MemoryPools memoryPools20 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl22 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager11, memoryPools20,
        "db.operation.count.create");
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager11, monitors23);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager11,
        transactionLogCounters25);
    org.neo4j.scheduler.JobScheduler jobScheduler27 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction28 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout29 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter30 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "pool.<pool>.<database>.pool.<pool>.<database>.db.operation.count.drop",
        metricRegistryManager11, jobScheduler27, fileSystemAbstraction28, databaseLayout29);
    try {
      gdbStoreStatsAdapter30.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1776() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1776");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager11,
        jobScheduler17, fileSystemAbstraction18, databaseLayout19);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager11,
        storeEntityCountersSupplier21);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "dbms.pool.<pool>.vm.heap.used", metricRegistryManager11);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter24 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "db.operation.count.create", monitors1, metricRegistryManager11);
    try {
      readReplicaNodeAdapter24.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1777() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1777");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl17 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager11);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl18 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "db.operation.count.start", metricRegistryManager11);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl19 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager11);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier20 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters21 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "dbms.pool.<pool>.db.operation.count.failed", metricRegistryManager11,
        transactionIdStoreSupplier20, transactionCounters21);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship",
        metricRegistryManager11, databaseOperationCounts23);
    gdbActionsAdapter24.start();
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1778() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1778");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager12, memoryPools13,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager12, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager12, databaseOperationCounts19);
    org.neo4j.memory.MemoryPools memoryPools21 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl23 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager12, memoryPools21,
        "db.operation.count.create");
    org.neo4j.monitoring.Monitors monitors24 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager12, monitors24);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters26 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter27 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager12,
        transactionLogCounters26);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters28 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter29 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "db.query.execution", metricRegistryManager12, pageCacheCounters28);
    boolean boolean31 = metricRegistryManager12.isEnlForSt("vm.heap.max");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl32 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager12);
    java.lang.String str34 = jVMAdapterPoolImpl32.moydmdmineString(
        "pool.<pool>.<database>.causal_clustering.core.discovery.cluster.converged");
    jVMAdapterPoolImpl32.start();
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertEquals("'" + str34 + "' != '"
            + "pool.<pool>.<database>.causal_clustering.core.discovery.cluster.converged" + "'", str34,
        "pool.<pool>.<database>.causal_clustering.core.discovery.cluster.converged");
  }

  @Test
  public void test1779() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1779");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl17 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager11,
        storeEntityCountersSupplier18, pageCacheTracer19);
    org.neo4j.memory.MemoryPools memoryPools21 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl23 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager11,
        memoryPools21, "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "dbms.pool.<pool>.db.operation.count.failed", metricRegistryManager11);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier25 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter26 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.used", metricRegistryManager11, webContainerThreadInfoSupplier25);
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1780() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1780");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    livingCacheMeta0.sememt((int) (byte) 100);
    livingCacheMeta0.cacheMiss();
    livingCacheMeta0.cacheMiss();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
  }

  @Test
  public void test1781() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1781");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager10, jobScheduler17,
        fileSystemAbstraction18, databaseLayout19);
    org.neo4j.scheduler.JobScheduler jobScheduler21 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction22 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "hi!", metricRegistryManager10, jobScheduler21, fileSystemAbstraction22, databaseLayout23);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "", metricRegistryManager10);
    org.neo4j.monitoring.Monitors monitors26 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl27 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship",
        metricRegistryManager10, monitors26);
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1782() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1782");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusElectionTerm consensusElectionTerm0 = new io.github.onograph.metrics.incoming.cluster.ConsensusElectionTerm();
    consensusElectionTerm0.termLength((long) (byte) 100);
    long long3 = consensusElectionTerm0.getTermLength();
    long long4 = consensusElectionTerm0.getTermLength();
    consensusElectionTerm0.termLength((long) (short) -1);
    long long7 = consensusElectionTerm0.getTermLength();
    consensusElectionTerm0.termLength((long) (short) 1);
    consensusElectionTerm0.termLength((long) '4');
    long long12 = consensusElectionTerm0.getTermLength();
    consensusElectionTerm0.termLength(52L);
    consensusElectionTerm0.termLength((long) '4');
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 100L + "'", long3 == 100L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 100L + "'", long4 == 100L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 52L + "'", long12 == 52L);
  }

  @Test
  public void test1783() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1783");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier18 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter19 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager12, webContainerThreadInfoSupplier18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager12, monitors20);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager12, storeEntityCountersSupplier22);
    org.neo4j.memory.MemoryPools memoryPools24 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl26 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager12,
        memoryPools24, "db.operation.count.stop");
    org.neo4j.monitoring.Monitors monitors27 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter28 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.query.execution", metricRegistryManager12, monitors27);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl29 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "dbms.pool.<pool>.vm.heap.max", metricRegistryManager12);
    jVMAdapterMBImpl29.shutdown();
    java.lang.String str32 = jVMAdapterMBImpl29.moydmdmineString(
        "dbms.pool.<pool>.dbms.pool.<pool>.vm.heap.max");
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertEquals(
        "'" + str32 + "' != '" + "dbms.pool.<pool>.dbms.pool.<pool>.vm.heap.max" + "'", str32,
        "dbms.pool.<pool>.dbms.pool.<pool>.vm.heap.max");
  }

  @Test
  public void test1784() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1784");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    livingCacheMeta0.sememt((int) '#');
    livingCacheMeta0.cacheMiss();
    long long5 = livingCacheMeta0.getICe();
    long long6 = livingCacheMeta0.getICe();
    livingCacheMeta0.cacheMiss();
    livingCacheMeta0.sememt((int) 'a');
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
  }

  @Test
  public void test1785() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1785");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory2 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager9, monitors13);
    boolean boolean15 = metricsServiceExtensionFactory2.equals(
        (java.lang.Object) metricRegistryManager9);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager9);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl18 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager9, monitors17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryExecutionMonitorMetricsImpl18.startExecution(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryExecutionMonitorMetricsImpl18.startProcessing(executingQuery21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryExecutionMonitorMetricsImpl18.beforeEnd(executingQuery23, false);
    java.lang.String str27 = queryExecutionMonitorMetricsImpl18.moydmdmineString(
        "dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryExecutionMonitorMetricsImpl18.beforeEnd(executingQuery28, false);
    java.lang.String str32 = queryExecutionMonitorMetricsImpl18.moydmdmineString(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed");
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertEquals(
        "'" + str27 + "' != '" + "dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data"
            + "'", str27, "dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data");
    org.junit.Assert.assertEquals(
        "'" + str32 + "' != '" + "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed"
            + "'", str32, "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed");
  }

  @Test
  public void test1786() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1786");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10,
        jobScheduler16, fileSystemAbstraction17, databaseLayout18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter21 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager10, monitors20);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship",
        metricRegistryManager10, databaseOperationCounts22);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager10);
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1787() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1787");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier18 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter19 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl5, metricRegistryManager12,
        coreNodeLeaderCheckSupplier18);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier20 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager12,
        storeEntityCountersSupplier20, pageCacheTracer21);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, transactionLogCounters23);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "neo4j.count.node", metricRegistryManager12, databaseOperationCounts25);
    org.neo4j.monitoring.Monitors monitors27 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl28 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "db.operation.count.start", metricRegistryManager12, monitors27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryExecutionMonitorMetricsImpl28.startExecution(executingQuery29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryExecutionMonitorMetricsImpl28.beforeEnd(executingQuery31, true);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    queryExecutionMonitorMetricsImpl28.beforeEnd(executingQuery34, false);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryExecutionMonitorMetricsImpl28.startProcessing(executingQuery37);
    java.lang.String str40 = queryExecutionMonitorMetricsImpl28.moydmdmineString("vm.heap.used");
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertEquals("'" + str40 + "' != '" + "vm.heap.used" + "'", str40,
        "vm.heap.used");
  }

  @Test
  public void test1788() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1788");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl extensionFactoryGdbMetricsImpl0 = new io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl();
    java.lang.String str1 = extensionFactoryGdbMetricsImpl0.getName();
    io.github.onograph.metrics.incoming.cluster.SubmittedConsensusLogCommitIndexMetric submittedConsensusLogCommitIndexMetric2 = new io.github.onograph.metrics.incoming.cluster.SubmittedConsensusLogCommitIndexMetric();
    submittedConsensusLogCommitIndexMetric2.comie(0L);
    long long5 = submittedConsensusLogCommitIndexMetric2.comie();
    submittedConsensusLogCommitIndexMetric2.comie((long) (byte) 0);
    long long8 = submittedConsensusLogCommitIndexMetric2.comie();
    boolean boolean9 = extensionFactoryGdbMetricsImpl0.equals(
        (java.lang.Object) submittedConsensusLogCommitIndexMetric2);
    java.lang.String str10 = extensionFactoryGdbMetricsImpl0.getName();
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory11 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray14 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList15 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean16 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList15,
        globbingPatternArray14);
    com.codahale.metrics.MetricRegistry metricRegistry17 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager18 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList15,
        metricRegistry17);
    org.neo4j.memory.MemoryPools memoryPools19 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl21 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager18, memoryPools19,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter23 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager18, monitors22);
    boolean boolean24 = metricsServiceExtensionFactory11.equals(
        (java.lang.Object) metricRegistryManager18);
    boolean boolean25 = extensionFactoryGdbMetricsImpl0.equals(
        (java.lang.Object) metricsServiceExtensionFactory11);
    java.lang.String str26 = extensionFactoryGdbMetricsImpl0.toString();
    java.lang.String str27 = extensionFactoryGdbMetricsImpl0.toString();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "databaseMetrics" + "'", str1,
        "databaseMetrics");
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "databaseMetrics" + "'", str10,
        "databaseMetrics");
    org.junit.Assert.assertNotNull(globbingPatternArray14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertEquals(
        "'" + str26 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str26, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertEquals(
        "'" + str27 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str27, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
  }

  @Test
  public void test1789() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1789");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl2 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.start", metricRegistryManager1);
    jVMAdapterGarbageCollectionImpl2.init();
    java.lang.String str5 = jVMAdapterGarbageCollectionImpl2.moydmdmineString(
        "pool.<pool>.<database>.pool.<pool>.<database>.db.operation.count.drop");
    org.junit.Assert.assertEquals("'" + str5 + "' != '"
            + "pool.<pool>.<database>.pool.<pool>.<database>.db.operation.count.drop" + "'", str5,
        "pool.<pool>.<database>.pool.<pool>.<database>.db.operation.count.drop");
  }

  @Test
  public void test1790() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1790");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.memory.MemoryPools memoryPools9 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl11 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager8, memoryPools9,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager8, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.scheduler.JobScheduler jobScheduler15 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager8, jobScheduler15,
        fileSystemAbstraction16, databaseLayout17);
    org.neo4j.monitoring.Monitors monitors19 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl20 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "", metricRegistryManager8, monitors19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryExecutionMonitorMetricsImpl20.beforeEnd(executingQuery21, true);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryExecutionMonitorMetricsImpl20.startExecution(executingQuery24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryExecutionMonitorMetricsImpl20.startProcessing(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryExecutionMonitorMetricsImpl20.beforeEnd(executingQuery28, false);
    try {
      queryExecutionMonitorMetricsImpl20.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1791() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1791");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl14 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "db.operation.count.drop", metricRegistryManager10);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.operation.count.failed", metricRegistryManager10, databaseOperationCounts15);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "globalMetrics", metricRegistryManager10, storeEntityCountersSupplier17);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier19 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "pool.<pool>.<database>.db.operation.count.create", metricRegistryManager10,
        storeEntityCountersSupplier19, pageCacheTracer20);
    org.neo4j.memory.MemoryPools memoryPools22 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl23 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "pool.<pool>.<database>.vm.heap.used", metricRegistryManager10, memoryPools22);
    java.lang.String str25 = memoryPoolsAdapterNeoStackImpl23.moydmdmineString(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed");
    try {
      memoryPoolsAdapterNeoStackImpl23.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertEquals("'" + str25 + "' != '"
            + "dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed"
            + "'", str25,
        "dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed");
  }

  @Test
  public void test1792() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1792");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10,
        jobScheduler16, fileSystemAbstraction17, databaseLayout18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter21 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager10, monitors20);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters22 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter23 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "", metricRegistryManager10, pageCacheCounters22);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "db.operation.count.create", metricRegistryManager10);
    jVMAdapterMBImpl24.start();
    jVMAdapterMBImpl24.start();
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1793() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1793");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.monitoring.Monitors monitors4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter16 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager11, monitors15);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter17 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "db.query.execution", monitors4, metricRegistryManager11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "globalMetrics", metricRegistryManager11, storeEntityCountersSupplier18);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter20 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed", monitors1,
        metricRegistryManager11);
    try {
      txCatchupAdapter20.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1794() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1794");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl extensionFactoryGdbMetricsImpl0 = new io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl();
    java.lang.String str1 = extensionFactoryGdbMetricsImpl0.getName();
    io.github.onograph.metrics.incoming.cluster.SubmittedConsensusLogCommitIndexMetric submittedConsensusLogCommitIndexMetric2 = new io.github.onograph.metrics.incoming.cluster.SubmittedConsensusLogCommitIndexMetric();
    submittedConsensusLogCommitIndexMetric2.comie(0L);
    long long5 = submittedConsensusLogCommitIndexMetric2.comie();
    submittedConsensusLogCommitIndexMetric2.comie((long) (byte) 0);
    long long8 = submittedConsensusLogCommitIndexMetric2.comie();
    boolean boolean9 = extensionFactoryGdbMetricsImpl0.equals(
        (java.lang.Object) submittedConsensusLogCommitIndexMetric2);
    java.lang.String str10 = extensionFactoryGdbMetricsImpl0.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext11 = null;
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents12 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle13 = extensionFactoryGdbMetricsImpl0.newInstance(
        extensionContext11, dependentComponents12);
    java.lang.String str14 = extensionFactoryGdbMetricsImpl0.toString();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "databaseMetrics" + "'", str1,
        "databaseMetrics");
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str10, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertNotNull(lifecycle13);
    org.junit.Assert.assertEquals(
        "'" + str14 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str14, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
  }

  @Test
  public void test1795() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1795");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray10 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList11 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        globbingPatternArray10);
    com.codahale.metrics.MetricRegistry metricRegistry13 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager14 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        metricRegistry13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter16 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager14, monitors15);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager14, storeEntityCountersSupplier17,
        pageCacheTracer18);
    org.neo4j.scheduler.JobScheduler jobScheduler20 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager14,
        jobScheduler20, fileSystemAbstraction21, databaseLayout22);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters24 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter25 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager14,
        transactionLogCounters24);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier26 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter27 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "vm.heap.committed", monitorsClusterConsensusImpl5, metricRegistryManager14,
        coreNodeLeaderCheckSupplier26);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl28 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier29 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter30 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager14,
        storeEntityCountersSupplier29);
    org.neo4j.memory.MemoryPools memoryPools31 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl32 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "pool.<pool>.<database>.db.operation.count.drop", metricRegistryManager14, memoryPools31);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier33 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter34 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "dbms.pool.<pool>.causal_clustering.core.discovery.cluster.converged",
        metricRegistryManager14, storeEntityCountersSupplier33);
    gdbElementStatsAdapter34.start();
    org.junit.Assert.assertNotNull(globbingPatternArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
  }

  @Test
  public void test1796() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1796");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.scheduler.JobScheduler jobScheduler19 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager13,
        jobScheduler19, fileSystemAbstraction20, databaseLayout21);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter24 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager13, monitors23);
    org.neo4j.memory.MemoryPools memoryPools25 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl26 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "hi!", metricRegistryManager13, memoryPools25);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier27 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters28 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter29 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager13,
        transactionIdStoreSupplier27, transactionCounters28);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier30 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter31 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "pool.<pool>.<database>.db.operation.count.start", monitorsClusterConsensusImpl2,
        metricRegistryManager13, coreNodeLeaderCheckSupplier30);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters32 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter33 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager13,
        transactionLogCounters32);
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test1797() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1797");
    }
    org.neo4j.monitoring.Monitors monitors3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl14 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter15 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitors3, metricRegistryManager10);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager10,
        databaseOperationCounts16);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "db.query.execution", metricRegistryManager10, transactionLogCounters18);
    try {
      gdbTransactionLogAdapter19.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1798() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1798");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    livingCacheMeta0.seeec(100);
    livingCacheMeta0.seeec((int) (byte) 0);
    long long6 = livingCacheMeta0.getICe();
    livingCacheMeta0.sememt((int) (short) 100);
    long long9 = livingCacheMeta0.getICe();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
  }

  @Test
  public void test1799() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1799");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager11, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.scheduler.JobScheduler jobScheduler18 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction19 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager11, jobScheduler18,
        fileSystemAbstraction19, databaseLayout20);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "vm.heap.max", metricRegistryManager11);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier23 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter24 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.committed", metricRegistryManager11, webContainerThreadInfoSupplier23);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier25 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters26 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter27 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager11,
        transactionIdStoreSupplier25, transactionCounters26);
    org.neo4j.scheduler.JobScheduler jobScheduler28 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction29 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout30 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter31 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "", metricRegistryManager11, jobScheduler28, fileSystemAbstraction29, databaseLayout30);
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1800() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1800");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gems();
    livingCacheMeta0.sememt((int) (byte) 0);
    livingCacheMeta0.seeec(10);
    long long8 = livingCacheMeta0.getIEm();
    long long9 = livingCacheMeta0.getSizeCnt();
    long long10 = livingCacheMeta0.getICe();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10L + "'", long10 == 10L);
  }

  @Test
  public void test1801() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1801");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10,
        jobScheduler16, fileSystemAbstraction17, databaseLayout18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter21 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager10, monitors20);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters22 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter23 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "", metricRegistryManager10, pageCacheCounters22);
    org.neo4j.memory.MemoryPools memoryPools24 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl25 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools24);
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1802() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1802");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl14 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "db.operation.count.drop", metricRegistryManager10);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.operation.count.failed", metricRegistryManager10, databaseOperationCounts15);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "", metricRegistryManager10, transactionLogCounters17);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter19 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "pool.<pool>.<database>.causal_clustering.core.discovery.cluster.converged", monitors1,
        metricRegistryManager10);
    try {
      readReplicaNodeAdapter19.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1803() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1803");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    org.neo4j.memory.MemoryPools memoryPools2 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl4 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "pool.<pool>.<database>.db.operation.count.drop", metricRegistryManager1, memoryPools2,
        "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.drop");
  }

  @Test
  public void test1804() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1804");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long1 = consensusMessageStats0.dea();
    com.codahale.metrics.Timer timer2 = consensusMessageStats0.getTimer();
    com.codahale.metrics.Timer timer3 = consensusMessageStats0.getTimer();
    java.time.Duration duration4 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats0.sedaForDu(duration4);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats6 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType7 = null;
    com.codahale.metrics.Timer timer8 = consensusMessageStats6.getTimer(raftConsensusMessageType7);
    long long9 = consensusMessageStats6.dea();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats10 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType11 = null;
    com.codahale.metrics.Timer timer12 = consensusMessageStats10.getTimer(
        raftConsensusMessageType11);
    long long13 = consensusMessageStats10.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType14 = null;
    com.codahale.metrics.Timer timer15 = consensusMessageStats10.getTimer(
        raftConsensusMessageType14);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType16 = null;
    com.codahale.metrics.Timer timer17 = consensusMessageStats10.getTimer(
        raftConsensusMessageType16);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType18 = null;
    com.codahale.metrics.Timer timer19 = consensusMessageStats10.getTimer(
        raftConsensusMessageType18);
    java.time.Duration duration20 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats10.sedaForDu(duration20);
    consensusMessageStats6.sedaForDu(duration20);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType23 = null;
    try {
      consensusMessageStats0.upateForCoDu(duration20, raftConsensusMessageType23);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertNotNull(timer2);
    org.junit.Assert.assertNotNull(timer3);
    org.junit.Assert.assertNotNull(duration4);
    org.junit.Assert.assertNotNull(consensusMessageStats6);
    org.junit.Assert.assertNull(timer8);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    org.junit.Assert.assertNotNull(consensusMessageStats10);
    org.junit.Assert.assertNull(timer12);
    org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    org.junit.Assert.assertNull(timer15);
    org.junit.Assert.assertNull(timer17);
    org.junit.Assert.assertNull(timer19);
    org.junit.Assert.assertNotNull(duration20);
  }

  @Test
  public void test1805() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1805");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager10, jobScheduler17,
        fileSystemAbstraction18, databaseLayout19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager10);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.failed", metricRegistryManager10);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl24 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager10, monitors23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryExecutionMonitorMetricsImpl24.startProcessing(executingQuery25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryExecutionMonitorMetricsImpl24.beforeEnd(executingQuery27, true);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryExecutionMonitorMetricsImpl24.startExecution(executingQuery30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryExecutionMonitorMetricsImpl24.startExecution(executingQuery32);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    queryExecutionMonitorMetricsImpl24.startExecution(executingQuery34);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery36 = null;
    queryExecutionMonitorMetricsImpl24.beforeEnd(executingQuery36, false);
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1806() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1806");
    }
    io.github.onograph.metrics.MetricsReportProvider metricsReportProvider0 = new io.github.onograph.metrics.MetricsReportProvider();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    metricsReportProvider0.init(fileSystemAbstraction1, "", config3, path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    metricsReportProvider0.init(fileSystemAbstraction6, "db.operation.count.start", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    metricsReportProvider0.init(fileSystemAbstraction11,
        "pool.<pool>.<database>.pool.<pool>.<database>.db.operation.count.failed", config13,
        path14);
  }

  @Test
  public void test1807() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1807");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.memory.MemoryPools memoryPools9 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl11 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager8, memoryPools9,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager8, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.scheduler.JobScheduler jobScheduler15 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager8, jobScheduler15,
        fileSystemAbstraction16, databaseLayout17);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl19 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager8);
    try {
      jVMAdapterFileStatImpl19.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1808() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1808");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray11 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList12 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean13 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList12,
        globbingPatternArray11);
    com.codahale.metrics.MetricRegistry metricRegistry14 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager15 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList12,
        metricRegistry14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter17 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager15, monitors16);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager15, storeEntityCountersSupplier18,
        pageCacheTracer19);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier21 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter22 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager15, webContainerThreadInfoSupplier21);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager15, monitors23);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager15, storeEntityCountersSupplier25);
    org.neo4j.memory.MemoryPools memoryPools27 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl29 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager15,
        memoryPools27, "db.operation.count.stop");
    org.neo4j.monitoring.Monitors monitors30 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter31 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.query.execution", metricRegistryManager15, monitors30);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl32 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "dbms.pool.<pool>.vm.heap.max", metricRegistryManager15);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters33 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter34 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "pool.<pool>.<database>.vm.heap.used", metricRegistryManager15, transactionLogCounters33);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter35 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "dbms.pool.<pool>.db.operation.count.failed", monitors1, metricRegistryManager15);
    try {
      discoveryCoreNodeAdapter35.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
  }

  @Test
  public void test1809() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1809");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusLogAdditions consensusLogAdditions0 = new io.github.onograph.metrics.incoming.cluster.ConsensusLogAdditions();
    long long1 = consensusLogAdditions0.apeie();
    long long2 = consensusLogAdditions0.apeie();
    long long3 = consensusLogAdditions0.apeie();
    long long4 = consensusLogAdditions0.apeie();
    long long5 = consensusLogAdditions0.apeie();
    consensusLogAdditions0.apeie((long) '#');
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
  }

  @Test
  public void test1810() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1810");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10,
        jobScheduler16, fileSystemAbstraction17, databaseLayout18);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10,
        storeEntityCountersSupplier20);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager10);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters23 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter24 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "", metricRegistryManager10, checkpointCounters23);
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1811() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1811");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.monitoring.Monitors monitors3 = null;
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray12 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList13 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean14 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList13,
        globbingPatternArray12);
    com.codahale.metrics.MetricRegistry metricRegistry15 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager16 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList13,
        metricRegistry15);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter18 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager16, monitors17);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier19 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager16, storeEntityCountersSupplier19,
        pageCacheTracer20);
    org.neo4j.scheduler.JobScheduler jobScheduler22 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction23 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout24 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter25 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager16,
        jobScheduler22, fileSystemAbstraction23, databaseLayout24);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter26 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "", monitors8, metricRegistryManager16);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier27 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter28 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager16, webContainerThreadInfoSupplier27);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl29 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "db.operation.count.stop", metricRegistryManager16);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts30 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter31 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager16,
        databaseOperationCounts30);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter32 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "db.query.execution", monitors3, metricRegistryManager16);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter33 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "pool.<pool>.<database>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship",
        monitors1, metricRegistryManager16);
    try {
      readReplicaNodeAdapter33.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray12);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
  }

  @Test
  public void test1812() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1812");
    }
    io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl transactionSizeMonitorImpl0 = new io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl();
    transactionSizeMonitorImpl0.addNativeTransactionSize((long) ' ');
    transactionSizeMonitorImpl0.addNativeTransactionSize(0L);
    transactionSizeMonitorImpl0.addNativeTransactionSize((long) (-1));
    transactionSizeMonitorImpl0.addNativeTransactionSize((long) (byte) 100);
  }

  @Test
  public void test1813() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1813");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier7 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters8 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter9 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager6,
        transactionIdStoreSupplier7, transactionCounters8);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl10 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager6);
    jVMAdapterMBImpl10.start();
    java.lang.String str13 = jVMAdapterMBImpl10.moydmdmineString("dbms.pool.<pool>.vm.heap.used");
    java.lang.String str15 = jVMAdapterMBImpl10.moydmdmineString(
        "dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship");
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "dbms.pool.<pool>.vm.heap.used" + "'",
        str13, "dbms.pool.<pool>.vm.heap.used");
    org.junit.Assert.assertEquals("'" + str15 + "' != '"
            + "dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship" + "'",
        str15, "dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship");
  }

  @Test
  public void test1814() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1814");
    }
    io.github.onograph.metrics.incoming.cluster.SubmittedConsensusLogCommitIndexMetric submittedConsensusLogCommitIndexMetric0 = new io.github.onograph.metrics.incoming.cluster.SubmittedConsensusLogCommitIndexMetric();
    long long1 = submittedConsensusLogCommitIndexMetric0.comie();
    submittedConsensusLogCommitIndexMetric0.comie((long) (short) -1);
    long long4 = submittedConsensusLogCommitIndexMetric0.comie();
    submittedConsensusLogCommitIndexMetric0.comie((-1L));
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
  }

  @Test
  public void test1815() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1815");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager10, jobScheduler17,
        fileSystemAbstraction18, databaseLayout19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager10);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.operation.count.create", metricRegistryManager10, databaseOperationCounts22);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier24 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "", metricRegistryManager10, storeEntityCountersSupplier24, pageCacheTracer25);
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1816() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1816");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.memory.MemoryPools memoryPools14 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl16 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager13, memoryPools14,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter18 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager13, monitors17);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl19 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager13);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier20 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters21 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, transactionIdStoreSupplier20, transactionCounters21);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter24 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "db.operation.count.stop", metricRegistryManager13, monitors23);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "vm.heap.used", metricRegistryManager13);
    org.neo4j.scheduler.JobScheduler jobScheduler26 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction27 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout28 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter29 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager13, jobScheduler26,
        fileSystemAbstraction27, databaseLayout28);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl30 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "db.operation.count.stop", metricRegistryManager13);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl31 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "dbms.pool.<pool>.db.operation.count.create", metricRegistryManager13);
    io.github.onograph.metrics.incoming.EnterpriseMetricsType enterpriseMetricsType32 = jVMAdapterFileStatImpl31.getGrp();
    java.lang.Class<?> wildcardClass33 = enterpriseMetricsType32.getClass();
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + enterpriseMetricsType32 + "' != '"
            + io.github.onograph.metrics.incoming.EnterpriseMetricsType.EMT_JVM + "'",
        enterpriseMetricsType32.equals(
            io.github.onograph.metrics.incoming.EnterpriseMetricsType.EMT_JVM));
    org.junit.Assert.assertNotNull(wildcardClass33);
  }

  @Test
  public void test1817() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1817");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long1 = consensusMessageStats0.dea();
    com.codahale.metrics.Timer timer2 = consensusMessageStats0.getTimer();
    com.codahale.metrics.Timer timer3 = consensusMessageStats0.getTimer();
    java.time.Duration duration4 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats0.sedaForDu(duration4);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType6 = null;
    com.codahale.metrics.Timer timer7 = consensusMessageStats0.getTimer(raftConsensusMessageType6);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType8 = null;
    com.codahale.metrics.Timer timer9 = consensusMessageStats0.getTimer(raftConsensusMessageType8);
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertNotNull(timer2);
    org.junit.Assert.assertNotNull(timer3);
    org.junit.Assert.assertNotNull(duration4);
    org.junit.Assert.assertNull(timer7);
    org.junit.Assert.assertNull(timer9);
  }

  @Test
  public void test1818() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1818");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    org.neo4j.memory.MemoryPools memoryPools2 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl3 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "globalMetrics", metricRegistryManager1, memoryPools2);
  }

  @Test
  public void test1819() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1819");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.monitoring.Monitors monitors3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl14 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager11);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "db.operation.count.recovered", metricRegistryManager11);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter16 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "db.operation.count.create", monitors3, metricRegistryManager11);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter17 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        monitors1, metricRegistryManager11);
    try {
      readReplicaNodeAdapter17.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1820() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1820");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    long long2 = livingCacheMeta0.getSizeCnt();
    livingCacheMeta0.setabys((long) 1);
    long long5 = livingCacheMeta0.getLgBm();
    long long6 = livingCacheMeta0.getICe();
    livingCacheMeta0.seeec((int) (short) 10);
    long long9 = livingCacheMeta0.getSizeCnt();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
  }

  @Test
  public void test1821() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1821");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager8, storeEntityCountersSupplier11,
        pageCacheTracer12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl14 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "db.operation.count.failed", metricRegistryManager8);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager8);
    java.lang.String str17 = jVMAdapterGarbageCollectionImpl15.moydmdmineString(
        "causal_clustering.core.discovery.cluster.unreachable");
    jVMAdapterGarbageCollectionImpl15.start();
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str17 + "' != '" + "causal_clustering.core.discovery.cluster.unreachable" + "'",
        str17, "causal_clustering.core.discovery.cluster.unreachable");
  }

  @Test
  public void test1822() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1822");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.memory.MemoryPools memoryPools14 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl16 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager13, memoryPools14,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager13, storeEntityCountersSupplier17,
        pageCacheTracer18);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager13, databaseOperationCounts20);
    org.neo4j.memory.MemoryPools memoryPools22 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl24 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager13, memoryPools22,
        "db.operation.count.create");
    org.neo4j.monitoring.Monitors monitors25 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl26 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager13, monitors25);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters27 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter28 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager13,
        transactionLogCounters27);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters29 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter30 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "db.query.execution", metricRegistryManager13, pageCacheCounters29);
    boolean boolean32 = metricRegistryManager13.isEnlForSt("vm.heap.max");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl33 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager13);
    org.neo4j.monitoring.Monitors monitors34 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl35 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "dbms.pool.<pool>.causal_clustering.core.discovery.cluster.members",
        metricRegistryManager13, monitors34);
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
  }

  @Test
  public void test1823() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1823");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager10, jobScheduler17,
        fileSystemAbstraction18, databaseLayout19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager10);
    org.neo4j.memory.MemoryPools memoryPools22 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl24 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager10, memoryPools22,
        "pool.<pool>.<database>.db.operation.count.start");
    org.neo4j.memory.MemoryPools memoryPools25 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl26 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "pool.<pool>.<database>.pool.<pool>.<database>.db.operation.count.drop",
        metricRegistryManager10, memoryPools25);
    try {
      memoryPoolsAdapterNeoStackImpl26.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1824() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1824");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier17 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter18 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager11, webContainerThreadInfoSupplier17);
    org.neo4j.monitoring.Monitors monitors19 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl20 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager11, monitors19);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager11, storeEntityCountersSupplier21);
    org.neo4j.scheduler.JobScheduler jobScheduler23 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction24 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "", metricRegistryManager11, jobScheduler23, fileSystemAbstraction24, databaseLayout25);
    org.neo4j.monitoring.Monitors monitors27 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl28 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed",
        metricRegistryManager11, monitors27);
    io.github.onograph.metrics.incoming.EnterpriseMetricsType enterpriseMetricsType29 = queryExecutionMonitorMetricsImpl28.getGrp();
    try {
      queryExecutionMonitorMetricsImpl28.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertTrue("'" + enterpriseMetricsType29 + "' != '"
            + io.github.onograph.metrics.incoming.EnterpriseMetricsType.EMT_GENERIC + "'",
        enterpriseMetricsType29.equals(
            io.github.onograph.metrics.incoming.EnterpriseMetricsType.EMT_GENERIC));
  }

  @Test
  public void test1825() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1825");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark(100L);
    metricsMeter1.mark();
    metricsMeter1.mark((long) 10);
    double double7 = metricsMeter1.getMeanRate();
    double double8 = metricsMeter1.getMeanRate();
    long long9 = metricsMeter1.getCount();
    double double10 = metricsMeter1.getMeanRate();
    org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
  }

  @Test
  public void test1826() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1826");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark((long) (-1));
    double double4 = metricsMeter1.getFifteenMinuteRate();
    metricsMeter1.mark(100L);
    org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
  }

  @Test
  public void test1827() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1827");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl extensionFactoryGdbMetricsImpl0 = new io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext1 = null;
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents2 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle3 = extensionFactoryGdbMetricsImpl0.newInstance(
        extensionContext1, dependentComponents2);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext4 = null;
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents5 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle6 = extensionFactoryGdbMetricsImpl0.newInstance(
        extensionContext4, dependentComponents5);
    org.junit.Assert.assertNotNull(lifecycle3);
    org.junit.Assert.assertNotNull(lifecycle6);
  }

  @Test
  public void test1828() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1828");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    org.neo4j.memory.MemoryPools memoryPools7 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl9 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager6, memoryPools7,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl10 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "db.operation.count.drop", metricRegistryManager6);
    jVMAdapterPoolImpl10.start();
    java.lang.String str13 = jVMAdapterPoolImpl10.moydmdmineString("");
    java.lang.String str15 = jVMAdapterPoolImpl10.moydmdmineString("pool.<pool>.<database>.");
    try {
      jVMAdapterPoolImpl10.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "pool.<pool>.<database>." + "'", str15,
        "pool.<pool>.<database>.");
  }

  @Test
  public void test1829() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1829");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    java.lang.String str1 = metricsServiceExtensionFactory0.toString();
    java.lang.String str2 = metricsServiceExtensionFactory0.toString();
    java.lang.String str3 = metricsServiceExtensionFactory0.getName();
    java.lang.String str4 = metricsServiceExtensionFactory0.getName();
    java.lang.String str5 = metricsServiceExtensionFactory0.toString();
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray10 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList11 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        globbingPatternArray10);
    com.codahale.metrics.MetricRegistry metricRegistry13 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager14 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        metricRegistry13);
    org.neo4j.memory.MemoryPools memoryPools15 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl17 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager14, memoryPools15,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager14, storeEntityCountersSupplier18,
        pageCacheTracer19);
    org.neo4j.scheduler.JobScheduler jobScheduler21 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction22 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager14, jobScheduler21,
        fileSystemAbstraction22, databaseLayout23);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager14);
    java.lang.String str27 = jVMAdapterGarbageCollectionImpl25.moydmdmineString(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    java.lang.String str29 = jVMAdapterGarbageCollectionImpl25.moydmdmineString("");
    boolean boolean30 = metricsServiceExtensionFactory0.equals((java.lang.Object) str29);
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str1, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str2, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "globalMetrics" + "'", str3,
        "globalMetrics");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "globalMetrics" + "'", str4,
        "globalMetrics");
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str5, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertNotNull(globbingPatternArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    org.junit.Assert.assertEquals(
        "'" + str27 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str27, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
  }

  @Test
  public void test1830() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1830");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray10 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList11 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        globbingPatternArray10);
    com.codahale.metrics.MetricRegistry metricRegistry13 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager14 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        metricRegistry13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter16 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager14, monitors15);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager14, storeEntityCountersSupplier17,
        pageCacheTracer18);
    org.neo4j.scheduler.JobScheduler jobScheduler20 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager14,
        jobScheduler20, fileSystemAbstraction21, databaseLayout22);
    org.neo4j.monitoring.Monitors monitors24 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter25 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager14, monitors24);
    org.neo4j.memory.MemoryPools memoryPools26 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl27 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "hi!", metricRegistryManager14, memoryPools26);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier28 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters29 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter30 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager14,
        transactionIdStoreSupplier28, transactionCounters29);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier31 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter32 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "pool.<pool>.<database>.db.operation.count.start", monitorsClusterConsensusImpl3,
        metricRegistryManager14, coreNodeLeaderCheckSupplier31);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters33 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter34 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager14,
        transactionLogCounters33);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts35 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter36 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship",
        metricRegistryManager14, databaseOperationCounts35);
    try {
      gdbActionsAdapter36.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
  }

  @Test
  public void test1831() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1831");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier12 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters13 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager11,
        transactionIdStoreSupplier12, transactionCounters13);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier16 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters17 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "vm.heap.used", metricRegistryManager11, transactionIdStoreSupplier16,
        transactionCounters17);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters19 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter20 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "db.operation.count.drop", metricRegistryManager11, checkpointCounters19);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, transactionLogCounters21);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter23 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "db.operation.count.failed", monitors1, metricRegistryManager11);
    try {
      readReplicaNodeAdapter23.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1832() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1832");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.scheduler.JobScheduler jobScheduler19 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager13,
        jobScheduler19, fileSystemAbstraction20, databaseLayout21);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter24 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager13, monitors23);
    org.neo4j.memory.MemoryPools memoryPools25 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl26 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "hi!", metricRegistryManager13, memoryPools25);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier27 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer28 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter29 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier27,
        pageCacheTracer28);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier30 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter31 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "db.operation.count.failed", monitorsClusterConsensusImpl2, metricRegistryManager13,
        coreNodeLeaderCheckSupplier30);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl32 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "pool.<pool>.<database>.causal_clustering.core.discovery.cluster.converged",
        metricRegistryManager13);
    jVMAdapterMemoryHeapImpl32.start();
    io.github.onograph.metrics.incoming.EnterpriseMetricsType enterpriseMetricsType34 = jVMAdapterMemoryHeapImpl32.getGrp();
    try {
      jVMAdapterMemoryHeapImpl32.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + enterpriseMetricsType34 + "' != '"
            + io.github.onograph.metrics.incoming.EnterpriseMetricsType.EMT_JVM + "'",
        enterpriseMetricsType34.equals(
            io.github.onograph.metrics.incoming.EnterpriseMetricsType.EMT_JVM));
  }

  @Test
  public void test1833() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1833");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager10, databaseOperationCounts17);
    org.neo4j.memory.MemoryPools memoryPools19 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl21 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager10, memoryPools19,
        "db.operation.count.create");
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager10, monitors22);
    org.neo4j.monitoring.Monitors monitors24 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl25 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager10, monitors24);
    queryExecutionMonitorMetricsImpl25.shutdown();
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1834() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1834");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.monitoring.Monitors monitors4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter16 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager11, monitors15);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter17 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "db.query.execution", monitors4, metricRegistryManager11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "globalMetrics", metricRegistryManager11, storeEntityCountersSupplier18);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter20 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "dbms.pool.<pool>.db.query.execution", monitors1, metricRegistryManager11);
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1835() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1835");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark(100L);
    metricsMeter1.mark();
    metricsMeter1.mark();
    double double6 = metricsMeter1.getFiveMinuteRate();
    metricsMeter1.mark();
    double double8 = metricsMeter1.getOneMinuteRate();
    long long9 = metricsMeter1.getCount();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
  }

  @Test
  public void test1836() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1836");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl extensionFactoryGdbMetricsImpl0 = new io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl();
    java.lang.String str1 = extensionFactoryGdbMetricsImpl0.toString();
    java.lang.String str2 = extensionFactoryGdbMetricsImpl0.toString();
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl17 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "db.operation.count.failed", metricRegistryManager11);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl18 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11);
    boolean boolean19 = extensionFactoryGdbMetricsImpl0.equals(
        (java.lang.Object) "pool.<pool>.<database>.causal_clustering.core.last_leader_message");
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str1, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str2, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
  }

  @Test
  public void test1837() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1837");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier8 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters9 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter10 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager7,
        transactionIdStoreSupplier8, transactionCounters9);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl11 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager7);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier12 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters13 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "pool.<pool>.<database>.causal_clustering.core.discovery.cluster.converged",
        metricRegistryManager7, transactionIdStoreSupplier12, transactionCounters13);
    try {
      globalTransactionStatsAdapter14.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test1838() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1838");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark(100L);
    metricsMeter1.mark();
    double double5 = metricsMeter1.getMeanRate();
    double double6 = metricsMeter1.getFifteenMinuteRate();
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
  }

  @Test
  public void test1839() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1839");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager11, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.scheduler.JobScheduler jobScheduler18 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction19 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager11, jobScheduler18,
        fileSystemAbstraction19, databaseLayout20);
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl23 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "", metricRegistryManager11, monitors22);
    org.neo4j.scheduler.JobScheduler jobScheduler24 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction25 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout26 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter27 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager11, jobScheduler24, fileSystemAbstraction25, databaseLayout26);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl28 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "hi!", metricRegistryManager11);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier29 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter30 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager11,
        webContainerThreadInfoSupplier29);
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1840() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1840");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager7, monitors11);
    boolean boolean13 = metricsServiceExtensionFactory0.equals(
        (java.lang.Object) metricRegistryManager7);
    org.neo4j.monitoring.Monitors monitors18 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray21 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList22 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean23 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList22,
        globbingPatternArray21);
    com.codahale.metrics.MetricRegistry metricRegistry24 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager25 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList22,
        metricRegistry24);
    org.neo4j.memory.MemoryPools memoryPools26 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl28 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager25, memoryPools26,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl29 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager25);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter30 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitors18, metricRegistryManager25);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts31 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter32 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager25,
        databaseOperationCounts31);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier33 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter34 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager25, webContainerThreadInfoSupplier33);
    org.neo4j.memory.MemoryPools memoryPools35 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl36 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager25, memoryPools35);
    boolean boolean37 = metricsServiceExtensionFactory0.equals(
        (java.lang.Object) metricRegistryManager25);
    java.lang.String str38 = metricsServiceExtensionFactory0.toString();
    java.lang.String str39 = metricsServiceExtensionFactory0.toString();
    java.lang.String str40 = metricsServiceExtensionFactory0.toString();
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertNotNull(globbingPatternArray21);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertEquals(
        "'" + str38 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str38, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals(
        "'" + str39 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str39, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals(
        "'" + str40 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str40, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
  }

  @Test
  public void test1841() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1841");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager7, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl15 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager7,
        monitors14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery16,
        "pool.<pool>.<database>.db.operation.count.failed");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryExecutionMonitorMetricsImpl15.startProcessing(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryExecutionMonitorMetricsImpl15.beforeEnd(executingQuery21, false);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryExecutionMonitorMetricsImpl15.beforeEnd(executingQuery24, false);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryExecutionMonitorMetricsImpl15.startProcessing(executingQuery27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryExecutionMonitorMetricsImpl15.startExecution(executingQuery29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryExecutionMonitorMetricsImpl15.startExecution(executingQuery31);
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test1842() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1842");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    double double2 = metricsMeter1.getMeanRate();
    long long3 = metricsMeter1.getCount();
    metricsMeter1.mark((long) (byte) 1);
    double double6 = metricsMeter1.getFiveMinuteRate();
    org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
  }

  @Test
  public void test1843() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1843");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats1 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long2 = consensusMessageStats1.dea();
    com.codahale.metrics.Timer timer3 = consensusMessageStats1.getTimer();
    com.codahale.metrics.Timer timer4 = consensusMessageStats1.getTimer();
    boolean boolean5 = metricsServiceExtensionFactory0.equals((java.lang.Object) timer4);
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray10 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList11 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        globbingPatternArray10);
    com.codahale.metrics.MetricRegistry metricRegistry13 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager14 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        metricRegistry13);
    org.neo4j.memory.MemoryPools memoryPools15 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl17 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager14, memoryPools15,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager14, storeEntityCountersSupplier18,
        pageCacheTracer19);
    org.neo4j.scheduler.JobScheduler jobScheduler21 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction22 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager14, jobScheduler21,
        fileSystemAbstraction22, databaseLayout23);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "", metricRegistryManager14, transactionLogCounters25);
    gdbTransactionLogAdapter26.start();
    boolean boolean28 = metricsServiceExtensionFactory0.equals(
        (java.lang.Object) gdbTransactionLogAdapter26);
    java.lang.String str29 = metricsServiceExtensionFactory0.toString();
    java.lang.String str30 = metricsServiceExtensionFactory0.getName();
    org.junit.Assert.assertNotNull(consensusMessageStats1);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertNotNull(timer3);
    org.junit.Assert.assertNotNull(timer4);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertNotNull(globbingPatternArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertEquals(
        "'" + str29 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str29, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals("'" + str30 + "' != '" + "globalMetrics" + "'", str30,
        "globalMetrics");
  }

  @Test
  public void test1844() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1844");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager7, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl15 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager7,
        monitors14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery16,
        "pool.<pool>.<database>.db.operation.count.failed");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryExecutionMonitorMetricsImpl15.startProcessing(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryExecutionMonitorMetricsImpl15.startExecution(executingQuery21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryExecutionMonitorMetricsImpl15.beforeEnd(executingQuery23, true);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryExecutionMonitorMetricsImpl15.beforeEnd(executingQuery26, true);
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test1845() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1845");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    livingCacheMeta0.seeec(100);
    long long4 = livingCacheMeta0.getLgBm();
    livingCacheMeta0.sememt((int) (short) -1);
    livingCacheMeta0.cacheMiss();
    livingCacheMeta0.seeec((int) (byte) -1);
    livingCacheMeta0.sememt((int) (short) 100);
    long long12 = livingCacheMeta0.getIEm();
    livingCacheMeta0.cacheHit();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 100L + "'", long12 == 100L);
  }

  @Test
  public void test1846() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1846");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gehs();
    livingCacheMeta0.sembe((long) (short) 1);
    long long6 = livingCacheMeta0.getICe();
    livingCacheMeta0.setabys(1L);
    long long9 = livingCacheMeta0.getSizeCnt();
    long long10 = livingCacheMeta0.getIEm();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
  }

  @Test
  public void test1847() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1847");
    }
    io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl transactionSizeMonitorImpl0 = new io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl();
    transactionSizeMonitorImpl0.addNativeTransactionSize((long) ' ');
    transactionSizeMonitorImpl0.addHeapTransactionSize(100L);
    transactionSizeMonitorImpl0.addHeapTransactionSize((long) (short) 100);
    transactionSizeMonitorImpl0.addNativeTransactionSize(0L);
    transactionSizeMonitorImpl0.addNativeTransactionSize(0L);
    transactionSizeMonitorImpl0.addHeapTransactionSize((long) '#');
  }

  @Test
  public void test1848() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1848");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl7 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray12 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList13 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean14 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList13,
        globbingPatternArray12);
    com.codahale.metrics.MetricRegistry metricRegistry15 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager16 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList13,
        metricRegistry15);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter18 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager16, monitors17);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier19 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager16, storeEntityCountersSupplier19,
        pageCacheTracer20);
    org.neo4j.scheduler.JobScheduler jobScheduler22 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction23 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout24 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter25 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager16,
        jobScheduler22, fileSystemAbstraction23, databaseLayout24);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters26 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter27 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager16,
        transactionLogCounters26);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier28 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter29 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "vm.heap.committed", monitorsClusterConsensusImpl7, metricRegistryManager16,
        coreNodeLeaderCheckSupplier28);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl30 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager16);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier31 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter32 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager16,
        storeEntityCountersSupplier31);
    org.neo4j.memory.MemoryPools memoryPools33 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl34 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "pool.<pool>.<database>.db.operation.count.drop", metricRegistryManager16, memoryPools33);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier35 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter36 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "dbms.pool.<pool>.causal_clustering.core.discovery.cluster.converged",
        metricRegistryManager16, storeEntityCountersSupplier35);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter37 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.discovery.replicated_data", monitors1, metricRegistryManager16);
    try {
      txCatchupAdapter37.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray12);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
  }

  @Test
  public void test1849() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1849");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray12 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList13 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean14 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList13,
        globbingPatternArray12);
    com.codahale.metrics.MetricRegistry metricRegistry15 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager16 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList13,
        metricRegistry15);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter18 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager16, monitors17);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier19 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager16, storeEntityCountersSupplier19,
        pageCacheTracer20);
    org.neo4j.scheduler.JobScheduler jobScheduler22 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction23 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout24 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter25 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager16,
        jobScheduler22, fileSystemAbstraction23, databaseLayout24);
    org.neo4j.monitoring.Monitors monitors26 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter27 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager16, monitors26);
    org.neo4j.memory.MemoryPools memoryPools28 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl29 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "hi!", metricRegistryManager16, memoryPools28);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier30 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer31 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter32 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager16, storeEntityCountersSupplier30,
        pageCacheTracer31);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier33 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter34 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "db.operation.count.failed", monitorsClusterConsensusImpl5, metricRegistryManager16,
        coreNodeLeaderCheckSupplier33);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters35 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter36 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager16, checkpointCounters35);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier37 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter38 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "db.operation.count.recovered", metricRegistryManager16, storeEntityCountersSupplier37);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter39 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "dbms.pool.<pool>.db.operation.count.create", monitors1, metricRegistryManager16);
    try {
      discoveryCoreNodeAdapter39.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray12);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
  }

  @Test
  public void test1850() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1850");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier18 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter19 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl5, metricRegistryManager12,
        coreNodeLeaderCheckSupplier18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter21 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager12, monitors20);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "db.operation.count.create", metricRegistryManager12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "vm.heap.max", metricRegistryManager12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12);
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1851() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1851");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    livingCacheMeta0.cacheHit();
    livingCacheMeta0.cacheHit();
    livingCacheMeta0.cacheHit();
    livingCacheMeta0.seeec(0);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
  }

  @Test
  public void test1852() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1852");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.memory.MemoryPools memoryPools9 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl11 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager8, memoryPools9,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl12 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "hi!", metricRegistryManager8);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters13 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter14 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "neo4j.count.relationship", metricRegistryManager8, checkpointCounters13);
    boolean boolean16 = metricRegistryManager8.isEnlForSt("");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager8,
        storeEntityCountersSupplier17);
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
  }

  @Test
  public void test1853() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1853");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl((int) (short) -1);
    clusterMembersCount0.sembs((int) (byte) 1);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge7 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge8 = clusterMembersCount0.covgGauge();
    clusterMembersCount0.secvg(true);
    clusterMembersCount0.secvg(false);
    clusterMembersCount0.sembs(0);
    clusterMembersCount0.sembs((int) (byte) 100);
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge7);
    org.junit.Assert.assertNotNull(intGauge8);
  }

  @Test
  public void test1854() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1854");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10,
        jobScheduler16, fileSystemAbstraction17, databaseLayout18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter21 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager10, monitors20);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters22 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter23 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "", metricRegistryManager10, pageCacheCounters22);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters24 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter25 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "vm.heap.max", metricRegistryManager10, transactionLogCounters24);
    try {
      gdbTransactionLogAdapter25.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1855() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1855");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long1 = consensusMessageStats0.dea();
    com.codahale.metrics.Timer timer2 = consensusMessageStats0.getTimer();
    com.codahale.metrics.Timer timer3 = consensusMessageStats0.getTimer();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats4 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long5 = consensusMessageStats4.dea();
    com.codahale.metrics.Timer timer6 = consensusMessageStats4.getTimer();
    com.codahale.metrics.Timer timer7 = consensusMessageStats4.getTimer();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats8 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType9 = null;
    com.codahale.metrics.Timer timer10 = consensusMessageStats8.getTimer(raftConsensusMessageType9);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats11 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long12 = consensusMessageStats11.dea();
    java.time.Duration duration13 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats11.sedaForDu(duration13);
    consensusMessageStats8.sedaForDu(duration13);
    consensusMessageStats4.sedaForDu(duration13);
    consensusMessageStats0.sedaForDu(duration13);
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertNotNull(timer2);
    org.junit.Assert.assertNotNull(timer3);
    org.junit.Assert.assertNotNull(consensusMessageStats4);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
    org.junit.Assert.assertNotNull(timer6);
    org.junit.Assert.assertNotNull(timer7);
    org.junit.Assert.assertNotNull(consensusMessageStats8);
    org.junit.Assert.assertNull(timer10);
    org.junit.Assert.assertNotNull(consensusMessageStats11);
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    org.junit.Assert.assertNotNull(duration13);
  }

  @Test
  public void test1856() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1856");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents0 = null;
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext1 = null;
    io.github.onograph.metrics.gdb.GdbMetricsLifecycle gdbMetricsLifecycle2 = new io.github.onograph.metrics.gdb.GdbMetricsLifecycle(
        dependentComponents0, extensionContext1);
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.stop();
    gdbMetricsLifecycle2.shutdown();
    try {
      gdbMetricsLifecycle2.init();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1857() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1857");
    }
    io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl transactionSizeMonitorImpl0 = new io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl();
    transactionSizeMonitorImpl0.addNativeTransactionSize((long) ' ');
    transactionSizeMonitorImpl0.addHeapTransactionSize(100L);
    transactionSizeMonitorImpl0.addNativeTransactionSize(0L);
    transactionSizeMonitorImpl0.addNativeTransactionSize((-1L));
    transactionSizeMonitorImpl0.addHeapTransactionSize((-1L));
    transactionSizeMonitorImpl0.addHeapTransactionSize((long) 0);
  }

  @Test
  public void test1858() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1858");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager7, monitors11);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl13 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager7);
    java.lang.String str15 = jVMAdapterPoolImpl13.moydmdmineString("db.query.execution");
    java.lang.String str17 = jVMAdapterPoolImpl13.moydmdmineString("neo4j.count.relationship");
    java.lang.String str19 = jVMAdapterPoolImpl13.moydmdmineString(
        "causal_clustering.core.discovery.replicated_data");
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "db.query.execution" + "'", str15,
        "db.query.execution");
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "neo4j.count.relationship" + "'", str17,
        "neo4j.count.relationship");
    org.junit.Assert.assertEquals(
        "'" + str19 + "' != '" + "causal_clustering.core.discovery.replicated_data" + "'", str19,
        "causal_clustering.core.discovery.replicated_data");
  }

  @Test
  public void test1859() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1859");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusLogAdditions consensusLogAdditions0 = new io.github.onograph.metrics.incoming.cluster.ConsensusLogAdditions();
    long long1 = consensusLogAdditions0.apeie();
    long long2 = consensusLogAdditions0.apeie();
    long long3 = consensusLogAdditions0.apeie();
    consensusLogAdditions0.apeie(10L);
    consensusLogAdditions0.apeie((long) 100);
    long long8 = consensusLogAdditions0.apeie();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 100L + "'", long8 == 100L);
  }

  @Test
  public void test1860() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1860");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusLogAdditions consensusLogAdditions0 = new io.github.onograph.metrics.incoming.cluster.ConsensusLogAdditions();
    long long1 = consensusLogAdditions0.apeie();
    consensusLogAdditions0.apeie(10L);
    long long4 = consensusLogAdditions0.apeie();
    long long5 = consensusLogAdditions0.apeie();
    consensusLogAdditions0.apeie((long) (byte) 0);
    long long8 = consensusLogAdditions0.apeie();
    consensusLogAdditions0.apeie((long) 10);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10L + "'", long4 == 10L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10L + "'", long5 == 10L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
  }

  @Test
  public void test1861() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1861");
    }
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat0 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat0.marc();
    syncStat0.norlad();
    syncStat0.marc();
    syncStat0.clerut();
    syncStat0.clerut();
    syncStat0.recnam();
    syncStat0.suslrle();
    syncStat0.recnam();
    syncStat0.recnam();
    syncStat0.recnam();
    syncStat0.recnam();
    syncStat0.recnam();
  }

  @Test
  public void test1862() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1862");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl2 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "db.operation.count.drop", metricRegistryManager1);
    jVMAdapterMBImpl2.shutdown();
    java.lang.String str5 = jVMAdapterMBImpl2.moydmdmineString(
        "pool.<pool>.<database>.db.operation.count.start");
    try {
      jVMAdapterMBImpl2.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "pool.<pool>.<database>.db.operation.count.start" + "'", str5,
        "pool.<pool>.<database>.db.operation.count.start");
  }

  @Test
  public void test1863() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1863");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl clusterDataWatcherMetricsImpl0 = new io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl();
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType1 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType1);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType3 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge4 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType3);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType5 = null;
    try {
      clusterDataWatcherMetricsImpl0.seivldasForCl(clusterDataType5, (-1));
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge4);
  }

  @Test
  public void test1864() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1864");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter11 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors2, metricRegistryManager8);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl13 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager8, monitors12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryExecutionMonitorMetricsImpl13.endFailure(executingQuery14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryExecutionMonitorMetricsImpl13.beforeEnd(executingQuery17, true);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryExecutionMonitorMetricsImpl13.endFailure(executingQuery20, "globalMetrics");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryExecutionMonitorMetricsImpl13.startExecution(executingQuery23);
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1865() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1865");
    }
    io.github.onograph.metrics.incoming.cluster.PetConsensusLogApplied petConsensusLogApplied0 = new io.github.onograph.metrics.incoming.cluster.PetConsensusLogApplied();
    petConsensusLogApplied0.apldid((long) (short) 100);
    petConsensusLogApplied0.apldid(0L);
    long long5 = petConsensusLogApplied0.apldid();
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
  }

  @Test
  public void test1866() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1866");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry7);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry9);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry11);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier13 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter14 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "pool.<pool>.<database>.db.operation.count.failed", monitorsClusterConsensusImpl1,
        metricRegistryManager12, coreNodeLeaderCheckSupplier13);
    try {
      consensusCoreNodeAdapter14.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test1867() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1867");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.monitoring.Monitors monitors3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray13 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList14 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean15 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList14,
        globbingPatternArray13);
    com.codahale.metrics.MetricRegistry metricRegistry16 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager17 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList14,
        metricRegistry16);
    org.neo4j.memory.MemoryPools memoryPools18 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl20 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager17, memoryPools18,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors21 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter22 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager17, monitors21);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.recovered", metricRegistryManager17);
    org.neo4j.memory.MemoryPools memoryPools24 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl26 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager17, memoryPools24,
        "db.operation.count.create");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl27 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "db.operation.count.create", metricRegistryManager17);
    org.neo4j.memory.MemoryPools memoryPools28 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl30 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager17, memoryPools28, "vm.heap.used");
    org.neo4j.memory.MemoryPools memoryPools31 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl32 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager17,
        memoryPools31);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl33 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager17);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier34 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters35 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter36 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "databaseMetrics", metricRegistryManager17, transactionIdStoreSupplier34,
        transactionCounters35);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter37 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "hi!", monitors3, metricRegistryManager17);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter38 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "dbms.pool.<pool>.vm.heap.max", monitors1, metricRegistryManager17);
    try {
      txCatchupAdapter38.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray13);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
  }

  @Test
  public void test1868() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1868");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager10, databaseOperationCounts17);
    org.neo4j.memory.MemoryPools memoryPools19 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl21 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager10, memoryPools19,
        "db.operation.count.create");
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager10, monitors22);
    org.neo4j.monitoring.Monitors monitors24 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl25 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager10, monitors24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryExecutionMonitorMetricsImpl25.startProcessing(executingQuery26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryExecutionMonitorMetricsImpl25.startExecution(executingQuery28);
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1869() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1869");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gems();
    livingCacheMeta0.sememt((int) (byte) 0);
    long long6 = livingCacheMeta0.getICe();
    livingCacheMeta0.seeec((int) (short) 10);
    long long9 = livingCacheMeta0.gehs();
    long long10 = livingCacheMeta0.getLgBm();
    livingCacheMeta0.setabys(0L);
    livingCacheMeta0.sememt((int) 'a');
    livingCacheMeta0.setabys(100L);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
  }

  @Test
  public void test1870() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1870");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager9, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager9, jobScheduler16,
        fileSystemAbstraction17, databaseLayout18);
    org.neo4j.scheduler.JobScheduler jobScheduler20 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "hi!", metricRegistryManager9, jobScheduler20, fileSystemAbstraction21, databaseLayout22);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "", metricRegistryManager9);
    java.lang.String str26 = jVMAdapterPoolImpl24.moydmdmineString(
        "dbms.pool.<pool>.db.operation.count.failed");
    try {
      jVMAdapterPoolImpl24.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str26 + "' != '" + "dbms.pool.<pool>.db.operation.count.failed" + "'", str26,
        "dbms.pool.<pool>.db.operation.count.failed");
  }

  @Test
  public void test1871() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1871");
    }
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat0 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat0.marc();
    syncStat0.norlad();
    syncStat0.marc();
    syncStat0.clerut();
    syncStat0.clerut();
    syncStat0.recnam();
    syncStat0.suslrle();
    syncStat0.recnam();
    syncStat0.marc();
    syncStat0.clerut();
    syncStat0.norlad();
    syncStat0.norlad();
  }

  @Test
  public void test1872() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1872");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl extensionFactoryGdbMetricsImpl0 = new io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext1 = null;
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents2 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle3 = extensionFactoryGdbMetricsImpl0.newInstance(
        extensionContext1, dependentComponents2);
    java.lang.String str4 = extensionFactoryGdbMetricsImpl0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext5 = null;
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents6 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle7 = extensionFactoryGdbMetricsImpl0.newInstance(
        extensionContext5, dependentComponents6);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext8 = null;
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents9 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle10 = extensionFactoryGdbMetricsImpl0.newInstance(
        extensionContext8, dependentComponents9);
    java.lang.String str11 = extensionFactoryGdbMetricsImpl0.toString();
    java.lang.String str12 = extensionFactoryGdbMetricsImpl0.getName();
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray21 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList22 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean23 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList22,
        globbingPatternArray21);
    com.codahale.metrics.MetricRegistry metricRegistry24 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager25 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList22,
        metricRegistry24);
    org.neo4j.memory.MemoryPools memoryPools26 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl28 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager25, memoryPools26,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier29 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer30 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter31 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager25, storeEntityCountersSupplier29,
        pageCacheTracer30);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts32 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter33 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager25, databaseOperationCounts32);
    org.neo4j.memory.MemoryPools memoryPools34 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl36 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager25, memoryPools34,
        "db.operation.count.create");
    org.neo4j.monitoring.Monitors monitors37 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl38 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager25, monitors37);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters39 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter40 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager25,
        transactionLogCounters39);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters41 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter42 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "db.query.execution", metricRegistryManager25, pageCacheCounters41);
    boolean boolean44 = metricRegistryManager25.isEnlForSt("vm.heap.max");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl45 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager25);
    boolean boolean46 = extensionFactoryGdbMetricsImpl0.equals(
        (java.lang.Object) "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertNotNull(lifecycle3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "databaseMetrics" + "'", str4,
        "databaseMetrics");
    org.junit.Assert.assertNotNull(lifecycle7);
    org.junit.Assert.assertNotNull(lifecycle10);
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str11, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "databaseMetrics" + "'", str12,
        "databaseMetrics");
    org.junit.Assert.assertNotNull(globbingPatternArray21);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
  }

  @Test
  public void test1873() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1873");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    double double2 = metricsMeter1.getMeanRate();
    long long3 = metricsMeter1.getCount();
    long long4 = metricsMeter1.getCount();
    double double5 = metricsMeter1.getFiveMinuteRate();
    double double6 = metricsMeter1.getFiveMinuteRate();
    org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
  }

  @Test
  public void test1874() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1874");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager2 = null;
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter3 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "dbms.pool.<pool>.vm.heap.used", monitors1, metricRegistryManager2);
    try {
      readReplicaNodeAdapter3.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1875() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1875");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10,
        jobScheduler16, fileSystemAbstraction17, databaseLayout18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter21 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager10, monitors20);
    org.neo4j.memory.MemoryPools memoryPools22 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl23 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "hi!", metricRegistryManager10, memoryPools22);
    org.neo4j.scheduler.JobScheduler jobScheduler24 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction25 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout26 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter27 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.start", metricRegistryManager10,
        jobScheduler24, fileSystemAbstraction25, databaseLayout26);
    com.codahale.metrics.MetricFilter metricFilter28 = null;
    try {
      metricRegistryManager10.reomcnForMe(metricFilter28);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1876() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1876");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager7, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl15 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager7,
        monitors14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryExecutionMonitorMetricsImpl15.beforeEnd(executingQuery16, false);
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test1877() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1877");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl((int) (short) -1);
    clusterMembersCount0.sembs((int) (byte) 1);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge7 = clusterMembersCount0.covgGauge();
    clusterMembersCount0.secvg(true);
    clusterMembersCount0.secvg(true);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge12 = clusterMembersCount0.covgGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge13 = clusterMembersCount0.mebsGauge();
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge7);
    org.junit.Assert.assertNotNull(intGauge12);
    org.junit.Assert.assertNotNull(intGauge13);
  }

  @Test
  public void test1878() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1878");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.scheduler.JobScheduler jobScheduler19 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager13,
        jobScheduler19, fileSystemAbstraction20, databaseLayout21);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter24 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager13, monitors23);
    org.neo4j.memory.MemoryPools memoryPools25 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl26 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "hi!", metricRegistryManager13, memoryPools25);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier27 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer28 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter29 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier27,
        pageCacheTracer28);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier30 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter31 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "db.operation.count.failed", monitorsClusterConsensusImpl2, metricRegistryManager13,
        coreNodeLeaderCheckSupplier30);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl32 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "pool.<pool>.<database>.causal_clustering.core.discovery.cluster.converged",
        metricRegistryManager13);
    jVMAdapterMemoryHeapImpl32.start();
    jVMAdapterMemoryHeapImpl32.start();
    try {
      jVMAdapterMemoryHeapImpl32.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test1879() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1879");
    }
    org.neo4j.monitoring.Monitors monitors3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter12 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors3, metricRegistryManager9);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters13 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter14 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "db.operation.count.recovered", metricRegistryManager9, pageCacheCounters13);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "pool.<pool>.<database>.vm.heap.used", metricRegistryManager9);
    try {
      java.util.SortedSet<java.lang.String> strSet16 = metricRegistryManager9.geneSortedSet();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1880() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1880");
    }
    com.codahale.metrics.MetricRegistry metricRegistry0 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    java.nio.file.Path path2 = null;
    io.github.onograph.config.Metrics.CompressionOption compressionOption5 = null;
    io.github.onograph.metrics.outgoing.RotatingLogFileWriterService rotatingLogFileWriterService6 = null;
    org.neo4j.logging.Log log7 = null;
    try {
      io.github.onograph.metrics.outgoing.CsvScheduledReporter csvScheduledReporter8 = new io.github.onograph.metrics.outgoing.CsvScheduledReporter(
          metricRegistry0, fileSystemAbstraction1, path2, (long) (short) 0, 10, compressionOption5,
          rotatingLogFileWriterService6, log7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: registry == null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1881() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1881");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gems();
    livingCacheMeta0.sememt((int) (byte) 0);
    livingCacheMeta0.cacheMiss();
    long long7 = livingCacheMeta0.gehs();
    livingCacheMeta0.sembe(52L);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
  }

  @Test
  public void test1882() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1882");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl((int) (short) -1);
    clusterMembersCount0.sembs((int) (byte) 1);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge7 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge8 = clusterMembersCount0.covgGauge();
    clusterMembersCount0.secvg(true);
    clusterMembersCount0.seuehl((int) (byte) 0);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge13 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl((int) (short) 100);
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge7);
    org.junit.Assert.assertNotNull(intGauge8);
    org.junit.Assert.assertNotNull(intGauge13);
  }

  @Test
  public void test1883() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1883");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl((int) (short) -1);
    clusterMembersCount0.sembs((int) (byte) 1);
    clusterMembersCount0.secvg(false);
    clusterMembersCount0.sembs(10);
    clusterMembersCount0.sembs((int) (byte) 1);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge13 = clusterMembersCount0.covgGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge14 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge15 = clusterMembersCount0.unehlGauge();
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge13);
    org.junit.Assert.assertNotNull(intGauge14);
    org.junit.Assert.assertNotNull(intGauge15);
  }

  @Test
  public void test1884() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1884");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager9, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager9, jobScheduler16,
        fileSystemAbstraction17, databaseLayout18);
    org.neo4j.scheduler.JobScheduler jobScheduler20 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "hi!", metricRegistryManager9, jobScheduler20, fileSystemAbstraction21, databaseLayout22);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "", metricRegistryManager9);
    jVMAdapterPoolImpl24.start();
    jVMAdapterPoolImpl24.init();
    java.lang.String str28 = jVMAdapterPoolImpl24.moydmdmineString(
        "causal_clustering.core.discovery.cluster.members");
    jVMAdapterPoolImpl24.start();
    try {
      jVMAdapterPoolImpl24.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str28 + "' != '" + "causal_clustering.core.discovery.cluster.members" + "'", str28,
        "causal_clustering.core.discovery.cluster.members");
  }

  @Test
  public void test1885() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1885");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    double double2 = metricsMeter1.getFifteenMinuteRate();
    double double3 = metricsMeter1.getFiveMinuteRate();
    metricsMeter1.mark();
    double double5 = metricsMeter1.getMeanRate();
    metricsMeter1.mark(2L);
    org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
    org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
  }

  @Test
  public void test1886() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1886");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl((int) (short) -1);
    clusterMembersCount0.sembs((int) (byte) 1);
    clusterMembersCount0.secvg(false);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge9 = clusterMembersCount0.mebsGauge();
    clusterMembersCount0.seuehl((int) (short) 1);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge12 = clusterMembersCount0.unehlGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge13 = clusterMembersCount0.unehlGauge();
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge9);
    org.junit.Assert.assertNotNull(intGauge12);
    org.junit.Assert.assertNotNull(intGauge13);
  }

  @Test
  public void test1887() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1887");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl extensionFactoryGdbMetricsImpl0 = new io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl();
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray1 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList2 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean3 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList2,
        globbingPatternArray1);
    com.codahale.metrics.MetricRegistry metricRegistry4 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager5 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList2,
        metricRegistry4);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList2,
        metricRegistry6);
    boolean boolean8 = extensionFactoryGdbMetricsImpl0.equals((java.lang.Object) metricRegistry6);
    java.lang.String str9 = extensionFactoryGdbMetricsImpl0.toString();
    java.lang.String str10 = extensionFactoryGdbMetricsImpl0.toString();
    org.junit.Assert.assertNotNull(globbingPatternArray1);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str9, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str10, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
  }

  @Test
  public void test1888() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1888");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray11 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList12 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean13 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList12,
        globbingPatternArray11);
    com.codahale.metrics.MetricRegistry metricRegistry14 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager15 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList12,
        metricRegistry14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter17 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager15, monitors16);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager15, storeEntityCountersSupplier18,
        pageCacheTracer19);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier21 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter22 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager15, webContainerThreadInfoSupplier21);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager15, monitors23);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager15, storeEntityCountersSupplier25);
    org.neo4j.memory.MemoryPools memoryPools27 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl29 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager15,
        memoryPools27, "db.operation.count.stop");
    org.neo4j.monitoring.Monitors monitors30 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter31 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.query.execution", metricRegistryManager15, monitors30);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier32 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer33 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter34 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.node", metricRegistryManager15, storeEntityCountersSupplier32,
        pageCacheTracer33);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters35 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter36 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "db.operation.count.start", metricRegistryManager15, transactionLogCounters35);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier37 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter38 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        monitorsClusterConsensusImpl1, metricRegistryManager15, coreNodeLeaderCheckSupplier37);
    org.junit.Assert.assertNotNull(globbingPatternArray11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
  }

  @Test
  public void test1889() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1889");
    }
    io.github.onograph.metrics.incoming.cluster.SubmittedConsensusLogCommitIndexMetric submittedConsensusLogCommitIndexMetric0 = new io.github.onograph.metrics.incoming.cluster.SubmittedConsensusLogCommitIndexMetric();
    submittedConsensusLogCommitIndexMetric0.comie(0L);
    submittedConsensusLogCommitIndexMetric0.comie((long) (short) -1);
  }

  @Test
  public void test1890() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1890");
    }
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat0 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat0.marc();
    syncStat0.norlad();
    syncStat0.clerut();
    syncStat0.norlad();
    syncStat0.clerut();
    syncStat0.clerut();
  }

  @Test
  public void test1891() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1891");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10,
        jobScheduler16, fileSystemAbstraction17, databaseLayout18);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10,
        storeEntityCountersSupplier20);
    boolean boolean23 = metricRegistryManager10.isEnlForSt(
        "dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager10);
    org.neo4j.scheduler.JobScheduler jobScheduler25 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout27 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter28 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed",
        metricRegistryManager10, jobScheduler25, fileSystemAbstraction26, databaseLayout27);
    try {
      gdbStoreStatsAdapter28.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
  }

  @Test
  public void test1892() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1892");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl17 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager11,
        storeEntityCountersSupplier18, pageCacheTracer19);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter21 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "dbms.pool.<pool>.db.operation.count.failed", monitors2, metricRegistryManager11);
    org.neo4j.scheduler.JobScheduler jobScheduler22 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction23 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout24 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter25 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "", metricRegistryManager11, jobScheduler22, fileSystemAbstraction23, databaseLayout24);
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1893() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1893");
    }
    org.neo4j.monitoring.Monitors monitors4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.scheduler.JobScheduler jobScheduler18 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction19 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager12,
        jobScheduler18, fileSystemAbstraction19, databaseLayout20);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter22 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "", monitors4, metricRegistryManager12);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier23 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter24 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager12, webContainerThreadInfoSupplier23);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "db.operation.count.drop", metricRegistryManager12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl26 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "pool.<pool>.<database>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship",
        metricRegistryManager12);
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1894() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1894");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier18 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter19 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager12, webContainerThreadInfoSupplier18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager12, monitors20);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager12, storeEntityCountersSupplier22);
    org.neo4j.memory.MemoryPools memoryPools24 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl26 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager12,
        memoryPools24, "db.operation.count.stop");
    org.neo4j.monitoring.Monitors monitors27 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter28 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.query.execution", metricRegistryManager12, monitors27);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl29 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "dbms.pool.<pool>.vm.heap.max", metricRegistryManager12);
    jVMAdapterMBImpl29.shutdown();
    java.lang.String str32 = jVMAdapterMBImpl29.moydmdmineString(
        "causal_clustering.core.discovery.cluster.converged");
    jVMAdapterMBImpl29.start();
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertEquals(
        "'" + str32 + "' != '" + "causal_clustering.core.discovery.cluster.converged" + "'", str32,
        "causal_clustering.core.discovery.cluster.converged");
  }

  @Test
  public void test1895() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1895");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl2 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "causal_clustering.core.discovery.cluster.members", metricRegistryManager1);
  }

  @Test
  public void test1896() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1896");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.scheduler.JobScheduler jobScheduler19 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager13,
        jobScheduler19, fileSystemAbstraction20, databaseLayout21);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter24 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager13, monitors23);
    org.neo4j.memory.MemoryPools memoryPools25 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl26 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "hi!", metricRegistryManager13, memoryPools25);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier27 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer28 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter29 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier27,
        pageCacheTracer28);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier30 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter31 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "db.operation.count.failed", monitorsClusterConsensusImpl2, metricRegistryManager13,
        coreNodeLeaderCheckSupplier30);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters32 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter33 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager13, checkpointCounters32);
    checkpointCounterAdapter33.shutdown();
    try {
      checkpointCounterAdapter33.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test1897() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1897");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents0 = null;
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext1 = null;
    io.github.onograph.metrics.gdb.GdbMetricsLifecycle gdbMetricsLifecycle2 = new io.github.onograph.metrics.gdb.GdbMetricsLifecycle(
        dependentComponents0, extensionContext1);
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.stop();
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.stop();
  }

  @Test
  public void test1898() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1898");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager9);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager9,
        storeEntityCountersSupplier16, pageCacheTracer17);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier19 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager9, storeEntityCountersSupplier19,
        pageCacheTracer20);
    try {
      gdbStatsAdapter21.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1899() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1899");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark(100L);
    metricsMeter1.mark();
    metricsMeter1.mark((long) 10);
    double double7 = metricsMeter1.getMeanRate();
    double double8 = metricsMeter1.getMeanRate();
    metricsMeter1.mark();
    metricsMeter1.mark();
    metricsMeter1.mark(10L);
    double double13 = metricsMeter1.getOneMinuteRate();
    long long14 = metricsMeter1.getCount();
    org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
  }

  @Test
  public void test1900() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1900");
    }
    io.github.onograph.metrics.MetricsReportProvider metricsReportProvider0 = new io.github.onograph.metrics.MetricsReportProvider();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    metricsReportProvider0.init(fileSystemAbstraction1, "db.operation.count.drop", config3, path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    metricsReportProvider0.init(fileSystemAbstraction6, "", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    metricsReportProvider0.init(fileSystemAbstraction11,
        "dbms.pool.<pool>.neo4j.count.relationship", config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    metricsReportProvider0.init(fileSystemAbstraction16,
        "causal_clustering.core.discovery.replicated_data", config18, path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    metricsReportProvider0.init(fileSystemAbstraction21,
        "dbms.pool.<pool>.neo4j.count.relationship", config23, path24);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.configuration.Config config28 = null;
    java.nio.file.Path path29 = null;
    metricsReportProvider0.init(fileSystemAbstraction26,
        "pool.<pool>.<database>.dbms.pool.<pool>.pool.<pool>.<database>.db.query.execution",
        config28, path29);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.configuration.Config config33 = null;
    java.nio.file.Path path34 = null;
    metricsReportProvider0.init(fileSystemAbstraction31,
        "dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data", config33, path34);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction36 = null;
    org.neo4j.configuration.Config config38 = null;
    java.nio.file.Path path39 = null;
    metricsReportProvider0.init(fileSystemAbstraction36,
        "causal_clustering.core.discovery.cluster.unreachable", config38, path39);
  }

  @Test
  public void test1901() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1901");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType1 = null;
    com.codahale.metrics.Timer timer2 = consensusMessageStats0.getTimer(raftConsensusMessageType1);
    long long3 = consensusMessageStats0.dea();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats4 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType5 = null;
    com.codahale.metrics.Timer timer6 = consensusMessageStats4.getTimer(raftConsensusMessageType5);
    long long7 = consensusMessageStats4.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType8 = null;
    com.codahale.metrics.Timer timer9 = consensusMessageStats4.getTimer(raftConsensusMessageType8);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType10 = null;
    com.codahale.metrics.Timer timer11 = consensusMessageStats4.getTimer(
        raftConsensusMessageType10);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType12 = null;
    com.codahale.metrics.Timer timer13 = consensusMessageStats4.getTimer(
        raftConsensusMessageType12);
    java.time.Duration duration14 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats4.sedaForDu(duration14);
    consensusMessageStats0.sedaForDu(duration14);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats17 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType18 = null;
    com.codahale.metrics.Timer timer19 = consensusMessageStats17.getTimer(
        raftConsensusMessageType18);
    long long20 = consensusMessageStats17.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType21 = null;
    com.codahale.metrics.Timer timer22 = consensusMessageStats17.getTimer(
        raftConsensusMessageType21);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType23 = null;
    com.codahale.metrics.Timer timer24 = consensusMessageStats17.getTimer(
        raftConsensusMessageType23);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType25 = null;
    com.codahale.metrics.Timer timer26 = consensusMessageStats17.getTimer(
        raftConsensusMessageType25);
    java.time.Duration duration27 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats17.sedaForDu(duration27);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType29 = null;
    com.codahale.metrics.Timer timer30 = consensusMessageStats17.getTimer(
        raftConsensusMessageType29);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats31 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType32 = null;
    com.codahale.metrics.Timer timer33 = consensusMessageStats31.getTimer(
        raftConsensusMessageType32);
    long long34 = consensusMessageStats31.dea();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats35 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType36 = null;
    com.codahale.metrics.Timer timer37 = consensusMessageStats35.getTimer(
        raftConsensusMessageType36);
    long long38 = consensusMessageStats35.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType39 = null;
    com.codahale.metrics.Timer timer40 = consensusMessageStats35.getTimer(
        raftConsensusMessageType39);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType41 = null;
    com.codahale.metrics.Timer timer42 = consensusMessageStats35.getTimer(
        raftConsensusMessageType41);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType43 = null;
    com.codahale.metrics.Timer timer44 = consensusMessageStats35.getTimer(
        raftConsensusMessageType43);
    java.time.Duration duration45 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats35.sedaForDu(duration45);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats47 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long48 = consensusMessageStats47.dea();
    com.codahale.metrics.Timer timer49 = consensusMessageStats47.getTimer();
    com.codahale.metrics.Timer timer50 = consensusMessageStats47.getTimer();
    java.time.Duration duration51 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats47.sedaForDu(duration51);
    consensusMessageStats35.sedaForDu(duration51);
    consensusMessageStats31.sedaForDu(duration51);
    consensusMessageStats17.sedaForDu(duration51);
    consensusMessageStats0.sedaForDu(duration51);
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertNull(timer2);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertNotNull(consensusMessageStats4);
    org.junit.Assert.assertNull(timer6);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    org.junit.Assert.assertNull(timer9);
    org.junit.Assert.assertNull(timer11);
    org.junit.Assert.assertNull(timer13);
    org.junit.Assert.assertNotNull(duration14);
    org.junit.Assert.assertNotNull(consensusMessageStats17);
    org.junit.Assert.assertNull(timer19);
    org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
    org.junit.Assert.assertNull(timer22);
    org.junit.Assert.assertNull(timer24);
    org.junit.Assert.assertNull(timer26);
    org.junit.Assert.assertNotNull(duration27);
    org.junit.Assert.assertNull(timer30);
    org.junit.Assert.assertNotNull(consensusMessageStats31);
    org.junit.Assert.assertNull(timer33);
    org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
    org.junit.Assert.assertNotNull(consensusMessageStats35);
    org.junit.Assert.assertNull(timer37);
    org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
    org.junit.Assert.assertNull(timer40);
    org.junit.Assert.assertNull(timer42);
    org.junit.Assert.assertNull(timer44);
    org.junit.Assert.assertNotNull(duration45);
    org.junit.Assert.assertNotNull(consensusMessageStats47);
    org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
    org.junit.Assert.assertNotNull(timer49);
    org.junit.Assert.assertNotNull(timer50);
    org.junit.Assert.assertNotNull(duration51);
  }

  @Test
  public void test1902() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1902");
    }
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat0 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat0.clerut();
    syncStat0.clerut();
    syncStat0.marc();
    syncStat0.suslrle();
  }

  @Test
  public void test1903() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1903");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray10 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList11 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        globbingPatternArray10);
    com.codahale.metrics.MetricRegistry metricRegistry13 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager14 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        metricRegistry13);
    org.neo4j.memory.MemoryPools memoryPools15 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl17 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager14, memoryPools15,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager14, storeEntityCountersSupplier18,
        pageCacheTracer19);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager14, databaseOperationCounts21);
    org.neo4j.memory.MemoryPools memoryPools23 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl25 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager14, memoryPools23,
        "db.operation.count.create");
    org.neo4j.monitoring.Monitors monitors26 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl27 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager14, monitors26);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters28 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter29 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager14,
        transactionLogCounters28);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters30 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter31 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "db.query.execution", metricRegistryManager14, pageCacheCounters30);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier32 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter33 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "pool.<pool>.<database>.pool.<pool>.<database>.db.operation.count.drop",
        metricRegistryManager14, webContainerThreadInfoSupplier32);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier34 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter35 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "pool.<pool>.<database>.dbms.pool.<pool>.pool.<pool>.<database>.db.query.execution",
        monitorsClusterConsensusImpl1, metricRegistryManager14, coreNodeLeaderCheckSupplier34);
    org.junit.Assert.assertNotNull(globbingPatternArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
  }

  @Test
  public void test1904() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1904");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray10 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList11 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        globbingPatternArray10);
    com.codahale.metrics.MetricRegistry metricRegistry13 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager14 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        metricRegistry13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter16 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager14, monitors15);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager14, storeEntityCountersSupplier17,
        pageCacheTracer18);
    org.neo4j.scheduler.JobScheduler jobScheduler20 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager14,
        jobScheduler20, fileSystemAbstraction21, databaseLayout22);
    org.neo4j.monitoring.Monitors monitors24 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter25 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager14, monitors24);
    org.neo4j.memory.MemoryPools memoryPools26 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl27 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "hi!", metricRegistryManager14, memoryPools26);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier28 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer29 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter30 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager14, storeEntityCountersSupplier28,
        pageCacheTracer29);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters31 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter32 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "vm.heap.committed", metricRegistryManager14, pageCacheCounters31);
    org.neo4j.scheduler.JobScheduler jobScheduler33 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction34 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout35 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter36 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "pool.<pool>.<database>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager14, jobScheduler33, fileSystemAbstraction34, databaseLayout35);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier37 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter38 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "neo4j.count.relationship", monitorsClusterConsensusImpl1, metricRegistryManager14,
        coreNodeLeaderCheckSupplier37);
    try {
      consensusCoreNodeAdapter38.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
  }

  @Test
  public void test1905() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1905");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    org.neo4j.memory.MemoryPools memoryPools2 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl3 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "db.operation.count.drop", metricRegistryManager1, memoryPools2);
    java.lang.String str5 = memoryPoolsAdapterNeoStackImpl3.moydmdmineString(
        "causal_clustering.core.discovery.replicated_data");
    java.lang.String str7 = memoryPoolsAdapterNeoStackImpl3.moydmdmineString(
        "pool.<pool>.<database>.dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed");
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data"
            + "'", str5, "dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data");
    org.junit.Assert.assertEquals("'" + str7 + "' != '"
            + "dbms.pool.<pool>.pool.<pool>.<database>.dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed"
            + "'", str7,
        "dbms.pool.<pool>.pool.<pool>.<database>.dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed");
  }

  @Test
  public void test1906() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1906");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl((int) (short) -1);
    clusterMembersCount0.sembs((int) (byte) 1);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge7 = clusterMembersCount0.covgGauge();
    clusterMembersCount0.seuehl((int) (byte) 10);
    clusterMembersCount0.seuehl((int) (byte) 10);
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge7);
  }

  @Test
  public void test1907() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1907");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters2 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter3 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed",
        metricRegistryManager1, transactionLogCounters2);
  }

  @Test
  public void test1908() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1908");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl5 = null;
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl7 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray10 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList11 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        globbingPatternArray10);
    com.codahale.metrics.MetricRegistry metricRegistry13 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager14 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        metricRegistry13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter16 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager14, monitors15);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager14, storeEntityCountersSupplier17,
        pageCacheTracer18);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier20 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter21 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl7, metricRegistryManager14,
        coreNodeLeaderCheckSupplier20);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier22 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter23 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "db.operation.count.recovered", monitorsClusterConsensusImpl5, metricRegistryManager14,
        coreNodeLeaderCheckSupplier22);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "db.operation.count.start", metricRegistryManager14);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter25 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", monitors2, metricRegistryManager14);
    org.neo4j.monitoring.Monitors monitors26 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl27 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager14, monitors26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryExecutionMonitorMetricsImpl27.endFailure(executingQuery28, "db.operation.count.recovered");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryExecutionMonitorMetricsImpl27.startProcessing(executingQuery31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryExecutionMonitorMetricsImpl27.startExecution(executingQuery33);
    try {
      queryExecutionMonitorMetricsImpl27.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
  }

  @Test
  public void test1909() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1909");
    }
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat0 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat0.marc();
    syncStat0.norlad();
    syncStat0.marc();
    syncStat0.clerut();
    syncStat0.norlad();
    syncStat0.norlad();
    syncStat0.marc();
    syncStat0.norlad();
  }

  @Test
  public void test1910() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1910");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.memory.MemoryPools memoryPools9 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl11 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager8, memoryPools9,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl12 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "db.operation.count.drop", metricRegistryManager8);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier13 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters14 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "dbms.pool.<pool>.globalMetrics", metricRegistryManager8, transactionIdStoreSupplier13,
        transactionCounters14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl17 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "pool.<pool>.<database>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship",
        metricRegistryManager8, monitors16);
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1911() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1911");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier17 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter18 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl4, metricRegistryManager11,
        coreNodeLeaderCheckSupplier17);
    org.neo4j.monitoring.Monitors monitors19 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter20 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager11, monitors19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "db.operation.count.create", metricRegistryManager11);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "vm.heap.max", metricRegistryManager11);
    try {
      jVMAdapterPoolImpl22.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1912() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1912");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl((int) (short) -1);
    clusterMembersCount0.sembs((int) (byte) 1);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge7 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge8 = clusterMembersCount0.covgGauge();
    clusterMembersCount0.secvg(true);
    clusterMembersCount0.secvg(false);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge13 = clusterMembersCount0.mebsGauge();
    clusterMembersCount0.sembs((int) (byte) -1);
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge7);
    org.junit.Assert.assertNotNull(intGauge8);
    org.junit.Assert.assertNotNull(intGauge13);
  }

  @Test
  public void test1913() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1913");
    }
    org.neo4j.monitoring.Monitors monitors4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter16 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager11, monitors15);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter17 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "db.query.execution", monitors4, metricRegistryManager11);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl18 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "dbms.pool.<pool>.db.operation.count.failed", metricRegistryManager11);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager11, transactionLogCounters19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager11);
    jVMAdapterThreadMXImpl21.start();
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1914() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1914");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    livingCacheMeta0.seeec(100);
    livingCacheMeta0.sememt((int) (short) 1);
    livingCacheMeta0.sembe((long) 0);
    long long8 = livingCacheMeta0.getSizeCnt();
    livingCacheMeta0.sememt((int) (short) 1);
    long long11 = livingCacheMeta0.getLgBm();
    long long12 = livingCacheMeta0.gems();
    long long13 = livingCacheMeta0.gehs();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
  }

  @Test
  public void test1915() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1915");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl((int) (short) -1);
    clusterMembersCount0.sembs((int) (byte) 1);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge7 = clusterMembersCount0.covgGauge();
    clusterMembersCount0.secvg(true);
    clusterMembersCount0.secvg(true);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge12 = clusterMembersCount0.unehlGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge13 = clusterMembersCount0.covgGauge();
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge7);
    org.junit.Assert.assertNotNull(intGauge12);
    org.junit.Assert.assertNotNull(intGauge13);
  }

  @Test
  public void test1916() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1916");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray11 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList12 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean13 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList12,
        globbingPatternArray11);
    com.codahale.metrics.MetricRegistry metricRegistry14 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager15 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList12,
        metricRegistry14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter17 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager15, monitors16);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager15, storeEntityCountersSupplier18,
        pageCacheTracer19);
    org.neo4j.scheduler.JobScheduler jobScheduler21 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction22 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager15,
        jobScheduler21, fileSystemAbstraction22, databaseLayout23);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter25 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "", monitors7, metricRegistryManager15);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier26 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter27 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager15, webContainerThreadInfoSupplier26);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl28 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "db.operation.count.stop", metricRegistryManager15);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl29 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "vm.heap.committed", metricRegistryManager15);
    org.neo4j.memory.MemoryPools memoryPools30 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl32 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager15, memoryPools30,
        "pool.<pool>.<database>.db.operation.count.create");
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter33 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "vm.heap.max", monitors1, metricRegistryManager15);
    try {
      txCatchupAdapter33.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
  }

  @Test
  public void test1917() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1917");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.scheduler.JobScheduler jobScheduler15 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager9,
        jobScheduler15, fileSystemAbstraction16, databaseLayout17);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl19 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager9);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl21 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager9, monitors20);
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1918() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1918");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    java.lang.String str1 = metricsServiceExtensionFactory0.toString();
    java.lang.String str2 = metricsServiceExtensionFactory0.toString();
    java.lang.String str3 = metricsServiceExtensionFactory0.getName();
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents4 = null;
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext5 = null;
    io.github.onograph.metrics.gdb.GdbMetricsLifecycle gdbMetricsLifecycle6 = new io.github.onograph.metrics.gdb.GdbMetricsLifecycle(
        dependentComponents4, extensionContext5);
    gdbMetricsLifecycle6.shutdown();
    gdbMetricsLifecycle6.start();
    boolean boolean9 = metricsServiceExtensionFactory0.equals(
        (java.lang.Object) gdbMetricsLifecycle6);
    java.lang.String str10 = metricsServiceExtensionFactory0.toString();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str1, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str2, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "globalMetrics" + "'", str3,
        "globalMetrics");
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str10, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
  }

  @Test
  public void test1919() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1919");
    }
    org.neo4j.configuration.Config config0 = null;
    try {
      java.lang.String str2 = io.github.onograph.metrics.gdb.GdbMetricsEngine.daamtpxString(config0,
          "dbms.pool.<pool>.pool.<pool>.<database>.pool.<pool>.<database>.db.operation.count.drop");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1920() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1920");
    }
    io.github.onograph.metrics.MetricsReportProvider metricsReportProvider0 = new io.github.onograph.metrics.MetricsReportProvider();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    metricsReportProvider0.init(fileSystemAbstraction1, "db.operation.count.drop", config3, path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    metricsReportProvider0.init(fileSystemAbstraction6, "", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    metricsReportProvider0.init(fileSystemAbstraction11,
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    metricsReportProvider0.init(fileSystemAbstraction16, "", config18, path19);
  }

  @Test
  public void test1921() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1921");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl17 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager11);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl18 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "db.operation.count.start", metricRegistryManager11);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl19 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager11);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier20 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters21 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "dbms.pool.<pool>.db.operation.count.failed", metricRegistryManager11,
        transactionIdStoreSupplier20, transactionCounters21);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship",
        metricRegistryManager11, databaseOperationCounts23);
    try {
      metricRegistryManager11.reoForSt(
          "dbms.pool.<pool>.dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1922() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1922");
    }
    org.neo4j.monitoring.Monitors monitors3 = null;
    org.neo4j.monitoring.Monitors monitors6 = null;
    org.neo4j.monitoring.Monitors monitors9 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray13 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList14 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean15 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList14,
        globbingPatternArray13);
    com.codahale.metrics.MetricRegistry metricRegistry16 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager17 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList14,
        metricRegistry16);
    org.neo4j.monitoring.Monitors monitors18 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter19 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager17, monitors18);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier20 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager17, storeEntityCountersSupplier20,
        pageCacheTracer21);
    org.neo4j.scheduler.JobScheduler jobScheduler23 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction24 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager17,
        jobScheduler23, fileSystemAbstraction24, databaseLayout25);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter27 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "", monitors9, metricRegistryManager17);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier28 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter29 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager17, webContainerThreadInfoSupplier28);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter30 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "db.operation.count.stop", monitors6, metricRegistryManager17);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl31 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "", metricRegistryManager17);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter32 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "dbms.pool.<pool>.db.operation.count.create", monitors3, metricRegistryManager17);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl33 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "pool.<pool>.<database>.dbms.pool.<pool>.pool.<pool>.<database>.db.query.execution",
        metricRegistryManager17);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl34 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "databaseMetrics", metricRegistryManager17);
    org.junit.Assert.assertNotNull(globbingPatternArray13);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
  }

  @Test
  public void test1923() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1923");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    livingCacheMeta0.sememt((int) '#');
    livingCacheMeta0.cacheMiss();
    long long5 = livingCacheMeta0.getICe();
    livingCacheMeta0.sembe((long) (byte) 10);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
  }

  @Test
  public void test1924() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1924");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter8 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager6,
        monitors7);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl9 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager6);
    java.lang.String str11 = jVMAdapterMemoryHeapImpl9.moydmdmineString("hi!");
    jVMAdapterMemoryHeapImpl9.start();
    jVMAdapterMemoryHeapImpl9.start();
    jVMAdapterMemoryHeapImpl9.start();
    try {
      jVMAdapterMemoryHeapImpl9.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
  }

  @Test
  public void test1925() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1925");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.memory.MemoryPools memoryPools9 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl11 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager8, memoryPools9,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager8, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.scheduler.JobScheduler jobScheduler15 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager8, jobScheduler15,
        fileSystemAbstraction16, databaseLayout17);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "", metricRegistryManager8, transactionLogCounters19);
    gdbTransactionLogAdapter20.start();
    gdbTransactionLogAdapter20.start();
    gdbTransactionLogAdapter20.start();
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1926() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1926");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    livingCacheMeta0.seeec(100);
    long long4 = livingCacheMeta0.getLgBm();
    livingCacheMeta0.sememt((int) (short) -1);
    long long7 = livingCacheMeta0.gehs();
    livingCacheMeta0.cacheHit();
    long long9 = livingCacheMeta0.getLgBm();
    livingCacheMeta0.cacheHit();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
  }

  @Test
  public void test1927() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1927");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl8 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager7);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter9 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "dbms.pool.<pool>.db.operation.count.create", monitors1, metricRegistryManager7);
    boolean boolean11 = metricRegistryManager7.isEnlForSt(
        "causal_clustering.core.discovery.cluster.unreachable");
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test1928() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1928");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl clusterDataWatcherMetricsImpl0 = new io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl();
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType1 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType1);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType3 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge4 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType3);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType5 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge6 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType5);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType7 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge8 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType7);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge4);
    org.junit.Assert.assertNotNull(intGauge6);
    org.junit.Assert.assertNotNull(intGauge8);
  }

  @Test
  public void test1929() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1929");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray10 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList11 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        globbingPatternArray10);
    com.codahale.metrics.MetricRegistry metricRegistry13 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager14 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        metricRegistry13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter16 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager14, monitors15);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager14, storeEntityCountersSupplier17,
        pageCacheTracer18);
    org.neo4j.scheduler.JobScheduler jobScheduler20 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager14,
        jobScheduler20, fileSystemAbstraction21, databaseLayout22);
    org.neo4j.monitoring.Monitors monitors24 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter25 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager14, monitors24);
    org.neo4j.memory.MemoryPools memoryPools26 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl27 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "hi!", metricRegistryManager14, memoryPools26);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier28 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer29 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter30 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager14, storeEntityCountersSupplier28,
        pageCacheTracer29);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier31 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter32 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "db.operation.count.failed", monitorsClusterConsensusImpl3, metricRegistryManager14,
        coreNodeLeaderCheckSupplier31);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters33 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter34 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager14, checkpointCounters33);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl35 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager14);
    java.lang.String str37 = jVMAdapterPoolImpl35.moydmdmineString("dbms.pool.<pool>.vm.heap.used");
    org.junit.Assert.assertNotNull(globbingPatternArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    org.junit.Assert.assertEquals("'" + str37 + "' != '" + "dbms.pool.<pool>.vm.heap.used" + "'",
        str37, "dbms.pool.<pool>.vm.heap.used");
  }

  @Test
  public void test1930() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1930");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager10, jobScheduler17,
        fileSystemAbstraction18, databaseLayout19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager10);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.failed", metricRegistryManager10);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl24 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager10, monitors23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryExecutionMonitorMetricsImpl24.startProcessing(executingQuery25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryExecutionMonitorMetricsImpl24.beforeEnd(executingQuery27, true);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryExecutionMonitorMetricsImpl24.startExecution(executingQuery30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryExecutionMonitorMetricsImpl24.startExecution(executingQuery32);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    queryExecutionMonitorMetricsImpl24.startExecution(executingQuery34);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery36 = null;
    queryExecutionMonitorMetricsImpl24.beforeEnd(executingQuery36, true);
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1931() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1931");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.monitoring.Monitors monitors4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.scheduler.JobScheduler jobScheduler18 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction19 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager12,
        jobScheduler18, fileSystemAbstraction19, databaseLayout20);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter22 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "", monitors4, metricRegistryManager12);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier23 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter24 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager12, webContainerThreadInfoSupplier23);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter25 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "db.operation.count.stop", monitors1, metricRegistryManager12);
    try {
      discoveryCoreNodeAdapter25.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1932() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1932");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier17 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter18 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager11, webContainerThreadInfoSupplier17);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier19 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "hi!", metricRegistryManager11, storeEntityCountersSupplier19, pageCacheTracer20);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier22 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter23 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "db.operation.count.failed", metricRegistryManager11, webContainerThreadInfoSupplier22);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier24 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter25 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager11,
        storeEntityCountersSupplier24);
    org.neo4j.scheduler.JobScheduler jobScheduler26 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction27 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout28 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter29 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "neo4j.count.node", metricRegistryManager11, jobScheduler26, fileSystemAbstraction27,
        databaseLayout28);
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1933() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1933");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager7, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl15 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager7,
        monitors14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery16,
        "pool.<pool>.<database>.db.operation.count.failed");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryExecutionMonitorMetricsImpl15.startProcessing(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryExecutionMonitorMetricsImpl15.beforeEnd(executingQuery21, false);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryExecutionMonitorMetricsImpl15.beforeEnd(executingQuery24, false);
    java.lang.String str28 = queryExecutionMonitorMetricsImpl15.moydmdmineString(
        "dbms.pool.<pool>.causal_clustering.core.discovery.cluster.converged");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryExecutionMonitorMetricsImpl15.beforeEnd(executingQuery29, true);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    java.lang.Throwable throwable33 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery32, throwable33);
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertEquals("'" + str28 + "' != '"
            + "dbms.pool.<pool>.causal_clustering.core.discovery.cluster.converged" + "'", str28,
        "dbms.pool.<pool>.causal_clustering.core.discovery.cluster.converged");
  }

  @Test
  public void test1934() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1934");
    }
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray10 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList11 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        globbingPatternArray10);
    com.codahale.metrics.MetricRegistry metricRegistry13 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager14 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        metricRegistry13);
    org.neo4j.memory.MemoryPools memoryPools15 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl17 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager14, memoryPools15,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl18 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager14);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter19 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitors7, metricRegistryManager14);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager14,
        databaseOperationCounts20);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier22 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter23 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager14, webContainerThreadInfoSupplier22);
    org.neo4j.memory.MemoryPools memoryPools24 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl25 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager14, memoryPools24);
    org.neo4j.monitoring.Monitors monitors26 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter27 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed",
        metricRegistryManager14, monitors26);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier28 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter29 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.vm.heap.max", metricRegistryManager14,
        webContainerThreadInfoSupplier28);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier30 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters31 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter32 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.vm.heap.max", metricRegistryManager14,
        transactionIdStoreSupplier30, transactionCounters31);
    org.junit.Assert.assertNotNull(globbingPatternArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
  }

  @Test
  public void test1935() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1935");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts2 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter3 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "globalMetrics", metricRegistryManager1, databaseOperationCounts2);
  }

  @Test
  public void test1936() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1936");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl18 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl19 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "db.operation.count.start", metricRegistryManager12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl20 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager12);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier21 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters22 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "dbms.pool.<pool>.db.operation.count.failed", metricRegistryManager12,
        transactionIdStoreSupplier21, transactionCounters22);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter24 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", monitors1, metricRegistryManager12);
    try {
      txCatchupAdapter24.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1937() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1937");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    livingCacheMeta0.sembe((long) (byte) 0);
    livingCacheMeta0.sememt(0);
    long long7 = livingCacheMeta0.getSizeCnt();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
  }

  @Test
  public void test1938() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1938");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl8 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager7);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl9 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager7);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier10 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter11 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "dbms.pool.<pool>.db.operation.count.failed", metricRegistryManager7,
        storeEntityCountersSupplier10);
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test1939() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1939");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType1 = null;
    com.codahale.metrics.Timer timer2 = consensusMessageStats0.getTimer(raftConsensusMessageType1);
    long long3 = consensusMessageStats0.dea();
    long long4 = consensusMessageStats0.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType5 = null;
    com.codahale.metrics.Timer timer6 = consensusMessageStats0.getTimer(raftConsensusMessageType5);
    com.codahale.metrics.Timer timer7 = consensusMessageStats0.getTimer();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats8 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType9 = null;
    com.codahale.metrics.Timer timer10 = consensusMessageStats8.getTimer(raftConsensusMessageType9);
    long long11 = consensusMessageStats8.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType12 = null;
    com.codahale.metrics.Timer timer13 = consensusMessageStats8.getTimer(
        raftConsensusMessageType12);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType14 = null;
    com.codahale.metrics.Timer timer15 = consensusMessageStats8.getTimer(
        raftConsensusMessageType14);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType16 = null;
    com.codahale.metrics.Timer timer17 = consensusMessageStats8.getTimer(
        raftConsensusMessageType16);
    java.time.Duration duration18 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats8.sedaForDu(duration18);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats20 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long21 = consensusMessageStats20.dea();
    com.codahale.metrics.Timer timer22 = consensusMessageStats20.getTimer();
    com.codahale.metrics.Timer timer23 = consensusMessageStats20.getTimer();
    java.time.Duration duration24 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats20.sedaForDu(duration24);
    consensusMessageStats8.sedaForDu(duration24);
    consensusMessageStats0.sedaForDu(duration24);
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertNull(timer2);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    org.junit.Assert.assertNull(timer6);
    org.junit.Assert.assertNotNull(timer7);
    org.junit.Assert.assertNotNull(consensusMessageStats8);
    org.junit.Assert.assertNull(timer10);
    org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    org.junit.Assert.assertNull(timer13);
    org.junit.Assert.assertNull(timer15);
    org.junit.Assert.assertNull(timer17);
    org.junit.Assert.assertNotNull(duration18);
    org.junit.Assert.assertNotNull(consensusMessageStats20);
    org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
    org.junit.Assert.assertNotNull(timer22);
    org.junit.Assert.assertNotNull(timer23);
    org.junit.Assert.assertNotNull(duration24);
  }

  @Test
  public void test1940() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1940");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType1 = null;
    com.codahale.metrics.Timer timer2 = consensusMessageStats0.getTimer(raftConsensusMessageType1);
    long long3 = consensusMessageStats0.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType4 = null;
    com.codahale.metrics.Timer timer5 = consensusMessageStats0.getTimer(raftConsensusMessageType4);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType6 = null;
    com.codahale.metrics.Timer timer7 = consensusMessageStats0.getTimer(raftConsensusMessageType6);
    long long8 = consensusMessageStats0.dea();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats9 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType10 = null;
    com.codahale.metrics.Timer timer11 = consensusMessageStats9.getTimer(
        raftConsensusMessageType10);
    long long12 = consensusMessageStats9.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType13 = null;
    com.codahale.metrics.Timer timer14 = consensusMessageStats9.getTimer(
        raftConsensusMessageType13);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType15 = null;
    com.codahale.metrics.Timer timer16 = consensusMessageStats9.getTimer(
        raftConsensusMessageType15);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType17 = null;
    com.codahale.metrics.Timer timer18 = consensusMessageStats9.getTimer(
        raftConsensusMessageType17);
    java.time.Duration duration19 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats9.sedaForDu(duration19);
    consensusMessageStats0.sedaForDu(duration19);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType22 = null;
    com.codahale.metrics.Timer timer23 = consensusMessageStats0.getTimer(
        raftConsensusMessageType22);
    long long24 = consensusMessageStats0.dea();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats25 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType26 = null;
    com.codahale.metrics.Timer timer27 = consensusMessageStats25.getTimer(
        raftConsensusMessageType26);
    long long28 = consensusMessageStats25.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType29 = null;
    com.codahale.metrics.Timer timer30 = consensusMessageStats25.getTimer(
        raftConsensusMessageType29);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType31 = null;
    com.codahale.metrics.Timer timer32 = consensusMessageStats25.getTimer(
        raftConsensusMessageType31);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType33 = null;
    com.codahale.metrics.Timer timer34 = consensusMessageStats25.getTimer(
        raftConsensusMessageType33);
    java.time.Duration duration35 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats25.sedaForDu(duration35);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats37 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long38 = consensusMessageStats37.dea();
    com.codahale.metrics.Timer timer39 = consensusMessageStats37.getTimer();
    com.codahale.metrics.Timer timer40 = consensusMessageStats37.getTimer();
    java.time.Duration duration41 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats37.sedaForDu(duration41);
    consensusMessageStats25.sedaForDu(duration41);
    consensusMessageStats0.sedaForDu(duration41);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats45 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType46 = null;
    com.codahale.metrics.Timer timer47 = consensusMessageStats45.getTimer(
        raftConsensusMessageType46);
    long long48 = consensusMessageStats45.dea();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats49 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType50 = null;
    com.codahale.metrics.Timer timer51 = consensusMessageStats49.getTimer(
        raftConsensusMessageType50);
    long long52 = consensusMessageStats49.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType53 = null;
    com.codahale.metrics.Timer timer54 = consensusMessageStats49.getTimer(
        raftConsensusMessageType53);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType55 = null;
    com.codahale.metrics.Timer timer56 = consensusMessageStats49.getTimer(
        raftConsensusMessageType55);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType57 = null;
    com.codahale.metrics.Timer timer58 = consensusMessageStats49.getTimer(
        raftConsensusMessageType57);
    java.time.Duration duration59 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats49.sedaForDu(duration59);
    consensusMessageStats45.sedaForDu(duration59);
    consensusMessageStats0.sedaForDu(duration59);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats63 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType64 = null;
    com.codahale.metrics.Timer timer65 = consensusMessageStats63.getTimer(
        raftConsensusMessageType64);
    long long66 = consensusMessageStats63.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType67 = null;
    com.codahale.metrics.Timer timer68 = consensusMessageStats63.getTimer(
        raftConsensusMessageType67);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType69 = null;
    com.codahale.metrics.Timer timer70 = consensusMessageStats63.getTimer(
        raftConsensusMessageType69);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType71 = null;
    com.codahale.metrics.Timer timer72 = consensusMessageStats63.getTimer(
        raftConsensusMessageType71);
    java.time.Duration duration73 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats63.sedaForDu(duration73);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats75 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long76 = consensusMessageStats75.dea();
    com.codahale.metrics.Timer timer77 = consensusMessageStats75.getTimer();
    com.codahale.metrics.Timer timer78 = consensusMessageStats75.getTimer();
    java.time.Duration duration79 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats75.sedaForDu(duration79);
    consensusMessageStats63.sedaForDu(duration79);
    consensusMessageStats0.sedaForDu(duration79);
    long long83 = consensusMessageStats0.dea();
    long long84 = consensusMessageStats0.dea();
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertNull(timer2);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertNull(timer5);
    org.junit.Assert.assertNull(timer7);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    org.junit.Assert.assertNotNull(consensusMessageStats9);
    org.junit.Assert.assertNull(timer11);
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    org.junit.Assert.assertNull(timer14);
    org.junit.Assert.assertNull(timer16);
    org.junit.Assert.assertNull(timer18);
    org.junit.Assert.assertNotNull(duration19);
    org.junit.Assert.assertNull(timer23);
    org.junit.Assert.assertTrue("'" + long24 + "' != '" + 600000L + "'", long24 == 600000L);
    org.junit.Assert.assertNotNull(consensusMessageStats25);
    org.junit.Assert.assertNull(timer27);
    org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
    org.junit.Assert.assertNull(timer30);
    org.junit.Assert.assertNull(timer32);
    org.junit.Assert.assertNull(timer34);
    org.junit.Assert.assertNotNull(duration35);
    org.junit.Assert.assertNotNull(consensusMessageStats37);
    org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
    org.junit.Assert.assertNotNull(timer39);
    org.junit.Assert.assertNotNull(timer40);
    org.junit.Assert.assertNotNull(duration41);
    org.junit.Assert.assertNotNull(consensusMessageStats45);
    org.junit.Assert.assertNull(timer47);
    org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
    org.junit.Assert.assertNotNull(consensusMessageStats49);
    org.junit.Assert.assertNull(timer51);
    org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
    org.junit.Assert.assertNull(timer54);
    org.junit.Assert.assertNull(timer56);
    org.junit.Assert.assertNull(timer58);
    org.junit.Assert.assertNotNull(duration59);
    org.junit.Assert.assertNotNull(consensusMessageStats63);
    org.junit.Assert.assertNull(timer65);
    org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
    org.junit.Assert.assertNull(timer68);
    org.junit.Assert.assertNull(timer70);
    org.junit.Assert.assertNull(timer72);
    org.junit.Assert.assertNotNull(duration73);
    org.junit.Assert.assertNotNull(consensusMessageStats75);
    org.junit.Assert.assertTrue("'" + long76 + "' != '" + 0L + "'", long76 == 0L);
    org.junit.Assert.assertNotNull(timer77);
    org.junit.Assert.assertNotNull(timer78);
    org.junit.Assert.assertNotNull(duration79);
    org.junit.Assert.assertTrue("'" + long83 + "' != '" + 600000L + "'", long83 == 600000L);
    org.junit.Assert.assertTrue("'" + long84 + "' != '" + 600000L + "'", long84 == 600000L);
  }

  @Test
  public void test1941() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1941");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.memory.MemoryPools memoryPools9 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl11 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager8, memoryPools9,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager8, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.scheduler.JobScheduler jobScheduler15 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager8, jobScheduler15,
        fileSystemAbstraction16, databaseLayout17);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl19 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "vm.heap.max", metricRegistryManager8);
    java.lang.String str21 = jVMAdapterPoolImpl19.moydmdmineString(
        "dbms.pool.<pool>.pool.<pool>.<database>.pool.<pool>.<database>.db.operation.count.drop");
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str21 + "' != '"
            + "dbms.pool.<pool>.pool.<pool>.<database>.pool.<pool>.<database>.db.operation.count.drop"
            + "'", str21,
        "dbms.pool.<pool>.pool.<pool>.<database>.pool.<pool>.<database>.db.operation.count.drop");
  }

  @Test
  public void test1942() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1942");
    }
    org.neo4j.monitoring.Monitors monitors6 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter15 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors6, metricRegistryManager12);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl17 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager12, monitors16);
    org.neo4j.memory.MemoryPools memoryPools18 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl20 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, memoryPools18,
        "pool.<pool>.<database>.causal_clustering.core.discovery.replicated_data");
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters21 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter22 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "db.operation.count.create", metricRegistryManager12, pageCacheCounters21);
    org.neo4j.memory.MemoryPools memoryPools23 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl25 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "dbms.pool.<pool>.db.operation.count.failed", metricRegistryManager12, memoryPools23,
        "pool.<pool>.<database>.causal_clustering.core.discovery.replicated_data");
    org.neo4j.monitoring.Monitors monitors26 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter27 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "", metricRegistryManager12, monitors26);
    try {
      boltAdapter27.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1943() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1943");
    }
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat0 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat0.marc();
    syncStat0.norlad();
    syncStat0.marc();
    syncStat0.clerut();
    syncStat0.clerut();
    syncStat0.recnam();
    syncStat0.suslrle();
    syncStat0.recnam();
    syncStat0.recnam();
    syncStat0.marc();
  }

  @Test
  public void test1944() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1944");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl1 = null;
    org.neo4j.monitoring.Monitors monitors4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter16 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager11, monitors15);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter17 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "db.query.execution", monitors4, metricRegistryManager11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "globalMetrics", metricRegistryManager11, storeEntityCountersSupplier18);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier20 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter21 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data",
        monitorsClusterConsensusImpl1, metricRegistryManager11, coreNodeLeaderCheckSupplier20);
    try {
      consensusCoreNodeAdapter21.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1945() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1945");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType1 = null;
    com.codahale.metrics.Timer timer2 = consensusMessageStats0.getTimer(raftConsensusMessageType1);
    long long3 = consensusMessageStats0.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType4 = null;
    com.codahale.metrics.Timer timer5 = consensusMessageStats0.getTimer(raftConsensusMessageType4);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType6 = null;
    com.codahale.metrics.Timer timer7 = consensusMessageStats0.getTimer(raftConsensusMessageType6);
    long long8 = consensusMessageStats0.dea();
    long long9 = consensusMessageStats0.dea();
    long long10 = consensusMessageStats0.dea();
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertNull(timer2);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertNull(timer5);
    org.junit.Assert.assertNull(timer7);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
  }

  @Test
  public void test1946() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1946");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl2 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.start", metricRegistryManager1);
    java.lang.String str4 = jVMAdapterGarbageCollectionImpl2.moydmdmineString(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message");
    java.lang.String str6 = jVMAdapterGarbageCollectionImpl2.moydmdmineString(
        "db.operation.count.recovered");
    java.lang.String str8 = jVMAdapterGarbageCollectionImpl2.moydmdmineString(
        "causal_clustering.core.last_leader_message");
    java.lang.String str10 = jVMAdapterGarbageCollectionImpl2.moydmdmineString(
        "db.operation.count.start");
    java.lang.String str12 = jVMAdapterGarbageCollectionImpl2.moydmdmineString("databaseMetrics");
    try {
      jVMAdapterGarbageCollectionImpl2.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "pool.<pool>.<database>.causal_clustering.core.last_leader_message"
            + "'", str4, "pool.<pool>.<database>.causal_clustering.core.last_leader_message");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "db.operation.count.recovered" + "'",
        str6, "db.operation.count.recovered");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "causal_clustering.core.last_leader_message" + "'", str8,
        "causal_clustering.core.last_leader_message");
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "db.operation.count.start" + "'", str10,
        "db.operation.count.start");
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "databaseMetrics" + "'", str12,
        "databaseMetrics");
  }

  @Test
  public void test1947() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1947");
    }
    org.neo4j.monitoring.Monitors monitors3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter16 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.members", monitors3, metricRegistryManager10);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl17 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed",
        metricRegistryManager10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager10,
        storeEntityCountersSupplier18, pageCacheTracer19);
    gdbStatsAdapter20.start();
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1948() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1948");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl17 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager11);
    org.neo4j.memory.MemoryPools memoryPools18 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl19 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "db.operation.count.start", metricRegistryManager11, memoryPools18);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl20 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "dbms.pool.<pool>.db.operation.count.failed", metricRegistryManager11);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter21 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "pool.<pool>.<database>.dbms.pool.<pool>.pool.<pool>.<database>.db.query.execution",
        monitors1, metricRegistryManager11);
    try {
      txCatchupAdapter21.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1949() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1949");
    }
    io.github.onograph.metrics.MetricsReportProvider metricsReportProvider0 = new io.github.onograph.metrics.MetricsReportProvider();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    metricsReportProvider0.init(fileSystemAbstraction1, "db.operation.count.drop", config3, path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    metricsReportProvider0.init(fileSystemAbstraction6, "", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    metricsReportProvider0.init(fileSystemAbstraction11,
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    metricsReportProvider0.init(fileSystemAbstraction16, "neo4j.count.node", config18, path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    metricsReportProvider0.init(fileSystemAbstraction21, "db.operation.count.failed", config23,
        path24);
  }

  @Test
  public void test1950() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1950");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents0 = null;
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext1 = null;
    io.github.onograph.metrics.gdb.GdbMetricsLifecycle gdbMetricsLifecycle2 = new io.github.onograph.metrics.gdb.GdbMetricsLifecycle(
        dependentComponents0, extensionContext1);
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.stop();
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.shutdown();
  }

  @Test
  public void test1951() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1951");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl8 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager6, monitors7);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier9 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters10 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter11 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "dbms.pool.<pool>.pool.<pool>.<database>.pool.<pool>.<database>.db.operation.count.drop",
        metricRegistryManager6, transactionIdStoreSupplier9, transactionCounters10);
    globalTransactionStatsAdapter11.shutdown();
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test1952() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1952");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry7);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry9);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry11);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier13 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter14 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "pool.<pool>.<database>.db.operation.count.failed", monitorsClusterConsensusImpl1,
        metricRegistryManager12, coreNodeLeaderCheckSupplier13);
    io.github.onograph.metrics.incoming.EnterpriseMetricsType enterpriseMetricsType15 = consensusCoreNodeAdapter14.getGrp();
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + enterpriseMetricsType15 + "' != '"
            + io.github.onograph.metrics.incoming.EnterpriseMetricsType.EMT_CLUSTER + "'",
        enterpriseMetricsType15.equals(
            io.github.onograph.metrics.incoming.EnterpriseMetricsType.EMT_CLUSTER));
  }

  @Test
  public void test1953() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1953");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager8, storeEntityCountersSupplier11,
        pageCacheTracer12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl14 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager8);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.query.execution", metricRegistryManager8);
    try {
      jVMAdapterMBImpl15.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1954() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1954");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager10, databaseOperationCounts17);
    org.neo4j.memory.MemoryPools memoryPools19 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl21 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager10, memoryPools19,
        "db.operation.count.create");
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager10, monitors22);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "", metricRegistryManager10);
    try {
      jVMAdapterMBImpl24.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1955() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1955");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier15 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter16 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl2, metricRegistryManager9,
        coreNodeLeaderCheckSupplier15);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl18 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "db.query.execution", metricRegistryManager9, monitors17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryExecutionMonitorMetricsImpl18.endFailure(executingQuery19,
        "causal_clustering.core.last_leader_message");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryExecutionMonitorMetricsImpl18.startExecution(executingQuery22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryExecutionMonitorMetricsImpl18.endFailure(executingQuery24,
        "dbms.pool.<pool>.neo4j.count.relationship");
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1956() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1956");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager2 = null;
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter3 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "pool.<pool>.<database>.db.operation.count.start", monitors1, metricRegistryManager2);
    try {
      discoveryCoreNodeAdapter3.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1957() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1957");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager10, jobScheduler17,
        fileSystemAbstraction18, databaseLayout19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager10);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.failed", metricRegistryManager10);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl24 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager10, monitors23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryExecutionMonitorMetricsImpl24.startProcessing(executingQuery25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryExecutionMonitorMetricsImpl24.beforeEnd(executingQuery27, true);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryExecutionMonitorMetricsImpl24.startExecution(executingQuery30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryExecutionMonitorMetricsImpl24.startExecution(executingQuery32);
    try {
      queryExecutionMonitorMetricsImpl24.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1958() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1958");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier18 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter19 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl5, metricRegistryManager12,
        coreNodeLeaderCheckSupplier18);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier20 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager12,
        storeEntityCountersSupplier20, pageCacheTracer21);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, transactionLogCounters23);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "neo4j.count.node", metricRegistryManager12, databaseOperationCounts25);
    org.neo4j.monitoring.Monitors monitors27 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl28 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "db.operation.count.start", metricRegistryManager12, monitors27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryExecutionMonitorMetricsImpl28.beforeEnd(executingQuery29, true);
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1959() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1959");
    }
    io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl transactionSizeMonitorImpl0 = new io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl();
    transactionSizeMonitorImpl0.addNativeTransactionSize((long) ' ');
    transactionSizeMonitorImpl0.addHeapTransactionSize(100L);
    transactionSizeMonitorImpl0.addNativeTransactionSize(0L);
    transactionSizeMonitorImpl0.addNativeTransactionSize((long) (byte) 1);
    transactionSizeMonitorImpl0.addHeapTransactionSize((long) (short) -1);
    transactionSizeMonitorImpl0.addHeapTransactionSize(0L);
  }

  @Test
  public void test1960() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1960");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusElectionTerm consensusElectionTerm0 = new io.github.onograph.metrics.incoming.cluster.ConsensusElectionTerm();
    consensusElectionTerm0.termLength((long) (byte) 100);
    long long3 = consensusElectionTerm0.getTermLength();
    long long4 = consensusElectionTerm0.getTermLength();
    consensusElectionTerm0.termLength((long) (short) -1);
    consensusElectionTerm0.termLength((long) (byte) 100);
    consensusElectionTerm0.termLength((long) (short) 10);
    long long11 = consensusElectionTerm0.getTermLength();
    long long12 = consensusElectionTerm0.getTermLength();
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 100L + "'", long3 == 100L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 100L + "'", long4 == 100L);
    org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10L + "'", long11 == 10L);
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10L + "'", long12 == 10L);
  }

  @Test
  public void test1961() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1961");
    }
    org.neo4j.monitoring.Monitors monitors3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager11,
        jobScheduler17, fileSystemAbstraction18, databaseLayout19);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter21 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "", monitors3, metricRegistryManager11);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier22 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter23 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager11, webContainerThreadInfoSupplier22);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "db.operation.count.drop", metricRegistryManager11);
    try {
      jVMAdapterFileStatImpl24.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1962() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1962");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager9, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl17 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager9,
        monitors16);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters18 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter19 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "db.operation.count.start", metricRegistryManager9, checkpointCounters18);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters20 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter21 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "vm.heap.max", metricRegistryManager9, checkpointCounters20);
    try {
      checkpointCounterAdapter21.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1963() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1963");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl8 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray11 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList12 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean13 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList12,
        globbingPatternArray11);
    com.codahale.metrics.MetricRegistry metricRegistry14 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager15 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList12,
        metricRegistry14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter17 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager15, monitors16);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager15, storeEntityCountersSupplier18,
        pageCacheTracer19);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier21 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter22 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl8, metricRegistryManager15,
        coreNodeLeaderCheckSupplier21);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier23 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer24 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter25 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager15,
        storeEntityCountersSupplier23, pageCacheTracer24);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters26 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter27 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager15, transactionLogCounters26);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts28 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter29 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "neo4j.count.node", metricRegistryManager15, databaseOperationCounts28);
    org.neo4j.monitoring.Monitors monitors30 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl31 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "db.operation.count.start", metricRegistryManager15, monitors30);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl32 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "dbms.pool.<pool>.vm.heap.max", metricRegistryManager15);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters33 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter34 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "", metricRegistryManager15, checkpointCounters33);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier35 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter36 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "hi!", metricRegistryManager15, webContainerThreadInfoSupplier35);
    jettyAdapter36.start();
    org.junit.Assert.assertNotNull(globbingPatternArray11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
  }

  @Test
  public void test1964() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1964");
    }
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat0 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat0.marc();
    syncStat0.suslrle();
    syncStat0.norlad();
    syncStat0.clerut();
  }

  @Test
  public void test1965() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1965");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    double double2 = metricsMeter1.getFiveMinuteRate();
    metricsMeter1.mark((long) 1);
    long long5 = metricsMeter1.getCount();
    double double6 = metricsMeter1.getFiveMinuteRate();
    double double7 = metricsMeter1.getFiveMinuteRate();
    org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
  }

  @Test
  public void test1966() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1966");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.scheduler.JobScheduler jobScheduler15 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager9,
        jobScheduler15, fileSystemAbstraction16, databaseLayout17);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier19 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        storeEntityCountersSupplier19, pageCacheTracer20);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager9);
    java.lang.String str24 = jVMAdapterGarbageCollectionImpl22.moydmdmineString(
        "pool.<pool>.<database>.db.query.execution");
    java.lang.String str26 = jVMAdapterGarbageCollectionImpl22.moydmdmineString("");
    java.lang.String str28 = jVMAdapterGarbageCollectionImpl22.moydmdmineString(
        "dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message");
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str24 + "' != '" + "pool.<pool>.<database>.db.query.execution" + "'", str24,
        "pool.<pool>.<database>.db.query.execution");
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
    org.junit.Assert.assertEquals("'" + str28 + "' != '"
            + "dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message"
            + "'", str28,
        "dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message");
  }

  @Test
  public void test1967() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1967");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager9, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager9, databaseOperationCounts16);
    org.neo4j.memory.MemoryPools memoryPools18 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl20 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager9, memoryPools18,
        "db.operation.count.create");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier21 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed",
        metricRegistryManager9, storeEntityCountersSupplier21, pageCacheTracer22);
    try {
      gdbStatsAdapter23.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1968() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1968");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats1 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long2 = consensusMessageStats1.dea();
    com.codahale.metrics.Timer timer3 = consensusMessageStats1.getTimer();
    com.codahale.metrics.Timer timer4 = consensusMessageStats1.getTimer();
    boolean boolean5 = metricsServiceExtensionFactory0.equals((java.lang.Object) timer4);
    java.lang.String str6 = metricsServiceExtensionFactory0.getName();
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl12 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray15 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList16 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean17 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList16,
        globbingPatternArray15);
    com.codahale.metrics.MetricRegistry metricRegistry18 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager19 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList16,
        metricRegistry18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter21 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager19, monitors20);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier22 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager19, storeEntityCountersSupplier22,
        pageCacheTracer23);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier25 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter26 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl12, metricRegistryManager19,
        coreNodeLeaderCheckSupplier25);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier27 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer28 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter29 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager19,
        storeEntityCountersSupplier27, pageCacheTracer28);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters30 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter31 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager19, transactionLogCounters30);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts32 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter33 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "neo4j.count.node", metricRegistryManager19, databaseOperationCounts32);
    org.neo4j.monitoring.Monitors monitors34 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl35 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "db.operation.count.start", metricRegistryManager19, monitors34);
    boolean boolean36 = metricsServiceExtensionFactory0.equals(
        (java.lang.Object) metricRegistryManager19);
    java.lang.String str37 = metricsServiceExtensionFactory0.getName();
    java.lang.String str38 = metricsServiceExtensionFactory0.toString();
    org.junit.Assert.assertNotNull(consensusMessageStats1);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertNotNull(timer3);
    org.junit.Assert.assertNotNull(timer4);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "globalMetrics" + "'", str6,
        "globalMetrics");
    org.junit.Assert.assertNotNull(globbingPatternArray15);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertEquals("'" + str37 + "' != '" + "globalMetrics" + "'", str37,
        "globalMetrics");
    org.junit.Assert.assertEquals(
        "'" + str38 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str38, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
  }

  @Test
  public void test1969() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1969");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager7, monitors11);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl13 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager7);
    java.lang.String str15 = jVMAdapterPoolImpl13.moydmdmineString(
        "causal_clustering.core.discovery.cluster.converged");
    jVMAdapterPoolImpl13.start();
    jVMAdapterPoolImpl13.start();
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertEquals(
        "'" + str15 + "' != '" + "causal_clustering.core.discovery.cluster.converged" + "'", str15,
        "causal_clustering.core.discovery.cluster.converged");
  }

  @Test
  public void test1970() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1970");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager11,
        jobScheduler17, fileSystemAbstraction18, databaseLayout19);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager11,
        storeEntityCountersSupplier21);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager11,
        monitors23);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter25 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "dbms.pool.<pool>.vm.heap.used", monitors1, metricRegistryManager11);
    try {
      txCatchupAdapter25.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1971() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1971");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter16 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager11, monitors15);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl17 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager11);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier18 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters19 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, transactionIdStoreSupplier18, transactionCounters19);
    org.neo4j.monitoring.Monitors monitors21 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter22 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "db.operation.count.stop", metricRegistryManager11, monitors21);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "vm.heap.used", metricRegistryManager11);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts24 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter25 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "neo4j.count.relationship", metricRegistryManager11, databaseOperationCounts24);
    gdbActionsAdapter25.start();
    gdbActionsAdapter25.start();
    gdbActionsAdapter25.start();
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1972() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1972");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.scheduler.JobScheduler jobScheduler19 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager13,
        jobScheduler19, fileSystemAbstraction20, databaseLayout21);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter24 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager13, monitors23);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters25 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter26 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "", metricRegistryManager13, pageCacheCounters25);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl27 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "db.operation.count.create", metricRegistryManager13);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter28 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "globalMetrics", monitors2, metricRegistryManager13);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters29 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter30 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager13,
        checkpointCounters29);
    try {
      checkpointCounterAdapter30.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test1973() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1973");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gems();
    livingCacheMeta0.sememt((int) (byte) 0);
    long long6 = livingCacheMeta0.getSizeCnt();
    long long7 = livingCacheMeta0.gems();
    long long8 = livingCacheMeta0.gehs();
    long long9 = livingCacheMeta0.getLgBm();
    livingCacheMeta0.sememt((int) (byte) 0);
    long long12 = livingCacheMeta0.getIEm();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
  }

  @Test
  public void test1974() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1974");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10,
        jobScheduler16, fileSystemAbstraction17, databaseLayout18);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier20 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, storeEntityCountersSupplier20, pageCacheTracer21);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager10);
    org.neo4j.memory.MemoryPools memoryPools24 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl26 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "", metricRegistryManager10, memoryPools24, "dbms.pool.<pool>.");
    memoryPoolsAdapterGdbImpl26.init();
    java.lang.String str29 = memoryPoolsAdapterGdbImpl26.moydmdmineString(
        "pool.<pool>.<database>.dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed");
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertEquals("'" + str29 + "' != '"
            + "pool.<pool>.<database>.pool.<pool>.<database>.dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed"
            + "'", str29,
        "pool.<pool>.<database>.pool.<pool>.<database>.dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed");
  }

  @Test
  public void test1975() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1975");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier18 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter19 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager12, webContainerThreadInfoSupplier18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager12, monitors20);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager12, storeEntityCountersSupplier22);
    org.neo4j.memory.MemoryPools memoryPools24 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl26 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager12,
        memoryPools24, "db.operation.count.stop");
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters27 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter28 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed",
        metricRegistryManager12, transactionLogCounters27);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl29 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager12);
    jVMAdapterMBImpl29.start();
    java.lang.String str32 = jVMAdapterMBImpl29.moydmdmineString("");
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
  }

  @Test
  public void test1976() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1976");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    org.neo4j.scheduler.JobScheduler jobScheduler2 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction3 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout4 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter5 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.stop", metricRegistryManager1, jobScheduler2, fileSystemAbstraction3,
        databaseLayout4);
  }

  @Test
  public void test1977() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1977");
    }
    com.codahale.metrics.MetricRegistry metricRegistry0 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    java.nio.file.Path path2 = null;
    io.github.onograph.config.Metrics.CompressionOption compressionOption5 = null;
    io.github.onograph.metrics.outgoing.RotatingLogFileWriterService rotatingLogFileWriterService6 = null;
    org.neo4j.logging.Log log7 = null;
    try {
      io.github.onograph.metrics.outgoing.CsvScheduledReporter csvScheduledReporter8 = new io.github.onograph.metrics.outgoing.CsvScheduledReporter(
          metricRegistry0, fileSystemAbstraction1, path2, (-1L), (int) ' ', compressionOption5,
          rotatingLogFileWriterService6, log7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: registry == null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1978() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1978");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gems();
    livingCacheMeta0.sememt((int) (byte) 0);
    long long6 = livingCacheMeta0.getICe();
    livingCacheMeta0.seeec((int) (short) 10);
    long long9 = livingCacheMeta0.gehs();
    long long10 = livingCacheMeta0.getLgBm();
    livingCacheMeta0.setabys(0L);
    livingCacheMeta0.seeec((int) 'a');
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
  }

  @Test
  public void test1979() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1979");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl1 = null;
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory3 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager10, monitors14);
    boolean boolean16 = metricsServiceExtensionFactory3.equals(
        (java.lang.Object) metricRegistryManager10);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter18 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.query.execution", metricRegistryManager10,
        monitors17);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier19 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter20 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "pool.<pool>.<database>.vm.heap.used", monitorsClusterConsensusImpl1,
        metricRegistryManager10, coreNodeLeaderCheckSupplier19);
    try {
      consensusCoreNodeAdapter20.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
  }

  @Test
  public void test1980() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1980");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters2 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter3 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "vm.heap.max", metricRegistryManager1, checkpointCounters2);
    try {
      checkpointCounterAdapter3.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1981() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1981");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl extensionFactoryGdbMetricsImpl0 = new io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl();
    java.lang.String str1 = extensionFactoryGdbMetricsImpl0.toString();
    java.lang.String str2 = extensionFactoryGdbMetricsImpl0.toString();
    java.lang.Object obj3 = null;
    boolean boolean4 = extensionFactoryGdbMetricsImpl0.equals(obj3);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext5 = null;
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents6 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle7 = extensionFactoryGdbMetricsImpl0.newInstance(
        extensionContext5, dependentComponents6);
    java.lang.String str8 = extensionFactoryGdbMetricsImpl0.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext9 = null;
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents10 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle11 = extensionFactoryGdbMetricsImpl0.newInstance(
        extensionContext9, dependentComponents10);
    java.lang.String str12 = extensionFactoryGdbMetricsImpl0.toString();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str1, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str2, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(lifecycle7);
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str8, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertNotNull(lifecycle11);
    org.junit.Assert.assertEquals(
        "'" + str12 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str12, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
  }

  @Test
  public void test1982() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1982");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl2 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.drop", metricRegistryManager1);
    java.lang.String str4 = jVMAdapterGarbageCollectionImpl2.moydmdmineString(
        "dbms.pool.<pool>.db.operation.count.failed");
    try {
      jVMAdapterGarbageCollectionImpl2.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "dbms.pool.<pool>.db.operation.count.failed" + "'", str4,
        "dbms.pool.<pool>.db.operation.count.failed");
  }

  @Test
  public void test1983() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1983");
    }
    org.neo4j.monitoring.Monitors monitors4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager11);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter16 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitors4, metricRegistryManager11);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl18 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager11,
        monitors17);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl19 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager11);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl20 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "neo4j.count.node", metricRegistryManager11);
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1984() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1984");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gehs();
    livingCacheMeta0.sembe((long) (short) 1);
    long long6 = livingCacheMeta0.getICe();
    livingCacheMeta0.setabys(1L);
    livingCacheMeta0.setabys((long) (short) 100);
    long long11 = livingCacheMeta0.getIEm();
    long long12 = livingCacheMeta0.getLgBm();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
  }

  @Test
  public void test1985() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1985");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl2 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "neo4j.count.relationship", metricRegistryManager1);
    jVMAdapterFileStatImpl2.init();
    jVMAdapterFileStatImpl2.shutdown();
  }

  @Test
  public void test1986() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1986");
    }
    org.neo4j.monitoring.Monitors monitors3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager10, monitors14);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter16 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "db.query.execution", monitors3, metricRegistryManager10);
    org.neo4j.memory.MemoryPools memoryPools17 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl19 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "neo4j.count.node", metricRegistryManager10, memoryPools17, "db.operation.count.stop");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl20 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager10);
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1987() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1987");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType1 = null;
    com.codahale.metrics.Timer timer2 = consensusMessageStats0.getTimer(raftConsensusMessageType1);
    long long3 = consensusMessageStats0.dea();
    long long4 = consensusMessageStats0.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType5 = null;
    com.codahale.metrics.Timer timer6 = consensusMessageStats0.getTimer(raftConsensusMessageType5);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats7 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType8 = null;
    com.codahale.metrics.Timer timer9 = consensusMessageStats7.getTimer(raftConsensusMessageType8);
    long long10 = consensusMessageStats7.dea();
    long long11 = consensusMessageStats7.dea();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats12 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long13 = consensusMessageStats12.dea();
    java.time.Duration duration14 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats12.sedaForDu(duration14);
    consensusMessageStats7.sedaForDu(duration14);
    consensusMessageStats0.sedaForDu(duration14);
    long long18 = consensusMessageStats0.dea();
    long long19 = consensusMessageStats0.dea();
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertNull(timer2);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    org.junit.Assert.assertNull(timer6);
    org.junit.Assert.assertNotNull(consensusMessageStats7);
    org.junit.Assert.assertNull(timer9);
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    org.junit.Assert.assertNotNull(consensusMessageStats12);
    org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    org.junit.Assert.assertNotNull(duration14);
    org.junit.Assert.assertTrue("'" + long18 + "' != '" + 600000L + "'", long18 == 600000L);
    org.junit.Assert.assertTrue("'" + long19 + "' != '" + 600000L + "'", long19 == 600000L);
  }

  @Test
  public void test1988() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1988");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats1 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long2 = consensusMessageStats1.dea();
    com.codahale.metrics.Timer timer3 = consensusMessageStats1.getTimer();
    com.codahale.metrics.Timer timer4 = consensusMessageStats1.getTimer();
    boolean boolean5 = metricsServiceExtensionFactory0.equals((java.lang.Object) timer4);
    java.lang.String str6 = metricsServiceExtensionFactory0.getName();
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl12 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray15 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList16 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean17 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList16,
        globbingPatternArray15);
    com.codahale.metrics.MetricRegistry metricRegistry18 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager19 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList16,
        metricRegistry18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter21 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager19, monitors20);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier22 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager19, storeEntityCountersSupplier22,
        pageCacheTracer23);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier25 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter26 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl12, metricRegistryManager19,
        coreNodeLeaderCheckSupplier25);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier27 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer28 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter29 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager19,
        storeEntityCountersSupplier27, pageCacheTracer28);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters30 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter31 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager19, transactionLogCounters30);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts32 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter33 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "neo4j.count.node", metricRegistryManager19, databaseOperationCounts32);
    org.neo4j.monitoring.Monitors monitors34 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl35 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "db.operation.count.start", metricRegistryManager19, monitors34);
    boolean boolean36 = metricsServiceExtensionFactory0.equals(
        (java.lang.Object) metricRegistryManager19);
    java.lang.String str37 = metricsServiceExtensionFactory0.getName();
    java.lang.String str38 = metricsServiceExtensionFactory0.getName();
    java.util.function.LongSupplier longSupplier39 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter40 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier39);
    metricsMeter40.mark(100L);
    double double43 = metricsMeter40.getFiveMinuteRate();
    boolean boolean44 = metricsServiceExtensionFactory0.equals((java.lang.Object) double43);
    java.lang.String str45 = metricsServiceExtensionFactory0.getName();
    java.lang.String str46 = metricsServiceExtensionFactory0.toString();
    org.junit.Assert.assertNotNull(consensusMessageStats1);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertNotNull(timer3);
    org.junit.Assert.assertNotNull(timer4);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "globalMetrics" + "'", str6,
        "globalMetrics");
    org.junit.Assert.assertNotNull(globbingPatternArray15);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertEquals("'" + str37 + "' != '" + "globalMetrics" + "'", str37,
        "globalMetrics");
    org.junit.Assert.assertEquals("'" + str38 + "' != '" + "globalMetrics" + "'", str38,
        "globalMetrics");
    org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    org.junit.Assert.assertEquals("'" + str45 + "' != '" + "globalMetrics" + "'", str45,
        "globalMetrics");
    org.junit.Assert.assertEquals(
        "'" + str46 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str46, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
  }

  @Test
  public void test1989() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1989");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray11 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList12 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean13 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList12,
        globbingPatternArray11);
    com.codahale.metrics.MetricRegistry metricRegistry14 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager15 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList12,
        metricRegistry14);
    org.neo4j.memory.MemoryPools memoryPools16 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl18 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager15, memoryPools16,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier19 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager15, storeEntityCountersSupplier19,
        pageCacheTracer20);
    org.neo4j.scheduler.JobScheduler jobScheduler22 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction23 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout24 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter25 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager15, jobScheduler22,
        fileSystemAbstraction23, databaseLayout24);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl26 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager15);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl27 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.failed", metricRegistryManager15);
    org.neo4j.monitoring.Monitors monitors28 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl29 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager15, monitors28);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl30 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "db.operation.count.create", metricRegistryManager15);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier31 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter32 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "db.operation.count.stop", monitorsClusterConsensusImpl3, metricRegistryManager15,
        coreNodeLeaderCheckSupplier31);
    org.neo4j.monitoring.Monitors monitors33 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter34 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager15,
        monitors33);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl35 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "dbms.pool.<pool>.causal_clustering.core.discovery.cluster.converged",
        metricRegistryManager15);
    org.junit.Assert.assertNotNull(globbingPatternArray11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
  }

  @Test
  public void test1990() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1990");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier17 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter18 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager11, webContainerThreadInfoSupplier17);
    org.neo4j.monitoring.Monitors monitors19 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl20 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager11, monitors19);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager11, storeEntityCountersSupplier21);
    org.neo4j.memory.MemoryPools memoryPools23 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl25 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager11,
        memoryPools23, "db.operation.count.stop");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier26 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter27 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager11,
        storeEntityCountersSupplier26);
    gdbElementStatsAdapter27.shutdown();
    gdbElementStatsAdapter27.init();
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1991() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1991");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager10, jobScheduler17,
        fileSystemAbstraction18, databaseLayout19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager10);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.failed", metricRegistryManager10);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl24 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager10, monitors23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryExecutionMonitorMetricsImpl24.startProcessing(executingQuery25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryExecutionMonitorMetricsImpl24.beforeEnd(executingQuery27, true);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    try {
      queryExecutionMonitorMetricsImpl24.endSuccess(executingQuery30);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1992() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1992");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager11, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.scheduler.JobScheduler jobScheduler18 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction19 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager11, jobScheduler18,
        fileSystemAbstraction19, databaseLayout20);
    org.neo4j.scheduler.JobScheduler jobScheduler22 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction23 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout24 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter25 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "hi!", metricRegistryManager11, jobScheduler22, fileSystemAbstraction23, databaseLayout24);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl26 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "", metricRegistryManager11);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter27 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "", monitors1, metricRegistryManager11);
    try {
      discoveryCoreNodeAdapter27.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1993() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1993");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager12, memoryPools13,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager12, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager12, databaseOperationCounts19);
    org.neo4j.memory.MemoryPools memoryPools21 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl23 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager12, memoryPools21,
        "db.operation.count.create");
    org.neo4j.monitoring.Monitors monitors24 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager12, monitors24);
    org.neo4j.monitoring.Monitors monitors26 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl27 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager12, monitors26);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier28 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter29 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed",
        monitorsClusterConsensusImpl1, metricRegistryManager12, coreNodeLeaderCheckSupplier28);
    try {
      consensusCoreNodeAdapter29.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1994() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1994");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    long long2 = livingCacheMeta0.getSizeCnt();
    livingCacheMeta0.cacheMiss();
    long long4 = livingCacheMeta0.gems();
    livingCacheMeta0.sembe(97L);
    long long7 = livingCacheMeta0.getLgBm();
    livingCacheMeta0.setabys((long) (byte) 100);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 97L + "'", long7 == 97L);
  }

  @Test
  public void test1995() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1995");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.scheduler.JobScheduler jobScheduler18 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction19 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager12,
        jobScheduler18, fileSystemAbstraction19, databaseLayout20);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager12,
        transactionLogCounters22);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier24 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter25 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "vm.heap.committed", monitorsClusterConsensusImpl3, metricRegistryManager12,
        coreNodeLeaderCheckSupplier24);
    org.neo4j.memory.MemoryPools memoryPools26 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl28 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship",
        metricRegistryManager12, memoryPools26,
        "dbms.pool.<pool>.pool.<pool>.<database>.db.query.execution");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl29 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "", metricRegistryManager12);
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1996() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1996");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType1 = null;
    com.codahale.metrics.Timer timer2 = consensusMessageStats0.getTimer(raftConsensusMessageType1);
    long long3 = consensusMessageStats0.dea();
    long long4 = consensusMessageStats0.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType5 = null;
    com.codahale.metrics.Timer timer6 = consensusMessageStats0.getTimer(raftConsensusMessageType5);
    long long7 = consensusMessageStats0.dea();
    java.lang.Class<?> wildcardClass8 = consensusMessageStats0.getClass();
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertNull(timer2);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    org.junit.Assert.assertNull(timer6);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    org.junit.Assert.assertNotNull(wildcardClass8);
  }

  @Test
  public void test1997() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1997");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gehs();
    livingCacheMeta0.sembe((long) 100);
    livingCacheMeta0.cacheMiss();
    long long7 = livingCacheMeta0.getICe();
    livingCacheMeta0.setabys((long) (byte) -1);
    long long10 = livingCacheMeta0.getIEm();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
  }

  @Test
  public void test1998() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1998");
    }
    io.github.onograph.metrics.incoming.cluster.SubmittedConsensusLogCommitIndexMetric submittedConsensusLogCommitIndexMetric0 = new io.github.onograph.metrics.incoming.cluster.SubmittedConsensusLogCommitIndexMetric();
    submittedConsensusLogCommitIndexMetric0.comie(0L);
    long long3 = submittedConsensusLogCommitIndexMetric0.comie();
    submittedConsensusLogCommitIndexMetric0.comie((long) (byte) 0);
    long long6 = submittedConsensusLogCommitIndexMetric0.comie();
    submittedConsensusLogCommitIndexMetric0.comie((long) (byte) -1);
    long long9 = submittedConsensusLogCommitIndexMetric0.comie();
    long long10 = submittedConsensusLogCommitIndexMetric0.comie();
    long long11 = submittedConsensusLogCommitIndexMetric0.comie();
    long long12 = submittedConsensusLogCommitIndexMetric0.comie();
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
    org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
  }

  @Test
  public void test1999() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1999");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager12, memoryPools13,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager12, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.scheduler.JobScheduler jobScheduler19 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager12, jobScheduler19,
        fileSystemAbstraction20, databaseLayout21);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager12);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier24 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter25 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "databaseMetrics", monitorsClusterConsensusImpl3, metricRegistryManager12,
        coreNodeLeaderCheckSupplier24);
    org.neo4j.memory.MemoryPools memoryPools26 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl27 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager12,
        memoryPools26);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl28 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "neo4j.count.node", metricRegistryManager12);
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test2000() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test2000");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory2 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager9, monitors13);
    boolean boolean15 = metricsServiceExtensionFactory2.equals(
        (java.lang.Object) metricRegistryManager9);
    org.neo4j.monitoring.Monitors monitors20 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray23 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList24 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean25 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList24,
        globbingPatternArray23);
    com.codahale.metrics.MetricRegistry metricRegistry26 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager27 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList24,
        metricRegistry26);
    org.neo4j.memory.MemoryPools memoryPools28 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl30 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager27, memoryPools28,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl31 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager27);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter32 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitors20, metricRegistryManager27);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts33 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter34 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager27,
        databaseOperationCounts33);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier35 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter36 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager27, webContainerThreadInfoSupplier35);
    org.neo4j.memory.MemoryPools memoryPools37 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl38 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager27, memoryPools37);
    boolean boolean39 = metricsServiceExtensionFactory2.equals(
        (java.lang.Object) metricRegistryManager27);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter40 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "", monitors1, metricRegistryManager27);
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertNotNull(globbingPatternArray23);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
  }
}

